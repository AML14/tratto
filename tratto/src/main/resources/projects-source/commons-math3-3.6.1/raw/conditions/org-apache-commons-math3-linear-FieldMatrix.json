[
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.FieldMatrix",
      "name": "createMatrix",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "rowDimension",
        "columnDimension"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NotStrictlyPositiveException",
        "description": "@throws org.apache.commons.math3.exception.NotStrictlyPositiveException row or column dimension is not positive.",
        "guard": {
          "condition": "(rowDimension>0) == false",
          "description": "row or column dimension is not positive."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.FieldMatrix",
      "name": "power",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "p"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NotPositiveException",
        "description": "@throws org.apache.commons.math3.exception.NotPositiveException p < 0.",
        "guard": {
          "condition": "p<0",
          "description": "p < 0."
        }
      },
      {
        "exception": "org.apache.commons.math3.linear.NonSquareMatrixException",
        "description": "@throws org.apache.commons.math3.linear.NonSquareMatrixException this matrix is not square.",
        "guard": {
          "condition": "(receiverObjectID.isSquare()) == false",
          "description": "this matrix is not square."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.FieldMatrix",
      "name": "getSubMatrix",
      "parameterTypes": [
        "[I",
        "[I"
      ]
    },
    "identifiers": {
      "parameters": [
        "selectedRows",
        "selectedColumns"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NoDataException",
        "description": "@throws org.apache.commons.math3.exception.NoDataException selectedRows or selectedColumns is empty.",
        "guard": {
          "condition": "selectedRows.length==0 || selectedColumns.length==0",
          "description": "selectedRows or selectedColumns is empty."
        }
      },
      {
        "exception": "org.apache.commons.math3.exception.NullArgumentException",
        "description": "@throws org.apache.commons.math3.exception.NullArgumentException selectedRows or selectedColumns is null.",
        "guard": {
          "condition": "selectedRows==null || selectedColumns==null",
          "description": "selectedRows or selectedColumns is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.FieldMatrix",
      "name": "copySubMatrix",
      "parameterTypes": [
        "int",
        "int",
        "int",
        "int",
        "[[Lorg.apache.commons.math3.FieldElement;"
      ]
    },
    "identifiers": {
      "parameters": [
        "startRow",
        "endRow",
        "startColumn",
        "endColumn",
        "destination"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooSmallException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooSmallException endRow < startRow or endColumn < startColumn.",
        "guard": {
          "condition": "endRow<startRow || endColumn<startColumn",
          "description": "endRow < startRow or endColumn < startColumn."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.FieldMatrix",
      "name": "copySubMatrix",
      "parameterTypes": [
        "[I",
        "[I",
        "[[Lorg.apache.commons.math3.FieldElement;"
      ]
    },
    "identifiers": {
      "parameters": [
        "selectedRows",
        "selectedColumns",
        "destination"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NoDataException",
        "description": "@throws org.apache.commons.math3.exception.NoDataException selectedRows or selectedColumns is empty.",
        "guard": {
          "condition": "selectedRows.length==0 || selectedColumns.length==0",
          "description": "selectedRows or selectedColumns is empty."
        }
      },
      {
        "exception": "org.apache.commons.math3.exception.NullArgumentException",
        "description": "@throws org.apache.commons.math3.exception.NullArgumentException selectedRows or selectedColumns is null.",
        "guard": {
          "condition": "selectedRows==null || selectedColumns==null",
          "description": "selectedRows or selectedColumns is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.FieldMatrix",
      "name": "setSubMatrix",
      "parameterTypes": [
        "[[Lorg.apache.commons.math3.FieldElement;",
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "subMatrix",
        "row",
        "column"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NullArgumentException",
        "description": "@throws org.apache.commons.math3.exception.NullArgumentException subMatrix is null.",
        "guard": {
          "condition": "subMatrix==null",
          "description": "subMatrix is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.FieldMatrix",
      "name": "getTrace",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.linear.NonSquareMatrixException",
        "description": "@throws org.apache.commons.math3.linear.NonSquareMatrixException the matrix is not square.",
        "guard": {
          "condition": "(receiverObjectID.isSquare()) == false",
          "description": "the matrix is not square."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.FieldMatrix",
      "name": "walkInRowOrder",
      "parameterTypes": [
        "org.apache.commons.math3.linear.FieldMatrixChangingVisitor",
        "int",
        "int",
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "visitor",
        "startRow",
        "endRow",
        "startColumn",
        "endColumn"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooSmallException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooSmallException endRow < startRow or endColumn < startColumn.",
        "guard": {
          "condition": "endRow<startRow || endColumn<startColumn",
          "description": "endRow < startRow or endColumn < startColumn."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.FieldMatrix",
      "name": "walkInRowOrder",
      "parameterTypes": [
        "org.apache.commons.math3.linear.FieldMatrixPreservingVisitor",
        "int",
        "int",
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "visitor",
        "startRow",
        "endRow",
        "startColumn",
        "endColumn"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooSmallException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooSmallException endRow < startRow or endColumn < startColumn.",
        "guard": {
          "condition": "endRow<startRow || endColumn<startColumn",
          "description": "endRow < startRow or endColumn < startColumn."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.FieldMatrix",
      "name": "walkInColumnOrder",
      "parameterTypes": [
        "org.apache.commons.math3.linear.FieldMatrixChangingVisitor",
        "int",
        "int",
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "visitor",
        "startRow",
        "endRow",
        "startColumn",
        "endColumn"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooSmallException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooSmallException endRow < startRow or endColumn < startColumn.",
        "guard": {
          "condition": "endRow<startRow || endColumn<startColumn",
          "description": "endRow < startRow or endColumn < startColumn."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.FieldMatrix",
      "name": "walkInColumnOrder",
      "parameterTypes": [
        "org.apache.commons.math3.linear.FieldMatrixPreservingVisitor",
        "int",
        "int",
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "visitor",
        "startRow",
        "endRow",
        "startColumn",
        "endColumn"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooSmallException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooSmallException endRow < startRow or endColumn < startColumn.",
        "guard": {
          "condition": "endRow<startRow || endColumn<startColumn",
          "description": "endRow < startRow or endColumn < startColumn."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.FieldMatrix",
      "name": "walkInOptimizedOrder",
      "parameterTypes": [
        "org.apache.commons.math3.linear.FieldMatrixChangingVisitor",
        "int",
        "int",
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "visitor",
        "startRow",
        "endRow",
        "startColumn",
        "endColumn"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooSmallException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooSmallException endRow < startRow or endColumn < startColumn.",
        "guard": {
          "condition": "endRow<startRow || endColumn<startColumn",
          "description": "endRow < startRow or endColumn < startColumn."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.FieldMatrix",
      "name": "walkInOptimizedOrder",
      "parameterTypes": [
        "org.apache.commons.math3.linear.FieldMatrixPreservingVisitor",
        "int",
        "int",
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "visitor",
        "startRow",
        "endRow",
        "startColumn",
        "endColumn"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooSmallException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooSmallException endRow < startRow or endColumn < startColumn.",
        "guard": {
          "condition": "endRow<startRow || endColumn<startColumn",
          "description": "endRow < startRow or endColumn < startColumn."
        }
      }
    ],
    "post": [],
    "pre": []
  }
]