[
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "addAndCheck",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x+y",
          "description": "the sum x+y."
        },
        "description": "the sum x+y.",
        "guard": {
          "condition": "true",
          "description": "the sum x+y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "addAndCheck",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==a+b",
          "description": "the sum a+b."
        },
        "description": "the sum a+b.",
        "guard": {
          "condition": "true",
          "description": "the sum a+b."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "binomialCoefficient",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "n",
        "k"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NotPositiveException",
        "description": "@throws org.apache.commons.math3.exception.NotPositiveException n < 0.",
        "guard": {
          "condition": "n<0",
          "description": "n < 0."
        }
      },
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooLargeException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooLargeException k > n.",
        "guard": {
          "condition": "k>n",
          "description": "k > n."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "binomialCoefficientDouble",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "n",
        "k"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NotPositiveException",
        "description": "@throws org.apache.commons.math3.exception.NotPositiveException n < 0.",
        "guard": {
          "condition": "n<0",
          "description": "n < 0."
        }
      },
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooLargeException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooLargeException k > n.",
        "guard": {
          "condition": "k>n",
          "description": "k > n."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "binomialCoefficientLog",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "n",
        "k"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NotPositiveException",
        "description": "@throws org.apache.commons.math3.exception.NotPositiveException n < 0.",
        "guard": {
          "condition": "n<0",
          "description": "n < 0."
        }
      },
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooLargeException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooLargeException k > n.",
        "guard": {
          "condition": "k>n",
          "description": "k > n."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "factorial",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "n"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NotPositiveException",
        "description": "@throws org.apache.commons.math3.exception.NotPositiveException n < 0.",
        "guard": {
          "condition": "n<0",
          "description": "n < 0."
        }
      },
      {
        "exception": "org.apache.commons.math3.exception.MathArithmeticException",
        "description": "@throws org.apache.commons.math3.exception.MathArithmeticException n > 20: The factorial value is too large to fit in a long.",
        "guard": {
          "condition": "n>20",
          "description": "n > 20: The factorial value is too large to fit in a long."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "factorialDouble",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "n"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NotPositiveException",
        "description": "@throws org.apache.commons.math3.exception.NotPositiveException n < 0.",
        "guard": {
          "condition": "n<0",
          "description": "n < 0."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "factorialLog",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "n"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NotPositiveException",
        "description": "@throws org.apache.commons.math3.exception.NotPositiveException n < 0.",
        "guard": {
          "condition": "n<0",
          "description": "n < 0."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "mulAndCheck",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x*y",
          "description": "the product x * y."
        },
        "description": "the product x * y.",
        "guard": {
          "condition": "true",
          "description": "the product x * y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "mulAndCheck",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==a*b",
          "description": "the product a * b."
        },
        "description": "the product a * b.",
        "guard": {
          "condition": "true",
          "description": "the product a * b."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "subAndCheck",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x-y",
          "description": "the difference x - y."
        },
        "description": "the difference x - y.",
        "guard": {
          "condition": "true",
          "description": "the difference x - y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "subAndCheck",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==a-b",
          "description": "the difference a - b."
        },
        "description": "the difference a - b.",
        "guard": {
          "condition": "true",
          "description": "the difference a - b."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "pow",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "k",
        "e"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NotPositiveException",
        "description": "@throws org.apache.commons.math3.exception.NotPositiveException e < 0.",
        "guard": {
          "condition": "e<0",
          "description": "e < 0."
        }
      }
    ],
    "post": [
      {
        "property": {
          "condition": "methodResultID==(k^e)",
          "description": "\\( k^e \\)."
        },
        "description": "\\( k^e \\).",
        "guard": {
          "condition": "true",
          "description": "\\( k^e \\)."
        }
      }
    ],
    "pre": [
      {
        "description": "@param e Exponent (. e is positive or zero).",
        "guard": {
          "condition": "e>0 || e==0",
          "description": "Exponent (. e is positive or zero)."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "pow",
      "parameterTypes": [
        "int",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "k",
        "e"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NotPositiveException",
        "description": "@throws org.apache.commons.math3.exception.NotPositiveException e < 0.",
        "guard": {
          "condition": "e<0",
          "description": "e < 0."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param e Exponent (. e is positive or zero).",
        "guard": {
          "condition": "e>0 || e==0",
          "description": "Exponent (. e is positive or zero)."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "pow",
      "parameterTypes": [
        "long",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "k",
        "e"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NotPositiveException",
        "description": "@throws org.apache.commons.math3.exception.NotPositiveException e < 0.",
        "guard": {
          "condition": "e<0",
          "description": "e < 0."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param e Exponent (. e is positive or zero).",
        "guard": {
          "condition": "e>0 || e==0",
          "description": "Exponent (. e is positive or zero)."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "pow",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "k",
        "e"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NotPositiveException",
        "description": "@throws org.apache.commons.math3.exception.NotPositiveException e < 0.",
        "guard": {
          "condition": "e<0",
          "description": "e < 0."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param e Exponent (. e is positive or zero).",
        "guard": {
          "condition": "e>0 || e==0",
          "description": "Exponent (. e is positive or zero)."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "pow",
      "parameterTypes": [
        "java.math.BigInteger",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "k",
        "e"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NotPositiveException",
        "description": "@throws org.apache.commons.math3.exception.NotPositiveException e < 0.",
        "guard": {
          "condition": "e<0",
          "description": "e < 0."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param e Exponent (. e is positive or zero).",
        "guard": {
          "condition": "e>0 || e==0",
          "description": "Exponent (. e is positive or zero)."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "pow",
      "parameterTypes": [
        "java.math.BigInteger",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "k",
        "e"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NotPositiveException",
        "description": "@throws org.apache.commons.math3.exception.NotPositiveException e < 0.",
        "guard": {
          "condition": "e<0",
          "description": "e < 0."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param e Exponent (. e is positive or zero).",
        "guard": {
          "condition": "e>0 || e==0",
          "description": "Exponent (. e is positive or zero)."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ArithmeticUtils",
      "name": "stirlingS2",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "n",
        "k"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NotPositiveException",
        "description": "@throws org.apache.commons.math3.exception.NotPositiveException k < 0.",
        "guard": {
          "condition": "k<0",
          "description": "k < 0."
        }
      },
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooLargeException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooLargeException k > n.",
        "guard": {
          "condition": "k>n",
          "description": "k > n."
        }
      }
    ],
    "post": [],
    "pre": []
  }
]