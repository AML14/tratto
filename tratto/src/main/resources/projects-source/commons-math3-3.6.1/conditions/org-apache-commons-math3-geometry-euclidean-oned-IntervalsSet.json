[
  {
    "operation": {
      "classname": "org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet",
      "name": "org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet",
      "parameterTypes": [
        "double",
        "double",
        "double"
      ]
    },
    "identifiers": {
      "parameters": [
        "lower",
        "upper",
        "tolerance"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param lower lower bound of the interval. lower is lesser or equal to upper ( Double.NEGATIVE_INFINITY).",
        "guard": {
          "condition": "lower<=upper",
          "description": "lower bound of the interval. lower is lesser or equal to upper ( Double.NEGATIVE_INFINITY)."
        }
      },
      {
        "description": "@param upper upper bound of the interval. upper is greater or equal to lower ( Double.POSITIVE_INFINITY).",
        "guard": {
          "condition": "upper>=lower",
          "description": "upper bound of the interval. upper is greater or equal to lower ( Double.POSITIVE_INFINITY)."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet",
      "name": "org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet",
      "parameterTypes": [
        "double",
        "double"
      ]
    },
    "identifiers": {
      "parameters": [
        "lower",
        "upper"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param lower lower bound of the interval. lower is lesser or equal to upper ( Double.NEGATIVE_INFINITY).",
        "guard": {
          "condition": "lower<=upper",
          "description": "lower bound of the interval. lower is lesser or equal to upper ( Double.NEGATIVE_INFINITY)."
        }
      },
      {
        "description": "@param upper upper bound of the interval. upper is greater or equal to lower ( Double.POSITIVE_INFINITY).",
        "guard": {
          "condition": "upper>=lower",
          "description": "upper bound of the interval. upper is greater or equal to lower ( Double.POSITIVE_INFINITY)."
        }
      }
    ]
  }
]