[
  {
    "operation": {
      "classname": "org.graphstream.graph.implementations.SingleGraph",
      "name": "org.graphstream.graph.implementations.SingleGraph",
      "parameterTypes": [
        "java.lang.String",
        "boolean",
        "boolean",
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "id",
        "strictChecking",
        "autoCreate",
        "initialNodeCapacity",
        "initialEdgeCapacity"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param autoCreate If true (and strict checking is false) nodes are automatically created when referenced when creating a edge even if not yet inserted in the graph.",
        "guard": {
          "condition": "strictChecking==false",
          "description": "If true (and strict checking is false) nodes are automatically created when referenced when creating a edge even if not yet inserted in the graph."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.graphstream.graph.implementations.SingleGraph",
      "name": "org.graphstream.graph.implementations.SingleGraph",
      "parameterTypes": [
        "java.lang.String",
        "boolean",
        "boolean"
      ]
    },
    "identifiers": {
      "parameters": [
        "id",
        "strictChecking",
        "autoCreate"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param autoCreate If true (and strict checking is false) nodes are automatically created when referenced when creating a edge even if not yet inserted in the graph.",
        "guard": {
          "condition": "strictChecking==false",
          "description": "If true (and strict checking is false) nodes are automatically created when referenced when creating a edge even if not yet inserted in the graph."
        }
      }
    ]
  }
]