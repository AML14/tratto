[
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "defaultIfNull",
      "parameterTypes": [
        "java.util.List",
        "java.util.List"
      ]
    },
    "identifiers": {
      "parameters": [
        "list",
        "defaultList"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param defaultList the returned values if list is null.",
        "guard": {
          "condition": "list==null",
          "description": "the returned values if list is null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "intersection",
      "parameterTypes": [
        "java.util.List",
        "java.util.List"
      ]
    },
    "identifiers": {
      "parameters": [
        "list1",
        "list2"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException either list is null.",
        "guard": {
          "condition": "list1==null || list2==null",
          "description": "either list is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "subtract",
      "parameterTypes": [
        "java.util.List",
        "java.util.List"
      ]
    },
    "identifiers": {
      "parameters": [
        "list1",
        "list2"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException either list is null.",
        "guard": {
          "condition": "list1==null || list2==null",
          "description": "either list is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "sum",
      "parameterTypes": [
        "java.util.List",
        "java.util.List"
      ]
    },
    "identifiers": {
      "parameters": [
        "list1",
        "list2"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException either list is null.",
        "guard": {
          "condition": "list1==null || list2==null",
          "description": "either list is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "union",
      "parameterTypes": [
        "java.util.List",
        "java.util.List"
      ]
    },
    "identifiers": {
      "parameters": [
        "list1",
        "list2"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException either list is null.",
        "guard": {
          "condition": "list1==null || list2==null",
          "description": "either list is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "select",
      "parameterTypes": [
        "java.util.Collection",
        "org.apache.commons.collections4.Predicate"
      ]
    },
    "identifiers": {
      "parameters": [
        "inputCollection",
        "predicate"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the input list is null.",
        "guard": {
          "condition": "inputCollection==null",
          "description": "the input list is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param inputCollection the collection to get the input from. inputCollection is not null.",
        "guard": {
          "condition": "(inputCollection==null) == false",
          "description": "the collection to get the input from. inputCollection is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "selectRejected",
      "parameterTypes": [
        "java.util.Collection",
        "org.apache.commons.collections4.Predicate"
      ]
    },
    "identifiers": {
      "parameters": [
        "inputCollection",
        "predicate"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the input collection is null.",
        "guard": {
          "condition": "inputCollection==null",
          "description": "the input collection is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param inputCollection the collection to get the input from. inputCollection is not null.",
        "guard": {
          "condition": "(inputCollection==null) == false",
          "description": "the collection to get the input from. inputCollection is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "isEqualList",
      "parameterTypes": [
        "java.util.Collection",
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "list1",
        "list2"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID == true",
          "description": "True if the lists are equal by value comparison., false otherwise"
        },
        "description": "True if the lists are equal by value comparison., false otherwise",
        "guard": {
          "condition": "((list1==null)==false) && (list1.equals(list2))",
          "description": "True if the lists are equal by value comparison., false otherwise"
        }
      },
      {
        "property": {
          "condition": "methodResultID == false",
          "description": "True if the lists are equal by value comparison., false otherwise"
        },
        "description": "True if the lists are equal by value comparison., false otherwise",
        "guard": {
          "condition": "(((list1==null)==false) && (list1.equals(list2)))==false",
          "description": "True if the lists are equal by value comparison., false otherwise"
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "retainAll",
      "parameterTypes": [
        "java.util.Collection",
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection",
        "retain"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException either parameter is null.",
        "guard": {
          "condition": "collection==null || retain==null",
          "description": "either parameter is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "removeAll",
      "parameterTypes": [
        "java.util.Collection",
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection",
        "remove"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException either parameter is null.",
        "guard": {
          "condition": "collection==null || remove==null",
          "description": "either parameter is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "synchronizedList",
      "parameterTypes": [
        "java.util.List"
      ]
    },
    "identifiers": {
      "parameters": [
        "list"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the list is null.",
        "guard": {
          "condition": "list==null",
          "description": "the list is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param list the list to synchronize. list is not null.",
        "guard": {
          "condition": "(list==null) == false",
          "description": "the list to synchronize. list is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "unmodifiableList",
      "parameterTypes": [
        "java.util.List"
      ]
    },
    "identifiers": {
      "parameters": [
        "list"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the list is null.",
        "guard": {
          "condition": "list==null",
          "description": "the list is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param list the list to make unmodifiable. list is not null.",
        "guard": {
          "condition": "(list==null) == false",
          "description": "the list to make unmodifiable. list is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "predicatedList",
      "parameterTypes": [
        "java.util.List",
        "org.apache.commons.collections4.Predicate"
      ]
    },
    "identifiers": {
      "parameters": [
        "list",
        "predicate"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the List or Predicate is null.",
        "guard": {
          "condition": "list==null || predicate==null",
          "description": "the List or Predicate is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param list the list to predicate. list is not null.",
        "guard": {
          "condition": "(list==null) == false",
          "description": "the list to predicate. list is not null."
        }
      },
      {
        "description": "@param predicate the predicate for the list. predicate is not null.",
        "guard": {
          "condition": "(predicate==null) == false",
          "description": "the predicate for the list. predicate is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "transformedList",
      "parameterTypes": [
        "java.util.List",
        "org.apache.commons.collections4.Transformer"
      ]
    },
    "identifiers": {
      "parameters": [
        "list",
        "transformer"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the List or Transformer is null.",
        "guard": {
          "condition": "list==null || transformer==null",
          "description": "the List or Transformer is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param list the list to predicate. list is not null.",
        "guard": {
          "condition": "(list==null) == false",
          "description": "the list to predicate. list is not null."
        }
      },
      {
        "description": "@param transformer the transformer for the list. transformer is not null.",
        "guard": {
          "condition": "(transformer==null) == false",
          "description": "the transformer for the list. transformer is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "lazyList",
      "parameterTypes": [
        "java.util.List",
        "org.apache.commons.collections4.Factory"
      ]
    },
    "identifiers": {
      "parameters": [
        "list",
        "factory"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the List or Factory is null.",
        "guard": {
          "condition": "list==null || factory==null",
          "description": "the List or Factory is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param list the list to make lazy. list is not null.",
        "guard": {
          "condition": "(list==null) == false",
          "description": "the list to make lazy. list is not null."
        }
      },
      {
        "description": "@param factory the factory for creating new objects. factory is not null.",
        "guard": {
          "condition": "(factory==null) == false",
          "description": "the factory for creating new objects. factory is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "fixedSizeList",
      "parameterTypes": [
        "java.util.List"
      ]
    },
    "identifiers": {
      "parameters": [
        "list"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the List is null.",
        "guard": {
          "condition": "list==null",
          "description": "the List is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param list the list whose size to fix. list is not null.",
        "guard": {
          "condition": "(list==null) == false",
          "description": "the list whose size to fix. list is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "longestCommonSubsequence",
      "parameterTypes": [
        "java.util.List",
        "java.util.List"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException either list is null.",
        "guard": {
          "condition": "a==null || b==null",
          "description": "either list is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "longestCommonSubsequence",
      "parameterTypes": [
        "java.util.List",
        "java.util.List",
        "org.apache.commons.collections4.Equator"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b",
        "equator"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException either list or the equator is null.",
        "guard": {
          "condition": "a==null || b==null || equator==null",
          "description": "either list or the equator is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "longestCommonSubsequence",
      "parameterTypes": [
        "java.lang.CharSequence",
        "java.lang.CharSequence"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException either sequence is null.",
        "guard": {
          "condition": "a==null || b==null",
          "description": "either sequence is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.ListUtils",
      "name": "partition",
      "parameterTypes": [
        "java.util.List",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "list",
        "size"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException list is null.",
        "guard": {
          "condition": "list==null",
          "description": "list is null."
        }
      },
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException size is not strictly positive.",
        "guard": {
          "condition": "(size>0) == false",
          "description": "size is not strictly positive."
        }
      }
    ],
    "post": [],
    "pre": []
  }
]