[
  {
    "operation": {
      "classname": "org.apache.commons.collections4.map.PredicatedMap",
      "name": "org.apache.commons.collections4.map.PredicatedMap",
      "parameterTypes": [
        "java.util.Map",
        "org.apache.commons.collections4.Predicate",
        "org.apache.commons.collections4.Predicate"
      ]
    },
    "identifiers": {
      "parameters": [
        "map",
        "keyPredicate",
        "valuePredicate"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the map is null.",
        "guard": {
          "condition": "map==null",
          "description": "the map is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param map the map to decorate. map is not null.",
        "guard": {
          "condition": "(map==null) == false",
          "description": "the map to decorate. map is not null."
        }
      },
      {
        "description": "@param keyPredicate the predicate to validate the keys. keyPredicate is null means no check.",
        "guard": {
          "condition": "keyPredicate==null",
          "description": "the predicate to validate the keys. keyPredicate is null means no check."
        }
      },
      {
        "description": "@param valuePredicate the predicate to validate to values. valuePredicate is null means no check.",
        "guard": {
          "condition": "valuePredicate==null",
          "description": "the predicate to validate to values. valuePredicate is null means no check."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.map.PredicatedMap",
      "name": "predicatedMap",
      "parameterTypes": [
        "java.util.Map",
        "org.apache.commons.collections4.Predicate",
        "org.apache.commons.collections4.Predicate"
      ]
    },
    "identifiers": {
      "parameters": [
        "map",
        "keyPredicate",
        "valuePredicate"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the map is null.",
        "guard": {
          "condition": "map==null",
          "description": "the map is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param map the map to decorate. map is not null.",
        "guard": {
          "condition": "(map==null) == false",
          "description": "the map to decorate. map is not null."
        }
      },
      {
        "description": "@param keyPredicate the predicate to validate the keys. keyPredicate is null means no check.",
        "guard": {
          "condition": "keyPredicate==null",
          "description": "the predicate to validate the keys. keyPredicate is null means no check."
        }
      },
      {
        "description": "@param valuePredicate the predicate to validate to values. valuePredicate is null means no check.",
        "guard": {
          "condition": "valuePredicate==null",
          "description": "the predicate to validate to values. valuePredicate is null means no check."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.map.PredicatedMap",
      "name": "checkSetValue",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "value"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID.equals(value)",
          "description": "the value itself."
        },
        "description": "the value itself.",
        "guard": {
          "condition": "true",
          "description": "the value itself."
        }
      }
    ],
    "pre": []
  }
]