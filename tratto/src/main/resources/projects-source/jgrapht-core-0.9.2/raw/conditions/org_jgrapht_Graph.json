[
  {
    "operation": {
      "classname": "org.jgrapht.Graph",
      "name": "addEdge",
      "parameterTypes": [
        "java.lang.Object",
        "java.lang.Object",
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "sourceVertex",
        "targetVertex",
        "e"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID == true",
          "description": "true if this graph did not already contain the specified edge."
        },
        "description": "true if this graph did not already contain the specified edge.",
        "guard": {
          "condition": "(receiverObjectID.containsEdge(sourceVertex,targetVertex)) == false",
          "description": "true if this graph did not already contain the specified edge."
        }
      },
      {
        "property": {
          "condition": "methodResultID == false",
          "description": "true if this graph did not already contain the specified edge."
        },
        "description": "true if this graph did not already contain the specified edge.",
        "guard": {
          "condition": "((receiverObjectID.containsEdge(sourceVertex,targetVertex)) == false)==false",
          "description": "true if this graph did not already contain the specified edge."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.jgrapht.Graph",
      "name": "addVertex",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "v"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the specified vertex is null.",
        "guard": {
          "condition": "v==null",
          "description": "the specified vertex is null."
        }
      }
    ],
    "post": [
      {
        "property": {
          "condition": "methodResultID == true",
          "description": "true if this graph did not already contain the specified vertex."
        },
        "description": "true if this graph did not already contain the specified vertex.",
        "guard": {
          "condition": "(receiverObjectID.containsVertex(v)) == false",
          "description": "true if this graph did not already contain the specified vertex."
        }
      },
      {
        "property": {
          "condition": "methodResultID == false",
          "description": "true if this graph did not already contain the specified vertex."
        },
        "description": "true if this graph did not already contain the specified vertex.",
        "guard": {
          "condition": "((receiverObjectID.containsVertex(v)) == false)==false",
          "description": "true if this graph did not already contain the specified vertex."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.jgrapht.Graph",
      "name": "edgesOf",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "vertex"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException vertex is not found in the graph.",
        "guard": {
          "condition": "(receiverObjectID.containsVertex(vertex)) == false",
          "description": "vertex is not found in the graph."
        }
      },
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException vertex is null.",
        "guard": {
          "condition": "vertex==null",
          "description": "vertex is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.jgrapht.Graph",
      "name": "removeAllEdges",
      "parameterTypes": [
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "edges"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the specified edge collection is null.",
        "guard": {
          "condition": "edges==null",
          "description": "the specified edge collection is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.jgrapht.Graph",
      "name": "removeAllVertices",
      "parameterTypes": [
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "vertices"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the specified vertex collection is null.",
        "guard": {
          "condition": "vertices==null",
          "description": "the specified vertex collection is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.jgrapht.Graph",
      "name": "removeEdge",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "e"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID == true",
          "description": "true if the graph contained the specified edge, false otherwise."
        },
        "description": "true if the graph contained the specified edge, false otherwise.",
        "guard": {
          "condition": "receiverObjectID.containsEdge(e)",
          "description": "true if the graph contained the specified edge, false otherwise."
        }
      },
      {
        "property": {
          "condition": "methodResultID == false",
          "description": "true if the graph contained the specified edge, false otherwise."
        },
        "description": "true if the graph contained the specified edge, false otherwise.",
        "guard": {
          "condition": "(receiverObjectID.containsEdge(e))==false",
          "description": "true if the graph contained the specified edge, false otherwise."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.jgrapht.Graph",
      "name": "removeVertex",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "v"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID == true",
          "description": "true if the graph contained the specified vertex, false otherwise."
        },
        "description": "true if the graph contained the specified vertex, false otherwise.",
        "guard": {
          "condition": "receiverObjectID.containsVertex(v)",
          "description": "true if the graph contained the specified vertex, false otherwise."
        }
      },
      {
        "property": {
          "condition": "methodResultID == false",
          "description": "true if the graph contained the specified vertex, false otherwise."
        },
        "description": "true if the graph contained the specified vertex, false otherwise.",
        "guard": {
          "condition": "(receiverObjectID.containsVertex(v))==false",
          "description": "true if the graph contained the specified vertex, false otherwise."
        }
      }
    ],
    "pre": []
  }
]