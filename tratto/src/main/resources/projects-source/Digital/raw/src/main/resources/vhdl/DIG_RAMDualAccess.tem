LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

entity DIG_RAMDualAccess is
  generic (
    Bits : integer;       <? vhdl.registerGeneric("Bits");?>
    AddrBits : integer ); <? vhdl.registerGeneric("AddrBits");?>
  port (
    n1D: out std_logic_vector ((Bits-1) downto 0);
    n2D: out std_logic_vector ((Bits-1) downto 0);
    str: in std_logic;
    C: in std_logic;
    ld: in std_logic;
    n1A: in std_logic_vector ((AddrBits-1) downto 0);
    n1Din: in std_logic_vector ((Bits-1) downto 0);
    n2A: in std_logic_vector ((AddrBits-1) downto 0) );
end DIG_RAMDualAccess;

architecture Behavioral of DIG_RAMDualAccess is
    -- CAUTION: uses distributed RAM
    type memoryType is array(0 to (2**AddrBits)-1) of STD_LOGIC_VECTOR((Bits-1) downto 0);
    signal memory : memoryType;
begin
  process ( C )
  begin
    if rising_edge(C) AND (str='1') then
      memory(to_integer(unsigned(n1A))) <= n1Din;
    end if;
  end process;
  n1D <= memory(to_integer(unsigned(n1A))) when ld='1' else (others => 'Z');
  n2D <= memory(to_integer(unsigned(n2A)));
end Behavioral;
