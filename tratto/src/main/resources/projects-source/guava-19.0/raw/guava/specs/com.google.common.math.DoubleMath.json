[
  {
    "operation": {
      "classname": "com.google.common.math.DoubleMath",
      "name": "factorial",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "n"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException n < 0.",
        "guard": {
          "condition": "n<0",
          "description": "n < 0."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "com.google.common.math.DoubleMath",
      "name": "fuzzyEquals",
      "parameterTypes": [
        "double",
        "double",
        "double"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b",
        "tolerance"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException tolerance is < 0 or NaN.",
        "guard": {
          "condition": "tolerance<0",
          "description": "tolerance is < 0 or NaN."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "com.google.common.math.DoubleMath",
      "name": "fuzzyCompare",
      "parameterTypes": [
        "double",
        "double",
        "double"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b",
        "tolerance"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException tolerance is < 0 or NaN.",
        "guard": {
          "condition": "tolerance<0",
          "description": "tolerance is < 0 or NaN."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "com.google.common.math.DoubleMath",
      "name": "mean",
      "parameterTypes": [
        "[D"
      ]
    },
    "identifiers": {
      "parameters": [
        "values"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException values is empty or contains any non-finite value.",
        "guard": {
          "condition": "values!=null && values.length==0",
          "description": "values is empty or contains any non-finite value."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param values values is not empty. not empty series of values.",
        "guard": {
          "condition": "values!=null && (values.length==0) == false",
          "description": "values is not empty. not empty series of values."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "com.google.common.math.DoubleMath",
      "name": "mean",
      "parameterTypes": [
        "[I"
      ]
    },
    "identifiers": {
      "parameters": [
        "values"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException values is empty.",
        "guard": {
          "condition": "values!=null && values.length==0",
          "description": "values is empty."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param values values is not empty. not empty series of values.",
        "guard": {
          "condition": "values!=null && (values.length==0) == false",
          "description": "values is not empty. not empty series of values."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "com.google.common.math.DoubleMath",
      "name": "mean",
      "parameterTypes": [
        "[J"
      ]
    },
    "identifiers": {
      "parameters": [
        "values"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException values is empty.",
        "guard": {
          "condition": "values!=null && values.length==0",
          "description": "values is empty."
        }
      }
    ],
    "post": [],
    "pre": []
  }
]