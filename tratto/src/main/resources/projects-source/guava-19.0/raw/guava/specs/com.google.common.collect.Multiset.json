[
  {
    "operation": {
      "classname": "com.google.common.collect.Multiset",
      "name": "add",
      "parameterTypes": [
        "java.lang.Object",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "element",
        "occurrences"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException occurrences is negative or if this operation would result in more than Integer#MAX_VALUE occurrences of the element.",
        "guard": {
          "condition": "occurrences<0",
          "description": "occurrences is negative or if this operation would result in more than Integer#MAX_VALUE occurrences of the element."
        }
      },
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException element is null and this implementation does not permit null elements. Note that if occurrences is zero the implementation may opt to return normally.",
        "guard": {
          "condition": "(element==null) || (occurrences==0)",
          "description": "element is null and this implementation does not permit null elements. Note that if occurrences is zero the implementation may opt to return normally."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param occurrences the number of occurrences of the element to add. May be zero in which case no change . occurrences is made.",
        "guard": {
          "condition": "occurrences==0",
          "description": "the number of occurrences of the element to add. May be zero in which case no change . occurrences is made."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "com.google.common.collect.Multiset",
      "name": "remove",
      "parameterTypes": [
        "java.lang.Object",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "element",
        "occurrences"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException occurrences is negative.",
        "guard": {
          "condition": "occurrences<0",
          "description": "occurrences is negative."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param element the element to conditionally remove occurrences of.",
        "guard": {
          "condition": "receiverObjectID.remove(element)",
          "description": "the element to conditionally remove occurrences of."
        }
      },
      {
        "description": "@param occurrences the number of occurrences of the element to remove. May be zero in which case no change . occurrences is made.",
        "guard": {
          "condition": "occurrences==0",
          "description": "the number of occurrences of the element to remove. May be zero in which case no change . occurrences is made."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "com.google.common.collect.Multiset",
      "name": "setCount",
      "parameterTypes": [
        "java.lang.Object",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "element",
        "count"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException count is negative.",
        "guard": {
          "condition": "count<0",
          "description": "count is negative."
        }
      },
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException element is null and this implementation does not permit null elements. Note that if count is zero the implementor may optionally return zero instead.",
        "guard": {
          "condition": "(element==null) || (count==0)",
          "description": "element is null and this implementation does not permit null elements. Note that if count is zero the implementor may optionally return zero instead."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "com.google.common.collect.Multiset",
      "name": "setCount",
      "parameterTypes": [
        "java.lang.Object",
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "element",
        "oldCount",
        "newCount"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException oldCount or newCount is negative.",
        "guard": {
          "condition": "oldCount<0 || newCount<0",
          "description": "oldCount or newCount is negative."
        }
      },
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException element is null and the implementation does not permit null elements. Note that if oldCount and newCount are both zero the implementor may optionally return true instead.",
        "guard": {
          "condition": "(element==null) || (oldCount==0&&newCount==0)",
          "description": "element is null and the implementation does not permit null elements. Note that if oldCount and newCount are both zero the implementor may optionally return true instead."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "com.google.common.collect.Multiset",
      "name": "containsAll",
      "parameterTypes": [
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "elements"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException elements is null.",
        "guard": {
          "condition": "elements==null",
          "description": "elements is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "com.google.common.collect.Multiset",
      "name": "add",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "element"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException element is null and this implementation does not permit null elements.",
        "guard": {
          "condition": "element==null",
          "description": "element is null and this implementation does not permit null elements."
        }
      }
    ],
    "post": [],
    "pre": []
  }
]