[
  {
    "operation": {
      "classname": "com.google.common.base.CharMatcher",
      "name": "inRange",
      "parameterTypes": [
        "char",
        "char"
      ]
    },
    "identifiers": {
      "parameters": [
        "startInclusive",
        "endInclusive"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException endInclusive < startInclusive.",
        "guard": {
          "condition": "endInclusive<startInclusive",
          "description": "endInclusive < startInclusive."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "com.google.common.base.CharMatcher",
      "name": "matchesNoneOf",
      "parameterTypes": [
        "java.lang.CharSequence"
      ]
    },
    "identifiers": {
      "parameters": [
        "sequence"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID == true",
          "description": "true if this matcher matches every character in the sequence, including when the sequence is empty."
        },
        "description": "true if this matcher matches every character in the sequence, including when the sequence is empty.",
        "guard": {
          "condition": "receiverObjectID.matchesAllOf(sequence)",
          "description": "true if this matcher matches every character in the sequence, including when the sequence is empty."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "com.google.common.base.CharMatcher",
      "name": "indexIn",
      "parameterTypes": [
        "java.lang.CharSequence",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "sequence",
        "start"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IndexOutOfBoundsException",
        "description": "@throws java.lang.IndexOutOfBoundsException start is negative or greater than sequence.length().",
        "guard": {
          "condition": "start<0 || sequence!=null && start>sequence.length()",
          "description": "start is negative or greater than sequence.length()."
        }
      }
    ],
    "post": [],
    "pre": []
  }
]