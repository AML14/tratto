[
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "emptyCollection",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID.equals(CollectionUtils.EMPTY_COLLECTION)",
          "description": "immutable empty collection."
        },
        "description": "immutable empty collection.",
        "guard": {
          "condition": "true",
          "description": "immutable empty collection."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "emptyIfNull",
      "parameterTypes": [
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID.equals(org.apache.commons.collections4.CollectionUtils.emptyCollection())",
          "description": "an empty collection if the argument is null."
        },
        "description": "an empty collection if the argument is null.",
        "guard": {
          "condition": "collection==null",
          "description": "an empty collection if the argument is null."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "union",
      "parameterTypes": [
        "java.lang.Iterable",
        "java.lang.Iterable"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param a the first collection. a is not null.",
        "guard": {
          "condition": "(a==null) == false",
          "description": "the first collection. a is not null."
        }
      },
      {
        "description": "@param b the second collection. b is not null.",
        "guard": {
          "condition": "(b==null) == false",
          "description": "the second collection. b is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "intersection",
      "parameterTypes": [
        "java.lang.Iterable",
        "java.lang.Iterable"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param a the first collection. a is not null.",
        "guard": {
          "condition": "(a==null) == false",
          "description": "the first collection. a is not null."
        }
      },
      {
        "description": "@param b the second collection. b is not null.",
        "guard": {
          "condition": "(b==null) == false",
          "description": "the second collection. b is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "disjunction",
      "parameterTypes": [
        "java.lang.Iterable",
        "java.lang.Iterable"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param a the first collection. a is not null.",
        "guard": {
          "condition": "(a==null) == false",
          "description": "the first collection. a is not null."
        }
      },
      {
        "description": "@param b the second collection. b is not null.",
        "guard": {
          "condition": "(b==null) == false",
          "description": "the second collection. b is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "subtract",
      "parameterTypes": [
        "java.lang.Iterable",
        "java.lang.Iterable"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param a the collection to subtract from. a is not null.",
        "guard": {
          "condition": "(a==null) == false",
          "description": "the collection to subtract from. a is not null."
        }
      },
      {
        "description": "@param b the collection to subtract. b is not null.",
        "guard": {
          "condition": "(b==null) == false",
          "description": "the collection to subtract. b is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "subtract",
      "parameterTypes": [
        "java.lang.Iterable",
        "java.lang.Iterable",
        "org.apache.commons.collections4.Predicate"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b",
        "p"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param a the collection to subtract from. a is not null.",
        "guard": {
          "condition": "(a==null) == false",
          "description": "the collection to subtract from. a is not null."
        }
      },
      {
        "description": "@param b the collection to subtract. b is not null.",
        "guard": {
          "condition": "(b==null) == false",
          "description": "the collection to subtract. b is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "containsAll",
      "parameterTypes": [
        "java.util.Collection",
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "coll1",
        "coll2"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param coll1 the first collection. coll1 is not null.",
        "guard": {
          "condition": "(coll1==null) == false",
          "description": "the first collection. coll1 is not null."
        }
      },
      {
        "description": "@param coll2 the second collection. coll2 is not null.",
        "guard": {
          "condition": "(coll2==null) == false",
          "description": "the second collection. coll2 is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "containsAny",
      "parameterTypes": [
        "java.util.Collection",
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "coll1",
        "coll2"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param coll1 the first collection. coll1 is not null.",
        "guard": {
          "condition": "(coll1==null) == false",
          "description": "the first collection. coll1 is not null."
        }
      },
      {
        "description": "@param coll2 the second collection. coll2 is not null.",
        "guard": {
          "condition": "(coll2==null) == false",
          "description": "the second collection. coll2 is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "getCardinalityMap",
      "parameterTypes": [
        "java.lang.Iterable"
      ]
    },
    "identifiers": {
      "parameters": [
        "coll"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param coll the collection to get the cardinality map for. coll is not null.",
        "guard": {
          "condition": "(coll==null) == false",
          "description": "the collection to get the cardinality map for. coll is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "isSubCollection",
      "parameterTypes": [
        "java.util.Collection",
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param a the first (sub?) collection. a is not null.",
        "guard": {
          "condition": "(a==null) == false",
          "description": "the first (sub?) collection. a is not null."
        }
      },
      {
        "description": "@param b the second (super?) collection. b is not null.",
        "guard": {
          "condition": "(b==null) == false",
          "description": "the second (super?) collection. b is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "isProperSubCollection",
      "parameterTypes": [
        "java.util.Collection",
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID == true",
          "description": "true if a is a proper sub-collection of b, false otherwise."
        },
        "description": "true if a is a proper sub-collection of b, false otherwise.",
        "guard": {
          "condition": "CollectionUtils.isSubCollection(a,b)",
          "description": "true if a is a proper sub-collection of b, false otherwise."
        }
      },
      {
        "property": {
          "condition": "methodResultID == false",
          "description": "true if a is a proper sub-collection of b, false otherwise."
        },
        "description": "true if a is a proper sub-collection of b, false otherwise.",
        "guard": {
          "condition": "(CollectionUtils.isSubCollection(a,b))==false",
          "description": "true if a is a proper sub-collection of b, false otherwise."
        }
      }
    ],
    "pre": [
      {
        "description": "@param a the first (sub?) collection. a is not null.",
        "guard": {
          "condition": "(a==null) == false",
          "description": "the first (sub?) collection. a is not null."
        }
      },
      {
        "description": "@param b the second (super?) collection. b is not null.",
        "guard": {
          "condition": "(b==null) == false",
          "description": "the second (super?) collection. b is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "isEqualCollection",
      "parameterTypes": [
        "java.util.Collection",
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param a the first collection. a is not null.",
        "guard": {
          "condition": "(a==null) == false",
          "description": "the first collection. a is not null."
        }
      },
      {
        "description": "@param b the second collection. b is not null.",
        "guard": {
          "condition": "(b==null) == false",
          "description": "the second collection. b is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "isEqualCollection",
      "parameterTypes": [
        "java.util.Collection",
        "java.util.Collection",
        "org.apache.commons.collections4.Equator"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b",
        "equator"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the equator is null.",
        "guard": {
          "condition": "equator==null",
          "description": "the equator is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param a the first collection. a is not null.",
        "guard": {
          "condition": "(a==null) == false",
          "description": "the first collection. a is not null."
        }
      },
      {
        "description": "@param b the second collection. b is not null.",
        "guard": {
          "condition": "(b==null) == false",
          "description": "the second collection. b is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "cardinality",
      "parameterTypes": [
        "java.lang.Object",
        "java.lang.Iterable"
      ]
    },
    "identifiers": {
      "parameters": [
        "obj",
        "coll"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException coll is null.",
        "guard": {
          "condition": "coll==null",
          "description": "coll is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "forAllDo",
      "parameterTypes": [
        "java.lang.Iterable",
        "org.apache.commons.collections4.Closure"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection",
        "closure"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID.equals(closure)",
          "description": "closure."
        },
        "description": "closure.",
        "guard": {
          "condition": "true",
          "description": "closure."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "forAllDo",
      "parameterTypes": [
        "java.util.Iterator",
        "org.apache.commons.collections4.Closure"
      ]
    },
    "identifiers": {
      "parameters": [
        "iterator",
        "closure"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID.equals(closure)",
          "description": "closure."
        },
        "description": "closure.",
        "guard": {
          "condition": "true",
          "description": "closure."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "forAllButLastDo",
      "parameterTypes": [
        "java.lang.Iterable",
        "org.apache.commons.collections4.Closure"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection",
        "closure"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==null",
          "description": "the last element in the collection, or null if either collection or closure is null."
        },
        "description": "the last element in the collection, or null if either collection or closure is null.",
        "guard": {
          "condition": "(collection==null || closure==null)",
          "description": "the last element in the collection, or null if either collection or closure is null."
        }
      },
      {
        "property": {
          "condition": "collection.get(collection.size() - 1)",
          "description": "the last element in the collection, or null if either collection or closure is null."
        },
        "description": "the last element in the collection, or null if either collection or closure is null.",
        "guard": {
          "condition": "(collection==null || closure==null)==false",
          "description": "the last element in the collection, or null if either collection or closure is null."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "forAllButLastDo",
      "parameterTypes": [
        "java.util.Iterator",
        "org.apache.commons.collections4.Closure"
      ]
    },
    "identifiers": {
      "parameters": [
        "iterator",
        "closure"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==null",
          "description": "the last element in the collection, or null if either iterator or closure is null."
        },
        "description": "the last element in the collection, or null if either iterator or closure is null.",
        "guard": {
          "condition": "iterator==null || closure==null",
          "description": "the last element in the collection, or null if either iterator or closure is null."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "select",
      "parameterTypes": [
        "java.lang.Iterable",
        "org.apache.commons.collections4.Predicate"
      ]
    },
    "identifiers": {
      "parameters": [
        "inputCollection",
        "predicate"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the input collection is null.",
        "guard": {
          "condition": "inputCollection==null",
          "description": "the input collection is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param inputCollection the collection to get the input from. inputCollection is not null.",
        "guard": {
          "condition": "(inputCollection==null) == false",
          "description": "the collection to get the input from. inputCollection is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "select",
      "parameterTypes": [
        "java.lang.Iterable",
        "org.apache.commons.collections4.Predicate",
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "inputCollection",
        "predicate",
        "outputCollection"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID.equals(outputCollection)",
          "description": "the outputCollection."
        },
        "description": "the outputCollection.",
        "guard": {
          "condition": "true",
          "description": "the outputCollection."
        }
      }
    ],
    "pre": [
      {
        "description": "@param outputCollection the collection to output into. outputCollection is not null if the inputCollection and predicate or not null.",
        "guard": {
          "condition": "(outputCollection==null) == false",
          "description": "the collection to output into. outputCollection is not null if the inputCollection and predicate or not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "select",
      "parameterTypes": [
        "java.lang.Iterable",
        "org.apache.commons.collections4.Predicate",
        "java.util.Collection",
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "inputCollection",
        "predicate",
        "outputCollection",
        "rejectedCollection"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID.equals(outputCollection)",
          "description": "the outputCollection."
        },
        "description": "the outputCollection.",
        "guard": {
          "condition": "true",
          "description": "the outputCollection."
        }
      }
    ],
    "pre": [
      {
        "description": "@param outputCollection the collection to output selected elements into. outputCollection is not null if the inputCollection and predicate are not null.",
        "guard": {
          "condition": "(inputCollection==null) == false && (predicate==null) == false || (outputCollection==null) == false",
          "description": "the collection to output selected elements into. outputCollection is not null if the inputCollection and predicate are not null."
        }
      },
      {
        "description": "@param rejectedCollection the collection to output rejected elements into. rejectedCollection is not null if the inputCollection or predicate are not null.",
        "guard": {
          "condition": "(inputCollection==null) == false || (predicate==null) == false || (rejectedCollection==null) == false",
          "description": "the collection to output rejected elements into. rejectedCollection is not null if the inputCollection or predicate are not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "selectRejected",
      "parameterTypes": [
        "java.lang.Iterable",
        "org.apache.commons.collections4.Predicate"
      ]
    },
    "identifiers": {
      "parameters": [
        "inputCollection",
        "predicate"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the input collection is null.",
        "guard": {
          "condition": "inputCollection==null",
          "description": "the input collection is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param inputCollection the collection to get the input from. inputCollection is not null.",
        "guard": {
          "condition": "(inputCollection==null) == false",
          "description": "the collection to get the input from. inputCollection is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "selectRejected",
      "parameterTypes": [
        "java.lang.Iterable",
        "org.apache.commons.collections4.Predicate",
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "inputCollection",
        "predicate",
        "outputCollection"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID.equals(outputCollection)",
          "description": "outputCollection."
        },
        "description": "outputCollection.",
        "guard": {
          "condition": "true",
          "description": "outputCollection."
        }
      }
    ],
    "pre": [
      {
        "description": "@param outputCollection the collection to output into. outputCollection is not null if the inputCollection and predicate or not null.",
        "guard": {
          "condition": "(outputCollection==null) == false",
          "description": "the collection to output into. outputCollection is not null if the inputCollection and predicate or not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "collect",
      "parameterTypes": [
        "java.lang.Iterable",
        "org.apache.commons.collections4.Transformer"
      ]
    },
    "identifiers": {
      "parameters": [
        "inputCollection",
        "transformer"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the input collection is null.",
        "guard": {
          "condition": "inputCollection==null",
          "description": "the input collection is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param inputCollection the collection to get the input from. inputCollection is not null.",
        "guard": {
          "condition": "(inputCollection==null) == false",
          "description": "the collection to get the input from. inputCollection is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "collect",
      "parameterTypes": [
        "java.lang.Iterable",
        "org.apache.commons.collections4.Transformer",
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "inputCollection",
        "transformer",
        "outputCollection"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the outputCollection is null and both inputCollection and transformer are not null.",
        "guard": {
          "condition": "outputCollection==null && (inputCollection==null) == false && (transformer==null) == false",
          "description": "the outputCollection is null and both inputCollection and transformer are not null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param outputCollection the collection to output into. outputCollection is not null if inputCollection and transformer are not null.",
        "guard": {
          "condition": "(inputCollection==null) == false && (transformer==null) == false || (outputCollection==null) == false",
          "description": "the collection to output into. outputCollection is not null if inputCollection and transformer are not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "collect",
      "parameterTypes": [
        "java.util.Iterator",
        "org.apache.commons.collections4.Transformer",
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "inputIterator",
        "transformer",
        "outputCollection"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the output collection is null and both inputIterator and transformer are not null.",
        "guard": {
          "condition": "outputCollection==null && (inputIterator==null) == false && (transformer==null) == false",
          "description": "the output collection is null and both inputIterator and transformer are not null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param outputCollection the collection to output into. outputCollection is not null if inputIterator and transformer are not null.",
        "guard": {
          "condition": "(inputIterator==null) == false && (transformer==null) == false || (outputCollection==null) == false",
          "description": "the collection to output into. outputCollection is not null if inputIterator and transformer are not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "addIgnoreNull",
      "parameterTypes": [
        "java.util.Collection",
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection",
        "object"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the collection is null.",
        "guard": {
          "condition": "collection==null",
          "description": "the collection is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param collection the collection to add to. collection is not null.",
        "guard": {
          "condition": "(collection==null) == false",
          "description": "the collection to add to. collection is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "addAll",
      "parameterTypes": [
        "java.util.Collection",
        "java.lang.Iterable"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection",
        "iterable"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the collection or iterator is null.",
        "guard": {
          "condition": "collection==null || iterable==null",
          "description": "the collection or iterator is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param collection the collection to add to. collection is not null.",
        "guard": {
          "condition": "(collection==null) == false",
          "description": "the collection to add to. collection is not null."
        }
      },
      {
        "description": "@param iterable the iterable of elements to add. iterable is not null.",
        "guard": {
          "condition": "(iterable==null) == false",
          "description": "the iterable of elements to add. iterable is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "addAll",
      "parameterTypes": [
        "java.util.Collection",
        "java.util.Iterator"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection",
        "iterator"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the collection or iterator is null.",
        "guard": {
          "condition": "collection==null || iterator==null",
          "description": "the collection or iterator is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param collection the collection to add to. collection is not null.",
        "guard": {
          "condition": "(collection==null) == false",
          "description": "the collection to add to. collection is not null."
        }
      },
      {
        "description": "@param iterator the iterator of elements to add. iterator is not null.",
        "guard": {
          "condition": "(iterator==null) == false",
          "description": "the iterator of elements to add. iterator is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "addAll",
      "parameterTypes": [
        "java.util.Collection",
        "java.util.Enumeration"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection",
        "enumeration"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the collection or enumeration is null.",
        "guard": {
          "condition": "collection==null || enumeration==null",
          "description": "the collection or enumeration is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param collection the collection to add to. collection is not null.",
        "guard": {
          "condition": "(collection==null) == false",
          "description": "the collection to add to. collection is not null."
        }
      },
      {
        "description": "@param enumeration the enumeration of elements to add. enumeration is not null.",
        "guard": {
          "condition": "(enumeration==null) == false",
          "description": "the enumeration of elements to add. enumeration is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "addAll",
      "parameterTypes": [
        "java.util.Collection",
        "[Ljava.lang.Object;"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection",
        "elements"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the collection or array is null.",
        "guard": {
          "condition": "collection==null || elements==null",
          "description": "the collection or array is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param collection the collection to add to. collection is not null.",
        "guard": {
          "condition": "(collection==null) == false",
          "description": "the collection to add to. collection is not null."
        }
      },
      {
        "description": "@param elements the array of elements to add. elements is not null.",
        "guard": {
          "condition": "(elements==null) == false",
          "description": "the array of elements to add. elements is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "get",
      "parameterTypes": [
        "java.util.Map",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "map",
        "index"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IndexOutOfBoundsException",
        "description": "@throws java.lang.IndexOutOfBoundsException if the index is invalid.",
        "guard": {
          "condition": "map.entrySet().size() < index || index < 0",
          "description": "if the index is invalid."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "size",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "object"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID == 0",
          "description": "the size of the specified collection or 0 if the object was null."
        },
        "description": "the size of the specified collection or 0 if the object was null.",
        "guard": {
          "condition": "object==null",
          "description": "the size of the specified collection or 0 if the object was null."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "checkIndexBounds",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "index"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IndexOutOfBoundsException",
        "description": "@throws java.lang.IndexOutOfBoundsException the index is negative.",
        "guard": {
          "condition": "index<0",
          "description": "the index is negative."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "isFull",
      "parameterTypes": [
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "coll"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the collection is null.",
        "guard": {
          "condition": "coll==null",
          "description": "the collection is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "maxSize",
      "parameterTypes": [
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "coll"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the collection is null.",
        "guard": {
          "condition": "coll==null",
          "description": "the collection is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "collate",
      "parameterTypes": [
        "java.lang.Iterable",
        "java.lang.Iterable"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException either collection is null.",
        "guard": {
          "condition": "a==null || b==null",
          "description": "either collection is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param a the first collection. a is not null.",
        "guard": {
          "condition": "(a==null) == false",
          "description": "the first collection. a is not null."
        }
      },
      {
        "description": "@param b the second collection. b is not null.",
        "guard": {
          "condition": "(b==null) == false",
          "description": "the second collection. b is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "collate",
      "parameterTypes": [
        "java.lang.Iterable",
        "java.lang.Iterable",
        "boolean"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b",
        "includeDuplicates"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException either collection is null.",
        "guard": {
          "condition": "a==null || b==null",
          "description": "either collection is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param a the first collection. a is not null.",
        "guard": {
          "condition": "(a==null) == false",
          "description": "the first collection. a is not null."
        }
      },
      {
        "description": "@param b the second collection. b is not null.",
        "guard": {
          "condition": "(b==null) == false",
          "description": "the second collection. b is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "collate",
      "parameterTypes": [
        "java.lang.Iterable",
        "java.lang.Iterable",
        "java.util.Comparator"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b",
        "c"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException either collection or the comparator is null.",
        "guard": {
          "condition": "a==null || b==null || c==null",
          "description": "either collection or the comparator is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param a the first collection. a is not null.",
        "guard": {
          "condition": "(a==null) == false",
          "description": "the first collection. a is not null."
        }
      },
      {
        "description": "@param b the second collection. b is not null.",
        "guard": {
          "condition": "(b==null) == false",
          "description": "the second collection. b is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "collate",
      "parameterTypes": [
        "java.lang.Iterable",
        "java.lang.Iterable",
        "java.util.Comparator",
        "boolean"
      ]
    },
    "identifiers": {
      "parameters": [
        "a",
        "b",
        "c",
        "includeDuplicates"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException either collection or the comparator is null.",
        "guard": {
          "condition": "a==null || b==null || c==null",
          "description": "either collection or the comparator is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param a the first collection. a is not null.",
        "guard": {
          "condition": "(a==null) == false",
          "description": "the first collection. a is not null."
        }
      },
      {
        "description": "@param b the second collection. b is not null.",
        "guard": {
          "condition": "(b==null) == false",
          "description": "the second collection. b is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "permutations",
      "parameterTypes": [
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException collection is null.",
        "guard": {
          "condition": "collection==null",
          "description": "collection is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param collection the collection to create permutations for. collection is not null.",
        "guard": {
          "condition": "(collection==null) == false",
          "description": "the collection to create permutations for. collection is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "retainAll",
      "parameterTypes": [
        "java.util.Collection",
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection",
        "retain"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException either parameter is null.",
        "guard": {
          "condition": "collection==null || retain==null",
          "description": "either parameter is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "retainAll",
      "parameterTypes": [
        "java.lang.Iterable",
        "java.lang.Iterable",
        "org.apache.commons.collections4.Equator"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection",
        "retain",
        "equator"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException any of the parameters is null.",
        "guard": {
          "condition": "collection==null || retain==null || equator==null",
          "description": "any of the parameters is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "removeAll",
      "parameterTypes": [
        "java.util.Collection",
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection",
        "remove"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException either parameter is null.",
        "guard": {
          "condition": "collection==null || remove==null",
          "description": "either parameter is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "removeAll",
      "parameterTypes": [
        "java.lang.Iterable",
        "java.lang.Iterable",
        "org.apache.commons.collections4.Equator"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection",
        "remove",
        "equator"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException any of the parameters is null.",
        "guard": {
          "condition": "collection==null || remove==null || equator==null",
          "description": "any of the parameters is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "synchronizedCollection",
      "parameterTypes": [
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the collection is null.",
        "guard": {
          "condition": "collection==null",
          "description": "the collection is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param collection the collection to synchronize. collection is not null.",
        "guard": {
          "condition": "(collection==null) == false",
          "description": "the collection to synchronize. collection is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "unmodifiableCollection",
      "parameterTypes": [
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the collection is null.",
        "guard": {
          "condition": "collection==null",
          "description": "the collection is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param collection the collection to make unmodifiable. collection is not null.",
        "guard": {
          "condition": "(collection==null) == false",
          "description": "the collection to make unmodifiable. collection is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "predicatedCollection",
      "parameterTypes": [
        "java.util.Collection",
        "org.apache.commons.collections4.Predicate"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection",
        "predicate"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the Collection is null.",
        "guard": {
          "condition": "collection==null",
          "description": "the Collection is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param collection the collection to predicate. collection is not null.",
        "guard": {
          "condition": "(collection==null) == false",
          "description": "the collection to predicate. collection is not null."
        }
      },
      {
        "description": "@param predicate the predicate for the collection. predicate is not null.",
        "guard": {
          "condition": "(predicate==null) == false",
          "description": "the predicate for the collection. predicate is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "transformingCollection",
      "parameterTypes": [
        "java.util.Collection",
        "org.apache.commons.collections4.Transformer"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection",
        "transformer"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException the Collection or Transformer is null.",
        "guard": {
          "condition": "collection==null || transformer==null",
          "description": "the Collection or Transformer is null."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param collection the collection to predicate. collection is not null.",
        "guard": {
          "condition": "(collection==null) == false",
          "description": "the collection to predicate. collection is not null."
        }
      },
      {
        "description": "@param transformer the transformer for the collection. transformer is not null.",
        "guard": {
          "condition": "(transformer==null) == false",
          "description": "the transformer for the collection. transformer is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.collections4.CollectionUtils",
      "name": "extractSingleton",
      "parameterTypes": [
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "collection"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "@throws java.lang.NullPointerException collection is null.",
        "guard": {
          "condition": "collection==null",
          "description": "collection is null."
        }
      }
    ],
    "post": [],
    "pre": []
  }
]