[
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "negate",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "a"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==-a",
          "description": "negative of a"
        },
        "description": "negative of a",
        "guard": {
          "condition": "true",
          "description": "negative of a"
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "negate",
      "parameterTypes": [
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "a"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==-a",
          "description": "negative of a"
        },
        "description": "negative of a",
        "guard": {
          "condition": "true",
          "description": "negative of a"
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "negate",
      "parameterTypes": [
        "double"
      ]
    },
    "identifiers": {
      "parameters": [
        "a"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==-a",
          "description": "negative of a"
        },
        "description": "negative of a",
        "guard": {
          "condition": "true",
          "description": "negative of a"
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "bitwiseComplement",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "a"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==~a",
          "description": "the bitwise complement of a"
        },
        "description": "the bitwise complement of a",
        "guard": {
          "condition": "true",
          "description": "the bitwise complement of a"
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "bitwiseComplement",
      "parameterTypes": [
        "double"
      ]
    },
    "identifiers": {
      "parameters": [
        "a"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==~a",
          "description": "the bitwise complement of a"
        },
        "description": "the bitwise complement of a",
        "guard": {
          "condition": "true",
          "description": "the bitwise complement of a"
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "mul",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x*y",
          "description": "x * y."
        },
        "description": "x * y.",
        "guard": {
          "condition": "true",
          "description": "x * y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "mul",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x*y",
          "description": "x * y."
        },
        "description": "x * y.",
        "guard": {
          "condition": "true",
          "description": "x * y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "mul",
      "parameterTypes": [
        "double",
        "double"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x*y",
          "description": "x * y."
        },
        "description": "x * y.",
        "guard": {
          "condition": "true",
          "description": "x * y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "div",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x/y",
          "description": "x / y."
        },
        "description": "x / y.",
        "guard": {
          "condition": "true",
          "description": "x / y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "div",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x/y",
          "description": "x / y."
        },
        "description": "x / y.",
        "guard": {
          "condition": "true",
          "description": "x / y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "div",
      "parameterTypes": [
        "double",
        "double"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x/y",
          "description": "x / y."
        },
        "description": "x / y.",
        "guard": {
          "condition": "true",
          "description": "x / y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "mod",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x%y",
          "description": "x % y."
        },
        "description": "x % y.",
        "guard": {
          "condition": "true",
          "description": "x % y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "mod",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x%y",
          "description": "x % y."
        },
        "description": "x % y.",
        "guard": {
          "condition": "true",
          "description": "x % y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "lshift",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x<<y",
          "description": "x << y."
        },
        "description": "x << y.",
        "guard": {
          "condition": "true",
          "description": "x << y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "lshift",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x<<y",
          "description": "x << y."
        },
        "description": "x << y.",
        "guard": {
          "condition": "true",
          "description": "x << y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "rshiftSigned",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x>>y",
          "description": "x >> y."
        },
        "description": "x >> y.",
        "guard": {
          "condition": "true",
          "description": "x >> y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "rshiftSigned",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x>>y",
          "description": "x >> y."
        },
        "description": "x >> y.",
        "guard": {
          "condition": "true",
          "description": "x >> y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "rshiftUnsigned",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x>>>y",
          "description": "x >>> y."
        },
        "description": "x >>> y.",
        "guard": {
          "condition": "true",
          "description": "x >>> y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "rshiftUnsigned",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x>>>y",
          "description": "x >>> y."
        },
        "description": "x >>> y.",
        "guard": {
          "condition": "true",
          "description": "x >>> y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "bitwiseAnd",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x&y",
          "description": "x & y."
        },
        "description": "x & y.",
        "guard": {
          "condition": "true",
          "description": "x & y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "bitwiseAnd",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x&y",
          "description": "x & y."
        },
        "description": "x & y.",
        "guard": {
          "condition": "true",
          "description": "x & y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "logicalAnd",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "(methodResultID==0||methodResultID==1)",
          "description": "the logical and of x and y; the result is always 0 or 1."
        },
        "description": "the logical and of x and y; the result is always 0 or 1.",
        "guard": {
          "condition": "true",
          "description": "the logical and of x and y; the result is always 0 or 1."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "logicalAnd",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "(methodResultID==0||methodResultID==1)",
          "description": "the logical and of x and y; the result is always 0 or 1."
        },
        "description": "the logical and of x and y; the result is always 0 or 1.",
        "guard": {
          "condition": "true",
          "description": "the logical and of x and y; the result is always 0 or 1."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "bitwiseXor",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x^y",
          "description": "x ^ y."
        },
        "description": "x ^ y.",
        "guard": {
          "condition": "true",
          "description": "x ^ y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "bitwiseXor",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x^y",
          "description": "x ^ y."
        },
        "description": "x ^ y.",
        "guard": {
          "condition": "true",
          "description": "x ^ y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "logicalXor",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "(methodResultID==0||methodResultID==1)",
          "description": "the logical xor of x and y; the result is always 0 or 1."
        },
        "description": "the logical xor of x and y; the result is always 0 or 1.",
        "guard": {
          "condition": "true",
          "description": "the logical xor of x and y; the result is always 0 or 1."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "logicalXor",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "(methodResultID==0||methodResultID==1)",
          "description": "the logical xor of x and y; the result is always 0 or 1."
        },
        "description": "the logical xor of x and y; the result is always 0 or 1.",
        "guard": {
          "condition": "true",
          "description": "the logical xor of x and y; the result is always 0 or 1."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "bitwiseOr",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x|y",
          "description": "x | y."
        },
        "description": "x | y.",
        "guard": {
          "condition": "true",
          "description": "x | y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "bitwiseOr",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x|y",
          "description": "x | y."
        },
        "description": "x | y.",
        "guard": {
          "condition": "true",
          "description": "x | y."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "logicalOr",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "(methodResultID==0||methodResultID==1)",
          "description": "the logical or of x and y; the result is always 0 or 1."
        },
        "description": "the logical or of x and y; the result is always 0 or 1.",
        "guard": {
          "condition": "true",
          "description": "the logical or of x and y; the result is always 0 or 1."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "logicalOr",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "(methodResultID==0||methodResultID==1)",
          "description": "the logical or of x and y; the result is always 0 or 1."
        },
        "description": "the logical or of x and y; the result is always 0 or 1.",
        "guard": {
          "condition": "true",
          "description": "the logical or of x and y; the result is always 0 or 1."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "pow",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "base",
        "expt"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "pow",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "base",
        "expt"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "mod_positive",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x%y",
          "description": "x % y, where the result is constrained to be positive."
        },
        "description": "x % y, where the result is constrained to be positive.",
        "guard": {
          "condition": "true",
          "description": "x % y, where the result is constrained to be positive."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "mod_positive",
      "parameterTypes": [
        "long",
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "x",
        "y"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "methodResultID==x%y",
          "description": "x % y, where the result is constrained to be positive."
        },
        "description": "x % y, where the result is constrained to be positive.",
        "guard": {
          "condition": "true",
          "description": "x % y, where the result is constrained to be positive."
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "plume.MathMDE",
      "name": "missing_numbers",
      "parameterTypes": [
        "[L"
      ]
    },
    "identifiers": {
      "parameters": [
        "nums"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param nums numbers to be excluded; length > 0.",
        "guard": {
          "condition": "nums > 0",
          "description": "nums numbers to be excluded; length > 0."
        }
      }
    ]
  }
]