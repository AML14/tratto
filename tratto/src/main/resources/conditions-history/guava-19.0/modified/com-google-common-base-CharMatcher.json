[
  {
    "operation": {
      "classname": "com.google.common.base.CharMatcher",
      "name": "inRange",
      "parameterTypes": [
        "char",
        "char"
      ]
    },
    "identifiers": {
      "parameters": [
        "startInclusive",
        "endInclusive"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException endInclusive < startInclusive.",
        "guard": {
          "condition": "endInclusive<startInclusive",
          "description": "endInclusive < startInclusive."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "com.google.common.base.CharMatcher",
      "name": "indexIn",
      "parameterTypes": [
        "java.lang.CharSequence",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "sequence",
        "start"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IndexOutOfBoundsException",
        "description": "@throws java.lang.IndexOutOfBoundsException start is negative or greater than sequence.length().",
        "guard": {
          "condition": "start<0 || start>sequence.length()",
          "description": "start is negative or greater than sequence.length()."
        }
      }
    ],
    "post": [
      {
        "property": {
          "condition": "(methodResultID < start) == false || methodResultID == -1",
          "description": "the index of the first matching character, guaranteed to be no less than {@code start}, or {@code -1} if no character matches"
        },
        "description": "the index of the first matching character, guaranteed to be no less than {@code start}, or {@code -1} if no character matches",
        "guard": {
          "condition": "true",
          "description": "the index of the first matching character, guaranteed to be no less than {@code start}, or {@code -1} if no character matches"
        }
      }
    ],
    "pre": [
      {
        "description": "@param start the first index to examine; must be nonnegative and no greater than sequence.length().",
        "guard": {
          "condition": "(start<0) == false && (start>sequence.length()) == false",
          "description": "the first index to examine; must be nonnegative and no greater than sequence.length()."
        }
      }
    ]
  }
]