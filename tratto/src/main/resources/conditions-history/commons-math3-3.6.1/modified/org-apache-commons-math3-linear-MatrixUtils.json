[
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "createRealMatrix",
      "parameterTypes": [
        "[[D"
      ]
    },
    "identifiers": {
      "parameters": [
        "data"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NullArgumentException",
        "description": "@throws org.apache.commons.math3.exception.NullArgumentException either data or data[0] is null.",
        "guard": {
          "condition": "data==null",
          "description": "either data or data[0] is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "createFieldMatrix",
      "parameterTypes": [
        "[[Lorg.apache.commons.math3.FieldElement;"
      ]
    },
    "identifiers": {
      "parameters": [
        "data"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NullArgumentException",
        "description": "@throws org.apache.commons.math3.exception.NullArgumentException either data or data[0] is null.",
        "guard": {
          "condition": "data==null",
          "description": "either data or data[0] is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "createRealIdentityMatrix",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "dimension"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException dimension is not positive.",
        "guard": {
          "condition": "(dimension>0) == false",
          "description": "dimension is not positive."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "createFieldIdentityMatrix",
      "parameterTypes": [
        "org.apache.commons.math3.Field",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "field",
        "dimension"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException dimension is not positive.",
        "guard": {
          "condition": "(dimension>0) == false",
          "description": "dimension is not positive."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "createRealVector",
      "parameterTypes": [
        "[D"
      ]
    },
    "identifiers": {
      "parameters": [
        "data"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NoDataException",
        "description": "@throws org.apache.commons.math3.exception.NoDataException data is empty.",
        "guard": {
          "condition": "data.length==0",
          "description": "data is empty."
        }
      },
      {
        "exception": "org.apache.commons.math3.exception.NullArgumentException",
        "description": "@throws org.apache.commons.math3.exception.NullArgumentException data is null.",
        "guard": {
          "condition": "data==null",
          "description": "data is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "createFieldVector",
      "parameterTypes": [
        "[Lorg.apache.commons.math3.FieldElement;"
      ]
    },
    "identifiers": {
      "parameters": [
        "data"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NoDataException",
        "description": "@throws org.apache.commons.math3.exception.NoDataException data is empty.",
        "guard": {
          "condition": "data.length==0",
          "description": "data is empty."
        }
      },
      {
        "exception": "org.apache.commons.math3.exception.NullArgumentException",
        "description": "@throws org.apache.commons.math3.exception.NullArgumentException data is null.",
        "guard": {
          "condition": "data==null",
          "description": "data is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "createRowRealMatrix",
      "parameterTypes": [
        "[D"
      ]
    },
    "identifiers": {
      "parameters": [
        "rowData"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NoDataException",
        "description": "@throws org.apache.commons.math3.exception.NoDataException rowData is empty.",
        "guard": {
          "condition": "rowData.length==0",
          "description": "rowData is empty."
        }
      },
      {
        "exception": "org.apache.commons.math3.exception.NullArgumentException",
        "description": "@throws org.apache.commons.math3.exception.NullArgumentException rowData is null.",
        "guard": {
          "condition": "rowData==null",
          "description": "rowData is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "createRowFieldMatrix",
      "parameterTypes": [
        "[Lorg.apache.commons.math3.FieldElement;"
      ]
    },
    "identifiers": {
      "parameters": [
        "rowData"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NoDataException",
        "description": "@throws org.apache.commons.math3.exception.NoDataException rowData is empty.",
        "guard": {
          "condition": "rowData.length==0",
          "description": "rowData is empty."
        }
      },
      {
        "exception": "org.apache.commons.math3.exception.NullArgumentException",
        "description": "@throws org.apache.commons.math3.exception.NullArgumentException rowData is null.",
        "guard": {
          "condition": "rowData==null",
          "description": "rowData is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "createColumnRealMatrix",
      "parameterTypes": [
        "[D"
      ]
    },
    "identifiers": {
      "parameters": [
        "columnData"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NoDataException",
        "description": "@throws org.apache.commons.math3.exception.NoDataException columnData is empty.",
        "guard": {
          "condition": "columnData.length==0",
          "description": "columnData is empty."
        }
      },
      {
        "exception": "org.apache.commons.math3.exception.NullArgumentException",
        "description": "@throws org.apache.commons.math3.exception.NullArgumentException columnData is null.",
        "guard": {
          "condition": "columnData==null",
          "description": "columnData is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "createColumnFieldMatrix",
      "parameterTypes": [
        "[Lorg.apache.commons.math3.FieldElement;"
      ]
    },
    "identifiers": {
      "parameters": [
        "columnData"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NoDataException",
        "description": "@throws org.apache.commons.math3.exception.NoDataException data is empty.",
        "guard": {
          "condition": "columnData.length==0",
          "description": "data is empty."
        }
      },
      {
        "exception": "org.apache.commons.math3.exception.NullArgumentException",
        "description": "@throws org.apache.commons.math3.exception.NullArgumentException columnData is null.",
        "guard": {
          "condition": "columnData==null",
          "description": "columnData is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "checkSymmetric",
      "parameterTypes": [
        "org.apache.commons.math3.linear.RealMatrix",
        "double"
      ]
    },
    "identifiers": {
      "parameters": [
        "matrix",
        "eps"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.linear.NonSquareMatrixException",
        "description": "@throws org.apache.commons.math3.linear.NonSquareMatrixException the matrix is not square.",
        "guard": {
          "condition": "(((matrix==null)==false) && (matrix.isSquare())) == false",
          "description": "the matrix is not square."
        }
      },
      {
        "exception": "org.apache.commons.math3.linear.NonSymmetricMatrixException",
        "description": "@throws org.apache.commons.math3.linear.NonSymmetricMatrixException the matrix is not symmetric.",
        "guard": {
          "condition": "(MatrixUtils.isSymmetric(matrix,eps)) == false",
          "description": "the matrix is not symmetric."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "checkSubMatrixIndex",
      "parameterTypes": [
        "org.apache.commons.math3.linear.AnyMatrix",
        "int",
        "int",
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "m",
        "startRow",
        "endRow",
        "startColumn",
        "endColumn"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooSmallException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooSmallException endRow < startRow or endColumn < startColumn.",
        "guard": {
          "condition": "endRow<startRow || endColumn<startColumn",
          "description": "endRow < startRow or endColumn < startColumn."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "checkSubMatrixIndex",
      "parameterTypes": [
        "org.apache.commons.math3.linear.AnyMatrix",
        "[I",
        "[I"
      ]
    },
    "identifiers": {
      "parameters": [
        "m",
        "selectedRows",
        "selectedColumns"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NullArgumentException",
        "description": "@throws org.apache.commons.math3.exception.NullArgumentException selectedRows or selectedColumns are null.",
        "guard": {
          "condition": "selectedRows==null || selectedColumns==null",
          "description": "selectedRows or selectedColumns are null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "solveLowerTriangularSystem",
      "parameterTypes": [
        "org.apache.commons.math3.linear.RealMatrix",
        "org.apache.commons.math3.linear.RealVector"
      ]
    },
    "identifiers": {
      "parameters": [
        "rm",
        "b"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.linear.NonSquareMatrixException",
        "description": "@throws org.apache.commons.math3.linear.NonSquareMatrixException the matrix rm is not square.",
        "guard": {
          "condition": "(((rm==null)==false) && (rm.isSquare())) == false",
          "description": "the matrix rm is not square."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "solveUpperTriangularSystem",
      "parameterTypes": [
        "org.apache.commons.math3.linear.RealMatrix",
        "org.apache.commons.math3.linear.RealVector"
      ]
    },
    "identifiers": {
      "parameters": [
        "rm",
        "b"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.linear.NonSquareMatrixException",
        "description": "@throws org.apache.commons.math3.linear.NonSquareMatrixException the matrix rm is not square.",
        "guard": {
          "condition": "(((rm==null)==false) && (rm.isSquare())) == false",
          "description": "the matrix rm is not square."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "blockInverse",
      "parameterTypes": [
        "org.apache.commons.math3.linear.RealMatrix",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "m",
        "splitIndex"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.linear.NonSquareMatrixException",
        "description": "@throws org.apache.commons.math3.linear.NonSquareMatrixException m is not square.",
        "guard": {
          "condition": "(((m==null)==false) && (m.isSquare())) == false",
          "description": "m is not square."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "inverse",
      "parameterTypes": [
        "org.apache.commons.math3.linear.RealMatrix"
      ]
    },
    "identifiers": {
      "parameters": [
        "matrix"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NullArgumentException",
        "description": "@throws org.apache.commons.math3.exception.NullArgumentException matrix is null.",
        "guard": {
          "condition": "matrix==null",
          "description": "matrix is null."
        }
      },
      {
        "exception": "org.apache.commons.math3.linear.NonSquareMatrixException",
        "description": "@throws org.apache.commons.math3.linear.NonSquareMatrixException matrix is not square.",
        "guard": {
          "condition": "(((matrix==null)==false) && (matrix.isSquare())) == false",
          "description": "matrix is not square."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.MatrixUtils",
      "name": "inverse",
      "parameterTypes": [
        "org.apache.commons.math3.linear.RealMatrix",
        "double"
      ]
    },
    "identifiers": {
      "parameters": [
        "matrix",
        "threshold"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NullArgumentException",
        "description": "@throws org.apache.commons.math3.exception.NullArgumentException matrix is null.",
        "guard": {
          "condition": "matrix==null",
          "description": "matrix is null."
        }
      },
      {
        "exception": "org.apache.commons.math3.linear.NonSquareMatrixException",
        "description": "@throws org.apache.commons.math3.linear.NonSquareMatrixException matrix is not square.",
        "guard": {
          "condition": "(((matrix==null)==false) && (matrix.isSquare())) == false",
          "description": "matrix is not square."
        }
      }
    ],
    "post": [],
    "pre": []
  }
]