[
  {
    "operation": {
      "classname": "org.apache.commons.rng.UniformRandomProvider",
      "name": "nextBytes",
      "parameterTypes": [
        "[B"
      ]
    },
    "identifiers": {
      "parameters": [
        "bytes"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "@param bytes Byte array in which to put the random bytes. . bytes is not null.",
        "guard": {
          "condition": "(bytes==null) == false",
          "description": "Byte array in which to put the random bytes. . bytes is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.rng.UniformRandomProvider",
      "name": "nextBytes",
      "parameterTypes": [
        "[B",
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "bytes",
        "start",
        "len"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IndexOutOfBoundsException",
        "description": "@throws java.lang.IndexOutOfBoundsException start < 0 or start >= bytes.length.",
        "guard": {
          "condition": "start<0 || start>=bytes.length",
          "description": "start < 0 or start >= bytes.length."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param bytes Array in which to put the generated bytes. . bytes is not null.",
        "guard": {
          "condition": "(bytes==null) == false",
          "description": "Array in which to put the generated bytes. . bytes is not null."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.rng.UniformRandomProvider",
      "name": "nextInt",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "n"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException n is negative.",
        "guard": {
          "condition": "n<0",
          "description": "n is negative."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param n Bound on the random number to be returned. . n is positive.",
        "guard": {
          "condition": "n>0",
          "description": "Bound on the random number to be returned. . n is positive."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "org.apache.commons.rng.UniformRandomProvider",
      "name": "nextLong",
      "parameterTypes": [
        "long"
      ]
    },
    "identifiers": {
      "parameters": [
        "n"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "@throws java.lang.IllegalArgumentException n is negative.",
        "guard": {
          "condition": "n<0",
          "description": "n is negative."
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "@param n Bound on the random number to be returned. . n is positive.",
        "guard": {
          "condition": "n>0",
          "description": "Bound on the random number to be returned. . n is positive."
        }
      }
    ]
  }
]