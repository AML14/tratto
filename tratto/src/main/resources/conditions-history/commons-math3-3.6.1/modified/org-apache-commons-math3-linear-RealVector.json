[
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.RealVector",
      "name": "getSubVector",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "index",
        "n"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NotPositiveException",
        "description": "@throws org.apache.commons.math3.exception.NotPositiveException the number of elements is not positive.",
        "guard": {
          "condition": "(n>0) == false",
          "description": "the number of elements is not positive."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.RealVector",
      "name": "checkIndices",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "start",
        "end"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooSmallException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooSmallException end < start.",
        "guard": {
          "condition": "end<start",
          "description": "end < start."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.RealVector",
      "name": "unitVector",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.MathArithmeticException",
        "description": "@throws org.apache.commons.math3.exception.MathArithmeticException the norm is zero.",
        "guard": {
          "condition": "receiverObjectID.getNorm()==0",
          "description": "the norm is zero."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.RealVector",
      "name": "unitize",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.MathArithmeticException",
        "description": "@throws org.apache.commons.math3.exception.MathArithmeticException the norm is zero.",
        "guard": {
          "condition": "receiverObjectID.getNorm()==0",
          "description": "the norm is zero."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.RealVector",
      "name": "walkInDefaultOrder",
      "parameterTypes": [
        "org.apache.commons.math3.linear.RealVectorPreservingVisitor",
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "visitor",
        "start",
        "end"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooSmallException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooSmallException end < start.",
        "guard": {
          "condition": "end<start",
          "description": "end < start."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.RealVector",
      "name": "walkInOptimizedOrder",
      "parameterTypes": [
        "org.apache.commons.math3.linear.RealVectorPreservingVisitor",
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "visitor",
        "start",
        "end"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooSmallException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooSmallException end < start.",
        "guard": {
          "condition": "end<start",
          "description": "end < start."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.RealVector",
      "name": "walkInDefaultOrder",
      "parameterTypes": [
        "org.apache.commons.math3.linear.RealVectorChangingVisitor",
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "visitor",
        "start",
        "end"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooSmallException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooSmallException end < start.",
        "guard": {
          "condition": "end<start",
          "description": "end < start."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.RealVector",
      "name": "walkInOptimizedOrder",
      "parameterTypes": [
        "org.apache.commons.math3.linear.RealVectorChangingVisitor",
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "visitor",
        "start",
        "end"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooSmallException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooSmallException end < start.",
        "guard": {
          "condition": "end<start",
          "description": "end < start."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.RealVector",
      "name": "cosine",
      "parameterTypes": [
        "org.apache.commons.math3.linear.RealVector"
      ]
    },
    "identifiers": {
      "parameters": [
        "v"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.MathArithmeticException",
        "description": "@throws org.apache.commons.math3.exception.MathArithmeticException if this or v is the null vector.",
        "guard": {
          "condition": "receiverObjectID.getNorm()==0 ||v.getNorm()==0",
          "description": "if this or v is the null vector."
        }
      },
      {
        "exception": "org.apache.commons.math3.exception.DimensionMismatchException",
        "description": "@throws org.apache.commons.math3.exception.DimensionMismatchException if the dimensions of this and v do not match.",
        "guard": {
          "condition": "receiverObjectID.getDimension() != v.getDimension()",
          "description": "if the dimensions of this and v do not match."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.RealVector",
      "name": "ebeDivide",
      "parameterTypes": [
        "org.apache.commons.math3.linear.RealVector"
      ]
    },
    "identifiers": {
      "parameters": [
        "v"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.DimensionMismatchException",
        "description": "@throws org.apache.commons.math3.exception.DimensionMismatchException if v is not the same size as this vector.",
        "guard": {
          "condition": "v.getDimension() != receiverObjectID.getDimension()",
          "description": "if the dimensions of this and v do not match."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.RealVector",
      "name": "ebeMultiply",
      "parameterTypes": [
        "org.apache.commons.math3.linear.RealVector"
      ]
    },
    "identifiers": {
      "parameters": [
        "v"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.DimensionMismatchException",
        "description": "@throws org.apache.commons.math3.exception.DimensionMismatchException if v is not the same size as this vector.",
        "guard": {
          "condition": "v.getDimension() != receiverObjectID.getDimension()",
          "description": "if the dimensions of this and v do not match."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.linear.RealVector",
      "name": "getDistance",
      "parameterTypes": [
        "org.apache.commons.math3.linear.RealVector"
      ]
    },
    "identifiers": {
      "parameters": [
        "v"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.DimensionMismatchException",
        "description": "@throws org.apache.commons.math3.exception.DimensionMismatchException if v is not the same size as this vector.",
        "guard": {
          "condition": "v.getDimension() != receiverObjectID.getDimension()",
          "description": "if v is not the same size as this vector."
        }
      }
    ],
    "post": [],
    "pre": []
  }
]