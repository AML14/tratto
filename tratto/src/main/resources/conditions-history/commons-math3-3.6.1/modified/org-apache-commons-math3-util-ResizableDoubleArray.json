[
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "org.apache.commons.math3.util.ResizableDoubleArray",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "initialCapacity"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.MathIllegalArgumentException",
        "description": "@throws org.apache.commons.math3.exception.MathIllegalArgumentException initialCapacity <= 0.",
        "guard": {
          "condition": "initialCapacity<=0",
          "description": "initialCapacity <= 0."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "org.apache.commons.math3.util.ResizableDoubleArray",
      "parameterTypes": [
        "org.apache.commons.math3.util.ResizableDoubleArray"
      ]
    },
    "identifiers": {
      "parameters": [
        "original"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NullArgumentException",
        "description": "@throws org.apache.commons.math3.exception.NullArgumentException original is null.",
        "guard": {
          "condition": "original==null",
          "description": "original is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "checkContractExpand",
      "parameterTypes": [
        "double",
        "double"
      ]
    },
    "identifiers": {
      "parameters": [
        "contraction",
        "expansion"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooSmallException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooSmallException contraction < expansion.",
        "guard": {
          "condition": "contraction<expansion",
          "description": "contraction < expansion."
        }
      },
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooSmallException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooSmallException contraction <= 1.",
        "guard": {
          "condition": "contraction<=1",
          "description": "contraction <= 1."
        }
      },
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooSmallException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooSmallException expansion <= 1 .",
        "guard": {
          "condition": "expansion<=1",
          "description": "expansion <= 1 ."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "discardFrontElements",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "i"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.MathIllegalArgumentException",
        "description": "@throws org.apache.commons.math3.exception.MathIllegalArgumentException i is greater than numElements.",
        "guard": {
          "condition": "i>receiverObjectID.getNumElements()",
          "description": "i is greater than numElements."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "discardMostRecentElements",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "i"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.MathIllegalArgumentException",
        "description": "@throws org.apache.commons.math3.exception.MathIllegalArgumentException i is greater than numElements.",
        "guard": {
          "condition": "i>receiverObjectID.getNumElements()",
          "description": "i is greater than numElements."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "getElement",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "index"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.ArrayIndexOutOfBoundsException",
        "description": "@throws java.lang.ArrayIndexOutOfBoundsException index is less than zero or is greater than getNumElements() - 1.",
        "guard": {
          "condition": "index<0",
          "description": "index is less than zero or is greater than getNumElements() - 1."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "setElement",
      "parameterTypes": [
        "int",
        "double"
      ]
    },
    "identifiers": {
      "parameters": [
        "index",
        "value"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "java.lang.ArrayIndexOutOfBoundsException",
        "description": "@throws java.lang.ArrayIndexOutOfBoundsException index < 0.",
        "guard": {
          "condition": "index<0",
          "description": "index < 0."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "setExpansionFactor",
      "parameterTypes": [
        "float"
      ]
    },
    "identifiers": {
      "parameters": [
        "expansionFactor"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.MathIllegalArgumentException",
        "description": "@throws org.apache.commons.math3.exception.MathIllegalArgumentException expansionFactor is <= 1 or greater than contractionFactor.",
        "guard": {
          "condition": "expansionFactor<=1",
          "description": "expansionFactor is <= 1 or greater than contractionFactor."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "setInitialCapacity",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "initialCapacity"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.MathIllegalArgumentException",
        "description": "@throws org.apache.commons.math3.exception.MathIllegalArgumentException initialCapacity is not positive.",
        "guard": {
          "condition": "(initialCapacity>0) == false",
          "description": "initialCapacity is not positive."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "setNumElements",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "i"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.MathIllegalArgumentException",
        "description": "@throws org.apache.commons.math3.exception.MathIllegalArgumentException i is negative.",
        "guard": {
          "condition": "i<0",
          "description": "i is negative."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "copy",
      "parameterTypes": [
        "org.apache.commons.math3.util.ResizableDoubleArray",
        "org.apache.commons.math3.util.ResizableDoubleArray"
      ]
    },
    "identifiers": {
      "parameters": [
        "source",
        "dest"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NullArgumentException",
        "description": "@throws org.apache.commons.math3.exception.NullArgumentException either source or dest is null.",
        "guard": {
          "condition": "source==null || dest==null",
          "description": "either source or dest is null."
        }
      }
    ],
    "post": [],
    "pre": []
  }
]