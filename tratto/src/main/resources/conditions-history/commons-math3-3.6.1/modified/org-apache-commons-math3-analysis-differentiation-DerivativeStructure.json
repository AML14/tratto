[
  {
    "operation": {
      "classname": "org.apache.commons.math3.analysis.differentiation.DerivativeStructure",
      "name": "org.apache.commons.math3.analysis.differentiation.DerivativeStructure",
      "parameterTypes": [
        "int",
        "int",
        "int",
        "double"
      ]
    },
    "identifiers": {
      "parameters": [
        "parameters",
        "order",
        "index",
        "value"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.NumberIsTooLargeException",
        "description": "@throws org.apache.commons.math3.exception.NumberIsTooLargeException index >= parameters.",
        "guard": {
          "condition": "index>=parameters",
          "description": "index >= parameters."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "org.apache.commons.math3.analysis.differentiation.DerivativeStructure",
      "name": "compose",
      "parameterTypes": [
        "f"
      ]
    },
    "identifiers": {
      "parameters": [
        "[D"
      ],
      "receiverName": "receiverObjectID",
      "returnName": "methodResultID"
    },
    "throws": [
      {
        "exception": "org.apache.commons.math3.exception.DimensionMismatchException",
        "description": "@throws org.apache.commons.math3.exception.DimensionMismatchException the number of derivatives in the array is not equal to getOrder() order + 1.",
        "guard": {
          "condition": "f.length != receiverObjectID.getOrder() + 1",
          "description": "the number of derivatives in the array is not equal to getOrder() order + 1."
        }
      }
    ],
    "post": [],
    "pre": []
  }
]