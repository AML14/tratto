[
    {
        "projectName": "hotswap-agent",
        "githubLink": "https://github.com/HotswapProjects/HotswapAgent",
        "commit": "last",
        "rootPathList": [
            "hotswap-agent"
        ],
        "srcPathList": [
            "hotswap-agent-core",
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "org/hotswap/agent/javassist/tools/reflect/CannotCreateException",
            "org/hotswap/agent/javassist/compiler/ast/BinExpr",
            "org/hotswap/agent/javassist/compiler/ast/ASTree",
            "org/hotswap/agent/javassist/bytecode/annotation/CharMemberValue",
            "org/hotswap/agent/annotation/OnClassLoadEvent",
            "org/hotswap/agent/javassist/bytecode/ExceptionsAttribute",
            "org/hotswap/agent/versions/ArtifactVersion",
            "org/hotswap/agent/versions/DeploymentInfo",
            "org/hotswap/agent/javassist/CtMethod",
            "org/hotswap/agent/util/spring/collections/ConcurrentReferenceHashMap"
        ]
    },
    {
        "projectName": "evosuite",
        "githubLink": "https://github.com/EvoSuite/evosuite.git",
        "commit": "last",
        "rootPathList": [
            "evosuite"
        ],
        "srcPathList": [
            "runtime",
            "src",
            "main",
            "master"
        ],
        "fullyQualifiedClassNameList": [
            "org.evosuite.runtime.mock.security.MockSecureRandom",
            "org.evosuite.runtime.mock.io.MockFile"
        ]
    },
    {
        "projectName": "facebook-java-business-sdk",
        "githubLink": "https://github.com/facebook/facebook-java-business-sdk.git",
        "commit": "last",
        "rootPathList": [
            "facebook-java-business-sdk"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "com.facebook.ads.sdk.serverside.CAPIGatewayEndpoint",
            "com.facebook.ads.sdk.CustomAudienceStatus",
            "com.facebook.ads.sdk.TargetingGeoLocationLocationExpansion",
            "com.facebook.ads.sdk.TargetingGeoLocationMarket",
            "com.facebook.ads.sdk.IGShoppingReviewStatusOnsiteEligibility",
            "com.facebook.ads.sdk.ReachFrequencyEstimatesCurve",
            "com.facebook.ads.sdk.DestinationCatalogSettings",
            "com.facebook.ads.sdk.CRMAddress",
            "com.facebook.ads.sdk.Link",
            "com.facebook.ads.sdk.Photo"
        ]
    },
    {
        "projectName": "woodstox",
        "githubLink": "https://github.com/FasterXML/woodstox.git",
        "commit": "last",
        "rootPathList": [
            "woodstox"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "com.ctc.wstx.osgi.OutputFactoryProviderImpl",
            "com.ctc.wstx.dtd.DTDCdataAttr",
            "com.ctc.wstx.compat.QNameCreator",
            "com.ctc.wstx.dtd.ConcatModel",
            "com.ctc.wstx.io.AsciiReader",
            "com.ctc.wstx.evt.SimpleStartElement",
            "com.ctc.wstx.cfg.InputConfigFlags",
            "com.ctc.wstx.sw.OutputElementBase",
            "com.ctc.wstx.util.WordResolver",
            "com.ctc.wstx.sr.AttributeCollector"
        ]
    },
    {
        "projectName": "https://github.com/floodlight/floodlight.git",
        "githubLink": "https://github.com/floodlight/floodlight.git",
        "commit": "last",
        "rootPathList": [
            "https://github.com/floodlight/floodlight.git"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "org.sdnplatform.sync.error.SyncRuntimeException",
            "net.floodlightcontroller.core.module.FloodlightModuleException",
            "net.floodlightcontroller.core.web.SystemUptimeResource",
            "net.floodlightcontroller.linkdiscovery.web.AutoPortFast",
            "net.floodlightcontroller.devicemanager.IDeviceListener",
            "net.floodlightcontroller.packetstreamer.PacketStreamerServer",
            "net.floodlightcontroller.packetstreamer.PacketStreamerClient",
            "net.floodlightcontroller.hasupport.topology.TopoFilterQueue",
            "net.floodlightcontroller.packet.UDP net.floodlightcontroller.learningswitch.LearningSwitch"
        ]
    },
    {
        "projectName": "esapi-java-legacy",
        "githubLink": "https://github.com/ESAPI/esapi-java-legacy.git",
        "commit": "last",
        "rootPathList": [
            "esapi-java-legacy"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "org.owasp.esapi.tags.EncodeForJavaScriptTag",
            "org.owasp.esapi.reference.accesscontrol.policyloader.PolicyParameters",
            "org.owasp.esapi.waf.rules.AddHTTPOnlyFlagRule",
            "org.owasp.esapi.waf.rules.GeneralAttackSignatureRule",
            "org.owasp.esapi.waf.rules.EnforceHTTPSRule",
            "org.owasp.esapi.waf.rules.DetectOutboundContentRule",
            "org.owasp.esapi.waf.configuration.AppGuardianConfiguration",
            "org.owasp.esapi.codecs.CSSCodec",
            "org.owasp.esapi.Encryptor",
            "org.owasp.esapi.HTTPUtilities"
        ]
    },
    {
        "projectName": "datanucleus-core",
        "githubLink": "https://github.com/datanucleus/datanucleus-core.git",
        "commit": "last",
        "rootPathList": [
            "datanucleus-core"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "org.datanucleus.store.query.cache.StrongQueryResultsCache",
            "org.datanucleus.transaction.jta.OC4JTransactionManagerLocator",
            "org.datanucleus.store.types.converters.ColorComponentsConverter",
            "org.datanucleus.identity.SCOID",
            "org.datanucleus.identity.IntId",
            "org.datanucleus.enhancer.methods.LoadClass",
            "org.datanucleus.enhancer.methods.ReplaceStateManager",
            "org.datanucleus.util.Localiser",
            "org.datanucleus.store.types.wrappers.HashMap",
            "org.datanucleus.plugin.PluginParser"
        ]
    },
    {
        "projectName": "Rubidium",
        "githubLink": "https://github.com/Asek3/Rubidium.git",
        "commit": "last",
        "rootPathList": [
            "Rubidium"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "me.jellysquid.mods.sodium.client.util.frustum.FrustumAdapter",
            "me.jellysquid.mods.sodium.mixin.features.entity.fast_render.MixinCuboid",
            "me.jellysquid.mods.sodium.client.gl.buffer.GlBufferMapping",
            "me.jellysquid.mods.sodium.client.model.vertex.formats.glyph.writer.GlyphVertexBufferWriterNio",
            "me.jellysquid.mods.sodium.client.render.chunk.format.sfp.ModelVertexBufferWriterUnsafe",
            "me.jellysquid.mods.sodium.client.gl.shader.ShaderParser",
            "me.jellysquid.mods.sodium.mixin.features.entity.fast_render.MixinModelPart",
            "me.jellysquid.mods.sodium.client.gui.options.OptionImpl",
            "me.jellysquid.mods.sodium.client.gl.arena.AsyncBufferArena",
            "repack.joml.Quaternionfc"
        ]
    },
    {
        "projectName": "asterisk-java",
        "githubLink": "https://github.com/asterisk-java/asterisk-java.git",
        "commit": "last",
        "rootPathList": [
            "asterisk-java"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "org.asteriskjava.manager.event.BridgeDestroyEvent",
            "org.asteriskjava.pbx.CallerID",
            "org.asteriskjava.live.AsteriskAgent",
            "org.asteriskjava.manager.ResponseEvents",
            "org.asteriskjava.manager.event.ReceiveFaxEvent",
            "org.asteriskjava.pbx.asterisk.wrap.events.RenameEvent",
            "org.asteriskjava.fastagi.command.DatabasePutCommand",
            "org.asteriskjava.manager.event.ChannelUpdateEvent",
            "org.asteriskjava.fastagi.command.GetDataCommand",
            "org.asteriskjava.manager.event.DongleDeviceEntryEvent"
        ]
    },
    {
        "projectName": "checkstyle",
        "githubLink": "https://github.com/checkstyle/checkstyle.git",
        "commit": "last",
        "rootPathList": [
            "checkstyle"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "com.puppycrawl.tools.checkstyle.Definitions",
            "com.puppycrawl.tools.checkstyle.checks.naming.ClassTypeParameterNameCheck",
            "com.puppycrawl.tools.checkstyle.checks.java.doc.InvalidJavadocPositionCheck",
            "com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck",
            "com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck",
            "com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck",
            "com.puppycrawl.tools.checkstyle.checks.java.doc.SingleLineJavadocCheck",
            "com.puppycrawl.tools.checkstyle.checks.java.doc.TagParser",
            "com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader",
            "com.puppycrawl.tools.checkstyle.ant.CheckstyleAntTask"
        ]
    },
    {
        "projectName": "classgraph",
        "githubLink": "https://github.com/classgraph/classgraph.git",
        "commit": "last",
        "rootPathList": [
            "classgraph"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "nonapi.io.github.classgraph.json.Id",
            "nonapi.io.github.classgraph.classloaderhandler.ParentLastDelegationOrderTestClassLoaderHandler",
            "io.github.classgraph.PackageInfoList",
            "nonapi.io.github.classgraph.utils.ProxyingInputStream",
            "nonapi.io.github.classgraph.fastzipfilereader.ZipFileSlice",
            "io.github.classgraph.AnnotationParameterValue",
            "nonapi.io.github.classgraph.concurrency.WorkQueue",
            "nonapi.io.github.classgraph.json.JSONUtils",
            "io.github.classgraph.ClasspathElementModule",
            "nonapi.io.github.classgraph.fastzipfilereader.LogicalZipFile"
        ]
    },
    {
        "projectName": "cloudsimplus",
        "githubLink": "https://github.com/cloudsimplus/cloudsimplus.git",
        "commit": "last",
        "rootPathList": [
            "cloudsimplus"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "org.cloudsimplus.selectionpolicies.VmSelectionPolicyMinimumUtilization",
            "org.cloudsimplus.builders.BrokerBuilderInterface",
            "org.cloudsimplus.builders.tables.MarkdownTable",
            "org.cloudsimplus.listeners.EventListener",
            "org.cloudsimplus.allocationpolicies.VmAllocationPolicyRandom",
            "org.cloudsimplus.vms.VmCost",
            "org.cloudsimplus.brokers.VmCreation",
            "org.cloudsimplus.cloudlets.network.NetworkCloudlet",
            "org.cloudsimplus.schedulers.cloudlet.network.CloudletTaskSchedulerSimple",
            "org.cloudsimplus.traces.google.GoogleTaskUsageTraceReader"
        ]
    },
    {
        "projectName": "java-language-server",
        "githubLink": "https://github.com/georgewfraser/java-language-server.git",
        "commit": "last",
        "rootPathList": [
            "java-language-server"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "orgcs.lsp.DidChangeWatchedFilesParams",
            "orgcs.debug.proto.NextArguments",
            "orgcs.debug.proto.Request",
            "orgcs.debug.proto.TerminateThreadsRequest",
            "orgcs.lsp.FoldingRangeKind",
            "orgcs.lsp.SignatureHelp",
            "orgcs.rewrite.ReplaceConstructorWithFactoryMethod",
            "orgcs.debug.proto.OutputEventBody",
            "orgcs.debug.proto.Variable",
            "orgcs.hover.HoverProvider"
        ]
    },
    {
        "projectName": "Digital",
        "githubLink": "https://github.com/hneemann/Digital.git",
        "commit": "last",
        "rootPathList": [
            "Digital"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "de.neemann.digital.draw.library.InvalidNodeException",
            "de.neemann.digital.gui.components.modification.ModifyMeasurementOrdering",
            "de.neemann.digital.core.memory.importer.ByteArrayFromValueArray",
            "de.neemann.digital.builder.jedec.FuseMap",
            "de.neemann.digital.core.wiring.Break",
            "de.neemann.digital.builder.Gal16v8.BuilderCollectorGAL",
            "de.neemann.digital.draw.graphics.TransformMatrix",
            "de.neemann.digital.core.extern.External",
            "de.neemann.digital.hdl.hgs.function.JavaClass",
            "de.neemann.digital.hdl.hgs.Tokenizer"
        ]
    },
    {
        "projectName": "github-api",
        "githubLink": "https://github.com/hub4j/github-api.git",
        "commit": "last",
        "rootPathList": [
            "github-api"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "org.kohsuke.github.GHCommitFilesPage",
            "org.kohsuke.github.GHOrgHook",
            "org.kohsuke.github.GHMarketplacePendingChange",
            "org.kohsuke.github.GHGistBuilder",
            "org.kohsuke.github.GHProjectsV2Item",
            "org.kohsuke.github.GHDeploymentStatus",
            "org.kohsuke.github.GHCreateRepositoryBuilder",
            "org.kohsuke.github.GHEventInfo",
            "org.kohsuke.github.GHNotificationStream",
            "org.kohsuke.github.GitHubBuilder"
        ]
    },
    {
        "projectName": "ical4j",
        "githubLink": "https://github.com/ical4j/ical4j.git",
        "commit": "last",
        "rootPathList": [
            "ical4j"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "net.fortuna.ical4j.transform.rfc5545.DatePropertyRule",
            "net.fortuna.ical4j.data.HCalendarParserFactory",
            "net.fortuna.ical4j.filter.expression.TemporalExpression",
            "net.fortuna.ical4j.model.property.Proximity",
            "net.fortuna.ical4j.model.RecurrenceSupport",
            "net.fortuna.ical4j.model.property.ExtendedAddress",
            "net.fortuna.ical4j.util.Configurator",
            "net.fortuna.ical4j.model.property.Action",
            "net.fortuna.ical4j.agent.UserAgent",
            "net.fortuna.ical4j.model.component.Observance"
        ]
    },
    {
        "projectName": "igv",
        "githubLink": "https://github.com/igvteam/igv.git",
        "commit": "last",
        "rootPathList": [
            "igv"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "org.broad.igv.ui.color.ColorTable",
            "org.broad.igv.maf.MultipleAlignmentDialog",
            "org.broad.igv.sam.AlignmentCounts",
            "org.broad.igv.sam.reader.SolexaQualityConverter",
            "org.broad.igv.ui.panel.IGVPanel",
            "org.broad.igv.track.BlatTrack",
            "org.broad.igv.tdf.Accumulator",
            "org.broad.igv.feature.tribble.UCSCGeneTableCodec",
            "org.broad.igv.feature.genome.TwoBitReader",
            "org.broad.igv.prefs.PreferencesEditor"
        ]
    },
    {
        "projectName": "Flywheel",
        "githubLink": "https://github.com/Jozufozu/Flywheel.git",
        "commit": "last",
        "rootPathList": [
            "Flywheel"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "com.jozufozu.flywheel.light.TickingLightListener",
            "com.jozufozu.flywheel.api.FlywheelWorld",
            "com.jozufozu.flywheel.backend.instancing.ratelimit.DistanceUpdateLimiter",
            "com.jozufozu.flywheel.backend.gl.GlObject",
            "com.jozufozu.flywheel.mixin.instancemanage.ChunkRebuildHooksMixin",
            "com.jozufozu.flywheel.backend.instancing.batching.BatchedMaterial",
            "com.jozufozu.flywheel.mixin.light.NetworkLightUpdateMixin",
            "com.jozufozu.flywheel.core.compile.OneShotTemplateData",
            "com.jozufozu.flywheel.core.compile.FragmentCompiler",
            "com.jozufozu.flywheel.backend.instancing.instancing.InstancedMaterialGroup"
        ]
    },
    {
        "projectName": "Pixelitor",
        "githubLink": "pixelitor.tools.transform.Transformable pixelitor.tools.transform.history.TransformBoxChangedEdit pixelitor.tools.toolhandlers.ToolHandler pixelitor.io.JpegOutput pixelitor.filters.jhlabsproxies.JHCaustics pixelitor.tools.pen.AnchorPointType pixelitor.gui.utils.Screens pixelitor.tools.pen.PathEditor com.jhlabs.image.PixelUtils pixelitor.gui.PreferencesPanel",
        "commit": "last",
        "rootPathList": [
            "Pixelitor"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "pixelitor.tools.transform.Transformable",
            "pixelitor.tools.transform.history.TransformBoxChangedEdit",
            "pixelitor.tools.toolhandlers.ToolHandler",
            "pixelitor.io.JpegOutput",
            "pixelitor.filters.jhlabsproxies.JHCaustics",
            "pixelitor.tools.pen.AnchorPointType",
            "pixelitor.gui.utils.Screens",
            "pixelitor.tools.pen.PathEditor",
            "com.jhlabs.image.PixelUtils",
            "pixelitor.gui.PreferencesPanel"
        ]
    },
    {
        "projectName": "JOML",
        "githubLink": "https://github.com/JOML-CI/JOML.git",
        "commit": "last",
        "rootPathList": [
            "JOML"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "org.joml.sampling.Math",
            "org.joml.FrustumRayBuilder",
            "org.joml.sampling.PoissonSampling",
            "org.joml.QuaterniondInterpolator",
            "org.joml.Math",
            "org.joml.Vector4i",
            "org.joml.Matrix3x2fc",
            "org.joml.Quaterniondc",
            "org.joml.Quaternionf",
            "org.joml.Matrix4dc"
        ]
    },
    {
        "projectName": "joda-time",
        "githubLink": "https://github.com/JodaOrg/joda-time.git",
        "commit": "last",
        "rootPathList": [
            "joda-time"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "org.joda.time.convert.IntervalConverter",
            "org.joda.time.field.LenientDateTimeField",
            "org.joda.time.format.InternalPrinterDateTimePrinter",
            "org.joda.time.chrono.LenientChronology",
            "org.joda.time.format.ISOPeriodFormat",
            "org.joda.time.tz.ZoneInfoProvider",
            "org.joda.time.base.BaseDateTime",
            "org.joda.time.Weeks",
            "org.joda.time.PeriodType",
            "org.joda.time.LocalTime"
        ]
    },
    {
        "projectName": "ice4j",
        "githubLink": "https://github.com/jitsi/ice4j.git",
        "commit": "last",
        "rootPathList": [
            "ice4j"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "org.ice4j.socket.SocketClosedException",
            "org.ice4j.socket.DatagramSocketFactory",
            "org.ice4j.ice.PeerReflexiveCandidate",
            "org.ice4j.attribute.XorOnlyAttribute",
            "org.ice4j.ice.ServerReflexiveCandidate",
            "org.ice4j.ice.CandidateType",
            "org.ice4j.ice.GoogleRelayedCandidate",
            "org.ice4j.attribute.AddressAttribute",
            "org.ice4j.attribute.ErrorCodeAttribute",
            "org.ice4j.ice.Candidate"
        ]
    },
    {
        "projectName": "javassist",
        "githubLink": "https://github.com/jboss-javassist/javassist.git",
        "commit": "last",
        "rootPathList": [
            "javassist"
        ],
        "srcPathList": [
            "src",
            "main"
        ],
        "fullyQualifiedClassNameList": [
            "javassist.tools.rmi.RemoteException",
            "javassist.scopedpool.ScopedClassPoolFactoryImpl",
            "javassist.bytecode.LongVector",
            "javassist.bytecode.annotation.ShortMemberValue",
            "javassist.ByteArrayClassPath",
            "javassist.bytecode.ExceptionsAttribute",
            "javassist.util.HotSwapAgent",
            "javassist.bytecode.annotation.AnnotationImpl",
            "javassist.Loader",
            "javassist.bytecode.SignatureAttribute"
        ]
    },
    {
        "projectName": "spoon",
        "githubLink": "https://github.com/INRIA/spoon.git",
        "commit": "last",
        "rootPathList": [
            "spoon"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "spoon.support.template.UndefinedParameterException",
            "spoon.support.util.EmptyIterator",
            "spoon.processing.ProcessorPropertiesImpl",
            "spoon.support.modelobs.SourceFragmentCreator",
            "spoon.reflect.declaration.CtAnnotationMethod",
            "spoon.reflect.code.CtNewClass",
            "spoon.testing.AbstractCtPackageAssert",
            "spoon.support.reflect.code.CtNewArrayImpl",
            "spoon.reflect.declaration.CtCompilationUnit",
            "spoon.support.compiler.jdt.JDTCommentBuilder"
        ]
    },
    {
        "projectName": "imglib2",
        "githubLink": "https://github.com/imglib/imglib2.git",
        "commit": "last",
        "rootPathList": [
            "imglib2"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "net.imglib2.img.basictypeaccess.volatiles.VolatileByteAccess",
            "net.imglib2.type.numeric.ComplexType",
            "net.imglib2.img.basictypeaccess.volatiles.array.AbstractVolatileByteArray",
            "net.imglib2.img.sparse.CharNtree",
            "net.imglib2.position.FunctionRandomAccessible",
            "net.imglib2.img.array.AbstractArrayCursor",
            "net.imglib2.util.StopWatch",
            "net.imglib2.display.projector.specialized.ArrayImgXYByteProjector",
            "net.imglib2.blocks.PrimitiveBlocksUtils",
            "net.imglib2.util.ImgUtil"
        ]
    },
    {
        "projectName": "minecolonies",
        "githubLink": "https://github.com/ldtteam/minecolonies.git",
        "commit": "last",
        "rootPathList": [
            "minecolonies"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "com.minecolonies.coremod.entity.mobs.egyptians.EntityArcherMummy",
            "com.minecolonies.coremod.network.messages.server.colony.ToggleHelpMessage",
            "com.minecolonies.coremod.colony.buildings.moduleviews.ExpeditionLogModuleView",
            "com.minecolonies.coremod.generation.CustomRecipeAndLootTableProvider",
            "com.minecolonies.coremod.network.messages.server.colony.citizen.AdjustSkillCitizenMessage",
            "com.minecolonies.coremod.client.gui.huts.WindowHutLiving",
            "com.minecolonies.coremod.placementhandlers.HutPlacementHandler",
            "com.minecolonies.coremod.colony.buildings.workerbuildings.plantation.modules.generic.PercentageHarvestPlantModule",
            "com.minecolonies.coremod.colony.requestsystem.resolvers.PublicWorkerCraftingProductionResolver",
            "com.minecolonies.coremod.generation.defaults.workers.DefaultSifterCraftingProvider"
        ]
    },
    {
        "projectName": "Mekanism",
        "githubLink": "https://github.com/mekanism/Mekanism.git",
        "commit": "last",
        "rootPathList": [
            "Mekanism"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "mekanism.common.network.to_client.container.property.chemical.InfusionStackPropertyData",
            "mekanism.client.model.robit.RobitModelDataBakedModel",
            "mekanism.common.recipe.impl.SmeltingIRecipe",
            "mekanism.common.tier.TransporterTier",
            "mekanism.client.render.item.block.RenderFluidTankItem",
            "mekanism.client.jei.machine.FluidToFluidRecipeCategory",
            "mekanism.common.capabilities.ItemCapabilityWrapper",
            "mekanism.client.gui.element.gauge.GuiFluidGauge",
            "mekanism.common.tile.component.config.ConfigInfo",
            "mekanism.common.tile.machine.TileEntityFluidicPlenisher"
        ]
    },
    {
        "projectName": "omnifaces",
        "githubLink": "https://github.com/omnifaces/omnifaces.git",
        "commit": "last",
        "rootPathList": [
            "omnifaces"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "org.omnifaces.cdi.PostScriptParam",
            "org.omnifaces.cdi.contextparam.ContextParamProducer",
            "org.omnifaces.component.ParamHolder",
            "org.omnifaces.component.output.ResourceInclude",
            "org.omnifaces.renderer.DeferredScriptRenderer",
            "org.omnifaces.component.validator.ValidateMultiple",
            "org.omnifaces.cdi.push.SocketUserManager",
            "org.omnifaces.taghandler.Converter",
            "org.omnifaces.eventlistener.FacesRequestLogger",
            "org.omnifaces.el.functions.Dates"
        ]
    },
    {
        "projectName": "openpnp",
        "githubLink": "https://github.com/openpnp/openpnp.git",
        "commit": "last",
        "rootPathList": [
            "openpnp"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "org.openpnp.util.Triplet",
            "org.openpnp.logging.ConsoleWriter",
            "org.openpnp.model.eagle.xml.Param",
            "org.openpnp.machine.reference.axis.ReferenceVirtualAxis",
            "org.openpnp.util.MovableUtils",
            "org.openpnp.vision.pipeline.stages.MaskModel",
            "org.openpnp.machine.neoden4.wizards.Neoden4CameraConfigurationWizard",
            "org.openpnp.machine.reference.wizards.ReferenceCameraTransformsConfigurationWizard",
            "org.openpnp.spi.base.AbstractCamera",
            "org.openpnp.machine.neoden4.NeoDen4Driver"
        ]
    },
    {
        "projectName": "Railcraft",
        "githubLink": "https://github.com/Railcraft/Railcraft.git",
        "commit": "last",
        "rootPathList": [
            "Railcraft"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "mods.railcraft.common.plugins.ic2.IEmitterDelegate",
            "mods.railcraft.common.blocks.tracks.BlockTrackStateless",
            "mods.railcraft.common.carts.ItemCartGift",
            "mods.railcraft.common.items.potion.PotionTypeRailcraft",
            "mods.railcraft.common.util.collections.CircularVectorQueue",
            "mods.railcraft.common.util.steam.SolidFuelProvider",
            "mods.railcraft.common.blocks.logic.FluidLogic",
            "mods.railcraft.common.carts.EntityCartFurnace",
            "mods.railcraft.common.blocks.tracks.outfitted.kits.TrackKitSwitchTurnout",
            "mods.railcraft.common.blocks.structures.StructurePattern"
        ]
    },
    {
        "projectName": "randoop",
        "githubLink": "https://github.com/randoop/randoop.git",
        "commit": "last",
        "rootPathList": [
            "randoop"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "randoop.util.predicate.AlwaysFalse",
            "randoop.generation.TypedOperationSelector",
            "randoop.output.PrimitiveAndWrappedTypeVarNameCollector",
            "randoop.NormalExecution",
            "randoop.condition.specification.SpecificationClause",
            "randoop.operation.TypedClassOperationWithCast",
            "randoop.main.Main",
            "randoop.sequence.VariableRenamer",
            "randoop.reflection.OmitMethodsPredicate",
            "randoop.generation.HelperSequenceCreator"
        ]
    },
    {
        "projectName": "RxJava",
        "githubLink": "https://github.com/ReactiveX/RxJava.git",
        "commit": "last",
        "rootPathList": [
            "RxJava"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "io.reactivex.rxjava3.internal.observers.BlockingFirstObserver",
            "io.reactivex.rxjava3.internal.subscriptions.BooleanSubscription",
            "io.reactivex.rxjava3.internal.operators.single.SingleHide",
            "io.reactivex.rxjava3.internal.operators.single.SingleToObservable",
            "io.reactivex.rxjava3.internal.operators.single.SingleInternalHelper",
            "io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt",
            "io.reactivex.rxjava3.internal.operators.completable.CompletableAmb",
            "io.reactivex.rxjava3.observers.ResourceMaybeObserver",
            "io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual",
            "io.reactivex.rxjava3.internal.operators.flowable.FlowableWindow"
        ]
    },
    {
        "projectName": "restfb",
        "githubLink": "https://github.com/restfb/restfb.git",
        "commit": "last",
        "rootPathList": [
            "restfb"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "com.restfb.annotation.OriginalJson",
            "com.restfb.util.DateFormatStrategy",
            "com.restfb.exception.FacebookException",
            "com.restfb.batch.BatchHeader",
            "com.restfb.exception.FacebookOAuthException",
            "com.restfb.Version",
            "com.restfb.exception.ExceptionInformation",
            "com.restfb.logging.RestFBLogger",
            "com.restfb.webhook.Webhook",
            "com.restfb.scope.FacebookPermissions"
        ]
    },
    {
        "projectName": "android-maven-plugin",
        "githubLink": "https://github.com/simpligility/android-maven-plugin.git",
        "commit": "last",
        "rootPathList": [
            "android-maven-plugin"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "com.simpligility.maven.plugins.android.configuration.Unpack",
            "com.simpligility.maven.plugins.android.InvalidNdkException",
            "com.simpligility.maven.plugins.android.DeviceCallback",
            "com.simpligility.maven.plugins.android.MavenErrorReporter",
            "com.simpligility.maven.plugins.android.AndroidSigner",
            "com.simpligility.maven.plugins.android.configuration.ConfigHelper",
            "com.simpligility.maven.plugins.android.phase01generatesources.ResourceClassGenerator",
            "com.simpligility.maven.plugins.android.common.AndroidPublisherHelper",
            "com.android.ddmlib.testrunner.MonkeyTestRunner",
            "com.simpligility.maven.plugins.android.phase04processclasses.ProguardMojo"
        ]
    },
    {
        "projectName": "Skript",
        "githubLink": "https://github.com/SkriptLang/Skript.git",
        "commit": "last",
        "rootPathList": [
            "Skript"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "ch.njol.skript.events.bukkit.SkriptStopEvent",
            "ch.njol.skript.expressions.ExprTemperature",
            "ch.njol.skript.lang.Statement",
            "ch.njol.skript.test.runner.TestTracker",
            "ch.njol.skript.expressions.ExprSaturation",
            "ch.njol.skript.expressions.ExprRespawnLocation",
            "ch.njol.skript.hooks.regions.RegionsPlugin",
            "ch.njol.skript.expressions.ExprFormatDate",
            "ch.njol.skript.hooks.regions.events.EvtRegionBorder",
            "ch.njol.util.coll.CollectionUtils"
        ]
    },
    {
        "projectName": "ThinkersConstruct",
        "githubLink": "https://github.com/SlimeKnights/TinkersConstruct.git",
        "commit": "last",
        "rootPathList": [
            "ThinkersConstruct"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "slimeknights.tconstruct.library.recipe.casting.ICastingContainer",
            "slimeknights.tconstruct.library.json.serializer.GenericEnumLoader",
            "slimeknights.tconstruct.plugin.jei.modifiers.ModifierBookmarkIngredientRenderer",
            "slimeknights.tconstruct.gadgets.capability.PiggybackHandler",
            "slimeknights.tconstruct.tools.network.InteractWithAirPacket",
            "slimeknights.tconstruct.common.data.tags.EnchantmentTagProvider",
            "slimeknights.tconstruct.tools.data.EnchantmentToModifierProvider",
            "slimeknights.tconstruct.tools.MeleeHarvestToolStatsBuilder",
            "slimeknights.tconstruct.library.tools.definition.ToolDefinitionLoader",
            "slimeknights.tconstruct.library.tools.definition.aoe.BoxAOEIterator"
        ]
    },
    {
        "projectName": "tools",
        "githubLink": "https://github.com/spdx/tools.git",
        "commit": "last",
        "rootPathList": [
            "tools"
        ],
        "srcPathList": [
            "src"
        ],
        "fullyQualifiedClassNameList": [
            "org.spdx.rdfparser.license.LicenseParserException",
            "org.spdx.compare.FileRelationshipSheet",
            "org.spdx.rdfparser.model.SpdxNoneElement",
            "org.spdx.rdfparser.license.SpdxNoneLicense",
            "org.spdx.html.SnippetContext",
            "org.spdx.rdfparser.model.pointer.StartEndPointer",
            "org.spdx.rdfparser.model.SpdxElementFactory",
            "org.spdx.spdxspreadsheet.OriginsSheetV0d9d4",
            "org.spdx.rdfparser.model.ExternalRef",
            "org.spdx.rdfparser.license.License"
        ]
    },
    {
        "projectName": "Skript",
        "githubLink": "https://github.com/SkriptLang/Skript.git",
        "commit": "last",
        "rootPathList": [
            "Skript"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "ch.njol.skript.events.bukkit.SkriptStopEvent",
            "ch.njol.skript.expressions.ExprTemperature",
            "ch.njol.skript.lang.Statement",
            "ch.njol.skript.test.runner.TestTracker",
            "ch.njol.skript.expressions.ExprSaturation",
            "ch.njol.skript.expressions.ExprRespawnLocation",
            "ch.njol.skript.hooks.regions.RegionsPlugin",
            "ch.njol.skript.expressions.ExprFormatDate",
            "ch.njol.skript.hooks.regions.events.EvtRegionBorder",
            "ch.njol.util.coll.CollectionUtils"
        ]
    },
    {
        "projectName": "ThinkersConstruct",
        "githubLink": "https://github.com/SlimeKnights/TinkersConstruct.git",
        "commit": "last",
        "rootPathList": [
            "ThinkersConstruct"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "slimeknights.tconstruct.library.recipe.casting.ICastingContainer",
            "slimeknights.tconstruct.library.json.serializer.GenericEnumLoader",
            "slimeknights.tconstruct.plugin.jei.modifiers.ModifierBookmarkIngredientRenderer",
            "slimeknights.tconstruct.gadgets.capability.PiggybackHandler",
            "slimeknights.tconstruct.tools.network.InteractWithAirPacket",
            "slimeknights.tconstruct.common.data.tags.EnchantmentTagProvider",
            "slimeknights.tconstruct.tools.data.EnchantmentToModifierProvider",
            "slimeknights.tconstruct.tools.MeleeHarvestToolStatsBuilder",
            "slimeknights.tconstruct.library.tools.definition.ToolDefinitionLoader",
            "slimeknights.tconstruct.library.tools.definition.aoe.BoxAOEIterator"
        ]
    },
    {
        "projectName": "tools",
        "githubLink": "https://github.com/spdx/tools.git",
        "commit": "last",
        "rootPathList": [
            "tools"
        ],
        "srcPathList": [
            "src"
        ],
        "fullyQualifiedClassNameList": [
            "org.spdx.rdfparser.license.LicenseParserException",
            "org.spdx.compare.FileRelationshipSheet",
            "org.spdx.rdfparser.model.SpdxNoneElement",
            "org.spdx.rdfparser.license.SpdxNoneLicense",
            "org.spdx.html.SnippetContext",
            "org.spdx.rdfparser.model.pointer.StartEndPointer",
            "org.spdx.rdfparser.model.SpdxElementFactory",
            "org.spdx.spdxspreadsheet.OriginsSheetV0d9d4",
            "org.spdx.rdfparser.model.ExternalRef",
            "org.spdx.rdfparser.license.License"
        ]
    },
    {
        "projectName": "Mixin",
        "githubLink": "https://github.com/SpongePowered/Mixin.git",
        "commit": "last",
        "rootPathList": [
            "Mixin"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "org.spongepowered.asm.util.ITokenProvider",
            "org.spongepowered.asm.mixin.transformer.throwables.MixinPreProcessorException",
            "org.spongepowered.asm.mixin.transformer.MixinCoprocessorPassthrough",
            "org.spongepowered.asm.mixin.transformer.DefaultExtensions",
            "org.spongepowered.asm.mixin.gen.AccessorGeneratorMethodProxy",
            "org.spongepowered.asm.mixin.transformer.ClassContext",
            "org.spongepowered.asm.mixin.gen.InvokerInfo",
            "org.spongepowered.asm.mixin.injection.invoke.ModifyArgInjector",
            "org.spongepowered.asm.mixin.refmap.ReferenceMapper",
            "org.spongepowered.asm.util.PrettyPrinter"
        ]
    },
    {
        "projectName": "CoreNLP",
        "githubLink": "https://github.com/stanfordnlp/CoreNLP.git",
        "commit": "last",
        "rootPathList": [
            "CoreNLP"
        ],
        "srcPathList": [
            "src"
        ],
        "fullyQualifiedClassNameList": [
            "edu.stanford.nlp.parser.lexparser.GrammarProjection",
            "edu.stanford.nlp.parser.lexparser.FactoredLexiconEvent",
            "edu.stanford.nlp.ie.pascal.InfoTemplate",
            "edu.stanford.nlp.trees.DependencyTreeTransformer",
            "edu.stanford.nlp.ling.tokensregex.EnvLookup",
            "edu.stanford.nlp.parser.shiftreduce.ShiftReduceOptions",
            "edu.stanford.nlp.ie.machinereading.domains.roth.RothResultsByRelation",
            "edu.stanford.nlp.dcoref.ACEMentionExtractor",
            "edu.stanford.nlp.international.spanish.process.SpanishTokenizer",
            "edu.stanford.nlp.ie.NumberNormalizer"
        ]
    },
    {
        "projectName": "stripe-java",
        "githubLink": "https://github.com/stripe/stripe-java.git",
        "commit": "last",
        "rootPathList": [
            "stripe-java"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "com.stripe.model.PaymentIntentSearchResult",
            "com.stripe.service.testhelpers.IssuingService",
            "com.stripe.param.FileRetrieveParams",
            "com.stripe.param.treasury.OutboundPaymentCancelParams",
            "com.stripe.param.SourceVerifyParams",
            "com.stripe.param.tax.CalculationListLineItemsParams",
            "com.stripe.service.TransferService",
            "com.stripe.param.radar.ValueListItemListParams",
            "com.stripe.model.treasury.ReceivedCredit",
            "com.stripe.param.PriceCreateParams"
        ]
    },
    {
        "projectName": "pnc-repressurized",
        "githubLink": "https://github.com/TeamPneumatic/pnc-repressurized.git",
        "commit": "last",
        "rootPathList": [
            "pnc-repressurized"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "me.desht.pneumaticcraft.common.drone.progwidgets.IItemDropper",
            "me.desht.pneumaticcraft.common.inventory.ElectrostaticCompressorMenu",
            "me.desht.pneumaticcraft.common.drone.progwidgets.ProgWidgetEnergyImport",
            "me.desht.pneumaticcraft.common.drone.progwidgets.ProgWidgetStart",
            "me.desht.pneumaticcraft.common.recipes.ModCraftingHelper",
            "me.desht.pneumaticcraft.common.inventory.RefineryMenu",
            "me.desht.pneumaticcraft.common.block.ProgrammerBlock",
            "me.desht.pneumaticcraft.client.gui.upgrademanager.PneumaticArmorUpgradeScreen",
            "me.desht.pneumaticcraft.common.util.UpgradableItemUtils",
            "me.desht.pneumaticcraft.common.event.PneumaticArmorHandler"
        ]
    },
    {
        "projectName": "threetenbp",
        "githubLink": "https://github.com/ThreeTen/threetenbp.git",
        "commit": "last",
        "rootPathList": [
            "threetenbp"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "org.threeten.bp.DateTimeException",
            "org.threeten.bp.format.TextStyle",
            "org.threeten.bp.zone.Ser",
            "org.threeten.bp.temporal.TemporalAccessor",
            "org.threeten.bp.temporal.ValueRange",
            "org.threeten.bp.DayOfWeek",
            "org.threeten.bp.zone.ZoneOffsetTransitionRule",
            "org.threeten.bp.chrono.JapaneseChronology",
            "org.threeten.bp.zone.TzdbZoneRulesCompiler",
            "org.threeten.bp.LocalDate"
        ]
    },
    {
        "projectName": "univocity-parser",
        "githubLink": "https://github.com/uniVocity/univocity-parsers.git",
        "commit": "last",
        "rootPathList": [
            "univocity-parser"
        ],
        "srcPathList": [
            "src",
            "main",
            "java"
        ],
        "fullyQualifiedClassNameList": [
            "com.univocity.parsers.common.iterators.RowIterator",
            "com.univocity.parsers.common.processor.ObjectRowProcessor",
            "com.univocity.parsers.common.processor.MultiBeanRowProcessor",
            "com.univocity.parsers.common.processor.MasterDetailRecord",
            "com.univocity.parsers.fixed.FixedWidthRoutines",
            "com.univocity.parsers.common.processor.core.ColumnReader",
            "com.univocity.parsers.common.Context",
            "com.univocity.parsers.common.processor.RowWriterProcessorSwitch",
            "com.univocity.parsers.conversions.NumericConversion",
            "com.univocity.parsers.csv.CsvParserSettings"
        ]
    }
]