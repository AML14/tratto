(hey!=p1.hey);
(p1==null)==false ? p2 : p3;
p1==null ? p2 : p3;
p1.hey(p1).property.hello() == false;
p1.hey(p1).property.hello() == 3.2;
p1.hey(p1).property.hello() != dsfjhw.dskf(sakjd,dkfjnw);
p1.hey(p1).property.hello() != dsfjhw.dskf(sakjd,dkfjnw) + 3.2;
param instanceof Hey;
source==null || dest==null;
SomeClass.someMethod(param.field.method().field);
SomeClass.someMethod(param.method().field.field1.method2(arg, arg2).method());
SomeClass.someMethod(param.field.method(arg1, arg2).method());
param.method().field;
someParam == Math.PI;
p1;
P2;
hello;
HELLO;
true;
param.field1.field2.method().method2().field3;
param.method1(sdfdsf, sdf).method2().field1.field2;
param.method(arg1, arg).method().field;
param2.field1.field2.method1().method2().field3;
SomeClass.someMethod(this, methodResultID, p1, P1, 3, 3.2, -2, -53.3, "hey", null, true, false, Hey.class, SomeClass.field, SomeClass.staticMethod(wefwe));
p1==null ? p2 : p3;
p1==false;
P1==false;
p1==true;
this==Math.PI && methodResultID.hey();
P2==PJBK;
((p1==null)==false) ? this.contains(something) && methodResultID.field.equals(true) : true;
Arrays.stream(closures).anyMatch(jdVar -> jdVar == null);
Arrays.stream(closures).noneMatch(jdVar -> someVar.someMethod(p1, p2));
Arrays.stream(closures).allMatch(jdVar -> SomeClass.someMethod(this, methodResultID, jdVar, P1, 3, 3.2, -2, -53.3, "hey", null, true, false, Hey.class, SomeClass.field, SomeClass.staticMethod(wefwe)));
someVar.stream().anyMatch(jdVar -> jdVar == null);
this.stream().allMatch(jdVar -> jdVar.equals(this));
((o1==null)==false)==false;
this.getCoefficients();
;
this.var.method() >= arg1+3 && Arrays.stream(arg2).anyMatch(jdVar -> jdVar < 5.1) || ((arg3.stream().allMatch(jdVar -> jdVar.equals("hello", 3)))) ? (methodResultID instanceof SomeClass)==false : someVar.someMethod(SomeClass.class, null);
this==methodResultID;
this instanceof SomeClass;
this.someProperty;
this.someProperty==3;
this.someProperty>=3;
this.someProperty!=3;
this.someProperty==this.otherProperty;
this.someProperty>=this.otherProperty;
this.someProperty!=this.otherProperty;
this.someProperty instanceof SomeClass;
methodResultID==this;
methodResultID==this.someProperty;
methodResultID==~this.someProperty;
methodResultID==this.someProperty+3;
methodResultID>=this.someProperty;
methodResultID>=~this.someProperty;
methodResultID>=this.someProperty+3;
methodResultID!=this.someProperty;
methodResultID!=~this.someProperty;
methodResultID!=this.someProperty+3;
Arrays.stream(closures).anyMatch(jdVar -> jdVar == null || jdVar.isBlank());
someVar.stream().noneMatch(jdVar -> jdVar != null && (jdVar.isBlank())==false);