project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test00,"public void test00() throws Throwable {
    Stack<Object> stack0 = new Stack<Object>();
    boolean boolean0 = stack0.isEmpty();
    assertFalse(stack0.isEmpty());
}",0,assertTrue(stack0.isEmpty())
project,0,test01,"public void test01() throws Throwable {
    Stack<Object> stack0 = new Stack<Object>();
    Integer integer0 = new Integer((-1));
    stack0.push(integer0);
    stack0.push(integer0);
    stack0.pop();
    boolean boolean0 = stack0.isEmpty();
    assertFalse(stack0.isEmpty());
}",0,assertTrue(stack0.isEmpty())
project,0,test1,"public void test1() throws Throwable {
    Stack<Object> stack0 = new Stack<Object>();
    stack0.push((Object) null);
    stack0.pop();
    boolean boolean0 = stack0.isEmpty();
    assertTrue(stack0.isEmpty());
}",0,assertTrue(stack0.isEmpty())
project,0,test20,"public void test20() throws Throwable {
    Stack<Object> stack0 = new Stack<Object>();
    boolean boolean0 = stack0.isEmpty();
    assertTrue(stack0.isEmpty());
}",0,assertFalse(stack0.isEmpty())
project,0,test21,"public void test21() throws Throwable {
    Stack<Object> stack0 = new Stack<Object>();
    Integer integer0 = new Integer(0);
    stack0.push(integer0);
    boolean boolean0 = stack0.isEmpty();
    assertFalse(boolean0);
}",0,
project,0,test3,"public void test3() throws Throwable {
    Stack<String> stack0 = new Stack<String>();
    // Undeclared exception!
    try {
        stack0.pop();
        fail('Expecting exception: EmptyStackException');

    } catch(EmptyStackException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException('tutorial.Stack', e);
    }
}",1,
project,0,test40,"public void test40() throws Throwable {
    Integer integer0 = new Integer(0);
    Stack<Integer> stack0 = new Stack<Integer>();
    stack0.push(integer0);
    boolean boolean0 = stack0.isEmpty();
    assertFalse(stack0.isEmpty());
}",0,assertFalse(stack0.isEmpty())
project,0,test41,"public void test41() throws Throwable {
    Integer integer0 = new Integer(0);
    Stack<Integer> stack0 = new Stack<Integer>();
    stack0.push(integer0);
    stack0.pop();
    boolean boolean0 = stack0.isEmpty();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test5,"public void test5() throws Throwable {
    Stack<Object> stack0 = new Stack<Object>();
    Integer integer0 = new Integer(0);
    stack0.push(integer0);
    stack0.push(integer0);
    stack0.push(integer0);
    Stack<Integer> stack1 = new Stack<Integer>();
    stack0.push(integer0);
    stack0.push('');
    stack0.push(integer0);
    stack0.push(integer0);
    stack0.push(integer0);
    stack0.push(integer0);
    stack0.push(stack1);
    try {
        stack0.push('');
        fail('Expecting exception: RuntimeException');

    } catch(RuntimeException e) {
        //
        // Stack exceeded capacity!
        //
        verifyException('tutorial.Stack', e);
    }
}",0,
