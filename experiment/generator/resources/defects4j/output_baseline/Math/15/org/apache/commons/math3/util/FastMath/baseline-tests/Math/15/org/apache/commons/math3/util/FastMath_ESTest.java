/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 05:58:49 GMT 2023
 */
package org.apache.commons.math3.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.util.FastMath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class FastMath_ESTest extends FastMath_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        float float0 = FastMath.copySign((-0.99999994F), (float) 2864);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        float float0 = FastMath.copySign(0.0F, (-1262.3472F));
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        double double0 = FastMath.copySign((-720.3), 0.0);
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        long long0 = FastMath.min((long) 0, (long) 0);
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        int int0 = FastMath.min(225, 1025);
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        double double0 = FastMath.rint(0.99);
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        double double0 = FastMath.floor(4.503599627370496E15);
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        double double0 = FastMath.scalb(2938.083960078, 1024);
    }

    @Test(timeout = 4000)
    public void test0088() throws Throwable {
        float float0 = FastMath.ulp(3614.844F);
    }

    @Test(timeout = 4000)
    public void test0099() throws Throwable {
        double double0 = FastMath.ulp(614.669);
    }

    @Test(timeout = 4000)
    public void test01010() throws Throwable {
        double double0 = FastMath.ulp(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test01111() throws Throwable {
        double double0 = FastMath.asin(0.8109631538391113);
    }

    @Test(timeout = 4000)
    public void test01212() throws Throwable {
        double double0 = FastMath.atan2(0.0, 3659.1F);
    }

    @Test(timeout = 4000)
    public void test01313() throws Throwable {
        double double0 = FastMath.atan2(3138.59025756, 3138.59025756);
    }

    @Test(timeout = 4000)
    public void test01414() throws Throwable {
        double double0 = FastMath.atan2(1.42436589329759E250, (-1421.4236405208));
    }

    @Test(timeout = 4000)
    public void test01515() throws Throwable {
        double double0 = FastMath.cos((-1.5707963267948966));
    }

    @Test(timeout = 4000)
    public void test01616() throws Throwable {
        double double0 = FastMath.cos(3294198.0);
    }

    @Test(timeout = 4000)
    public void test01717() throws Throwable {
        double double0 = FastMath.cos(0.0);
    }

    @Test(timeout = 4000)
    public void test01818() throws Throwable {
        double double0 = FastMath.sin(1.6448897917725177E233);
    }

    @Test(timeout = 4000)
    public void test01919() throws Throwable {
        double double0 = FastMath.expm1(1.0F);
    }

    @Test(timeout = 4000)
    public void test02020() throws Throwable {
        double double0 = FastMath.expm1((-1.0F));
    }

    @Test(timeout = 4000)
    public void test02121() throws Throwable {
        double double0 = FastMath.signum(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test02222() throws Throwable {
        double double0 = FastMath.tanh(0.5F);
    }

    @Test(timeout = 4000)
    public void test02323() throws Throwable {
        double double0 = FastMath.cosh(3.5549586192569994E-8);
    }

    @Test(timeout = 4000)
    public void test02424() throws Throwable {
        double double0 = FastMath.toRadians((-2870));
    }

    @Test(timeout = 4000)
    public void test02525() throws Throwable {
        double double0 = FastMath.toDegrees((-2394.6));
    }

    @Test(timeout = 4000)
    public void test02626() throws Throwable {
        double double0 = FastMath.sqrt(0.0);
    }

    @Test(timeout = 4000)
    public void test02727() throws Throwable {
        double double0 = FastMath.sqrt(0.49999999999999994);
    }

    @Test(timeout = 4000)
    public void test02828() throws Throwable {
        int int0 = FastMath.round(3659.1F);
    }

    @Test(timeout = 4000)
    public void test02929() throws Throwable {
        int int0 = FastMath.round((-1035.8857F));
    }

    @Test(timeout = 4000)
    public void test03030() throws Throwable {
        long long0 = FastMath.round(0.0);
    }

    @Test(timeout = 4000)
    public void test03131() throws Throwable {
        long long0 = FastMath.round(2009.5669265871545);
    }

    @Test(timeout = 4000)
    public void test03232() throws Throwable {
        double double0 = FastMath.pow((double) 989.485F, (-1023));
    }

    @Test(timeout = 4000)
    public void test03333() throws Throwable {
        float float0 = FastMath.nextUp((-1.4E-45F));
    }

    @Test(timeout = 4000)
    public void test03434() throws Throwable {
        float float0 = FastMath.nextAfter(0.0F, 0.0);
    }

    @Test(timeout = 4000)
    public void test03535() throws Throwable {
        long long0 = FastMath.min((long) 10, 4398046511103L);
    }

    @Test(timeout = 4000)
    public void test03636() throws Throwable {
        int int0 = FastMath.min((-1494), (-1494));
    }

    @Test(timeout = 4000)
    public void test03737() throws Throwable {
        float float0 = FastMath.min(0.5F, 530.7F);
    }

    @Test(timeout = 4000)
    public void test03838() throws Throwable {
        double double0 = FastMath.min(1.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test03939() throws Throwable {
        long long0 = FastMath.max(0L, 0L);
    }

    @Test(timeout = 4000)
    public void test04040() throws Throwable {
        int int0 = FastMath.max(0, 0);
    }

    @Test(timeout = 4000)
    public void test04141() throws Throwable {
        int int0 = FastMath.max((-53), (-807));
    }

    @Test(timeout = 4000)
    public void test04242() throws Throwable {
        float float0 = FastMath.max((-3218.0F), (-3218.0F));
    }

    @Test(timeout = 4000)
    public void test04343() throws Throwable {
        double double0 = FastMath.max((double) 0.0F, (-3.7999795083850525E-8));
    }

    @Test(timeout = 4000)
    public void test04444() throws Throwable {
        double double0 = FastMath.log10(1.0);
    }

    @Test(timeout = 4000)
    public void test04545() throws Throwable {
        double double0 = FastMath.log10(4769.5539928784);
    }

    @Test(timeout = 4000)
    public void test04646() throws Throwable {
        double double0 = FastMath.log(0.0, 660.2065754);
    }

    @Test(timeout = 4000)
    public void test04747() throws Throwable {
        double double0 = FastMath.log(248.87366015749137, 248.87366015749137);
    }

    @Test(timeout = 4000)
    public void test04848() throws Throwable {
        double double0 = FastMath.log(592.5416056, 3.683043641790553E-251);
    }

    @Test(timeout = 4000)
    public void test04949() throws Throwable {
        double double0 = FastMath.log((double) 1.0F);
    }

    @Test(timeout = 4000)
    public void test05050() throws Throwable {
        double double0 = FastMath.log(1746.64);
    }

    @Test(timeout = 4000)
    public void test05151() throws Throwable {
        double double0 = FastMath.hypot(0.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test05252() throws Throwable {
        int int0 = FastMath.getExponent((-1.0F));
    }

    @Test(timeout = 4000)
    public void test05353() throws Throwable {
        int int0 = FastMath.getExponent(2147.0F);
    }

    @Test(timeout = 4000)
    public void test05454() throws Throwable {
        int int0 = FastMath.getExponent((double) 1.0F);
    }

    @Test(timeout = 4000)
    public void test05555() throws Throwable {
        int int0 = FastMath.getExponent(0.0);
    }

    @Test(timeout = 4000)
    public void test05656() throws Throwable {
        double double0 = FastMath.exp((-3715.441));
    }

    @Test(timeout = 4000)
    public void test05757() throws Throwable {
        float float0 = FastMath.copySign(0.0F, 760.49F);
    }

    @Test(timeout = 4000)
    public void test05858() throws Throwable {
        double double0 = FastMath.copySign(0.0, (double) 0);
    }

    @Test(timeout = 4000)
    public void test05959() throws Throwable {
        double double0 = FastMath.ceil(796.5);
    }

    @Test(timeout = 4000)
    public void test06060() throws Throwable {
        double double0 = FastMath.cbrt(202.92101);
    }

    @Test(timeout = 4000)
    public void test06161() throws Throwable {
        double double0 = FastMath.atanh((-7.877917738262007E-9));
    }

    @Test(timeout = 4000)
    public void test06262() throws Throwable {
        double double0 = FastMath.atan((-12.571606602115155));
    }

    @Test(timeout = 4000)
    public void test06363() throws Throwable {
        double double0 = FastMath.acosh(1.0);
    }

    @Test(timeout = 4000)
    public void test06464() throws Throwable {
        long long0 = FastMath.abs(0L);
    }

    @Test(timeout = 4000)
    public void test06565() throws Throwable {
        int int0 = FastMath.abs(0);
    }

    @Test(timeout = 4000)
    public void test06666() throws Throwable {
        double double0 = FastMath.IEEEremainder(4.392983574030969E-147, 4.392983574030969E-147);
    }

    @Test(timeout = 4000)
    public void test06767() throws Throwable {
        double double0 = FastMath.IEEEremainder(1.0, 506.971);
    }

    @Test(timeout = 4000)
    public void test06868() throws Throwable {
        double double0 = FastMath.IEEEremainder((-5.555080534042001E-8), (-668.81043863254));
    }

    @Test(timeout = 4000)
    public void test06969() throws Throwable {
        double double0 = FastMath.floor(0.0F);
    }

    @Test(timeout = 4000)
    public void test07070() throws Throwable {
        double double0 = FastMath.floor(3138.59025756);
    }

    @Test(timeout = 4000)
    public void test07171() throws Throwable {
        double double0 = FastMath.floor((-905L));
    }

    @Test(timeout = 4000)
    public void test07272() throws Throwable {
        double double0 = FastMath.floor((-4.048086182363988E115));
    }

    @Test(timeout = 4000)
    public void test07373() throws Throwable {
        double double0 = FastMath.floor(1.5645672698520312E274);
    }

    @Test(timeout = 4000)
    public void test07474() throws Throwable {
        double double0 = FastMath.floor(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test07575() throws Throwable {
        double double0 = FastMath.floor((-1657.2));
    }

    @Test(timeout = 4000)
    public void test07676() throws Throwable {
        float float0 = FastMath.nextAfter((float) 325, (double) Float.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test07777() throws Throwable {
        float float0 = FastMath.nextAfter((-3259.5F), 524.315);
    }

    @Test(timeout = 4000)
    public void test07878() throws Throwable {
        float float0 = FastMath.nextAfter((float) 0, 3425.0);
    }

    @Test(timeout = 4000)
    public void test07979() throws Throwable {
        double double0 = FastMath.nextAfter(3.203391672602453E-8, 81.76);
    }

    @Test(timeout = 4000)
    public void test08080() throws Throwable {
        double double0 = FastMath.nextAfter((double) (-1.4E-45F), 8.208715337901827E-9);
    }

    @Test(timeout = 4000)
    public void test08181() throws Throwable {
        double double0 = FastMath.nextAfter((double) 0.0F, 1084.917224401101);
    }

    @Test(timeout = 4000)
    public void test08282() throws Throwable {
        double double0 = FastMath.scalb((-1185.298742), 567);
    }

    @Test(timeout = 4000)
    public void test08383() throws Throwable {
        double double0 = FastMath.abs((-1672.268605783241));
    }

    @Test(timeout = 4000)
    public void test08484() throws Throwable {
        float float0 = FastMath.abs(302.0F);
    }

    @Test(timeout = 4000)
    public void test08585() throws Throwable {
        double double0 = FastMath.exp(0.0F);
    }

    @Test(timeout = 4000)
    public void test08686() throws Throwable {
        int int0 = FastMath.getExponent(2.113946677051906E252);
    }

    @Test(timeout = 4000)
    public void test08787() throws Throwable {
        double double0 = FastMath.log(0.0);
    }

    @Test(timeout = 4000)
    public void test08888() throws Throwable {
        float float0 = FastMath.copySign((-254.0F), 0.0F);
    }

    @Test(timeout = 4000)
    public void test08989() throws Throwable {
        float float0 = FastMath.copySign(302.0F, (-2666.5457F));
    }

    @Test(timeout = 4000)
    public void test09090() throws Throwable {
        float float0 = FastMath.copySign((float) 838, 0.0F);
    }

    @Test(timeout = 4000)
    public void test09191() throws Throwable {
        float float0 = FastMath.copySign((-1649.2449F), (-1649.2449F));
    }

    @Test(timeout = 4000)
    public void test09292() throws Throwable {
        double double0 = FastMath.copySign((-2002.24731882), (-7.008664656565841));
    }

    @Test(timeout = 4000)
    public void test09393() throws Throwable {
        double double0 = FastMath.copySign(3.5549586192569994E-8, 5.301386276260592E-111);
    }

    @Test(timeout = 4000)
    public void test09494() throws Throwable {
        double double0 = FastMath.copySign(0.4278704972867398, (-1.0));
    }

    @Test(timeout = 4000)
    public void test09595() throws Throwable {
        double double0 = FastMath.copySign((-3.901826104778096E-9), 1461.3263526512394);
    }

    @Test(timeout = 4000)
    public void test09696() throws Throwable {
        double double0 = FastMath.hypot(3.6725170580355583E-9, 2323.6140187522237);
    }

    @Test(timeout = 4000)
    public void test09797() throws Throwable {
        double double0 = FastMath.hypot(735.93756502632, 0.0);
    }

    @Test(timeout = 4000)
    public void test09898() throws Throwable {
        double double0 = FastMath.hypot(0.0, Double.NaN);
    }

    @Test(timeout = 4000)
    public void test09999() throws Throwable {
        double double0 = FastMath.hypot(Double.NaN, 0.1246747374534607);
    }

    @Test(timeout = 4000)
    public void test100100() throws Throwable {
        double double0 = FastMath.hypot(0.0, Double.NEGATIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test101101() throws Throwable {
        double double0 = FastMath.hypot(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test102102() throws Throwable {
        double double0 = FastMath.max((-311.087), (-311.087));
    }

    @Test(timeout = 4000)
    public void test103103() throws Throwable {
        double double0 = FastMath.max(1.2167807682331913E-308, 0.1);
    }

    @Test(timeout = 4000)
    public void test104104() throws Throwable {
        double double0 = FastMath.max(9.755392680573412E-9, Double.NaN);
    }

    @Test(timeout = 4000)
    public void test105105() throws Throwable {
        float float0 = FastMath.max((float) 0, Float.NaN);
    }

    @Test(timeout = 4000)
    public void test106106() throws Throwable {
        float float0 = FastMath.max(0.0F, 0.0F);
    }

    @Test(timeout = 4000)
    public void test107107() throws Throwable {
        float float0 = FastMath.max(486.17F, (float) 5L);
    }

    @Test(timeout = 4000)
    public void test108108() throws Throwable {
        float float0 = FastMath.max((float) 15, (float) 1025);
    }

    @Test(timeout = 4000)
    public void test109109() throws Throwable {
        long long0 = FastMath.max((-5034868814120038111L), (-2182L));
    }

    @Test(timeout = 4000)
    public void test110110() throws Throwable {
        long long0 = FastMath.max(5L, 1L);
    }

    @Test(timeout = 4000)
    public void test111111() throws Throwable {
        int int0 = FastMath.max(67, 4296);
    }

    @Test(timeout = 4000)
    public void test112112() throws Throwable {
        double double0 = FastMath.min((-1092.92686), (-1092.92686));
    }

    @Test(timeout = 4000)
    public void test113113() throws Throwable {
        double double0 = FastMath.min(Double.NaN, Double.NaN);
    }

    @Test(timeout = 4000)
    public void test114114() throws Throwable {
        double double0 = FastMath.min(938.19028, 1305.45);
    }

    @Test(timeout = 4000)
    public void test115115() throws Throwable {
        float float0 = FastMath.min(Float.NaN, 1483.65F);
    }

    @Test(timeout = 4000)
    public void test116116() throws Throwable {
        float float0 = FastMath.min((-1.0F), (-1.0F));
    }

    @Test(timeout = 4000)
    public void test117117() throws Throwable {
        float float0 = FastMath.min(-0.0F, (float) (-1236));
    }

    @Test(timeout = 4000)
    public void test118118() throws Throwable {
        float float0 = FastMath.min(0.0F, 855.0F);
    }

    @Test(timeout = 4000)
    public void test119119() throws Throwable {
        long long0 = FastMath.min(792L, (-213L));
    }

    @Test(timeout = 4000)
    public void test120120() throws Throwable {
        int int0 = FastMath.min(5, 0);
    }

    @Test(timeout = 4000)
    public void test121121() throws Throwable {
        double double0 = FastMath.rint((-4.926470933588261E-8));
    }

    @Test(timeout = 4000)
    public void test122122() throws Throwable {
        double double0 = FastMath.rint((-709.04313048574));
    }

    @Test(timeout = 4000)
    public void test123123() throws Throwable {
        double double0 = FastMath.ceil((-1.3345148716925826E-23));
    }

    @Test(timeout = 4000)
    public void test124124() throws Throwable {
        double double0 = FastMath.ceil((-2312.61));
    }

    @Test(timeout = 4000)
    public void test125125() throws Throwable {
        double double0 = FastMath.ceil(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test126126() throws Throwable {
        double double0 = FastMath.ceil((-1.0));
    }

    @Test(timeout = 4000)
    public void test127127() throws Throwable {
        double double0 = FastMath.rint((-2.5445477450140954E103));
    }

    @Test(timeout = 4000)
    public void test128128() throws Throwable {
        double double0 = FastMath.rint(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test129129() throws Throwable {
        double double0 = FastMath.rint(Float.NaN);
    }

    @Test(timeout = 4000)
    public void test130130() throws Throwable {
        float float0 = FastMath.nextUp((float) 444037001);
    }

    @Test(timeout = 4000)
    public void test131131() throws Throwable {
        float float0 = FastMath.nextAfter(1221.148F, (-2.2250738585072014E-308));
    }

    @Test(timeout = 4000)
    public void test132132() throws Throwable {
        float float0 = FastMath.nextAfter(0.0F, (-3227.2688339));
    }

    @Test(timeout = 4000)
    public void test133133() throws Throwable {
        float float0 = FastMath.nextAfter(Float.NEGATIVE_INFINITY, 0.9568695142600063);
    }

    @Test(timeout = 4000)
    public void test134134() throws Throwable {
        float float0 = FastMath.nextAfter(Float.POSITIVE_INFINITY, 3138.59025756);
    }

    @Test(timeout = 4000)
    public void test135135() throws Throwable {
        float float0 = FastMath.nextAfter((-716.7F), Double.NaN);
    }

    @Test(timeout = 4000)
    public void test136136() throws Throwable {
        float float0 = FastMath.nextAfter(Float.NaN, 1.01);
    }

    @Test(timeout = 4000)
    public void test137137() throws Throwable {
        double double0 = FastMath.nextUp(1.5707963267948966);
    }

    @Test(timeout = 4000)
    public void test138138() throws Throwable {
        double double0 = FastMath.nextAfter(1599.318544317312, (-1.401298464324817E-45));
    }

    @Test(timeout = 4000)
    public void test139139() throws Throwable {
        double double0 = FastMath.nextAfter(0.0, (-674.9495796028052));
    }

    @Test(timeout = 4000)
    public void test140140() throws Throwable {
        double double0 = FastMath.nextUp((-3.901826104778096E-9));
    }

    @Test(timeout = 4000)
    public void test141141() throws Throwable {
        double double0 = FastMath.nextAfter(Double.POSITIVE_INFINITY, (-2.6157563728873715E-8));
    }

    @Test(timeout = 4000)
    public void test142142() throws Throwable {
        double double0 = FastMath.nextAfter(Double.NEGATIVE_INFINITY, 1.0);
    }

    @Test(timeout = 4000)
    public void test143143() throws Throwable {
        double double0 = FastMath.nextAfter((double) 0.0F, 0.0);
    }

    @Test(timeout = 4000)
    public void test144144() throws Throwable {
        double double0 = FastMath.nextAfter(41.77, Double.NaN);
    }

    @Test(timeout = 4000)
    public void test145145() throws Throwable {
        double double0 = FastMath.nextAfter(Double.NaN, (-311.087));
    }

    @Test(timeout = 4000)
    public void test146146() throws Throwable {
        float float0 = FastMath.scalb((-202.9254F), 154);
    }

    @Test(timeout = 4000)
    public void test147147() throws Throwable {
        float float0 = FastMath.scalb(2201.0F, (-189));
    }

    @Test(timeout = 4000)
    public void test148148() throws Throwable {
        float float0 = FastMath.scalb((-857.3F), (-202));
    }

    @Test(timeout = 4000)
    public void test149149() throws Throwable {
        float float0 = FastMath.scalb(1583.46F, (-135));
    }

    @Test(timeout = 4000)
    public void test150150() throws Throwable {
        float float0 = FastMath.scalb(1.4E-45F, 680);
    }

    @Test(timeout = 4000)
    public void test151151() throws Throwable {
        float float0 = FastMath.scalb(363.0F, 235);
    }

    @Test(timeout = 4000)
    public void test152152() throws Throwable {
        float float0 = FastMath.scalb((-716.7074F), (-972));
    }

    @Test(timeout = 4000)
    public void test153153() throws Throwable {
        float float0 = FastMath.scalb(0.0F, 271);
    }

    @Test(timeout = 4000)
    public void test154154() throws Throwable {
        float float0 = FastMath.scalb(Float.POSITIVE_INFINITY, (-1236));
    }

    @Test(timeout = 4000)
    public void test155155() throws Throwable {
        float float0 = FastMath.scalb(Float.NaN, 1503);
    }

    @Test(timeout = 4000)
    public void test156156() throws Throwable {
        float float0 = FastMath.scalb((-3700.3245F), 483);
    }

    @Test(timeout = 4000)
    public void test157157() throws Throwable {
        float float0 = FastMath.scalb(1525.0F, (-1));
    }

    @Test(timeout = 4000)
    public void test158158() throws Throwable {
        float float0 = FastMath.scalb(1413.3413F, (-638));
    }

    @Test(timeout = 4000)
    public void test159159() throws Throwable {
        double double0 = FastMath.scalb(2688.0, 1025);
    }

    @Test(timeout = 4000)
    public void test160160() throws Throwable {
        double double0 = FastMath.scalb(477.782103668, (-1720));
    }

    @Test(timeout = 4000)
    public void test161161() throws Throwable {
        double double0 = FastMath.scalb((double) (-1236), (-1236));
    }

    @Test(timeout = 4000)
    public void test162162() throws Throwable {
        double double0 = FastMath.scalb(9.113713162029408E267, (-1624));
    }

    @Test(timeout = 4000)
    public void test163163() throws Throwable {
        double double0 = FastMath.scalb((-2339.656), 288369027);
    }

    @Test(timeout = 4000)
    public void test164164() throws Throwable {
        double double0 = FastMath.scalb((double) Integer.MAX_VALUE, Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test165165() throws Throwable {
        double double0 = FastMath.scalb((double) (-203.2725F), (-64570314));
    }

    @Test(timeout = 4000)
    public void test166166() throws Throwable {
        double double0 = FastMath.scalb(0.9568695142600063, (-4989));
    }

    @Test(timeout = 4000)
    public void test167167() throws Throwable {
        double double0 = FastMath.scalb(0.0, (-2829));
    }

    @Test(timeout = 4000)
    public void test168168() throws Throwable {
        double double0 = FastMath.scalb((double) Float.POSITIVE_INFINITY, 5230);
    }

    @Test(timeout = 4000)
    public void test169169() throws Throwable {
        double double0 = FastMath.scalb((double) (-2870), 1948);
    }

    @Test(timeout = 4000)
    public void test170170() throws Throwable {
        double double0 = FastMath.scalb(Double.NaN, (-2147483647));
    }

    @Test(timeout = 4000)
    public void test171171() throws Throwable {
        double double0 = FastMath.ulp((double) Float.NEGATIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test172172() throws Throwable {
        double double0 = FastMath.abs(0.0);
    }

    @Test(timeout = 4000)
    public void test173173() throws Throwable {
        double double0 = FastMath.abs(1.01);
    }

    @Test(timeout = 4000)
    public void test174174() throws Throwable {
        float float0 = FastMath.abs(0.0F);
    }

    @Test(timeout = 4000)
    public void test175175() throws Throwable {
        float float0 = FastMath.abs((float) (-5034868814120038111L));
    }

    @Test(timeout = 4000)
    public void test176176() throws Throwable {
        long long0 = FastMath.abs((-5034868814120038111L));
    }

    @Test(timeout = 4000)
    public void test177177() throws Throwable {
        long long0 = FastMath.abs(4503599627370496L);
    }

    @Test(timeout = 4000)
    public void test178178() throws Throwable {
        int int0 = FastMath.abs((-872));
    }

    @Test(timeout = 4000)
    public void test179179() throws Throwable {
        int int0 = FastMath.abs(444037001);
    }

    @Test(timeout = 4000)
    public void test180180() throws Throwable {
        double double0 = FastMath.toDegrees(0.0);
    }

    @Test(timeout = 4000)
    public void test181181() throws Throwable {
        double double0 = FastMath.toDegrees(2665.52);
    }

    @Test(timeout = 4000)
    public void test182182() throws Throwable {
        double double0 = FastMath.toDegrees(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test183183() throws Throwable {
        double double0 = FastMath.toRadians(0.0);
    }

    @Test(timeout = 4000)
    public void test184184() throws Throwable {
        double double0 = FastMath.toRadians(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test185185() throws Throwable {
        double double0 = FastMath.cbrt((-387.593185));
    }

    @Test(timeout = 4000)
    public void test186186() throws Throwable {
        double double0 = FastMath.cbrt(0.0F);
    }

    @Test(timeout = 4000)
    public void test187187() throws Throwable {
        double double0 = FastMath.cbrt(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test188188() throws Throwable {
        double double0 = FastMath.acos(4.7683716E-7F);
    }

    @Test(timeout = 4000)
    public void test189189() throws Throwable {
        double double0 = FastMath.acos(0.0);
    }

    @Test(timeout = 4000)
    public void test190190() throws Throwable {
        double double0 = FastMath.acos(1.0F);
    }

    @Test(timeout = 4000)
    public void test191191() throws Throwable {
        double double0 = FastMath.acos((-638));
    }

    @Test(timeout = 4000)
    public void test192192() throws Throwable {
        double double0 = FastMath.acos(3312.9047143185658);
    }

    @Test(timeout = 4000)
    public void test193193() throws Throwable {
        double double0 = FastMath.acos(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test194194() throws Throwable {
        double double0 = FastMath.asin(0.0);
    }

    @Test(timeout = 4000)
    public void test195195() throws Throwable {
        double double0 = FastMath.asin((-1.0));
    }

    @Test(timeout = 4000)
    public void test196196() throws Throwable {
        double double0 = FastMath.asin(1.0F);
    }

    @Test(timeout = 4000)
    public void test197197() throws Throwable {
        double double0 = FastMath.asin((-1222.135857097866));
    }

    @Test(timeout = 4000)
    public void test198198() throws Throwable {
        double double0 = FastMath.asin(1.01);
    }

    @Test(timeout = 4000)
    public void test199199() throws Throwable {
        double double0 = FastMath.atan2(6.123233995736766E-17, 0.0);
    }

    @Test(timeout = 4000)
    public void test200200() throws Throwable {
        double double0 = FastMath.atan2((-11.434339812172782), 0.0);
    }

    @Test(timeout = 4000)
    public void test201201() throws Throwable {
        double double0 = FastMath.atan2(1.1920929E-7F, Float.NEGATIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test202202() throws Throwable {
        double double0 = FastMath.atan2(Double.NEGATIVE_INFINITY, 0.0);
    }

    @Test(timeout = 4000)
    public void test203203() throws Throwable {
        double double0 = FastMath.atan2(0.0, (-5.718749537552229E-8));
    }

    @Test(timeout = 4000)
    public void test204204() throws Throwable {
        double double0 = FastMath.atan2(0.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test205205() throws Throwable {
        double double0 = FastMath.atan2(2943.677951461, Float.NaN);
    }

    @Test(timeout = 4000)
    public void test206206() throws Throwable {
        double double0 = FastMath.atan(1.2207031E-4F);
    }

    @Test(timeout = 4000)
    public void test207207() throws Throwable {
        double double0 = FastMath.asin((-0.5331566755779711));
    }

    @Test(timeout = 4000)
    public void test208208() throws Throwable {
        double double0 = FastMath.atan2((-2.5377382055662134E168), (-320.314538));
    }

    @Test(timeout = 4000)
    public void test209209() throws Throwable {
        double double0 = FastMath.atan(0.0);
    }

    @Test(timeout = 4000)
    public void test210210() throws Throwable {
        double double0 = FastMath.tan((-705.2247F));
    }

    @Test(timeout = 4000)
    public void test211211() throws Throwable {
        double double0 = FastMath.tan(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test212212() throws Throwable {
        double double0 = FastMath.tan(0.0);
    }

    @Test(timeout = 4000)
    public void test213213() throws Throwable {
        double double0 = FastMath.tan(-0.0);
    }

    @Test(timeout = 4000)
    public void test214214() throws Throwable {
        double double0 = FastMath.cos(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test215215() throws Throwable {
        double double0 = FastMath.cos(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test216216() throws Throwable {
        double double0 = FastMath.sin((-401.5669048437293));
    }

    @Test(timeout = 4000)
    public void test217217() throws Throwable {
        double double0 = FastMath.sin(1.0F);
    }

    @Test(timeout = 4000)
    public void test218218() throws Throwable {
        double double0 = FastMath.sin(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test219219() throws Throwable {
        double double0 = FastMath.sin(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test220220() throws Throwable {
        double double0 = FastMath.sin(0.0);
    }

    @Test(timeout = 4000)
    public void test221221() throws Throwable {
        double double0 = FastMath.sin(1.0183920005400422E109);
    }

    @Test(timeout = 4000)
    public void test222222() throws Throwable {
        double double0 = FastMath.cos((-1.1441115218462356E163));
    }

    @Test(timeout = 4000)
    public void test223223() throws Throwable {
        double double0 = FastMath.tan((-2.5445477450140954E103));
    }

    @Test(timeout = 4000)
    public void test224224() throws Throwable {
        double double0 = FastMath.cos((-8.0E298));
    }

    @Test(timeout = 4000)
    public void test225225() throws Throwable {
        double double0 = FastMath.cos((-4.048086182363987E115));
    }

    @Test(timeout = 4000)
    public void test226226() throws Throwable {
        double double0 = FastMath.tan(1.4E-45F);
    }

    @Test(timeout = 4000)
    public void test227227() throws Throwable {
        double double0 = FastMath.tan((-5034868814120038111L));
    }

    @Test(timeout = 4000)
    public void test228228() throws Throwable {
        double double0 = FastMath.sin((-0.12251966318888612));
    }

    @Test(timeout = 4000)
    public void test229229() throws Throwable {
        double double0 = FastMath.pow((double) 1.0F, 67);
    }

    @Test(timeout = 4000)
    public void test230230() throws Throwable {
        double double0 = FastMath.pow((double) (-1.4E-45F), (-1));
    }

    @Test(timeout = 4000)
    public void test231231() throws Throwable {
        double double0 = FastMath.pow((-4.019569741253664E-293), 0);
    }

    @Test(timeout = 4000)
    public void test232232() throws Throwable {
        double double0 = FastMath.pow(2.6197411946856397E-8, Double.NaN);
    }

    @Test(timeout = 4000)
    public void test233233() throws Throwable {
        double double0 = FastMath.pow((-194.00666400423395), (double) 36);
    }

    @Test(timeout = 4000)
    public void test234234() throws Throwable {
        double double0 = FastMath.pow((double) (-705.2247F), (double) (-705.2247F));
    }

    @Test(timeout = 4000)
    public void test235235() throws Throwable {
        double double0 = FastMath.pow((double) (-705.2247F), 3.3728055900968326E207);
    }

    @Test(timeout = 4000)
    public void test236236() throws Throwable {
        double double0 = FastMath.pow((double) Float.NEGATIVE_INFINITY, 1.2312228679656982);
    }

    @Test(timeout = 4000)
    public void test237237() throws Throwable {
        double double0 = FastMath.pow((-1497.8), Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test238238() throws Throwable {
        double double0 = FastMath.pow(0.0, (-222.6351827692));
    }

    @Test(timeout = 4000)
    public void test239239() throws Throwable {
        double double0 = FastMath.pow(0.0, (double) 1353);
    }

    @Test(timeout = 4000)
    public void test240240() throws Throwable {
        double double0 = FastMath.pow(Double.NaN, 3.203391672602453E-8);
    }

    @Test(timeout = 4000)
    public void test241241() throws Throwable {
        double double0 = FastMath.pow((-2068.6856), (double) 0.0F);
    }

    @Test(timeout = 4000)
    public void test242242() throws Throwable {
        double double0 = FastMath.log10((-148.2574483991));
    }

    @Test(timeout = 4000)
    public void test243243() throws Throwable {
        double double0 = FastMath.log1p(0.0);
    }

    @Test(timeout = 4000)
    public void test244244() throws Throwable {
        double double0 = FastMath.log1p(3533.223739782153);
    }

    @Test(timeout = 4000)
    public void test245245() throws Throwable {
        double double0 = FastMath.log1p(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test246246() throws Throwable {
        double double0 = FastMath.log1p((-1.0));
    }

    @Test(timeout = 4000)
    public void test247247() throws Throwable {
        double double0 = FastMath.pow((double) (-1.0F), (double) (-1));
    }

    @Test(timeout = 4000)
    public void test248248() throws Throwable {
        double double0 = FastMath.pow(1.01, (-5025.16826));
    }

    @Test(timeout = 4000)
    public void test249249() throws Throwable {
        double double0 = FastMath.log(0.875, (-1.0));
    }

    @Test(timeout = 4000)
    public void test250250() throws Throwable {
        double double0 = FastMath.acosh(6.49426800787191E246);
    }

    @Test(timeout = 4000)
    public void test251251() throws Throwable {
        double double0 = FastMath.log1p((-2.74877906944E11));
    }

    @Test(timeout = 4000)
    public void test252252() throws Throwable {
        double double0 = FastMath.log10(0.0);
    }

    @Test(timeout = 4000)
    public void test253253() throws Throwable {
        double double0 = FastMath.expm1(4.9E-324);
    }

    @Test(timeout = 4000)
    public void test254254() throws Throwable {
        double double0 = FastMath.expm1(1160);
    }

    @Test(timeout = 4000)
    public void test255255() throws Throwable {
        double double0 = FastMath.expm1((-9223372036854775808L));
    }

    @Test(timeout = 4000)
    public void test256256() throws Throwable {
        float float0 = FastMath.signum(0.0F);
    }

    @Test(timeout = 4000)
    public void test257257() throws Throwable {
        float float0 = FastMath.signum((-4004.8F));
    }

    @Test(timeout = 4000)
    public void test258258() throws Throwable {
        float float0 = FastMath.signum(275.988F);
    }

    @Test(timeout = 4000)
    public void test259259() throws Throwable {
        double double0 = FastMath.signum(0.0);
    }

    @Test(timeout = 4000)
    public void test260260() throws Throwable {
        double double0 = FastMath.signum((-1.5707963267948966));
    }

    @Test(timeout = 4000)
    public void test261261() throws Throwable {
        double double0 = FastMath.signum(952.592);
    }

    @Test(timeout = 4000)
    public void test262262() throws Throwable {
        double double0 = FastMath.atanh(0.031);
    }

    @Test(timeout = 4000)
    public void test263263() throws Throwable {
        double double0 = FastMath.atanh(0.087);
    }

    @Test(timeout = 4000)
    public void test264264() throws Throwable {
        double double0 = FastMath.atanh(0.0);
    }

    @Test(timeout = 4000)
    public void test265265() throws Throwable {
        double double0 = FastMath.atanh((-690.93434175));
    }

    @Test(timeout = 4000)
    public void test266266() throws Throwable {
        double double0 = FastMath.asinh(0.01165061630308628);
    }

    @Test(timeout = 4000)
    public void test267267() throws Throwable {
        double double0 = FastMath.asinh(0.087);
    }

    @Test(timeout = 4000)
    public void test268268() throws Throwable {
        double double0 = FastMath.asinh(0.1111111111111111);
    }

    @Test(timeout = 4000)
    public void test269269() throws Throwable {
        double double0 = FastMath.asinh(0.0F);
    }

    @Test(timeout = 4000)
    public void test270270() throws Throwable {
        double double0 = FastMath.asinh((-1624));
    }

    @Test(timeout = 4000)
    public void test271271() throws Throwable {
        double double0 = FastMath.tanh(20.0);
    }

    @Test(timeout = 4000)
    public void test272272() throws Throwable {
        double double0 = FastMath.tanh(0.0);
    }

    @Test(timeout = 4000)
    public void test273273() throws Throwable {
        double double0 = FastMath.tanh((-1.0129027912496858E-9));
    }

    @Test(timeout = 4000)
    public void test274274() throws Throwable {
        double double0 = FastMath.tanh(520.11364);
    }

    @Test(timeout = 4000)
    public void test275275() throws Throwable {
        double double0 = FastMath.tanh(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test276276() throws Throwable {
        double double0 = FastMath.tanh((-1521.9));
    }

    @Test(timeout = 4000)
    public void test277277() throws Throwable {
        double double0 = FastMath.sinh(0.16666666666666666);
    }

    @Test(timeout = 4000)
    public void test278278() throws Throwable {
        double double0 = FastMath.sinh((-0.5106697435592696));
    }

    @Test(timeout = 4000)
    public void test279279() throws Throwable {
        double double0 = FastMath.sinh((-388.4587160176364));
    }

    @Test(timeout = 4000)
    public void test280280() throws Throwable {
        double double0 = FastMath.sinh((-2045.146645601));
    }

    @Test(timeout = 4000)
    public void test281281() throws Throwable {
        double double0 = FastMath.sinh(1413.2458);
    }

    @Test(timeout = 4000)
    public void test282282() throws Throwable {
        double double0 = FastMath.sinh(0.0F);
    }

    @Test(timeout = 4000)
    public void test283283() throws Throwable {
        double double0 = FastMath.sinh(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test284284() throws Throwable {
        double double0 = FastMath.cosh((-1.0129027912496858E-9));
    }

    @Test(timeout = 4000)
    public void test285285() throws Throwable {
        double double0 = FastMath.cosh((-1068.15));
    }

    @Test(timeout = 4000)
    public void test286286() throws Throwable {
        double double0 = FastMath.cosh((-478.544F));
    }

    @Test(timeout = 4000)
    public void test287287() throws Throwable {
        double double0 = FastMath.cosh(313.3895105278287);
    }

    @Test(timeout = 4000)
    public void test288288() throws Throwable {
        double double0 = FastMath.cosh(0.0);
    }

    @Test(timeout = 4000)
    public void test289289() throws Throwable {
        double double0 = FastMath.cosh(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test290290() throws Throwable {
        double double0 = FastMath.cosh(2.113946677051906E252);
    }

    @Test(timeout = 4000)
    public void test291291() throws Throwable {
        double double0 = FastMath.toRadians(2.2737367544323206E-13);
    }

    @Test(timeout = 4000)
    public void test292292() throws Throwable {
        double double0 = FastMath.acos((-0.31454662262481564));
    }

    @Test(timeout = 4000)
    public void test293293() throws Throwable {
        double double0 = FastMath.random();
        double double1 = FastMath.random();
    }

    @Test(timeout = 4000)
    public void test294294() throws Throwable {
        int int0 = FastMath.getExponent(0.0F);
    }

    @Test(timeout = 4000)
    public void test295295() throws Throwable {
        String[] stringArray0 = new String[2];
        FastMath.main(stringArray0);
        // Undeclared exception!
        FastMath.main(stringArray0);
    }

    @Test(timeout = 4000)
    public void test296296() throws Throwable {
        double double0 = FastMath.sinh(273L);
    }

    @Test(timeout = 4000)
    public void test297297() throws Throwable {
        float float0 = FastMath.nextUp((float) (-14L));
    }

    @Test(timeout = 4000)
    public void test298298() throws Throwable {
        double double0 = FastMath.acosh(0.036);
    }

    @Test(timeout = 4000)
    public void test299299() throws Throwable {
        double double0 = FastMath.hypot(0.7214844226837158, (-1.0662027949814858E-7));
    }

    @Test(timeout = 4000)
    public void test300300() throws Throwable {
        double double0 = FastMath.expm1(0.0);
    }

    @Test(timeout = 4000)
    public void test301301() throws Throwable {
        int int0 = FastMath.round((float) 0);
    }

    @Test(timeout = 4000)
    public void test302302() throws Throwable {
        long long0 = FastMath.round((-13.95));
    }
}
