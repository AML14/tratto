/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 21:51:54 GMT 2023
 */
package org.apache.commons.math.stat.regression;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.stat.regression.SimpleRegression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class SimpleRegression_ESTest extends SimpleRegression_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[8][9];
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getIntercept();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[8][9];
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getIntercept();
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        simpleRegression0.getSlopeConfidenceInterval((-332.6275957666524));
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        simpleRegression0.predict(2856.9300351024867);
        simpleRegression0.getSumSquaredErrors();
    }

    @Test(timeout = 4000)
    public void test024() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        simpleRegression0.predict(2856.9300351024867);
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test025() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        simpleRegression0.predict(2856.9300351024867);
        simpleRegression0.getRegressionSumSquares();
    }

    @Test(timeout = 4000)
    public void test036() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[8][1];
        double[] doubleArray1 = new double[3];
        doubleArray1[1] = (-664.5058);
        doubleArray0[0] = doubleArray1;
        double[] doubleArray2 = new double[3];
        doubleArray0[1] = doubleArray2;
        doubleArray0[2] = doubleArray1;
        doubleArray0[3] = doubleArray0[2];
        doubleArray0[4] = doubleArray2;
        doubleArray0[5] = doubleArray0[3];
        doubleArray0[6] = doubleArray0[0];
        doubleArray0[7] = doubleArray0[1];
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getTotalSumSquares();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test037() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[8][1];
        double[] doubleArray1 = new double[3];
        doubleArray1[1] = (-664.5058);
        doubleArray0[0] = doubleArray1;
        double[] doubleArray2 = new double[3];
        doubleArray0[1] = doubleArray2;
        doubleArray0[2] = doubleArray1;
        doubleArray0[3] = doubleArray0[2];
        doubleArray0[4] = doubleArray2;
        doubleArray0[5] = doubleArray0[3];
        doubleArray0[6] = doubleArray0[0];
        doubleArray0[7] = doubleArray0[1];
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getTotalSumSquares();
    }

    @Test(timeout = 4000)
    public void test048() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[8][3];
        double[] doubleArray1 = new double[6];
        doubleArray1[1] = (-1699.8032292);
        doubleArray0[0] = doubleArray1;
        double[] doubleArray2 = new double[3];
        doubleArray2[0] = 608.60225;
        doubleArray0[2] = doubleArray2;
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getSlopeConfidenceInterval();
        simpleRegression0.getRegressionSumSquares();
    }

    @Test(timeout = 4000)
    public void test049() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[8][3];
        double[] doubleArray1 = new double[6];
        doubleArray1[1] = (-1699.8032292);
        doubleArray0[0] = doubleArray1;
        double[] doubleArray2 = new double[3];
        doubleArray2[0] = 608.60225;
        doubleArray0[2] = doubleArray2;
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getSlopeConfidenceInterval();
    }

    @Test(timeout = 4000)
    public void test0510() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[6][3];
        double[] doubleArray1 = new double[5];
        doubleArray1[0] = 350.1744551119643;
        doubleArray0[0] = doubleArray1;
        double[] doubleArray2 = new double[8];
        doubleArray2[1] = (-2509.484689958194);
        doubleArray0[2] = doubleArray2;
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getSignificance();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test0511() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[6][3];
        double[] doubleArray1 = new double[5];
        doubleArray1[0] = 350.1744551119643;
        doubleArray0[0] = doubleArray1;
        double[] doubleArray2 = new double[8];
        doubleArray2[1] = (-2509.484689958194);
        doubleArray0[2] = doubleArray2;
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getSignificance();
    }

    @Test(timeout = 4000)
    public void test0612() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[8][3];
        double[] doubleArray1 = new double[6];
        doubleArray1[0] = 608.60225;
        doubleArray1[1] = (-1699.8032292);
        doubleArray0[0] = doubleArray1;
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getRegressionSumSquares();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test0613() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[8][3];
        double[] doubleArray1 = new double[6];
        doubleArray1[0] = 608.60225;
        doubleArray1[1] = (-1699.8032292);
        doubleArray0[0] = doubleArray1;
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getRegressionSumSquares();
    }

    @Test(timeout = 4000)
    public void test0714() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[6][3];
        double[] doubleArray1 = new double[5];
        doubleArray1[0] = 350.1744551119643;
        doubleArray0[0] = doubleArray1;
        double[] doubleArray2 = new double[8];
        doubleArray2[1] = (-2509.484689958194);
        doubleArray0[2] = doubleArray2;
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getRSquare();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test0715() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[6][3];
        double[] doubleArray1 = new double[5];
        doubleArray1[0] = 350.1744551119643;
        doubleArray0[0] = doubleArray1;
        double[] doubleArray2 = new double[8];
        doubleArray2[1] = (-2509.484689958194);
        doubleArray0[2] = doubleArray2;
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getRSquare();
    }

    @Test(timeout = 4000)
    public void test0816() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[2][2];
        simpleRegression0.addData(doubleArray0);
        long long0 = simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test0917() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[6][8];
        double[] doubleArray1 = new double[5];
        doubleArray1[0] = 1811.9723634207528;
        doubleArray1[1] = (-1.0);
        doubleArray0[0] = doubleArray1;
        doubleArray0[1] = doubleArray0[0];
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getMeanSquareError();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test0918() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[6][8];
        double[] doubleArray1 = new double[5];
        doubleArray1[0] = 1811.9723634207528;
        doubleArray1[1] = (-1.0);
        doubleArray0[0] = doubleArray1;
        doubleArray0[1] = doubleArray0[0];
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getMeanSquareError();
    }

    @Test(timeout = 4000)
    public void test1019() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[8][3];
        double[] doubleArray1 = new double[6];
        doubleArray1[1] = (-1699.8032292);
        doubleArray0[0] = doubleArray1;
        double[] doubleArray2 = new double[3];
        doubleArray2[0] = 608.60225;
        doubleArray0[2] = doubleArray2;
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getInterceptStdErr();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test1020() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[8][3];
        double[] doubleArray1 = new double[6];
        doubleArray1[1] = (-1699.8032292);
        doubleArray0[0] = doubleArray1;
        double[] doubleArray2 = new double[3];
        doubleArray2[0] = 608.60225;
        doubleArray0[2] = doubleArray2;
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getInterceptStdErr();
    }

    @Test(timeout = 4000)
    public void test1121() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        simpleRegression0.addData((double[][]) null);
    }

    @Test(timeout = 4000)
    public void test1222() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[6][9];
        double[] doubleArray1 = new double[1];
        doubleArray0[4] = doubleArray1;
        simpleRegression0.addData(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test1323() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        simpleRegression0.getSlopeConfidenceInterval(0.05);
    }

    @Test(timeout = 4000)
    public void test1424() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double double0 = simpleRegression0.getMeanSquareError();
    }

    @Test(timeout = 4000)
    public void test1425() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double double0 = simpleRegression0.getMeanSquareError();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test1426() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double double0 = simpleRegression0.getMeanSquareError();
        simpleRegression0.getSumSquaredErrors();
    }

    @Test(timeout = 4000)
    public void test1527() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double double0 = simpleRegression0.getTotalSumSquares();
    }

    @Test(timeout = 4000)
    public void test1528() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double double0 = simpleRegression0.getTotalSumSquares();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test1529() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double double0 = simpleRegression0.getTotalSumSquares();
        simpleRegression0.getSumSquaredErrors();
    }

    @Test(timeout = 4000)
    public void test1630() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[8][1];
        double[] doubleArray1 = new double[3];
        doubleArray0[0] = doubleArray1;
        doubleArray0[1] = doubleArray0[0];
        doubleArray0[2] = doubleArray0[1];
        doubleArray0[3] = doubleArray0[1];
        doubleArray0[4] = doubleArray0[3];
        doubleArray0[5] = doubleArray1;
        doubleArray0[6] = doubleArray0[1];
        doubleArray0[7] = doubleArray0[1];
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getTotalSumSquares();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test1631() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[8][1];
        double[] doubleArray1 = new double[3];
        doubleArray0[0] = doubleArray1;
        doubleArray0[1] = doubleArray0[0];
        doubleArray0[2] = doubleArray0[1];
        doubleArray0[3] = doubleArray0[1];
        doubleArray0[4] = doubleArray0[3];
        doubleArray0[5] = doubleArray1;
        doubleArray0[6] = doubleArray0[1];
        doubleArray0[7] = doubleArray0[1];
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getTotalSumSquares();
    }

    @Test(timeout = 4000)
    public void test1732() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[7][1];
        double[] doubleArray1 = new double[3];
        doubleArray1[0] = Double.NaN;
        doubleArray0[0] = doubleArray1;
        doubleArray0[1] = doubleArray0[0];
        doubleArray0[2] = doubleArray1;
        doubleArray0[3] = doubleArray1;
        doubleArray0[4] = doubleArray0[3];
        doubleArray0[5] = doubleArray1;
        doubleArray0[6] = doubleArray1;
        simpleRegression0.addData(doubleArray0);
        simpleRegression0.getSlope();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test1833() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[7][1];
        double[] doubleArray1 = new double[3];
        doubleArray0[0] = doubleArray1;
        doubleArray0[1] = doubleArray1;
        doubleArray0[2] = doubleArray0[0];
        doubleArray0[3] = doubleArray1;
        doubleArray0[4] = doubleArray0[2];
        doubleArray0[5] = doubleArray0[1];
        doubleArray0[6] = doubleArray0[0];
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getSlope();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test1834() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[7][1];
        double[] doubleArray1 = new double[3];
        doubleArray0[0] = doubleArray1;
        doubleArray0[1] = doubleArray1;
        doubleArray0[2] = doubleArray0[0];
        doubleArray0[3] = doubleArray1;
        doubleArray0[4] = doubleArray0[2];
        doubleArray0[5] = doubleArray0[1];
        doubleArray0[6] = doubleArray0[0];
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getSlope();
    }

    @Test(timeout = 4000)
    public void test1935() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double double0 = simpleRegression0.getSlope();
        simpleRegression0.getSumSquaredErrors();
    }

    @Test(timeout = 4000)
    public void test1936() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double double0 = simpleRegression0.getSlope();
    }

    @Test(timeout = 4000)
    public void test1937() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double double0 = simpleRegression0.getSlope();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test2038() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[8][1];
        double[] doubleArray1 = new double[3];
        doubleArray0[0] = doubleArray1;
        doubleArray0[1] = doubleArray1;
        doubleArray0[2] = doubleArray1;
        doubleArray0[3] = doubleArray1;
        doubleArray0[4] = doubleArray0[0];
        doubleArray0[5] = doubleArray1;
        doubleArray0[6] = doubleArray0[2];
        doubleArray0[7] = doubleArray0[3];
        simpleRegression0.addData(doubleArray0);
        simpleRegression0.addData((-968.4603129835), (-968.4603129835));
        simpleRegression0.getTotalSumSquares();
    }

    @Test(timeout = 4000)
    public void test2139() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double double0 = simpleRegression0.getSlopeStdErr();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test2140() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double double0 = simpleRegression0.getSlopeStdErr();
        simpleRegression0.getMeanSquareError();
    }

    @Test(timeout = 4000)
    public void test2141() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double double0 = simpleRegression0.getSlopeStdErr();
        simpleRegression0.getSumSquaredErrors();
    }

    @Test(timeout = 4000)
    public void test2142() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double double0 = simpleRegression0.getSlopeStdErr();
    }

    @Test(timeout = 4000)
    public void test2243() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double double0 = simpleRegression0.getSumSquaredErrors();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test2244() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double double0 = simpleRegression0.getSumSquaredErrors();
    }

    @Test(timeout = 4000)
    public void test2345() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        simpleRegression0.getSlopeConfidenceInterval(0.0);
    }

    @Test(timeout = 4000)
    public void test2446() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        simpleRegression0.getSlopeConfidenceInterval(909.40891273);
    }

    @Test(timeout = 4000)
    public void test2547() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[1][0];
        double[] doubleArray1 = new double[8];
        doubleArray1[1] = 663.000092736518;
        simpleRegression0.addData(128.80567165176635, 0.0);
        doubleArray0[0] = doubleArray1;
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getR();
        simpleRegression0.getRSquare();
    }

    @Test(timeout = 4000)
    public void test2548() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[1][0];
        double[] doubleArray1 = new double[8];
        doubleArray1[1] = 663.000092736518;
        simpleRegression0.addData(128.80567165176635, 0.0);
        doubleArray0[0] = doubleArray1;
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getR();
    }

    @Test(timeout = 4000)
    public void test2649() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        simpleRegression0.getR();
        simpleRegression0.getRegressionSumSquares();
    }

    @Test(timeout = 4000)
    public void test2650() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        simpleRegression0.getR();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test2651() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        simpleRegression0.getR();
        simpleRegression0.getSumSquaredErrors();
    }

    @Test(timeout = 4000)
    public void test2652() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        simpleRegression0.getR();
        simpleRegression0.getTotalSumSquares();
    }

    @Test(timeout = 4000)
    public void test2753() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[8][9];
        double[] doubleArray1 = new double[6];
        doubleArray1[0] = 3052.94544;
        doubleArray0[1] = doubleArray1;
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getIntercept();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test2754() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[8][9];
        double[] doubleArray1 = new double[6];
        doubleArray1[0] = 3052.94544;
        doubleArray0[1] = doubleArray1;
        simpleRegression0.addData(doubleArray0);
        double double0 = simpleRegression0.getIntercept();
    }

    @Test(timeout = 4000)
    public void test2855() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        simpleRegression0.getSlopeConfidenceInterval();
    }

    @Test(timeout = 4000)
    public void test2956() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        double[][] doubleArray0 = new double[8][9];
        simpleRegression0.addData(doubleArray0);
        simpleRegression0.getSignificance();
        simpleRegression0.getTotalSumSquares();
    }

    @Test(timeout = 4000)
    public void test3057() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        long long0 = simpleRegression0.getN();
        simpleRegression0.getSumSquaredErrors();
    }

    @Test(timeout = 4000)
    public void test3058() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        long long0 = simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test3159() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        simpleRegression0.clear();
        simpleRegression0.getSumSquaredErrors();
    }

    @Test(timeout = 4000)
    public void test3160() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        simpleRegression0.clear();
        simpleRegression0.getN();
    }

    @Test(timeout = 4000)
    public void test3261() throws Throwable {
        SimpleRegression simpleRegression0 = new SimpleRegression();
        simpleRegression0.getSignificance();
    }
}
