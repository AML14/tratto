/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 14:05:48 GMT 2023
 */
package org.apache.commons.math.fraction;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.apache.commons.math.fraction.BigFraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class BigFraction_ESTest extends BigFraction_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
        BigFraction bigFraction1 = new BigFraction(0L);
        BigFraction bigFraction2 = bigFraction0.TWO_FIFTHS.subtract(bigFraction1);
        bigFraction0.MINUS_ONE.pow(2.4106173515319824);
        bigFraction2.ONE_QUARTER.getDenominatorAsInt();
        BigFraction bigFraction3 = bigFraction0.reciprocal();
        BigFraction bigFraction4 = bigFraction0.ONE_HALF.reciprocal();
        bigFraction0.percentageValue();
        BigFraction bigFraction5 = bigFraction4.divide(bigFraction0);
        BigFraction bigFraction6 = bigFraction5.TWO_FIFTHS.divide(1951);
        BigFraction bigFraction7 = bigFraction6.ONE_FIFTH.reciprocal();
        bigFraction7.ONE_THIRD.getDenominatorAsInt();
        BigFraction bigFraction8 = bigFraction5.ONE_FIFTH.multiply(bigFraction3);
        bigFraction6.TWO_THIRDS.getDenominatorAsLong();
        bigFraction8.TWO_QUARTERS.add(bigFraction4);
        bigFraction0.getField();
        bigFraction2.getField();
        BigFraction bigFraction9 = bigFraction1.multiply(4458);
        bigFraction9.ZERO.divide(3L);
        bigFraction7.abs();
        bigFraction7.divide((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(0.0);
        bigFraction0.intValue();
        BigFraction bigFraction1 = bigFraction0.ONE_HALF.reciprocal();
        bigFraction1.ONE.multiply((-74));
        BigFraction bigFraction2 = BigFraction.TWO_QUARTERS;
        int int0 = 1847;
        BigFraction bigFraction3 = bigFraction2.subtract(1847);
        bigFraction0.divide(bigFraction2);
        bigFraction3.TWO.toString();
        BigFraction bigFraction4 = bigFraction0.reduce();
        bigFraction4.TWO.subtract(1847);
        byte[] byteArray0 = new byte[6];
        byteArray0[0] = (byte) (-120);
        bigFraction3.ONE.multiply((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-717.224843262248));
        int int0 = 1245;
        BigFraction bigFraction1 = bigFraction0.pow(1245);
        BigFraction bigFraction2 = bigFraction0.THREE_FIFTHS.add((long) 1245);
        BigFraction bigFraction3 = bigFraction1.divide(bigFraction0);
        BigFraction bigFraction4 = bigFraction1.add(bigFraction0);
        BigFraction bigFraction5 = bigFraction3.divide(1037L);
        int int1 = 3;
        BigFraction bigFraction6 = bigFraction2.divide(3);
        bigFraction2.ONE_FIFTH.divide(328L);
        BigFraction bigFraction7 = bigFraction5.ONE_HALF.subtract(1037L);
        bigFraction7.MINUS_ONE.equals(bigFraction6);
        bigFraction5.getNumeratorAsLong();
        bigFraction5.add(bigFraction2);
        BigInteger bigInteger0 = null;
        bigFraction4.multiply((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
        bigFraction0.ONE_HALF.bigDecimalValue();
        BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));
        bigFraction1.TWO_FIFTHS.floatValue();
        BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
        bigFraction2.ONE_THIRD.getField();
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) (-1);
        byteArray0[1] = (byte) 79;
        byteArray0[2] = (byte) 4;
        byteArray0[3] = (byte) 0;
        byteArray0[4] = (byte) (-65);
        byteArray0[5] = (byte) 0;
        int int0 = bigFraction0.ONE.compareTo(bigFraction2);
    }

    @Test(timeout = 4000)
    public void test0034() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
        bigFraction0.ONE_HALF.bigDecimalValue();
        BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));
        bigFraction1.TWO_FIFTHS.floatValue();
        BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
        bigFraction2.ONE_THIRD.getField();
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) (-1);
        byteArray0[1] = (byte) 79;
        byteArray0[2] = (byte) 4;
        byteArray0[3] = (byte) 0;
        byteArray0[4] = (byte) (-65);
        byteArray0[5] = (byte) 0;
        int int0 = bigFraction0.ONE.compareTo(bigFraction2);
        byteArray0[6] = (byte) (-5);
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        BigFraction bigFraction3 = bigFraction2.TWO.divide(bigInteger0);
        BigFraction bigFraction4 = bigFraction3.THREE_FIFTHS.add((int) (byte) 0);
        bigFraction4.equals((Object) bigFraction0);
    }

    @Test(timeout = 4000)
    public void test0035() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
        bigFraction0.ONE_HALF.bigDecimalValue();
        BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));
        bigFraction1.TWO_FIFTHS.floatValue();
        BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
        bigFraction2.ONE_THIRD.getField();
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) (-1);
        byteArray0[1] = (byte) 79;
        byteArray0[2] = (byte) 4;
        byteArray0[3] = (byte) 0;
        byteArray0[4] = (byte) (-65);
        byteArray0[5] = (byte) 0;
        int int0 = bigFraction0.ONE.compareTo(bigFraction2);
        byteArray0[6] = (byte) (-5);
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        BigFraction bigFraction3 = bigFraction2.TWO.divide(bigInteger0);
        BigFraction bigFraction4 = bigFraction3.THREE_FIFTHS.add((int) (byte) 0);
        float float0 = bigFraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test0036() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
        bigFraction0.ONE_HALF.bigDecimalValue();
        BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));
        bigFraction1.TWO_FIFTHS.floatValue();
        BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
        bigFraction2.ONE_THIRD.getField();
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) (-1);
        byteArray0[1] = (byte) 79;
        byteArray0[2] = (byte) 4;
        byteArray0[3] = (byte) 0;
        byteArray0[4] = (byte) (-65);
        byteArray0[5] = (byte) 0;
        int int0 = bigFraction0.ONE.compareTo(bigFraction2);
        byteArray0[6] = (byte) (-5);
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        BigFraction bigFraction3 = bigFraction2.TWO.divide(bigInteger0);
        BigFraction bigFraction4 = bigFraction3.THREE_FIFTHS.add((int) (byte) 0);
        float float0 = bigFraction1.floatValue();
        float float1 = bigFraction3.floatValue();
        bigFraction0.equals((Object) bigFraction4);
    }

    @Test(timeout = 4000)
    public void test0037() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
        bigFraction0.ONE_HALF.bigDecimalValue();
        BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));
        bigFraction1.TWO_FIFTHS.floatValue();
        BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
        bigFraction2.ONE_THIRD.getField();
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) (-1);
        byteArray0[1] = (byte) 79;
        byteArray0[2] = (byte) 4;
        byteArray0[3] = (byte) 0;
        byteArray0[4] = (byte) (-65);
        byteArray0[5] = (byte) 0;
        int int0 = bigFraction0.ONE.compareTo(bigFraction2);
        byteArray0[6] = (byte) (-5);
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        BigFraction bigFraction3 = bigFraction2.TWO.divide(bigInteger0);
        BigFraction bigFraction4 = bigFraction3.THREE_FIFTHS.add((int) (byte) 0);
        float float0 = bigFraction1.floatValue();
        float float1 = bigFraction3.floatValue();
    }

    @Test(timeout = 4000)
    public void test0039() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
        bigFraction0.ONE_HALF.bigDecimalValue();
        BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));
        bigFraction1.TWO_FIFTHS.floatValue();
        BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
        bigFraction2.ONE_THIRD.getField();
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) (-1);
        byteArray0[1] = (byte) 79;
        byteArray0[2] = (byte) 4;
        byteArray0[3] = (byte) 0;
        byteArray0[4] = (byte) (-65);
        byteArray0[5] = (byte) 0;
        int int0 = bigFraction0.ONE.compareTo(bigFraction2);
        byteArray0[6] = (byte) (-5);
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        BigFraction bigFraction3 = bigFraction2.TWO.divide(bigInteger0);
        BigFraction bigFraction4 = bigFraction3.THREE_FIFTHS.add((int) (byte) 0);
        float float0 = bigFraction1.floatValue();
        float float1 = bigFraction3.floatValue();
        bigFraction2.shortValue();
    }

    @Test(timeout = 4000)
    public void test00410() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
        BigFraction bigFraction1 = BigFraction.getReducedFraction(1055, 37);
        BigFraction bigFraction2 = bigFraction1.ONE_HALF.add(1055);
        BigFraction bigFraction3 = bigFraction0.pow(0L);
        BigFraction bigFraction4 = bigFraction3.divide((-2651));
        bigFraction4.shortValue();
    }

    @Test(timeout = 4000)
    public void test00411() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
        BigFraction bigFraction1 = BigFraction.getReducedFraction(1055, 37);
        BigFraction bigFraction2 = bigFraction1.ONE_HALF.add(1055);
        BigFraction bigFraction3 = bigFraction0.pow(0L);
        BigFraction bigFraction4 = bigFraction3.divide((-2651));
        double double0 = bigFraction2.doubleValue();
        bigFraction1.byteValue();
    }

    @Test(timeout = 4000)
    public void test00412() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
        BigFraction bigFraction1 = BigFraction.getReducedFraction(1055, 37);
        BigFraction bigFraction2 = bigFraction1.ONE_HALF.add(1055);
        BigFraction bigFraction3 = bigFraction0.pow(0L);
        BigFraction bigFraction4 = bigFraction3.divide((-2651));
        double double0 = bigFraction2.doubleValue();
    }

    @Test(timeout = 4000)
    public void test00513() throws Throwable {
        BigFraction bigFraction0 = BigFraction.getReducedFraction((-1482), 1045);
        bigFraction0.toString();
        bigFraction0.ONE.percentageValue();
        BigFraction bigFraction1 = bigFraction0.TWO_QUARTERS.multiply((-496L));
        bigFraction0.THREE_QUARTERS.equals("-78 / 55");
        BigFraction bigFraction2 = bigFraction0.add(bigFraction0);
        BigInteger bigInteger0 = bigFraction2.getDenominator();
        BigFraction bigFraction3 = bigFraction1.multiply(bigInteger0);
        bigFraction3.TWO_THIRDS.getNumeratorAsLong();
        BigFraction bigFraction4 = bigFraction0.add(1);
        BigInteger bigInteger1 = BigInteger.ONE;
        bigInteger1.xor(bigInteger0);
        bigFraction0.divide(bigInteger1);
        BigFraction bigFraction5 = bigFraction1.multiply(bigFraction4);
        bigFraction5.FOUR_FIFTHS.getDenominatorAsLong();
        bigFraction5.TWO_QUARTERS.pow(0.0);
        bigFraction4.TWO.subtract((long) 1);
        bigFraction4.divide(bigFraction0);
        bigFraction4.bigDecimalValue(2472);
    }

    @Test(timeout = 4000)
    public void test00614() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_HALF;
        bigFraction0.ONE_FIFTH.getDenominatorAsInt();
        int int0 = (-1209);
        BigFraction bigFraction1 = null;
        bigFraction0.TWO_THIRDS.divide((BigFraction) null);
    }

    @Test(timeout = 4000)
    public void test00715() throws Throwable {
        int int0 = (-1);
        BigFraction bigFraction0 = null;
        bigFraction0 = new BigFraction(0.0, (-1));
    }

    @Test(timeout = 4000)
    public void test00816() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(206.213706466, 206.213706466, (-3));
        bigFraction0.TWO_THIRDS.doubleValue();
        bigFraction0.FOUR_FIFTHS.percentageValue();
        BigFraction bigFraction1 = BigFraction.MINUS_ONE;
        bigFraction1.ONE.multiply(bigFraction0);
        BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
        BigFraction bigFraction3 = bigFraction1.TWO_QUARTERS.multiply((-2446L));
        bigFraction0.longValue();
        BigFraction bigFraction4 = BigFraction.getReducedFraction((-3), (-182));
        BigFraction bigFraction5 = bigFraction0.multiply(206L);
        BigFraction bigFraction6 = bigFraction5.add(bigFraction2);
        bigFraction3.pow((-182));
        bigFraction6.longValue();
        bigFraction4.reduce();
        bigFraction2.getDenominatorAsInt();
        bigFraction5.hashCode();
        bigFraction1.getDenominator();
        bigFraction4.bigDecimalValue((-182));
    }

    @Test(timeout = 4000)
    public void test00917() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO;
        bigFraction0.longValue();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-1);
        byteArray0[1] = (byte) (-83);
        BigInteger bigInteger0 = BigInteger.ONE;
        bigFraction0.TWO_THIRDS.add(bigInteger0);
        bigFraction0.ZERO.pow(0.0);
        byteArray0[2] = (byte) (-1);
        bigFraction0.ONE_QUARTER.floatValue();
        BigInteger bigInteger1 = new BigInteger(byteArray0);
        BigFraction bigFraction1 = bigFraction0.pow(bigInteger1);
        bigFraction1.ONE.floatValue();
        BigInteger bigInteger2 = null;
        BigFraction bigFraction2 = BigFraction.ZERO;
        bigFraction1.ONE.add(bigFraction2);
        bigFraction0.add((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test01018() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ONE;
        BigFraction bigFraction0 = new BigFraction(bigInteger0);
        BigFraction bigFraction1 = bigFraction0.divide(1);
        bigFraction1.add(1);
    }

    @Test(timeout = 4000)
    public void test01119() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(2421.19, 629);
    }

    @Test(timeout = 4000)
    public void test01220() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_THIRDS;
        BigFraction bigFraction1 = null;
        bigFraction1 = new BigFraction(0.0, 0.0, (-4207));
    }

    @Test(timeout = 4000)
    public void test01321() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
        bigFraction0.getDenominatorAsLong();
        bigFraction0.subtract(603);
    }

    @Test(timeout = 4000)
    public void test01422() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_THIRD;
        BigFraction bigFraction1 = BigFraction.THREE_QUARTERS;
        bigFraction0.divide(bigFraction1);
    }

    @Test(timeout = 4000)
    public void test01523() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO;
        bigFraction0.subtract(1037L);
        bigFraction0.getDenominatorAsInt();
    }

    @Test(timeout = 4000)
    public void test01624() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(1135.778507909085, 27);
        bigFraction0.divide(4577762542105553359L);
    }

    @Test(timeout = 4000)
    public void test01725() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;
        BigInteger bigInteger0 = BigInteger.valueOf(0L);
        bigFraction0.divide(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test01826() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(1013.127912813, 1013.127912813, 2274);
        BigFraction bigFraction1 = BigFraction.ONE_QUARTER;
        bigFraction0.compareTo(bigFraction1);
    }

    @Test(timeout = 4000)
    public void test01927() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
        Object object0 = new Object();
        bigFraction0.TWO_FIFTHS.equals(object0);
        bigFraction0.TWO.bigDecimalValue();
        bigFraction0.getNumeratorAsInt();
    }

    @Test(timeout = 4000)
    public void test02028() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ZERO;
        bigFraction0.longValue();
        BigFraction bigFraction1 = BigFraction.TWO;
        bigFraction0.add(bigFraction1);
        bigFraction1.reciprocal();
        bigFraction1.THREE_QUARTERS.bigDecimalValue(1501, 1501);
    }

    @Test(timeout = 4000)
    public void test02129() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_HALF;
        bigFraction0.bigDecimalValue(1438);
    }

    @Test(timeout = 4000)
    public void test02230() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_THIRD;
        bigFraction0.ONE_QUARTER.pow(0.0);
        bigFraction0.ONE_FIFTH.toString();
        BigInteger bigInteger0 = BigInteger.ZERO;
        bigFraction0.pow(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test02331() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(880.1038475455);
        bigFraction0.ONE_THIRD.floatValue();
        bigFraction0.percentageValue();
    }

    @Test(timeout = 4000)
    public void test02432() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_QUARTERS;
        bigFraction0.FOUR_FIFTHS.add((-3535L));
        bigFraction0.multiply((-114L));
    }

    @Test(timeout = 4000)
    public void test02533() throws Throwable {
        BigFraction bigFraction0 = BigFraction.getReducedFraction(0, 0);
        BigFraction bigFraction1 = bigFraction0.negate();
        bigFraction0.doubleValue();
        bigFraction1.divide(bigFraction0);
    }

    @Test(timeout = 4000)
    public void test02634() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO;
        bigFraction0.doubleValue();
        bigFraction0.FOUR_FIFTHS.getField();
        bigFraction0.pow(847);
    }

    @Test(timeout = 4000)
    public void test02735() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(2615L);
        bigFraction0.TWO.pow((-338));
        bigFraction0.THREE_QUARTERS.toString();
        bigFraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test02836() throws Throwable {
        BigInteger bigInteger0 = BigInteger.TEN;
        BigFraction bigFraction0 = new BigFraction(bigInteger0);
        BigFraction bigFraction1 = null;
        bigFraction1 = new BigFraction(0.0, 0.0, 2356);
    }

    @Test(timeout = 4000)
    public void test02937() throws Throwable {
        long long0 = 5648769086999809661L;
        BigFraction bigFraction0 = new BigFraction(4208363204685324176L, 5648769086999809661L);
        bigFraction0.THREE_QUARTERS.divide(0L);
    }

    @Test(timeout = 4000)
    public void test03038() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ZERO;
        BigFraction bigFraction0 = new BigFraction(bigInteger0);
        bigFraction0.getField();
        BigFraction bigFraction1 = bigFraction0.pow(0L);
        int int0 = 0;
        bigFraction1.bigDecimalValue(0);
        BigFraction bigFraction2 = bigFraction1.multiply(0);
        bigFraction2.ONE_THIRD.floatValue();
        BigFraction bigFraction3 = bigFraction0.ONE_FIFTH.pow(bigInteger0);
        BigFraction bigFraction4 = new BigFraction(bigInteger0);
        bigFraction3.divide(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test03139() throws Throwable {
        BigFraction bigFraction0 = BigFraction.getReducedFraction(2277, 1);
        BigInteger bigInteger0 = BigInteger.ONE;
        bigFraction0.subtract(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test03240() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-2139));
        BigFraction bigFraction1 = bigFraction0.reciprocal();
        BigInteger bigInteger0 = BigInteger.TEN;
        bigFraction0.multiply(bigInteger0);
        bigFraction0.getNumeratorAsLong();
        BigFraction bigFraction2 = bigFraction1.pow((-2139L));
        bigFraction2.subtract(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test03341() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_THIRD;
        BigFraction bigFraction1 = BigFraction.ONE_THIRD;
        BigFraction bigFraction2 = bigFraction0.multiply(bigFraction1);
        BigFraction.getReducedFraction(2152, 2152);
        bigFraction2.toString();
    }

    @Test(timeout = 4000)
    public void test03442() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
        BigFraction bigFraction1 = BigFraction.ONE_HALF;
        BigFraction bigFraction2 = bigFraction1.ONE_HALF.subtract(bigFraction0);
        bigFraction1.intValue();
        BigFraction bigFraction3 = BigFraction.getReducedFraction(182, 2871);
        BigFraction bigFraction4 = bigFraction0.divide(bigFraction1);
        bigFraction3.longValue();
        BigInteger bigInteger0 = BigInteger.TEN;
        bigFraction1.ONE_FIFTH.multiply(bigInteger0);
        bigFraction2.toString();
        bigFraction4.divide((-1));
    }

    @Test(timeout = 4000)
    public void test03543() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(6722166367014452318L, 6722166367014452318L);
        BigInteger bigInteger0 = BigInteger.TEN;
        bigFraction0.add(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test03644() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE;
        Object object0 = new Object();
        bigFraction0.equals(object0);
    }

    @Test(timeout = 4000)
    public void test03745() throws Throwable {
        BigInteger bigInteger0 = BigInteger.TEN;
        BigFraction bigFraction0 = new BigFraction(bigInteger0, bigInteger0);
        bigFraction0.ONE.getNumeratorAsLong();
        BigFraction bigFraction1 = bigFraction0.abs();
        BigFraction bigFraction2 = BigFraction.ONE_FIFTH;
        bigFraction1.subtract(bigFraction2);
        bigFraction2.doubleValue();
        bigFraction0.reduce();
    }

    @Test(timeout = 4000)
    public void test03846() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE;
        bigFraction0.ONE_HALF.pow((-1302));
        bigFraction0.TWO_FIFTHS.subtract((-4906));
        bigFraction0.getDenominatorAsLong();
    }

    @Test(timeout = 4000)
    public void test03947() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_FIFTHS;
        BigFraction bigFraction1 = bigFraction0.divide((-2803L));
        BigFraction bigFraction2 = BigFraction.ONE_QUARTER;
        bigFraction1.compareTo(bigFraction2);
        bigFraction1.divide(bigFraction0);
        bigFraction1.divide((-1));
    }

    @Test(timeout = 4000)
    public void test04048() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-618.0), 3136.5699010956746, 0);
        bigFraction0.TWO_QUARTERS.getNumeratorAsInt();
        BigFraction bigFraction1 = bigFraction0.divide((-1L));
        bigFraction1.TWO_THIRDS.longValue();
        bigFraction0.toString();
        bigFraction0.compareTo(bigFraction1);
    }

    @Test(timeout = 4000)
    public void test04149() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(1362.6);
        BigFraction bigFraction1 = BigFraction.TWO_FIFTHS;
        bigFraction0.TWO_THIRDS.pow((-197));
        BigFraction bigFraction2 = bigFraction0.ZERO.divide(bigFraction1);
        bigFraction2.THREE_FIFTHS.toString();
        bigFraction0.compareTo(bigFraction1);
        BigFraction bigFraction3 = bigFraction2.ONE_FIFTH.divide(2627);
        bigFraction0.negate();
        BigFraction bigFraction4 = bigFraction3.reduce();
        BigFraction bigFraction5 = bigFraction3.add((-6265L));
        bigFraction2.toString();
        bigFraction4.doubleValue();
        MockRandom mockRandom0 = new MockRandom();
        BigInteger bigInteger0 = BigInteger.probablePrime(2627, mockRandom0);
        bigFraction5.add(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test04250() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(2645L);
        bigFraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test04351() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ZERO;
        BigInteger bigInteger0 = BigInteger.ZERO;
        BigFraction bigFraction1 = bigFraction0.FOUR_FIFTHS.add(bigInteger0);
        BigFraction bigFraction2 = bigFraction1.ONE_FIFTH.pow((-608L));
        BigFraction bigFraction3 = bigFraction1.MINUS_ONE.pow(1191);
        bigFraction0.pow(1.552583321178453E-10);
        bigFraction1.toString();
        bigFraction1.intValue();
        BigFraction bigFraction4 = BigFraction.getReducedFraction(0, 1191);
        bigFraction0.getNumeratorAsInt();
        bigFraction2.hashCode();
        bigFraction0.bigDecimalValue(3, 4);
        BigFraction bigFraction5 = bigFraction0.multiply(bigInteger0);
        bigFraction5.TWO.hashCode();
        bigFraction3.ONE_QUARTER.floatValue();
        bigFraction5.TWO.hashCode();
        BigFraction bigFraction6 = bigFraction2.reduce();
        bigFraction0.ONE_THIRD.getField();
        BigFraction bigFraction7 = bigFraction1.add((-3183605296591799669L));
        bigFraction7.ONE.subtract(bigFraction3);
        bigFraction7.ONE_THIRD.bigDecimalValue(0, 0);
        bigFraction7.compareTo(bigFraction2);
        BigFraction bigFraction8 = bigFraction1.add((long) (-1));
        bigFraction8.TWO.multiply(bigFraction4);
        bigFraction1.doubleValue();
        bigFraction7.getDenominator();
        bigFraction3.pow(1.552583321178453E-10);
        bigFraction7.add(bigFraction6);
        bigFraction4.subtract(bigFraction7);
    }

    @Test(timeout = 4000)
    public void test04452() throws Throwable {
        BigFraction bigFraction0 = BigFraction.FOUR_FIFTHS;
        BigInteger bigInteger0 = BigInteger.ONE;
        BigFraction bigFraction1 = new BigFraction(bigInteger0);
        bigFraction0.TWO_QUARTERS.getDenominatorAsInt();
        bigFraction0.ONE_THIRD.multiply(bigFraction1);
        BigFraction bigFraction2 = BigFraction.ONE;
        bigFraction2.ZERO.negate();
        BigFraction bigFraction3 = bigFraction0.divide(bigFraction2);
        bigFraction3.THREE_FIFTHS.getDenominatorAsLong();
        bigFraction2.getDenominatorAsInt();
        bigFraction0.ONE_FIFTH.intValue();
        BigFraction bigFraction4 = bigFraction0.divide(1066L);
        bigFraction4.ONE.getNumeratorAsInt();
        bigFraction4.getDenominatorAsInt();
        BigFraction bigFraction5 = bigFraction4.divide(bigFraction2);
        bigFraction5.ONE_QUARTER.multiply(Integer.MAX_VALUE);
        int int0 = (-28);
        bigFraction0.bigDecimalValue((-28));
    }

    @Test(timeout = 4000)
    public void test04553() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-2040.65), (-348));
        BigFraction bigFraction1 = bigFraction0.THREE_QUARTERS.negate();
        bigFraction0.ONE.getField();
        bigFraction0.toString();
        bigFraction0.bigDecimalValue();
        int int0 = (-1);
        bigFraction1.bigDecimalValue((-1), (-348));
    }

    @Test(timeout = 4000)
    public void test04654() throws Throwable {
        BigInteger bigInteger0 = null;
        BigFraction bigFraction0 = null;
        bigFraction0 = new BigFraction((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test04755() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE;
        bigFraction0.ONE.pow(2089L);
        bigFraction0.getDenominator();
        bigFraction0.getDenominatorAsLong();
    }

    @Test(timeout = 4000)
    public void test04856() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;
        bigFraction0.subtract(0);
        BigFraction.getReducedFraction((-4785), (-4785));
    }

    @Test(timeout = 4000)
    public void test04957() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(2037, 2037);
        BigFraction bigFraction1 = BigFraction.MINUS_ONE;
        bigFraction0.divide(bigFraction1);
    }

    @Test(timeout = 4000)
    public void test05058() throws Throwable {
        BigInteger bigInteger0 = BigInteger.TEN;
        BigInteger bigInteger1 = BigInteger.ZERO;
        BigFraction bigFraction0 = null;
        bigFraction0 = new BigFraction(bigInteger0, bigInteger1);
    }

    @Test(timeout = 4000)
    public void test05159() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ZERO;
        BigFraction bigFraction0 = null;
        bigFraction0 = new BigFraction(bigInteger0, bigInteger0);
    }

    @Test(timeout = 4000)
    public void test05260() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ONE;
        BigFraction bigFraction0 = new BigFraction(bigInteger0);
        bigFraction0.ONE_QUARTER.multiply(359);
        bigFraction0.pow((-700L));
        BigFraction bigFraction1 = BigFraction.FOUR_FIFTHS;
        bigFraction0.subtract(bigFraction1);
    }

    @Test(timeout = 4000)
    public void test05361() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ZERO;
        BigFraction bigFraction1 = bigFraction0.add(1852L);
        bigFraction1.subtract(bigFraction0);
        bigFraction0.MINUS_ONE.divide((-1));
        bigFraction1.pow((-664L));
        bigFraction1.pow(3);
    }

    @Test(timeout = 4000)
    public void test05462() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
        BigFraction bigFraction1 = new BigFraction(0L);
        BigFraction bigFraction2 = bigFraction0.TWO_FIFTHS.subtract(bigFraction1);
        bigFraction0.MINUS_ONE.pow(2.4106173515319824);
        BigFraction bigFraction3 = bigFraction0.reciprocal();
        BigFraction bigFraction4 = bigFraction0.ONE_HALF.reciprocal();
        bigFraction0.percentageValue();
        BigFraction bigFraction5 = bigFraction4.divide(bigFraction0);
        BigFraction bigFraction6 = bigFraction5.TWO_FIFTHS.divide(1951);
        BigFraction bigFraction7 = bigFraction6.ONE_FIFTH.reciprocal();
        bigFraction7.ONE_THIRD.getDenominatorAsInt();
        BigFraction bigFraction8 = bigFraction5.ONE_FIFTH.multiply(bigFraction3);
        bigFraction8.TWO_QUARTERS.add(bigFraction4);
        bigFraction0.getField();
        bigFraction2.getField();
        bigFraction1.multiply(4458);
        bigFraction7.abs();
        bigFraction7.divide((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test05563() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(0L);
        BigFraction bigFraction1 = bigFraction0.divide(4577762542105553359L);
        bigFraction1.TWO_FIFTHS.pow((-1.0));
        bigFraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test05664() throws Throwable {
        BigFraction bigFraction0 = null;
        bigFraction0 = new BigFraction(0L, 0L);
    }

    @Test(timeout = 4000)
    public void test05765() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-467.49498417), 1480);
        bigFraction0.doubleValue();
        bigFraction0.getNumeratorAsLong();
        bigFraction0.compareTo((BigFraction) null);
    }

    @Test(timeout = 4000)
    public void test05866() throws Throwable {
        BigFraction bigFraction0 = BigFraction.getReducedFraction((-1), (-1));
        BigFraction bigFraction1 = new BigFraction((long) (-1));
        BigFraction bigFraction2 = bigFraction0.multiply(bigFraction1);
        bigFraction0.percentageValue();
        BigFraction bigFraction3 = bigFraction2.divide(9218868437227405312L);
        bigFraction3.subtract(0L);
    }

    @Test(timeout = 4000)
    public void test05967() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_QUARTERS;
        bigFraction0.doubleValue();
        BigInteger bigInteger0 = BigInteger.ZERO;
        bigFraction0.TWO_FIFTHS.multiply(0L);
        BigFraction bigFraction1 = bigFraction0.add(bigInteger0);
        bigFraction1.getNumeratorAsLong();
        bigFraction1.toString();
    }

    @Test(timeout = 4000)
    public void test06068() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-1));
        BigFraction bigFraction1 = BigFraction.THREE_QUARTERS;
        BigFraction bigFraction2 = bigFraction0.multiply(bigFraction1);
        bigFraction2.add(bigFraction1);
        bigFraction0.getDenominatorAsInt();
        bigFraction1.bigDecimalValue(1, 5);
        bigFraction2.getDenominatorAsInt();
        BigFraction bigFraction3 = bigFraction2.add(205);
        bigFraction0.negate();
        bigFraction3.bigDecimalValue((-1488));
    }

    @Test(timeout = 4000)
    public void test06169() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(9007199254740990L);
        BigInteger bigInteger0 = BigInteger.ZERO;
        BigFraction bigFraction1 = bigFraction0.TWO_FIFTHS.add(bigInteger0);
        bigFraction1.ONE_HALF.equals(" / ");
        bigFraction0.TWO_QUARTERS.getField();
        bigFraction0.toString();
        bigFraction0.getNumeratorAsInt();
        bigFraction1.TWO_FIFTHS.percentageValue();
        BigFraction bigFraction2 = bigFraction1.abs();
        Object object0 = new Object();
        bigFraction0.equals(object0);
        BigFraction bigFraction3 = bigFraction0.TWO_QUARTERS.multiply(bigInteger0);
        bigFraction1.intValue();
        BigFraction bigFraction4 = bigFraction2.add(bigInteger0);
        BigFraction bigFraction5 = bigFraction3.reduce();
        bigFraction5.floatValue();
        bigFraction4.multiply((-2));
    }

    @Test(timeout = 4000)
    public void test06270() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-1.0));
        BigFraction bigFraction1 = BigFraction.ZERO;
        bigFraction1.THREE_FIFTHS.bigDecimalValue();
        BigFraction bigFraction2 = bigFraction0.add(bigFraction1);
        bigFraction0.THREE_QUARTERS.getNumeratorAsLong();
        bigFraction1.ONE_HALF.add((-1102));
        BigInteger bigInteger0 = bigFraction2.getNumerator();
        BigFraction bigFraction3 = bigFraction0.multiply(bigInteger0);
        BigFraction bigFraction4 = bigFraction3.FOUR_FIFTHS.pow((-1102));
        bigFraction2.TWO_FIFTHS.subtract(bigFraction3);
        bigFraction3.ZERO.negate();
        bigFraction0.floatValue();
        bigFraction4.negate();
        bigFraction0.getDenominatorAsInt();
        bigFraction1.getField();
    }

    @Test(timeout = 4000)
    public void test06371() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE;
        BigFraction bigFraction1 = bigFraction0.MINUS_ONE.add((-853L));
        bigFraction0.negate();
        BigFraction bigFraction2 = BigFraction.MINUS_ONE;
        bigFraction1.equals(bigFraction2);
    }

    @Test(timeout = 4000)
    public void test06472() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ZERO;
        BigFraction bigFraction1 = BigFraction.MINUS_ONE;
        BigFraction bigFraction2 = bigFraction1.TWO.add(bigFraction0);
        bigFraction2.MINUS_ONE.doubleValue();
        bigFraction0.divide(bigFraction1);
        BigFraction bigFraction3 = bigFraction1.add(3);
        bigFraction3.pow(0.0);
        bigFraction3.bigDecimalValue();
        bigFraction0.getNumeratorAsInt();
        BigFraction bigFraction4 = bigFraction1.multiply(0);
        bigFraction4.THREE_QUARTERS.getNumeratorAsInt();
        bigFraction4.TWO_THIRDS.abs();
        bigFraction3.multiply(bigFraction1);
        BigFraction bigFraction5 = bigFraction1.reduce();
        bigFraction5.ONE.add((long) 3);
        BigFraction.getReducedFraction(3630, 0);
    }

    @Test(timeout = 4000)
    public void test06573() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_THIRD;
        BigInteger bigInteger0 = null;
        bigFraction0.MINUS_ONE.multiply((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test06674() throws Throwable {
        BigInteger bigInteger0 = null;
        BigFraction bigFraction0 = null;
        bigFraction0 = new BigFraction((BigInteger) null, (BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test06775() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ZERO;
        BigInteger bigInteger0 = BigInteger.TEN;
        bigFraction0.ONE_HALF.pow(bigInteger0);
        BigInteger bigInteger1 = BigInteger.ZERO;
        bigFraction0.multiply(bigInteger1);
        bigFraction0.getNumeratorAsLong();
    }

    @Test(timeout = 4000)
    public void test06876() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
        BigFraction bigFraction1 = bigFraction0.ONE_THIRD.subtract((-749L));
        Object object0 = new Object();
        bigFraction0.equals(object0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        bigFraction1.TWO.pow(bigInteger0);
        bigFraction0.TWO_QUARTERS.divide(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test06977() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE;
        bigFraction0.getField();
        bigFraction0.FOUR_FIFTHS.subtract(1);
        bigFraction0.bigDecimalValue();
        bigFraction0.longValue();
        bigFraction0.bigDecimalValue((-719), 1043);
    }

    @Test(timeout = 4000)
    public void test07078() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE;
        BigInteger bigInteger0 = BigInteger.ONE;
        BigFraction bigFraction1 = bigFraction0.subtract(bigInteger0);
        BigFraction bigFraction2 = bigFraction1.ONE.multiply(bigFraction0);
        BigFraction bigFraction3 = bigFraction1.divide((-1446L));
        bigFraction3.FOUR_FIFTHS.pow(bigInteger0);
        bigFraction3.floatValue();
        bigFraction0.getField();
        BigFraction bigFraction4 = bigFraction3.multiply(bigFraction0);
        bigFraction4.ONE.percentageValue();
        bigFraction0.subtract(bigInteger0);
        bigFraction0.floatValue();
        bigFraction1.equals("");
        bigFraction2.divide(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test07179() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_FIFTHS;
        bigFraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test07280() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO;
        BigFraction bigFraction1 = bigFraction0.MINUS_ONE.subtract((-449));
        bigFraction1.ONE_QUARTER.intValue();
        bigFraction1.MINUS_ONE.bigDecimalValue();
        bigFraction0.hashCode();
        bigFraction0.bigDecimalValue(1, 1);
        bigFraction0.getField();
    }

    @Test(timeout = 4000)
    public void test07381() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-1464.0718), 3530.3516753794024, 76);
        BigFraction bigFraction1 = bigFraction0.TWO_FIFTHS.pow((long) 76);
        bigFraction1.TWO.pow((long) 76);
        bigFraction0.ONE.divide(76);
        bigFraction0.ZERO.multiply(100L);
        bigFraction1.MINUS_ONE.pow(76);
        bigFraction1.TWO_QUARTERS.getDenominatorAsLong();
        bigFraction0.toString();
        bigFraction0.intValue();
        BigFraction bigFraction2 = bigFraction0.subtract((long) 76);
        BigInteger bigInteger0 = BigInteger.ONE;
        bigFraction0.THREE_FIFTHS.subtract(bigInteger0);
        bigFraction2.compareTo(bigFraction1);
        bigFraction0.getDenominatorAsInt();
        bigFraction0.ZERO.subtract(0);
        BigFraction.getReducedFraction((-1465), 0);
    }

    @Test(timeout = 4000)
    public void test07482() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO;
        BigFraction bigFraction1 = BigFraction.THREE_QUARTERS;
        bigFraction0.MINUS_ONE.subtract(bigFraction1);
        bigFraction0.getDenominatorAsInt();
    }

    @Test(timeout = 4000)
    public void test07583() throws Throwable {
        BigFraction bigFraction0 = BigFraction.FOUR_FIFTHS;
        BigFraction bigFraction1 = bigFraction0.negate();
        bigFraction0.TWO_QUARTERS.multiply(676L);
        bigFraction0.ZERO.hashCode();
        bigFraction0.ONE_FIFTH.pow((-940.0));
        bigFraction0.TWO_QUARTERS.add((-3358L));
        bigFraction1.divide((-3358L));
        bigFraction0.subtract((-1105));
    }

    @Test(timeout = 4000)
    public void test07684() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_QUARTERS;
        BigFraction.getReducedFraction(0, 0);
        BigInteger bigInteger0 = bigFraction0.getNumerator();
        BigFraction bigFraction1 = bigFraction0.divide(540);
        BigFraction bigFraction2 = bigFraction1.add(bigInteger0);
        bigFraction1.TWO_FIFTHS.pow(bigInteger0);
        bigInteger0.equals(bigFraction1);
        BigFraction bigFraction3 = bigFraction2.divide(540);
        bigFraction2.ONE.doubleValue();
        bigFraction3.hashCode();
        BigFraction bigFraction4 = bigFraction1.THREE_QUARTERS.pow(540);
        bigFraction4.ONE.getNumeratorAsLong();
        BigFraction bigFraction5 = BigFraction.getReducedFraction(1699, 1699);
        bigFraction5.THREE_QUARTERS.longValue();
        BigFraction.getReducedFraction(3, 1911);
        BigFraction bigFraction6 = bigFraction2.add(540);
        bigFraction6.ZERO.floatValue();
        BigFraction bigFraction7 = bigFraction2.pow(0L);
        bigFraction5.subtract(bigInteger0);
        bigFraction0.intValue();
        bigFraction4.getNumerator();
        bigFraction7.divide(0);
    }

    @Test(timeout = 4000)
    public void test07785() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ONE;
        BigFraction bigFraction0 = new BigFraction(bigInteger0);
        bigFraction0.ONE_THIRD.getNumeratorAsLong();
        bigFraction0.ONE_QUARTER.getField();
        bigFraction0.MINUS_ONE.pow(0.0);
        BigFraction bigFraction1 = new BigFraction(2098L, 1L);
        bigFraction0.ONE_QUARTER.add(bigFraction1);
        BigFraction bigFraction2 = bigFraction0.add(581);
        bigFraction0.pow(1);
        bigFraction2.getNumeratorAsInt();
        bigFraction0.getDenominator();
        bigFraction2.divide(bigFraction0);
        bigFraction0.subtract((-913L));
        bigFraction2.subtract(1L);
        bigFraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test07886() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_HALF;
        MockRandom mockRandom0 = new MockRandom();
        BigInteger bigInteger0 = new BigInteger(794, 794, mockRandom0);
        BigFraction bigFraction1 = bigFraction0.add(bigInteger0);
        bigFraction1.ONE_THIRD.intValue();
        bigFraction0.ONE_FIFTH.doubleValue();
        BigFraction bigFraction2 = bigFraction0.divide(1728L);
        BigFraction bigFraction3 = bigFraction2.multiply(4208363204685324176L);
        BigFraction bigFraction4 = bigFraction3.ONE_HALF.subtract(1728L);
        bigFraction3.ONE_QUARTER.getNumeratorAsLong();
        bigFraction3.ONE_QUARTER.pow(1.0);
        bigFraction4.ONE_THIRD.reciprocal();
        bigFraction1.bigDecimalValue(0, 1);
        bigFraction2.ONE_THIRD.getNumeratorAsInt();
        bigFraction1.getNumeratorAsLong();
        bigFraction2.hashCode();
        bigFraction2.bigDecimalValue((-1468));
    }

    @Test(timeout = 4000)
    public void test07987() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_THIRDS;
        BigFraction bigFraction1 = bigFraction0.TWO_FIFTHS.pow((-2499L));
        bigFraction0.multiply(710L);
        bigFraction1.divide((-2377L));
        bigFraction0.getField();
    }

    @Test(timeout = 4000)
    public void test08088() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(0.0);
        bigFraction0.ONE.longValue();
        bigFraction0.getDenominatorAsInt();
        bigFraction0.TWO_FIFTHS.add(3952090531849364496L);
        bigFraction0.getDenominatorAsInt();
        byte[] byteArray0 = new byte[1];
        byteArray0[0] = (byte) (-63);
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        bigFraction0.divide(bigInteger0);
        bigFraction0.pow(0);
    }

    @Test(timeout = 4000)
    public void test08189() throws Throwable {
        int int0 = 1075;
        BigFraction bigFraction0 = new BigFraction(1075);
        bigFraction0.getDenominator();
        bigFraction0.TWO.subtract((-4337));
        bigFraction0.subtract((BigFraction) null);
    }

    @Test(timeout = 4000)
    public void test08290() throws Throwable {
        BigFraction bigFraction0 = BigFraction.MINUS_ONE;
        bigFraction0.ONE_QUARTER.longValue();
        bigFraction0.ONE_THIRD.bigDecimalValue();
    }

    @Test(timeout = 4000)
    public void test08391() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ZERO;
        bigFraction0.TWO_THIRDS.intValue();
        BigInteger bigInteger0 = BigInteger.TEN;
        BigFraction bigFraction1 = bigFraction0.subtract(bigInteger0);
        BigFraction bigFraction2 = BigFraction.getReducedFraction(1, 1);
        BigFraction bigFraction3 = bigFraction1.reduce();
        bigFraction3.THREE_FIFTHS.multiply(bigFraction1);
        BigFraction.getReducedFraction(0, 0);
        BigFraction bigFraction4 = bigFraction0.multiply(bigInteger0);
        BigFraction bigFraction5 = BigFraction.getReducedFraction(0, 5);
        bigFraction5.ONE.getDenominatorAsLong();
        bigFraction2.pow(bigInteger0);
        BigFraction bigFraction6 = new BigFraction(36);
        bigFraction5.THREE_QUARTERS.compareTo(bigFraction6);
        BigFraction bigFraction7 = bigFraction2.reduce();
        BigFraction bigFraction8 = bigFraction1.abs();
        bigFraction8.ONE_FIFTH.floatValue();
        bigFraction0.getNumerator();
        bigFraction5.divide(bigFraction1);
        bigFraction7.toString();
        bigFraction6.pow(1.0);
        bigFraction4.bigDecimalValue(1, (-806));
    }

    @Test(timeout = 4000)
    public void test08492() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(0.0);
        bigFraction0.ONE_QUARTER.negate();
        Object object0 = new Object();
        bigFraction0.ONE_FIFTH.equals(object0);
        BigFraction bigFraction1 = BigFraction.getReducedFraction((-2492), 1);
        bigFraction0.compareTo(bigFraction1);
        BigFraction bigFraction2 = bigFraction0.multiply((long) 1);
        BigInteger bigInteger0 = BigInteger.TEN;
        bigFraction2.ONE_THIRD.add(bigInteger0);
        bigFraction2.THREE_QUARTERS.reciprocal();
        bigFraction2.intValue();
        BigFraction bigFraction3 = bigFraction1.divide((long) 2806);
        BigFraction bigFraction4 = bigFraction3.multiply((long) 1);
        BigFraction bigFraction5 = bigFraction4.subtract(1);
        BigFraction bigFraction6 = bigFraction5.ONE_HALF.divide(bigFraction4);
        bigFraction5.multiply(2396);
        bigFraction3.multiply((-9223372036854775808L));
        bigFraction6.reciprocal();
    }

    @Test(timeout = 4000)
    public void test08593() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-931.46), (-588));
        BigFraction bigFraction1 = BigFraction.FOUR_FIFTHS;
        BigFraction bigFraction2 = bigFraction0.ONE_QUARTER.pow((-588));
        BigFraction bigFraction3 = bigFraction2.ONE.multiply(bigFraction1);
        BigFraction bigFraction4 = bigFraction1.MINUS_ONE.subtract((long) (-588));
        bigFraction4.MINUS_ONE.compareTo(bigFraction0);
        BigFraction bigFraction5 = bigFraction0.THREE_QUARTERS.multiply((long) (-588));
        BigFraction bigFraction6 = bigFraction0.subtract(bigFraction1);
        bigFraction6.hashCode();
        BigFraction bigFraction7 = BigFraction.FOUR_FIFTHS;
        BigFraction bigFraction8 = bigFraction5.subtract(bigFraction7);
        bigFraction8.FOUR_FIFTHS.negate();
        BigFraction bigFraction9 = BigFraction.getReducedFraction((-1), (-1));
        bigFraction3.divide(bigFraction9);
        bigFraction4.abs();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-1);
        byteArray0[1] = (byte) (-1);
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        bigFraction5.pow(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test08694() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_QUARTERS;
        bigFraction0.FOUR_FIFTHS.bigDecimalValue();
        bigFraction0.ONE_FIFTH.bigDecimalValue(1770, 0);
        BigFraction bigFraction1 = BigFraction.THREE_FIFTHS;
        BigFraction bigFraction2 = bigFraction0.TWO.subtract(bigFraction1);
        bigFraction2.pow((double) 0);
        BigFraction bigFraction3 = bigFraction0.multiply((-1068));
        bigFraction3.ONE_QUARTER.intValue();
        BigFraction bigFraction4 = bigFraction3.multiply((long) 0);
        BigFraction bigFraction5 = bigFraction0.negate();
        bigFraction5.THREE_QUARTERS.multiply(1494L);
        bigFraction5.FOUR_FIFTHS.getDenominatorAsInt();
        int int0 = 1;
        BigFraction bigFraction6 = bigFraction4.TWO_THIRDS.subtract(1);
        bigFraction6.ONE_FIFTH.getField();
        bigFraction6.ONE.reciprocal();
        bigFraction0.ONE_FIFTH.abs();
        bigFraction4.TWO_FIFTHS.add(748);
        bigFraction4.divide((long) (-1068));
        bigFraction4.reciprocal();
    }

    @Test(timeout = 4000)
    public void test08795() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(2145);
        BigFraction bigFraction1 = bigFraction0.TWO_FIFTHS.add((long) 2145);
        bigFraction0.ZERO.floatValue();
        bigFraction0.getNumeratorAsInt();
        bigFraction0.multiply(0L);
        byte[] byteArray0 = new byte[6];
        byteArray0[0] = (byte) (-42);
        byteArray0[1] = (byte) (-104);
        byteArray0[2] = (byte) 100;
        byteArray0[3] = (byte) (-114);
        byteArray0[4] = (byte) 37;
        byteArray0[5] = (byte) 16;
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        bigFraction1.multiply(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test08896() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(0.4580921530723572);
        BigFraction bigFraction1 = bigFraction0.pow((-2755L));
        BigFraction bigFraction2 = bigFraction1.FOUR_FIFTHS.pow(3);
        BigFraction bigFraction3 = bigFraction2.ONE_HALF.reciprocal();
        BigFraction bigFraction4 = bigFraction0.ONE.multiply((-1));
        bigFraction0.getDenominator();
        bigFraction0.getField();
        BigFraction bigFraction5 = bigFraction4.negate();
        bigFraction3.getDenominator();
        bigFraction5.pow((-2755L));
        bigFraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test08997() throws Throwable {
        BigFraction bigFraction0 = null;
        bigFraction0 = new BigFraction(0.01111111111106311, (-1491.6951094175113), (-1208));
    }

    @Test(timeout = 4000)
    public void test09199() throws Throwable {
        BigFraction bigFraction0 = BigFraction.getReducedFraction((-1482), 1045);
        bigFraction0.toString();
        BigFraction bigFraction1 = new BigFraction((-1), 1045);
        bigFraction0.ONE.percentageValue();
        BigFraction bigFraction2 = bigFraction1.TWO_QUARTERS.multiply((-496L));
        bigFraction1.THREE_QUARTERS.equals("-78 / 55");
        BigFraction bigFraction3 = bigFraction0.add(bigFraction1);
        BigInteger bigInteger0 = bigFraction3.getDenominator();
        BigFraction bigFraction4 = bigFraction2.multiply(bigInteger0);
        bigFraction4.TWO_THIRDS.getNumeratorAsLong();
        BigFraction bigFraction5 = bigFraction1.add(1);
        BigInteger bigInteger1 = BigInteger.ONE;
        bigInteger1.xor(bigInteger0);
        bigFraction0.divide(bigInteger1);
        BigFraction bigFraction6 = bigFraction2.multiply(bigFraction5);
        bigFraction6.TWO_QUARTERS.pow(0.0);
        bigFraction5.TWO.subtract((long) 1);
        bigFraction5.divide(bigFraction0);
        bigFraction5.bigDecimalValue(2472);
    }

    @Test(timeout = 4000)
    public void test092100() throws Throwable {
        BigFraction bigFraction0 = null;
        bigFraction0 = new BigFraction(3.7048805655699485E151, 1);
    }

    @Test(timeout = 4000)
    public void test093101() throws Throwable {
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) (-3);
        byteArray0[1] = (byte) 0;
        byteArray0[2] = (byte) 0;
        byteArray0[3] = (byte) (-55);
        byteArray0[4] = (byte) 0;
        byteArray0[5] = (byte) 0;
        byteArray0[6] = (byte) 1;
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        BigFraction bigFraction0 = new BigFraction(bigInteger0);
        bigFraction0.subtract((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test094102() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
        BigInteger bigInteger0 = BigInteger.TEN;
        BigFraction bigFraction1 = bigFraction0.ONE_THIRD.divide(bigInteger0);
        bigFraction1.THREE_FIFTHS.percentageValue();
        bigFraction0.THREE_FIFTHS.bigDecimalValue(173, 0);
        BigFraction bigFraction2 = BigFraction.TWO_FIFTHS;
        bigFraction2.THREE_QUARTERS.toString();
        BigFraction bigFraction3 = bigFraction0.multiply(bigFraction2);
        bigFraction3.getDenominatorAsInt();
        BigFraction bigFraction4 = BigFraction.ONE_FIFTH;
        BigFraction bigFraction5 = bigFraction3.MINUS_ONE.pow(bigInteger0);
        bigFraction4.MINUS_ONE.getDenominatorAsInt();
        bigFraction3.ONE_HALF.longValue();
        bigFraction4.THREE_QUARTERS.getDenominatorAsInt();
        bigFraction4.ONE.pow((double) 0);
        bigFraction4.ONE_HALF.add(bigFraction5);
        bigFraction2.equals(bigFraction4);
        bigFraction4.getNumeratorAsInt();
        bigFraction3.hashCode();
        bigFraction0.abs();
        bigFraction0.add(25);
        bigFraction3.pow(0L);
        bigFraction3.negate();
        bigFraction5.intValue();
        bigFraction5.abs();
    }

    @Test(timeout = 4000)
    public void test095103() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO;
        bigFraction0.longValue();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-1);
        byteArray0[1] = (byte) (-83);
        BigInteger bigInteger0 = BigInteger.ONE;
        bigFraction0.TWO_THIRDS.add(bigInteger0);
        bigFraction0.ZERO.pow(0.0);
        byteArray0[2] = (byte) (-1);
        bigFraction0.ONE_QUARTER.floatValue();
        BigInteger bigInteger1 = new BigInteger(byteArray0);
        BigFraction bigFraction1 = bigFraction0.pow(bigInteger1);
        BigInteger bigInteger2 = null;
        BigFraction bigFraction2 = BigFraction.ZERO;
        bigFraction1.ONE.add(bigFraction2);
        bigFraction0.add((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test096104() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-858));
        bigFraction0.ONE_FIFTH.reduce();
        BigFraction bigFraction1 = bigFraction0.ONE_FIFTH.abs();
        BigFraction bigFraction2 = bigFraction1.ONE_HALF.pow(1);
        bigFraction2.TWO.negate();
        BigInteger bigInteger0 = BigInteger.ZERO;
        BigFraction bigFraction3 = bigFraction0.subtract(bigInteger0);
        BigFraction bigFraction4 = bigFraction3.ONE_HALF.add((-1));
        bigFraction3.compareTo(bigFraction0);
        bigFraction3.ONE_QUARTER.hashCode();
        bigFraction0.pow((double) (-858));
        bigFraction1.pow((-570.8664653));
        BigFraction bigFraction5 = bigFraction3.multiply(bigInteger0);
        bigFraction5.TWO_THIRDS.negate();
        bigFraction5.MINUS_ONE.bigDecimalValue();
        BigFraction bigFraction6 = bigFraction0.divide((long) 1);
        bigFraction6.TWO_FIFTHS.longValue();
        bigFraction6.ONE_HALF.add(0);
        BigFraction bigFraction7 = bigFraction4.multiply((-3208));
        bigFraction7.ONE_HALF.multiply((-1530L));
        bigFraction7.MINUS_ONE.bigDecimalValue();
        BigInteger bigInteger1 = bigFraction1.getNumerator();
        BigFraction bigFraction8 = bigFraction4.multiply(bigInteger1);
        bigFraction3.ONE_HALF.reciprocal();
        bigFraction7.intValue();
        bigFraction4.reduce();
        bigFraction8.floatValue();
        bigFraction6.hashCode();
    }

    @Test(timeout = 4000)
    public void test097105() throws Throwable {
        byte[] byteArray0 = new byte[0];
        BigInteger bigInteger0 = new BigInteger(0, byteArray0);
        BigFraction bigFraction0 = new BigFraction(bigInteger0);
        bigFraction0.FOUR_FIFTHS.divide(1);
        bigFraction0.ONE_QUARTER.divide((-2933));
        bigFraction0.bigDecimalValue(0);
        bigFraction0.TWO_QUARTERS.intValue();
        bigFraction0.bigDecimalValue((-1189));
    }

    @Test(timeout = 4000)
    public void test098106() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-1192L), (-3512299194304650054L));
        BigInteger bigInteger0 = BigInteger.TEN;
        BigFraction bigFraction1 = new BigFraction(bigInteger0, bigInteger0);
        bigFraction0.ONE_FIFTH.equals(bigFraction1);
        BigFraction bigFraction2 = bigFraction0.multiply((-270L));
        bigFraction2.getDenominatorAsInt();
    }

    @Test(timeout = 4000)
    public void test099107() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
        bigFraction0.FOUR_FIFTHS.add((BigFraction) null);
    }

    @Test(timeout = 4000)
    public void test100108() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ONE;
        BigFraction bigFraction0 = new BigFraction(bigInteger0, bigInteger0);
        bigFraction0.ONE_QUARTER.doubleValue();
        bigFraction0.doubleValue();
        BigFraction bigFraction1 = BigFraction.TWO_THIRDS;
        BigFraction bigFraction2 = bigFraction0.add(bigFraction1);
        BigFraction bigFraction3 = bigFraction2.reduce();
        bigFraction0.reduce();
        bigFraction1.MINUS_ONE.reduce();
        bigFraction2.THREE_QUARTERS.pow(1213);
        bigFraction3.bigDecimalValue((-1780), (-1780));
    }

    @Test(timeout = 4000)
    public void test101109() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[0] = (byte) (-116);
        byteArray0[1] = (byte) 68;
        byteArray0[2] = (byte) (-15);
        byteArray0[3] = (byte) 76;
        byteArray0[4] = (byte) (-106);
        byteArray0[5] = (byte) (-103);
        byteArray0[6] = (byte) 70;
        byteArray0[7] = (byte) (-31);
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        BigFraction bigFraction0 = new BigFraction(bigInteger0, bigInteger0);
        bigFraction0.subtract(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test102110() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-974L));
        BigFraction bigFraction1 = bigFraction0.TWO_QUARTERS.abs();
        BigFraction bigFraction2 = bigFraction1.ONE_THIRD.pow(1);
        bigFraction0.TWO.hashCode();
        int int0 = (-1154);
        bigFraction1.THREE_QUARTERS.intValue();
        BigFraction bigFraction3 = bigFraction0.divide((-1154));
        bigFraction2.ONE_FIFTH.add((-1154));
        bigFraction3.subtract((-974L));
        BigFraction bigFraction4 = bigFraction3.add(bigFraction0);
        bigFraction4.TWO.pow((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test103111() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(2147483648L);
        bigFraction0.getNumeratorAsInt();
        BigFraction bigFraction1 = bigFraction0.THREE_FIFTHS.add(bigFraction0);
        BigFraction bigFraction2 = bigFraction1.TWO_QUARTERS.multiply(2147483648L);
        bigFraction0.TWO_THIRDS.getDenominatorAsInt();
        bigFraction0.TWO_FIFTHS.subtract(bigFraction0);
        bigFraction0.percentageValue();
        bigFraction0.intValue();
        bigFraction0.getDenominatorAsInt();
        BigFraction bigFraction3 = bigFraction0.pow((long) 3);
        BigFraction bigFraction4 = bigFraction0.ONE_THIRD.divide(2147483648L);
        BigFraction bigFraction5 = BigFraction.ONE_HALF;
        bigFraction4.ZERO.equals(bigFraction5);
        bigFraction3.TWO_THIRDS.divide(bigFraction0);
        bigFraction3.ONE_QUARTER.intValue();
        BigDecimal bigDecimal0 = new BigDecimal((long) 1);
        bigFraction3.divide((long) Integer.MIN_VALUE);
        BigFraction bigFraction6 = bigFraction2.multiply((-3142L));
        bigFraction6.FOUR_FIFTHS.pow(Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test104112() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(1331);
        bigFraction0.divide((-378));
        bigFraction0.bigDecimalValue(1331, 1331);
    }

    @Test(timeout = 4000)
    public void test105113() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;
        bigFraction0.ZERO.percentageValue();
        bigFraction0.THREE_FIFTHS.floatValue();
        BigInteger bigInteger0 = BigInteger.TEN;
        BigFraction bigFraction1 = bigFraction0.subtract(bigInteger0);
        bigFraction0.toString();
        bigFraction1.longValue();
        BigFraction bigFraction2 = bigFraction1.subtract(bigFraction0);
        int int0 = (-1905);
        bigFraction2.TWO_THIRDS.subtract((-494));
        bigFraction2.ONE_QUARTER.pow((-1905));
        bigFraction1.negate();
        bigFraction1.bigDecimalValue(2926, 2023);
    }
}
