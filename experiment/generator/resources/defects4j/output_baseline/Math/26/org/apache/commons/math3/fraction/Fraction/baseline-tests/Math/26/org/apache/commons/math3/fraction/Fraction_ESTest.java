/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 11:39:32 GMT 2023
 */
package org.apache.commons.math3.fraction;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.fraction.Fraction;
import org.apache.commons.math3.fraction.FractionField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class Fraction_ESTest extends Fraction_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = Fraction.MINUS_ONE;
        Fraction fraction2 = fraction0.THREE_QUARTERS.divide(fraction1);
        String string0 = fraction2.toString();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = Fraction.MINUS_ONE;
        Fraction fraction2 = fraction0.divide((-413));
        boolean boolean0 = fraction2.equals(fraction1);
        fraction1.equals((Object) fraction2);
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = Fraction.MINUS_ONE;
        Fraction fraction2 = fraction0.divide((-413));
        boolean boolean0 = fraction2.equals(fraction1);
    }

    @Test(timeout = 4000)
    public void test013() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = Fraction.MINUS_ONE;
        Fraction fraction2 = fraction0.divide((-413));
        boolean boolean0 = fraction2.equals(fraction1);
        fraction2.doubleValue();
    }

    @Test(timeout = 4000)
    public void test014() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = Fraction.MINUS_ONE;
        Fraction fraction2 = fraction0.divide((-413));
        boolean boolean0 = fraction2.equals(fraction1);
        fraction2.getNumerator();
    }

    @Test(timeout = 4000)
    public void test025() throws Throwable {
        Fraction fraction0 = Fraction.TWO_THIRDS;
        Fraction fraction1 = fraction0.reciprocal();
        boolean boolean0 = fraction1.equals(fraction0);
    }

    @Test(timeout = 4000)
    public void test026() throws Throwable {
        Fraction fraction0 = Fraction.TWO_THIRDS;
        Fraction fraction1 = fraction0.reciprocal();
        boolean boolean0 = fraction1.equals(fraction0);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test027() throws Throwable {
        Fraction fraction0 = Fraction.TWO_THIRDS;
        Fraction fraction1 = fraction0.reciprocal();
        boolean boolean0 = fraction1.equals(fraction0);
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test038() throws Throwable {
        Fraction fraction0 = Fraction.ONE_THIRD;
        Fraction fraction1 = new Fraction(2543.70070575406, (-970));
        Fraction fraction2 = fraction0.subtract(fraction1);
        fraction2.doubleValue();
    }

    @Test(timeout = 4000)
    public void test039() throws Throwable {
        Fraction fraction0 = Fraction.ONE_THIRD;
        Fraction fraction1 = new Fraction(2543.70070575406, (-970));
        Fraction fraction2 = fraction0.subtract(fraction1);
        fraction2.getNumerator();
    }

    @Test(timeout = 4000)
    public void test0410() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.TWO_FIFTHS.subtract(fraction0);
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test0411() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.TWO_FIFTHS.subtract(fraction0);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test0512() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = fraction0.TWO_THIRDS.negate();
        Fraction fraction2 = fraction0.TWO_QUARTERS.subtract(fraction1);
        fraction2.floatValue();
    }

    @Test(timeout = 4000)
    public void test0513() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = fraction0.TWO_THIRDS.negate();
        Fraction fraction2 = fraction0.TWO_QUARTERS.subtract(fraction1);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test0614() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.multiply(0);
        Fraction fraction2 = fraction1.subtract(0);
        fraction2.getDenominator();
    }

    @Test(timeout = 4000)
    public void test0615() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.multiply(0);
        Fraction fraction2 = fraction1.subtract(0);
        fraction2.doubleValue();
    }

    @Test(timeout = 4000)
    public void test0716() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.subtract(0);
        fraction1.equals((Object) fraction0);
    }

    @Test(timeout = 4000)
    public void test0817() throws Throwable {
        Fraction fraction0 = Fraction.TWO;
        Fraction fraction1 = fraction0.MINUS_ONE.reciprocal();
        fraction1.longValue();
    }

    @Test(timeout = 4000)
    public void test0818() throws Throwable {
        Fraction fraction0 = Fraction.TWO;
        Fraction fraction1 = fraction0.MINUS_ONE.reciprocal();
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test0919() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = fraction0.ZERO.divide(fraction0);
        double double0 = fraction1.percentageValue();
    }

    @Test(timeout = 4000)
    public void test0920() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = fraction0.ZERO.divide(fraction0);
        double double0 = fraction1.percentageValue();
        fraction0.percentageValue();
    }

    @Test(timeout = 4000)
    public void test1021() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        double double0 = fraction0.percentageValue();
    }

    @Test(timeout = 4000)
    public void test1122() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.multiply(0);
        Fraction fraction2 = fraction1.negate();
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test1123() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.multiply(0);
        Fraction fraction2 = fraction1.negate();
        fraction2.floatValue();
    }

    @Test(timeout = 4000)
    public void test1124() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.multiply(0);
        Fraction fraction2 = fraction1.negate();
        fraction1.percentageValue();
    }

    @Test(timeout = 4000)
    public void test1225() throws Throwable {
        Fraction fraction0 = Fraction.MINUS_ONE;
        Fraction fraction1 = fraction0.negate();
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test1226() throws Throwable {
        Fraction fraction0 = Fraction.MINUS_ONE;
        Fraction fraction1 = fraction0.negate();
        fraction1.longValue();
    }

    @Test(timeout = 4000)
    public void test1327() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.TWO.negate();
        fraction1.percentageValue();
    }

    @Test(timeout = 4000)
    public void test1328() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.TWO.negate();
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test1429() throws Throwable {
        Fraction fraction0 = Fraction.TWO_THIRDS;
        Fraction fraction1 = Fraction.ONE;
        Fraction fraction2 = fraction0.TWO_QUARTERS.add(fraction1);
        Fraction fraction3 = fraction0.negate();
        Fraction fraction4 = fraction3.multiply(fraction2);
        fraction4.percentageValue();
    }

    @Test(timeout = 4000)
    public void test1430() throws Throwable {
        Fraction fraction0 = Fraction.TWO_THIRDS;
        Fraction fraction1 = Fraction.ONE;
        Fraction fraction2 = fraction0.TWO_QUARTERS.add(fraction1);
        Fraction fraction3 = fraction0.negate();
        Fraction fraction4 = fraction3.multiply(fraction2);
        fraction3.getDenominator();
    }

    @Test(timeout = 4000)
    public void test1531() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction((-1), 263);
        Fraction fraction1 = fraction0.TWO_FIFTHS.multiply(fraction0);
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test1532() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction((-1), 263);
        Fraction fraction1 = fraction0.TWO_FIFTHS.multiply(fraction0);
        fraction1.percentageValue();
    }

    @Test(timeout = 4000)
    public void test1633() throws Throwable {
        Fraction fraction0 = Fraction.TWO_THIRDS;
        Fraction fraction1 = fraction0.ONE_HALF.add(998);
        Fraction fraction2 = fraction0.ONE_FIFTH.multiply(fraction1);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test1634() throws Throwable {
        Fraction fraction0 = Fraction.TWO_THIRDS;
        Fraction fraction1 = fraction0.ONE_HALF.add(998);
        Fraction fraction2 = fraction0.ONE_FIFTH.multiply(fraction1);
        fraction2.percentageValue();
    }

    @Test(timeout = 4000)
    public void test1735() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        Fraction fraction1 = Fraction.TWO;
        Fraction fraction2 = fraction0.TWO_THIRDS.multiply(fraction1);
        long long0 = fraction2.longValue();
        fraction2.floatValue();
    }

    @Test(timeout = 4000)
    public void test1736() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        Fraction fraction1 = Fraction.TWO;
        Fraction fraction2 = fraction0.TWO_THIRDS.multiply(fraction1);
        long long0 = fraction2.longValue();
    }

    @Test(timeout = 4000)
    public void test1837() throws Throwable {
        Fraction fraction0 = new Fraction((-1752.3966), (-1));
        long long0 = fraction0.longValue();
    }

    @Test(timeout = 4000)
    public void test1938() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        int int0 = fraction0.intValue();
        fraction0.percentageValue();
    }

    @Test(timeout = 4000)
    public void test1939() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        int int0 = fraction0.intValue();
    }

    @Test(timeout = 4000)
    public void test2040() throws Throwable {
        Fraction fraction0 = Fraction.MINUS_ONE;
        int int0 = fraction0.intValue();
    }

    @Test(timeout = 4000)
    public void test2141() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(3, (-1));
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test2142() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(3, (-1));
        fraction0.byteValue();
    }

    @Test(timeout = 4000)
    public void test2243() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(4646, 31);
        fraction0.percentageValue();
    }

    @Test(timeout = 4000)
    public void test2244() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(4646, 31);
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test2345() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        int int0 = fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test2446() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        int int0 = fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test2547() throws Throwable {
        Fraction fraction0 = Fraction.TWO;
        Fraction fraction1 = fraction0.ZERO.abs();
        float float0 = fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test2548() throws Throwable {
        Fraction fraction0 = Fraction.TWO;
        Fraction fraction1 = fraction0.ZERO.abs();
        float float0 = fraction1.floatValue();
        fraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test2649() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = fraction0.divide((-1894));
        float float0 = fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test2650() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = fraction0.divide((-1894));
        float float0 = fraction1.floatValue();
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test2751() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.multiply(0);
        double double0 = fraction1.doubleValue();
        fraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test2752() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.multiply(0);
        double double0 = fraction1.doubleValue();
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test2753() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.multiply(0);
        double double0 = fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test2854() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        double double0 = fraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test2955() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = Fraction.getReducedFraction((-1), 263);
        Fraction fraction2 = fraction0.divide(fraction1);
        fraction2.getDenominator();
    }

    @Test(timeout = 4000)
    public void test2956() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = Fraction.getReducedFraction((-1), 263);
        Fraction fraction2 = fraction0.divide(fraction1);
        fraction2.getNumerator();
    }

    @Test(timeout = 4000)
    public void test2957() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = Fraction.getReducedFraction((-1), 263);
        Fraction fraction2 = fraction0.divide(fraction1);
        fraction1.percentageValue();
    }

    @Test(timeout = 4000)
    public void test3058() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = fraction0.ONE_HALF.divide(fraction0);
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test3159() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = fraction0.subtract((-3737));
        Fraction fraction2 = fraction1.divide(fraction0);
        fraction2.getDenominator();
    }

    @Test(timeout = 4000)
    public void test3160() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = fraction0.subtract((-3737));
        Fraction fraction2 = fraction1.divide(fraction0);
        fraction2.percentageValue();
    }

    @Test(timeout = 4000)
    public void test3261() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = fraction0.ZERO.divide(508);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test3262() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = fraction0.ZERO.divide(508);
        fraction1.intValue();
    }

    @Test(timeout = 4000)
    public void test3363() throws Throwable {
        Fraction fraction0 = Fraction.TWO;
        Fraction fraction1 = fraction0.divide(2);
        fraction1.percentageValue();
    }

    @Test(timeout = 4000)
    public void test3364() throws Throwable {
        Fraction fraction0 = Fraction.TWO;
        Fraction fraction1 = fraction0.divide(2);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test3465() throws Throwable {
        Fraction fraction0 = Fraction.TWO_THIRDS;
        Fraction fraction1 = fraction0.subtract(998);
        Fraction fraction2 = fraction1.divide(118);
        fraction2.getNumerator();
    }

    @Test(timeout = 4000)
    public void test3466() throws Throwable {
        Fraction fraction0 = Fraction.TWO_THIRDS;
        Fraction fraction1 = fraction0.subtract(998);
        Fraction fraction2 = fraction1.divide(118);
        fraction2.doubleValue();
    }

    @Test(timeout = 4000)
    public void test3467() throws Throwable {
        Fraction fraction0 = Fraction.TWO_THIRDS;
        Fraction fraction1 = fraction0.subtract(998);
        Fraction fraction2 = fraction1.divide(118);
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test3568() throws Throwable {
        Fraction fraction0 = new Fraction(0);
        Fraction fraction1 = fraction0.ZERO.add(fraction0);
    }

    @Test(timeout = 4000)
    public void test3569() throws Throwable {
        Fraction fraction0 = new Fraction(0);
        Fraction fraction1 = fraction0.ZERO.add(fraction0);
        fraction1.percentageValue();
    }

    @Test(timeout = 4000)
    public void test3570() throws Throwable {
        Fraction fraction0 = new Fraction(0);
        Fraction fraction1 = fraction0.ZERO.add(fraction0);
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test3671() throws Throwable {
        Fraction fraction0 = Fraction.MINUS_ONE;
        Fraction fraction1 = fraction0.add(fraction0);
        fraction1.shortValue();
    }

    @Test(timeout = 4000)
    public void test3772() throws Throwable {
        Fraction fraction0 = Fraction.THREE_FIFTHS;
        Fraction fraction1 = fraction0.ZERO.add(0);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test3773() throws Throwable {
        Fraction fraction0 = Fraction.THREE_FIFTHS;
        Fraction fraction1 = fraction0.ZERO.add(0);
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test3874() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.MINUS_ONE.add(0);
        fraction1.byteValue();
    }

    @Test(timeout = 4000)
    public void test3875() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.MINUS_ONE.add(0);
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test3976() throws Throwable {
        Fraction fraction0 = new Fraction(Integer.MAX_VALUE, 1025);
        Fraction fraction1 = fraction0.abs();
        fraction1.percentageValue();
    }

    @Test(timeout = 4000)
    public void test3977() throws Throwable {
        Fraction fraction0 = new Fraction(Integer.MAX_VALUE, 1025);
        Fraction fraction1 = fraction0.abs();
        fraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test4078() throws Throwable {
        Fraction fraction0 = Fraction.MINUS_ONE;
        Fraction fraction1 = fraction0.abs();
        fraction1.intValue();
    }

    @Test(timeout = 4000)
    public void test4079() throws Throwable {
        Fraction fraction0 = Fraction.MINUS_ONE;
        Fraction fraction1 = fraction0.abs();
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test4180() throws Throwable {
        Fraction fraction0 = Fraction.ONE_THIRD;
        fraction0.ONE_FIFTH.subtract((Fraction) null);
    }

    @Test(timeout = 4000)
    public void test4281() throws Throwable {
        Fraction fraction0 = Fraction.THREE_FIFTHS;
        fraction0.ZERO.reciprocal();
    }

    @Test(timeout = 4000)
    public void test4382() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        Fraction fraction1 = fraction0.add(1870);
        Fraction fraction2 = fraction1.multiply(1870);
        fraction1.multiply(fraction2);
    }

    @Test(timeout = 4000)
    public void test4483() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(4, (-2546));
        fraction0.compareTo((Fraction) null);
    }

    @Test(timeout = 4000)
    public void test4584() throws Throwable {
        Fraction fraction0 = null;
        fraction0 = new Fraction((-8.0E298));
    }

    @Test(timeout = 4000)
    public void test4685() throws Throwable {
        Fraction fraction0 = new Fraction(1025, 1025);
        fraction0.percentageValue();
    }

    @Test(timeout = 4000)
    public void test4686() throws Throwable {
        Fraction fraction0 = new Fraction(1025, 1025);
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test4787() throws Throwable {
        Fraction fraction0 = null;
        fraction0 = new Fraction(156, Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test4888() throws Throwable {
        Fraction fraction0 = new Fraction(1519, (-533));
        fraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test4889() throws Throwable {
        Fraction fraction0 = new Fraction(1519, (-533));
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test4990() throws Throwable {
        Fraction fraction0 = null;
        fraction0 = new Fraction(1, 0);
    }

    @Test(timeout = 4000)
    public void test5091() throws Throwable {
        Fraction fraction0 = new Fraction((-248.53421868528));
        double double0 = fraction0.doubleValue();
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test5092() throws Throwable {
        Fraction fraction0 = new Fraction((-248.53421868528));
        double double0 = fraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test5193() throws Throwable {
        Fraction fraction0 = new Fraction((-4313.770396564076));
        String string0 = fraction0.THREE_QUARTERS.toString();
    }

    @Test(timeout = 4000)
    public void test5194() throws Throwable {
        Fraction fraction0 = new Fraction((-4313.770396564076));
        String string0 = fraction0.THREE_QUARTERS.toString();
        fraction0.longValue();
    }

    @Test(timeout = 4000)
    public void test5295() throws Throwable {
        Fraction.getReducedFraction(Integer.MIN_VALUE, (-1204));
    }

    @Test(timeout = 4000)
    public void test5396() throws Throwable {
        Fraction.getReducedFraction(371, Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test5497() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(0, 1);
        fraction0.percentageValue();
    }

    @Test(timeout = 4000)
    public void test5598() throws Throwable {
        Fraction.getReducedFraction((-1), 0);
    }

    @Test(timeout = 4000)
    public void test5699() throws Throwable {
        Fraction fraction0 = new Fraction(14.101419448852539, 25);
        Fraction fraction1 = Fraction.ZERO;
        fraction0.divide(fraction1);
    }

    @Test(timeout = 4000)
    public void test57100() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(2711, 2711);
        fraction0.ZERO.divide((Fraction) null);
    }

    @Test(timeout = 4000)
    public void test58101() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        Fraction fraction1 = fraction0.ZERO.multiply(105);
        Fraction fraction2 = fraction1.FOUR_FIFTHS.multiply(fraction1);
        fraction2.equals((Object) fraction1);
    }

    @Test(timeout = 4000)
    public void test58102() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        Fraction fraction1 = fraction0.ZERO.multiply(105);
        Fraction fraction2 = fraction1.FOUR_FIFTHS.multiply(fraction1);
        fraction1.longValue();
    }

    @Test(timeout = 4000)
    public void test59103() throws Throwable {
        Fraction fraction0 = Fraction.ONE_FIFTH;
        fraction0.multiply((Fraction) null);
    }

    @Test(timeout = 4000)
    public void test60104() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        Fraction fraction1 = Fraction.getReducedFraction(156, Integer.MIN_VALUE);
        Fraction fraction2 = fraction0.TWO_FIFTHS.add(fraction0);
        fraction2.add(fraction1);
    }

    @Test(timeout = 4000)
    public void test61105() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        Fraction fraction1 = fraction0.add(fraction0);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test61106() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        Fraction fraction1 = fraction0.add(fraction0);
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test62107() throws Throwable {
        Fraction fraction0 = new Fraction((-248.53421868528));
        Fraction fraction1 = fraction0.ONE_HALF.subtract(fraction0);
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test63108() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        Fraction fraction1 = fraction0.ZERO.multiply(fraction0);
        Fraction fraction2 = fraction0.ONE_HALF.subtract(fraction1);
        fraction2.doubleValue();
    }

    @Test(timeout = 4000)
    public void test64109() throws Throwable {
        Fraction fraction0 = new Fraction(1);
        fraction0.add((Fraction) null);
    }

    @Test(timeout = 4000)
    public void test65110() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        Fraction fraction1 = fraction0.ZERO.multiply(105);
        Fraction fraction2 = fraction1.add(Integer.MIN_VALUE);
        fraction1.subtract(fraction2);
    }

    @Test(timeout = 4000)
    public void test66111() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = Fraction.TWO_QUARTERS;
        boolean boolean0 = fraction0.equals(fraction1);
    }

    @Test(timeout = 4000)
    public void test67112() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        Fraction fraction1 = Fraction.ONE;
        Fraction fraction2 = fraction0.ONE_THIRD.divide(fraction1);
        boolean boolean0 = fraction1.equals(fraction2);
        fraction1.equals((Object) fraction0);
    }

    @Test(timeout = 4000)
    public void test67113() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        Fraction fraction1 = Fraction.ONE;
        Fraction fraction2 = fraction0.ONE_THIRD.divide(fraction1);
        boolean boolean0 = fraction1.equals(fraction2);
        fraction0.equals((Object) fraction1);
    }

    @Test(timeout = 4000)
    public void test67114() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        Fraction fraction1 = Fraction.ONE;
        Fraction fraction2 = fraction0.ONE_THIRD.divide(fraction1);
        boolean boolean0 = fraction1.equals(fraction2);
        fraction2.percentageValue();
    }

    @Test(timeout = 4000)
    public void test67115() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        Fraction fraction1 = Fraction.ONE;
        Fraction fraction2 = fraction0.ONE_THIRD.divide(fraction1);
        boolean boolean0 = fraction1.equals(fraction2);
    }

    @Test(timeout = 4000)
    public void test67116() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        Fraction fraction1 = Fraction.ONE;
        Fraction fraction2 = fraction0.ONE_THIRD.divide(fraction1);
        boolean boolean0 = fraction1.equals(fraction2);
        fraction2.getNumerator();
    }

    @Test(timeout = 4000)
    public void test68117() throws Throwable {
        Fraction fraction0 = Fraction.TWO;
        Object object0 = new Object();
        boolean boolean0 = fraction0.equals(object0);
    }

    @Test(timeout = 4000)
    public void test69118() throws Throwable {
        Fraction fraction0 = new Fraction((-248.53421868528));
        boolean boolean0 = fraction0.equals(fraction0);
    }

    @Test(timeout = 4000)
    public void test69119() throws Throwable {
        Fraction fraction0 = new Fraction((-248.53421868528));
        boolean boolean0 = fraction0.equals(fraction0);
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test70120() throws Throwable {
        Fraction fraction0 = new Fraction((-248.53421868528));
        Fraction fraction1 = Fraction.getReducedFraction(64, 64);
        fraction0.equals(fraction1);
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test70121() throws Throwable {
        Fraction fraction0 = new Fraction((-248.53421868528));
        Fraction fraction1 = Fraction.getReducedFraction(64, 64);
        fraction0.equals(fraction1);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test70122() throws Throwable {
        Fraction fraction0 = new Fraction((-248.53421868528));
        Fraction fraction1 = Fraction.getReducedFraction(64, 64);
        fraction0.equals(fraction1);
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test71123() throws Throwable {
        Fraction fraction0 = new Fraction((-248.53421868528));
        Fraction fraction1 = Fraction.getReducedFraction(64, 64);
        int int0 = fraction1.compareTo(fraction0);
    }

    @Test(timeout = 4000)
    public void test71124() throws Throwable {
        Fraction fraction0 = new Fraction((-248.53421868528));
        Fraction fraction1 = Fraction.getReducedFraction(64, 64);
        int int0 = fraction1.compareTo(fraction0);
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test72125() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = new Fraction(216);
        int int0 = fraction0.compareTo(fraction1);
    }

    @Test(timeout = 4000)
    public void test72126() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = new Fraction(216);
        int int0 = fraction0.compareTo(fraction1);
        fraction1.percentageValue();
    }

    @Test(timeout = 4000)
    public void test73127() throws Throwable {
        Fraction fraction0 = new Fraction((-248.53421868528));
        int int0 = fraction0.compareTo(fraction0);
    }

    @Test(timeout = 4000)
    public void test73128() throws Throwable {
        Fraction fraction0 = new Fraction((-248.53421868528));
        int int0 = fraction0.compareTo(fraction0);
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test74129() throws Throwable {
        Fraction fraction0 = new Fraction((-4313.770396564076));
        Fraction fraction1 = fraction0.abs();
        fraction1.percentageValue();
    }

    @Test(timeout = 4000)
    public void test75130() throws Throwable {
        Fraction fraction0 = new Fraction((-4313.770396564076));
        Fraction fraction1 = fraction0.ONE_THIRD.multiply((-2283));
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test75131() throws Throwable {
        Fraction fraction0 = new Fraction((-4313.770396564076));
        Fraction fraction1 = fraction0.ONE_THIRD.multiply((-2283));
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test75132() throws Throwable {
        Fraction fraction0 = new Fraction((-4313.770396564076));
        Fraction fraction1 = fraction0.ONE_THIRD.multiply((-2283));
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test76133() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        fraction0.ONE_THIRD.divide(Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test77134() throws Throwable {
        Fraction fraction0 = null;
        fraction0 = new Fraction(Integer.MIN_VALUE, Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test78135() throws Throwable {
        Fraction fraction0 = null;
        fraction0 = new Fraction((-3708.46337892569), 0.0032307692306403624, (-1));
    }

    @Test(timeout = 4000)
    public void test79136() throws Throwable {
        Fraction fraction0 = null;
        fraction0 = new Fraction(100.0, 4);
    }

    @Test(timeout = 4000)
    public void test80137() throws Throwable {
        Fraction fraction0 = new Fraction(4173, 4173, 206);
        fraction0.percentageValue();
    }

    @Test(timeout = 4000)
    public void test81138() throws Throwable {
        Fraction fraction0 = new Fraction((-248.53421868528));
        double double0 = fraction0.percentageValue();
    }

    @Test(timeout = 4000)
    public void test81139() throws Throwable {
        Fraction fraction0 = new Fraction((-248.53421868528));
        double double0 = fraction0.percentageValue();
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test82140() throws Throwable {
        Fraction fraction0 = Fraction.TWO_THIRDS;
        float float0 = fraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test83141() throws Throwable {
        Fraction fraction0 = new Fraction((-248.53421868528));
        int int0 = fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test84142() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        fraction0.hashCode();
    }

    @Test(timeout = 4000)
    public void test85143() throws Throwable {
        Fraction fraction0 = new Fraction(1);
        int int0 = fraction0.intValue();
    }

    @Test(timeout = 4000)
    public void test85144() throws Throwable {
        Fraction fraction0 = new Fraction(1);
        int int0 = fraction0.intValue();
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test86145() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        long long0 = fraction0.longValue();
        fraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test86146() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        long long0 = fraction0.longValue();
    }

    @Test(timeout = 4000)
    public void test87147() throws Throwable {
        Fraction fraction0 = new Fraction((-4313.770396564076));
        Fraction fraction1 = fraction0.reciprocal();
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test87148() throws Throwable {
        Fraction fraction0 = new Fraction((-4313.770396564076));
        Fraction fraction1 = fraction0.reciprocal();
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test88149() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        FractionField fractionField0 = fraction0.TWO_THIRDS.getField();
    }

    @Test(timeout = 4000)
    public void test89150() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        Fraction fraction1 = fraction0.ONE_HALF.subtract(fraction0);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test89151() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        Fraction fraction1 = fraction0.ONE_HALF.subtract(fraction0);
        fraction1.percentageValue();
    }

    @Test(timeout = 4000)
    public void test90152() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        int int0 = fraction0.getDenominator();
    }
}
