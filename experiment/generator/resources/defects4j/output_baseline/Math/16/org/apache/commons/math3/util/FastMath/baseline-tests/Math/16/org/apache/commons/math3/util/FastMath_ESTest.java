/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 06:01:44 GMT 2023
 */
package org.apache.commons.math3.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.util.FastMath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class FastMath_ESTest extends FastMath_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        float float0 = FastMath.copySign((-0.99999994F), (float) 2864);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        float float0 = FastMath.copySign(0.0F, (-1262.3472F));
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        double double0 = FastMath.copySign((double) (-213L), 175.9);
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        double double0 = FastMath.copySign(0.0, (-1447.1435378000042));
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        double double0 = FastMath.copySign(796.5, (double) 383.5332F);
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        long long0 = FastMath.max((-2182L), (-2182L));
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        long long0 = FastMath.min((long) (-1023), (long) (-807));
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        int int0 = FastMath.min((-2365), 2855);
    }

    @Test(timeout = 4000)
    public void test0088() throws Throwable {
        double double0 = FastMath.rint(0.8109631538391113);
    }

    @Test(timeout = 4000)
    public void test0099() throws Throwable {
        double double0 = FastMath.rint(3370.5);
    }

    @Test(timeout = 4000)
    public void test01010() throws Throwable {
        double double0 = FastMath.scalb(1117.076, 1024);
    }

    @Test(timeout = 4000)
    public void test01111() throws Throwable {
        float float0 = FastMath.ulp(740.9073F);
    }

    @Test(timeout = 4000)
    public void test01212() throws Throwable {
        double double0 = FastMath.ulp(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test01313() throws Throwable {
        float float0 = FastMath.abs(Float.NaN);
    }

    @Test(timeout = 4000)
    public void test01414() throws Throwable {
        int int0 = FastMath.abs(1500);
    }

    @Test(timeout = 4000)
    public void test01515() throws Throwable {
        double double0 = FastMath.toDegrees((-6.480706118857055E-9));
    }

    @Test(timeout = 4000)
    public void test01616() throws Throwable {
        double double0 = FastMath.asin((-2.2250738585072014E-308));
    }

    @Test(timeout = 4000)
    public void test01717() throws Throwable {
        double double0 = FastMath.atan2(0.0F, 2.9676011119845104E-8);
    }

    @Test(timeout = 4000)
    public void test01818() throws Throwable {
        double double0 = FastMath.atan2(3983.0, 3983.0);
    }

    @Test(timeout = 4000)
    public void test01919() throws Throwable {
        double double0 = FastMath.tan(1.5707963267948966);
    }

    @Test(timeout = 4000)
    public void test02020() throws Throwable {
        double double0 = FastMath.cos(3294198.0);
    }

    @Test(timeout = 4000)
    public void test02121() throws Throwable {
        double double0 = FastMath.expm1(1.0F);
    }

    @Test(timeout = 4000)
    public void test02222() throws Throwable {
        double double0 = FastMath.expm1((-1.0F));
    }

    @Test(timeout = 4000)
    public void test02323() throws Throwable {
        float float0 = FastMath.signum(Float.NaN);
    }

    @Test(timeout = 4000)
    public void test02424() throws Throwable {
        double double0 = FastMath.signum(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test02525() throws Throwable {
        double double0 = FastMath.cosh(1.570628990785749);
    }

    @Test(timeout = 4000)
    public void test02626() throws Throwable {
        double double0 = FastMath.toDegrees(2.2250738585072014E-308);
    }

    @Test(timeout = 4000)
    public void test02727() throws Throwable {
        double double0 = FastMath.toRadians((-2.2250738585072014E-308));
    }

    @Test(timeout = 4000)
    public void test02828() throws Throwable {
        double double0 = FastMath.sqrt(0.0);
    }

    @Test(timeout = 4000)
    public void test02929() throws Throwable {
        double double0 = FastMath.sqrt(81.76);
    }

    @Test(timeout = 4000)
    public void test03030() throws Throwable {
        int int0 = FastMath.round((float) 0L);
    }

    @Test(timeout = 4000)
    public void test03131() throws Throwable {
        int int0 = FastMath.round(1.0F);
    }

    @Test(timeout = 4000)
    public void test03232() throws Throwable {
        long long0 = FastMath.round(0.0);
    }

    @Test(timeout = 4000)
    public void test03333() throws Throwable {
        long long0 = FastMath.round((-738.81948056557));
    }

    @Test(timeout = 4000)
    public void test03434() throws Throwable {
        double double0 = FastMath.pow((double) 989.485F, (-1023));
    }

    @Test(timeout = 4000)
    public void test03535() throws Throwable {
        double double0 = FastMath.pow((-1.5707963267948966), 355);
    }

    @Test(timeout = 4000)
    public void test03636() throws Throwable {
        float float0 = FastMath.nextUp((-1.4E-45F));
    }

    @Test(timeout = 4000)
    public void test03737() throws Throwable {
        float float0 = FastMath.nextUp((-1.0F));
    }

    @Test(timeout = 4000)
    public void test03838() throws Throwable {
        double double0 = FastMath.nextAfter((double) 0.0F, 0.0);
    }

    @Test(timeout = 4000)
    public void test03939() throws Throwable {
        long long0 = FastMath.min(1167L, 1167L);
    }

    @Test(timeout = 4000)
    public void test04040() throws Throwable {
        int int0 = FastMath.min(5, 0);
    }

    @Test(timeout = 4000)
    public void test04141() throws Throwable {
        float float0 = FastMath.min(616.4F, (float) 2146963613);
    }

    @Test(timeout = 4000)
    public void test04242() throws Throwable {
        double double0 = FastMath.min(1.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test04343() throws Throwable {
        double double0 = FastMath.min(2086.4, 2078.111);
    }

    @Test(timeout = 4000)
    public void test04444() throws Throwable {
        long long0 = FastMath.max(0L, 1023L);
    }

    @Test(timeout = 4000)
    public void test04545() throws Throwable {
        int int0 = FastMath.max(0, 0);
    }

    @Test(timeout = 4000)
    public void test04646() throws Throwable {
        int int0 = FastMath.max((-53), (-807));
    }

    @Test(timeout = 4000)
    public void test04747() throws Throwable {
        float float0 = FastMath.max(0.0F, 0.0F);
    }

    @Test(timeout = 4000)
    public void test04848() throws Throwable {
        double double0 = FastMath.max((-1.5705903795298828), (double) Float.NEGATIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test04949() throws Throwable {
        double double0 = FastMath.log10(1.0);
    }

    @Test(timeout = 4000)
    public void test05050() throws Throwable {
        double double0 = FastMath.log10(1142.019);
    }

    @Test(timeout = 4000)
    public void test05151() throws Throwable {
        double double0 = FastMath.log(2046.745277684, 660.2065754);
    }

    @Test(timeout = 4000)
    public void test05252() throws Throwable {
        double double0 = FastMath.log((double) 1.0F);
    }

    @Test(timeout = 4000)
    public void test05353() throws Throwable {
        double double0 = FastMath.log(1746.64);
    }

    @Test(timeout = 4000)
    public void test05454() throws Throwable {
        int int0 = FastMath.getExponent((-1.0F));
    }

    @Test(timeout = 4000)
    public void test05555() throws Throwable {
        int int0 = FastMath.getExponent(2147.0F);
    }

    @Test(timeout = 4000)
    public void test05656() throws Throwable {
        int int0 = FastMath.getExponent((double) 1.0F);
    }

    @Test(timeout = 4000)
    public void test05757() throws Throwable {
        int int0 = FastMath.getExponent(0.0);
    }

    @Test(timeout = 4000)
    public void test05858() throws Throwable {
        double double0 = FastMath.exp((-1958.0));
    }

    @Test(timeout = 4000)
    public void test05959() throws Throwable {
        float float0 = FastMath.copySign(0.0F, 760.49F);
    }

    @Test(timeout = 4000)
    public void test06060() throws Throwable {
        double double0 = FastMath.ceil((-2420.1741085807));
    }

    @Test(timeout = 4000)
    public void test06161() throws Throwable {
        double double0 = FastMath.cbrt((-6.480706118857055E-9));
    }

    @Test(timeout = 4000)
    public void test06262() throws Throwable {
        double double0 = FastMath.atanh((-7.877917738262007E-9));
    }

    @Test(timeout = 4000)
    public void test06363() throws Throwable {
        double double0 = FastMath.atan(1.5574076175689697);
    }

    @Test(timeout = 4000)
    public void test06464() throws Throwable {
        double double0 = FastMath.acosh(1.0);
    }

    @Test(timeout = 4000)
    public void test06565() throws Throwable {
        double double0 = FastMath.acosh(2146.2150000000006);
    }

    @Test(timeout = 4000)
    public void test06666() throws Throwable {
        long long0 = FastMath.abs(0L);
    }

    @Test(timeout = 4000)
    public void test06767() throws Throwable {
        int int0 = FastMath.abs(Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test06868() throws Throwable {
        double double0 = FastMath.IEEEremainder(4.392983574030969E-147, 4.392983574030969E-147);
    }

    @Test(timeout = 4000)
    public void test06969() throws Throwable {
        double double0 = FastMath.IEEEremainder(1.0, 506.971);
    }

    @Test(timeout = 4000)
    public void test07070() throws Throwable {
        double double0 = FastMath.IEEEremainder((-5.555080534042001E-8), (-668.81043863254));
    }

    @Test(timeout = 4000)
    public void test07171() throws Throwable {
        double double0 = FastMath.floor(0.0F);
    }

    @Test(timeout = 4000)
    public void test07272() throws Throwable {
        double double0 = FastMath.floor((-1.9589778310104216E-74));
    }

    @Test(timeout = 4000)
    public void test07373() throws Throwable {
        double double0 = FastMath.floor(740.9073F);
    }

    @Test(timeout = 4000)
    public void test07474() throws Throwable {
        double double0 = FastMath.floor(1.5645672698520312E274);
    }

    @Test(timeout = 4000)
    public void test07575() throws Throwable {
        float float0 = FastMath.nextAfter(1.0F, 79.5621440568152);
    }

    @Test(timeout = 4000)
    public void test07676() throws Throwable {
        float float0 = FastMath.nextAfter((float) 0, 3425.0);
    }

    @Test(timeout = 4000)
    public void test07777() throws Throwable {
        double double0 = FastMath.nextAfter((double) (-0.99999994F), 570.4046388);
    }

    @Test(timeout = 4000)
    public void test07878() throws Throwable {
        double double0 = FastMath.nextAfter((double) 0.0F, 1084.917224401101);
    }

    @Test(timeout = 4000)
    public void test07979() throws Throwable {
        double double0 = FastMath.scalb(0.0, (-2829));
    }

    @Test(timeout = 4000)
    public void test08080() throws Throwable {
        double double0 = FastMath.abs((-1524.0));
    }

    @Test(timeout = 4000)
    public void test08181() throws Throwable {
        double double0 = FastMath.abs(1.5574076175689697);
    }

    @Test(timeout = 4000)
    public void test08282() throws Throwable {
        float float0 = FastMath.abs(302.0F);
    }

    @Test(timeout = 4000)
    public void test08383() throws Throwable {
        double double0 = FastMath.exp(0.0);
    }

    @Test(timeout = 4000)
    public void test08484() throws Throwable {
        float float0 = FastMath.copySign((-1649.2449F), (-1649.2449F));
    }

    @Test(timeout = 4000)
    public void test08585() throws Throwable {
        float float0 = FastMath.copySign(1.4E-45F, (-1382.2856F));
    }

    @Test(timeout = 4000)
    public void test08686() throws Throwable {
        float float0 = FastMath.copySign((float) 838, 0.0F);
    }

    @Test(timeout = 4000)
    public void test08787() throws Throwable {
        float float0 = FastMath.copySign((float) (-9223372036854775808L), 0.0F);
    }

    @Test(timeout = 4000)
    public void test08888() throws Throwable {
        double double0 = FastMath.copySign((-1.2522542401353875E-9), (-1107.142));
    }

    @Test(timeout = 4000)
    public void test08989() throws Throwable {
        double double0 = FastMath.copySign(0.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test09090() throws Throwable {
        double double0 = FastMath.copySign(Double.NaN, (-807.0767907506947));
    }

    @Test(timeout = 4000)
    public void test09191() throws Throwable {
        double double0 = FastMath.copySign((-1885.017243997116), 0.0);
    }

    @Test(timeout = 4000)
    public void test09292() throws Throwable {
        double double0 = FastMath.hypot(1202.0, 9.313225746154785E-10);
    }

    @Test(timeout = 4000)
    public void test09393() throws Throwable {
        double double0 = FastMath.hypot(0.0, Double.NaN);
    }

    @Test(timeout = 4000)
    public void test09494() throws Throwable {
        double double0 = FastMath.hypot(Double.NaN, 0.1246747374534607);
    }

    @Test(timeout = 4000)
    public void test09595() throws Throwable {
        double double0 = FastMath.hypot(0.0, Double.NEGATIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test09696() throws Throwable {
        double double0 = FastMath.hypot(Double.POSITIVE_INFINITY, (-727.2654689509806));
    }

    @Test(timeout = 4000)
    public void test09797() throws Throwable {
        double double0 = FastMath.max(0.0, Double.NaN);
    }

    @Test(timeout = 4000)
    public void test09898() throws Throwable {
        double double0 = FastMath.max(0.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test09999() throws Throwable {
        double double0 = FastMath.max(1.9464664459228516, 0.5239553360940171);
    }

    @Test(timeout = 4000)
    public void test100100() throws Throwable {
        double double0 = FastMath.max(9.755392680573412E-9, 2.7553817452272217E-6);
    }

    @Test(timeout = 4000)
    public void test101101() throws Throwable {
        float float0 = FastMath.max((float) 0, Float.NaN);
    }

    @Test(timeout = 4000)
    public void test102102() throws Throwable {
        float float0 = FastMath.max((-3.4028235E38F), (-3.4028235E38F));
    }

    @Test(timeout = 4000)
    public void test103103() throws Throwable {
        float float0 = FastMath.max((float) 1466, (float) 361);
    }

    @Test(timeout = 4000)
    public void test104104() throws Throwable {
        float float0 = FastMath.max((float) (-3020), 1221.148F);
    }

    @Test(timeout = 4000)
    public void test105105() throws Throwable {
        long long0 = FastMath.max(0L, (-1514L));
    }

    @Test(timeout = 4000)
    public void test106106() throws Throwable {
        int int0 = FastMath.max(67, 4296);
    }

    @Test(timeout = 4000)
    public void test107107() throws Throwable {
        double double0 = FastMath.min(Double.NaN, (-3.609949022969024E295));
    }

    @Test(timeout = 4000)
    public void test108108() throws Throwable {
        double double0 = FastMath.min((-1136.1), (-1136.1));
    }

    @Test(timeout = 4000)
    public void test109109() throws Throwable {
        double double0 = FastMath.min((-1030.128), (-3.390456646038825E-19));
    }

    @Test(timeout = 4000)
    public void test110110() throws Throwable {
        float float0 = FastMath.min(Float.NaN, 1483.65F);
    }

    @Test(timeout = 4000)
    public void test111111() throws Throwable {
        float float0 = FastMath.min(0.0F, 0.0F);
    }

    @Test(timeout = 4000)
    public void test112112() throws Throwable {
        float float0 = FastMath.min((-1243.1228F), (-3.4028235E38F));
    }

    @Test(timeout = 4000)
    public void test113113() throws Throwable {
        long long0 = FastMath.min(0L, 0L);
    }

    @Test(timeout = 4000)
    public void test114114() throws Throwable {
        long long0 = FastMath.min(3064L, (-2251L));
    }

    @Test(timeout = 4000)
    public void test115115() throws Throwable {
        int int0 = FastMath.min(67, 67);
    }

    @Test(timeout = 4000)
    public void test116116() throws Throwable {
        double double0 = FastMath.rint(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test117117() throws Throwable {
        double double0 = FastMath.rint(2L);
    }

    @Test(timeout = 4000)
    public void test118118() throws Throwable {
        double double0 = FastMath.rint((-4.926470933588261E-8));
    }

    @Test(timeout = 4000)
    public void test119119() throws Throwable {
        double double0 = FastMath.rint((-709.04313048574));
    }

    @Test(timeout = 4000)
    public void test120120() throws Throwable {
        double double0 = FastMath.ceil((-7.877917738262007E-9));
    }

    @Test(timeout = 4000)
    public void test121121() throws Throwable {
        double double0 = FastMath.ceil(0.0F);
    }

    @Test(timeout = 4000)
    public void test122122() throws Throwable {
        double double0 = FastMath.ceil(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test123123() throws Throwable {
        double double0 = FastMath.ceil(1.2206286252567737E-4);
    }

    @Test(timeout = 4000)
    public void test124124() throws Throwable {
        double double0 = FastMath.floor((-1.0));
    }

    @Test(timeout = 4000)
    public void test125125() throws Throwable {
        double double0 = FastMath.floor((-1.4561530066010593E152));
    }

    @Test(timeout = 4000)
    public void test126126() throws Throwable {
        double double0 = FastMath.rint(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test127127() throws Throwable {
        double double0 = FastMath.floor(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test128128() throws Throwable {
        float float0 = FastMath.nextUp(793.25757F);
    }

    @Test(timeout = 4000)
    public void test129129() throws Throwable {
        float float0 = FastMath.nextAfter((-2820.6963F), 667.7311);
    }

    @Test(timeout = 4000)
    public void test130130() throws Throwable {
        float float0 = FastMath.nextAfter(0.0F, Double.NEGATIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test131131() throws Throwable {
        float float0 = FastMath.nextAfter(345.0F, 204.32979200218);
    }

    @Test(timeout = 4000)
    public void test132132() throws Throwable {
        float float0 = FastMath.nextAfter(Float.POSITIVE_INFINITY, (-870.0));
    }

    @Test(timeout = 4000)
    public void test133133() throws Throwable {
        float float0 = FastMath.nextAfter(0.0F, (double) 0);
    }

    @Test(timeout = 4000)
    public void test134134() throws Throwable {
        float float0 = FastMath.nextAfter((-224.69F), Double.NaN);
    }

    @Test(timeout = 4000)
    public void test135135() throws Throwable {
        double double0 = FastMath.nextAfter(705.48, 1281.0);
    }

    @Test(timeout = 4000)
    public void test136136() throws Throwable {
        double double0 = FastMath.nextAfter(7.156176637480615, (-1.0));
    }

    @Test(timeout = 4000)
    public void test137137() throws Throwable {
        double double0 = FastMath.nextAfter(0.0, (-674.9495796028052));
    }

    @Test(timeout = 4000)
    public void test138138() throws Throwable {
        double double0 = FastMath.nextUp((double) (-4015.5F));
    }

    @Test(timeout = 4000)
    public void test139139() throws Throwable {
        double double0 = FastMath.nextAfter(Double.POSITIVE_INFINITY, (-2.6157563728873715E-8));
    }

    @Test(timeout = 4000)
    public void test140140() throws Throwable {
        double double0 = FastMath.nextAfter(Double.NEGATIVE_INFINITY, 1.0);
    }

    @Test(timeout = 4000)
    public void test141141() throws Throwable {
        double double0 = FastMath.nextAfter((-1452.4435), Double.NaN);
    }

    @Test(timeout = 4000)
    public void test142142() throws Throwable {
        double double0 = FastMath.nextAfter(Double.NaN, (-311.087));
    }

    @Test(timeout = 4000)
    public void test143143() throws Throwable {
        float float0 = FastMath.scalb((-202.9254F), 154);
    }

    @Test(timeout = 4000)
    public void test144144() throws Throwable {
        float float0 = FastMath.scalb((-857.3F), (-202));
    }

    @Test(timeout = 4000)
    public void test145145() throws Throwable {
        float float0 = FastMath.scalb(731.53F, (-156));
    }

    @Test(timeout = 4000)
    public void test146146() throws Throwable {
        float float0 = FastMath.scalb(1513.7031F, 141);
    }

    @Test(timeout = 4000)
    public void test147147() throws Throwable {
        float float0 = FastMath.scalb((float) 8, 551);
    }

    @Test(timeout = 4000)
    public void test148148() throws Throwable {
        float float0 = FastMath.scalb(135.7F, (-5176));
    }

    @Test(timeout = 4000)
    public void test149149() throws Throwable {
        float float0 = FastMath.scalb((-975.8F), (-2145698541));
    }

    @Test(timeout = 4000)
    public void test150150() throws Throwable {
        float float0 = FastMath.scalb((float) 0L, 716);
    }

    @Test(timeout = 4000)
    public void test151151() throws Throwable {
        float float0 = FastMath.scalb(Float.POSITIVE_INFINITY, 631);
    }

    @Test(timeout = 4000)
    public void test152152() throws Throwable {
        float float0 = FastMath.scalb(0.0F, (-97));
    }

    @Test(timeout = 4000)
    public void test153153() throws Throwable {
        float float0 = FastMath.scalb((float) (-982), 982);
    }

    @Test(timeout = 4000)
    public void test154154() throws Throwable {
        float float0 = FastMath.scalb(2201.0F, (-177));
    }

    @Test(timeout = 4000)
    public void test155155() throws Throwable {
        double double0 = FastMath.scalb((double) 1.4E-45F, 1500);
    }

    @Test(timeout = 4000)
    public void test156156() throws Throwable {
        double double0 = FastMath.scalb(477.782103668, (-1720));
    }

    @Test(timeout = 4000)
    public void test157157() throws Throwable {
        double double0 = FastMath.scalb((double) Integer.MAX_VALUE, Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test158158() throws Throwable {
        double double0 = FastMath.scalb((-0.0018644072194913017), Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test159159() throws Throwable {
        double double0 = FastMath.scalb((-1136.1), (-2145392195));
    }

    @Test(timeout = 4000)
    public void test160160() throws Throwable {
        double double0 = FastMath.scalb(0.9641857332345813, (-3020));
    }

    @Test(timeout = 4000)
    public void test161161() throws Throwable {
        double double0 = FastMath.hypot(0.0, 0L);
    }

    @Test(timeout = 4000)
    public void test162162() throws Throwable {
        double double0 = FastMath.scalb(Double.POSITIVE_INFINITY, 1018576403);
    }

    @Test(timeout = 4000)
    public void test163163() throws Throwable {
        double double0 = FastMath.scalb((-1042.4957893689516), 1466);
    }

    @Test(timeout = 4000)
    public void test164164() throws Throwable {
        double double0 = FastMath.scalb((-1394.856718940496), (-765));
    }

    @Test(timeout = 4000)
    public void test165165() throws Throwable {
        double double0 = FastMath.scalb(Double.NaN, (-1284));
    }

    @Test(timeout = 4000)
    public void test166166() throws Throwable {
        float float0 = FastMath.ulp(Float.NEGATIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test167167() throws Throwable {
        double double0 = FastMath.ulp(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test168168() throws Throwable {
        double double0 = FastMath.abs(0.0);
    }

    @Test(timeout = 4000)
    public void test169169() throws Throwable {
        double double0 = FastMath.ulp((-161.784094525014));
    }

    @Test(timeout = 4000)
    public void test170170() throws Throwable {
        double double0 = FastMath.hypot(0.0, 2.7553817452272217E-6);
    }

    @Test(timeout = 4000)
    public void test171171() throws Throwable {
        float float0 = FastMath.abs(0.0F);
    }

    @Test(timeout = 4000)
    public void test172172() throws Throwable {
        float float0 = FastMath.abs((float) (-5034868814120038111L));
    }

    @Test(timeout = 4000)
    public void test173173() throws Throwable {
        long long0 = FastMath.abs((-5034868814120038111L));
    }

    @Test(timeout = 4000)
    public void test174174() throws Throwable {
        long long0 = FastMath.abs(4652218415073722368L);
    }

    @Test(timeout = 4000)
    public void test175175() throws Throwable {
        int int0 = FastMath.abs(0);
    }

    @Test(timeout = 4000)
    public void test176176() throws Throwable {
        double double0 = FastMath.toDegrees(0.0);
    }

    @Test(timeout = 4000)
    public void test177177() throws Throwable {
        double double0 = FastMath.toDegrees(Float.NEGATIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test178178() throws Throwable {
        double double0 = FastMath.toRadians(0.0F);
    }

    @Test(timeout = 4000)
    public void test179179() throws Throwable {
        double double0 = FastMath.toRadians(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test180180() throws Throwable {
        double double0 = FastMath.cbrt(0.14384103622589045);
    }

    @Test(timeout = 4000)
    public void test181181() throws Throwable {
        double double0 = FastMath.cbrt(0.0F);
    }

    @Test(timeout = 4000)
    public void test182182() throws Throwable {
        double double0 = FastMath.cbrt(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test183183() throws Throwable {
        double double0 = FastMath.acos((-0.5753052208739643));
    }

    @Test(timeout = 4000)
    public void test184184() throws Throwable {
        double double0 = FastMath.acos(4.9E-324);
    }

    @Test(timeout = 4000)
    public void test185185() throws Throwable {
        double double0 = FastMath.acos(0.35334908962249756);
    }

    @Test(timeout = 4000)
    public void test186186() throws Throwable {
        double double0 = FastMath.acos(0L);
    }

    @Test(timeout = 4000)
    public void test187187() throws Throwable {
        double double0 = FastMath.acos((-1024.7907));
    }

    @Test(timeout = 4000)
    public void test188188() throws Throwable {
        double double0 = FastMath.acos((-1.0));
    }

    @Test(timeout = 4000)
    public void test189189() throws Throwable {
        double double0 = FastMath.acos(3410.0);
    }

    @Test(timeout = 4000)
    public void test190190() throws Throwable {
        double double0 = FastMath.asin(0.0);
    }

    @Test(timeout = 4000)
    public void test191191() throws Throwable {
        double double0 = FastMath.asin((-1.0F));
    }

    @Test(timeout = 4000)
    public void test192192() throws Throwable {
        double double0 = FastMath.asin(1.0);
    }

    @Test(timeout = 4000)
    public void test193193() throws Throwable {
        double double0 = FastMath.asin(7.724278756071081E-9);
    }

    @Test(timeout = 4000)
    public void test194194() throws Throwable {
        double double0 = FastMath.asin((-1757.5065213391974));
    }

    @Test(timeout = 4000)
    public void test195195() throws Throwable {
        double double0 = FastMath.asin(5117.0);
    }

    @Test(timeout = 4000)
    public void test196196() throws Throwable {
        double double0 = FastMath.atan2((-920.35809), 0.0);
    }

    @Test(timeout = 4000)
    public void test197197() throws Throwable {
        double double0 = FastMath.atan2(6.123233995736766E-17, 0.0);
    }

    @Test(timeout = 4000)
    public void test198198() throws Throwable {
        double double0 = FastMath.atan2(Double.NEGATIVE_INFINITY, 0.0);
    }

    @Test(timeout = 4000)
    public void test199199() throws Throwable {
        double double0 = FastMath.atan2(Double.POSITIVE_INFINITY, (-1055.487029));
    }

    @Test(timeout = 4000)
    public void test200200() throws Throwable {
        double double0 = FastMath.atan2(0.0, (-5.718749537552229E-8));
    }

    @Test(timeout = 4000)
    public void test201201() throws Throwable {
        double double0 = FastMath.atan2(0.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test202202() throws Throwable {
        double double0 = FastMath.atan2(7.2759576E-12F, Double.NaN);
    }

    @Test(timeout = 4000)
    public void test203203() throws Throwable {
        double double0 = FastMath.atan2((-1634.57178), (-9.374695893307895E158));
    }

    @Test(timeout = 4000)
    public void test204204() throws Throwable {
        double double0 = FastMath.atan2((-1.4561530066010593E152), 1123.6401454900758);
    }

    @Test(timeout = 4000)
    public void test205205() throws Throwable {
        double double0 = FastMath.atan2(4.039437286589528E271, (-1987.922166242));
    }

    @Test(timeout = 4000)
    public void test206206() throws Throwable {
        double double0 = FastMath.atan(0.0);
    }

    @Test(timeout = 4000)
    public void test207207() throws Throwable {
        double double0 = FastMath.tan((-1559.78246239));
    }

    @Test(timeout = 4000)
    public void test208208() throws Throwable {
        double double0 = FastMath.tan(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test209209() throws Throwable {
        double double0 = FastMath.tan(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test210210() throws Throwable {
        double double0 = FastMath.tan(0.0F);
    }

    @Test(timeout = 4000)
    public void test211211() throws Throwable {
        double double0 = FastMath.cos(375.5);
    }

    @Test(timeout = 4000)
    public void test212212() throws Throwable {
        double double0 = FastMath.cos(Float.NEGATIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test213213() throws Throwable {
        double double0 = FastMath.cos(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test214214() throws Throwable {
        double double0 = FastMath.sin((-819L));
    }

    @Test(timeout = 4000)
    public void test215215() throws Throwable {
        double double0 = FastMath.sin((-514.183449678365));
    }

    @Test(timeout = 4000)
    public void test216216() throws Throwable {
        double double0 = FastMath.sin(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test217217() throws Throwable {
        double double0 = FastMath.sin(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test218218() throws Throwable {
        double double0 = FastMath.sin(-0.0F);
    }

    @Test(timeout = 4000)
    public void test219219() throws Throwable {
        double double0 = FastMath.sin(0.0);
    }

    @Test(timeout = 4000)
    public void test220220() throws Throwable {
        double double0 = FastMath.tan(5.540622484676759E34);
    }

    @Test(timeout = 4000)
    public void test221221() throws Throwable {
        double double0 = FastMath.cos(6.837671137556327E30);
    }

    @Test(timeout = 4000)
    public void test222222() throws Throwable {
        double double0 = FastMath.sin((-2145698541));
    }

    @Test(timeout = 4000)
    public void test223223() throws Throwable {
        double double0 = FastMath.sin(1.8445514681108982E150);
    }

    @Test(timeout = 4000)
    public void test224224() throws Throwable {
        double double0 = FastMath.cos((-9.374695893307895E158));
    }

    @Test(timeout = 4000)
    public void test225225() throws Throwable {
        double double0 = FastMath.cos((-1.642361029990822E65));
    }

    @Test(timeout = 4000)
    public void test226226() throws Throwable {
        double double0 = FastMath.tan((-3.390456646038825E-19));
    }

    @Test(timeout = 4000)
    public void test227227() throws Throwable {
        double double0 = FastMath.sin((-4.9E-324));
    }

    @Test(timeout = 4000)
    public void test228228() throws Throwable {
        double double0 = FastMath.pow(0.0, 0);
    }

    @Test(timeout = 4000)
    public void test229229() throws Throwable {
        double double0 = FastMath.pow(2.6197411946856397E-8, Double.NaN);
    }

    @Test(timeout = 4000)
    public void test230230() throws Throwable {
        double double0 = FastMath.pow((-8.331653664515525), (double) (-3218.0F));
    }

    @Test(timeout = 4000)
    public void test231231() throws Throwable {
        double double0 = FastMath.pow((-525.0), 1.0);
    }

    @Test(timeout = 4000)
    public void test232232() throws Throwable {
        double double0 = FastMath.pow((-2662.4290799), 0.4300335485332658);
    }

    @Test(timeout = 4000)
    public void test233233() throws Throwable {
        double double0 = FastMath.pow((double) (-740.9073F), 1.4946725808524086E235);
    }

    @Test(timeout = 4000)
    public void test234234() throws Throwable {
        double double0 = FastMath.pow(Double.NEGATIVE_INFINITY, 2.7553817452272217E-6);
    }

    @Test(timeout = 4000)
    public void test235235() throws Throwable {
        double double0 = FastMath.pow((-4324.92153849), (double) Float.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test236236() throws Throwable {
        double double0 = FastMath.pow(0.14384103622589045, Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test237237() throws Throwable {
        double double0 = FastMath.pow((double) 0.0F, 1.2312228679656982);
    }

    @Test(timeout = 4000)
    public void test238238() throws Throwable {
        double double0 = FastMath.pow(0.0, (-3491.35));
    }

    @Test(timeout = 4000)
    public void test239239() throws Throwable {
        double double0 = FastMath.pow(Double.NaN, 3.203391672602453E-8);
    }

    @Test(timeout = 4000)
    public void test240240() throws Throwable {
        double double0 = FastMath.pow((-2068.6856), (double) 0.0F);
    }

    @Test(timeout = 4000)
    public void test241241() throws Throwable {
        double double0 = FastMath.log10(0.0);
    }

    @Test(timeout = 4000)
    public void test242242() throws Throwable {
        double double0 = FastMath.log1p(0);
    }

    @Test(timeout = 4000)
    public void test243243() throws Throwable {
        double double0 = FastMath.log1p(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test244244() throws Throwable {
        double double0 = FastMath.log1p((-1.0));
    }

    @Test(timeout = 4000)
    public void test245245() throws Throwable {
        double double0 = FastMath.log(1.4582863136475673E-187, 1.0);
    }

    @Test(timeout = 4000)
    public void test246246() throws Throwable {
        double double0 = FastMath.atanh(0.1532618864787106);
    }

    @Test(timeout = 4000)
    public void test247247() throws Throwable {
        double double0 = FastMath.log1p(1.220703125E-4);
    }

    @Test(timeout = 4000)
    public void test248248() throws Throwable {
        double double0 = FastMath.pow(0.9171523104767141, 0.9171523104767141);
    }

    @Test(timeout = 4000)
    public void test249249() throws Throwable {
        double double0 = FastMath.log1p((-1708.66615));
    }

    @Test(timeout = 4000)
    public void test250250() throws Throwable {
        double double0 = FastMath.log(0.0);
    }

    @Test(timeout = 4000)
    public void test251251() throws Throwable {
        double double0 = FastMath.expm1(4.9E-324);
    }

    @Test(timeout = 4000)
    public void test252252() throws Throwable {
        double double0 = FastMath.expm1(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test253253() throws Throwable {
        double double0 = FastMath.expm1(2.860915548426704E251);
    }

    @Test(timeout = 4000)
    public void test254254() throws Throwable {
        double double0 = FastMath.expm1((-9223372036854775808L));
    }

    @Test(timeout = 4000)
    public void test255255() throws Throwable {
        float float0 = FastMath.signum(0.0F);
    }

    @Test(timeout = 4000)
    public void test256256() throws Throwable {
        float float0 = FastMath.signum((-1.4E-45F));
    }

    @Test(timeout = 4000)
    public void test257257() throws Throwable {
        float float0 = FastMath.signum(77.0F);
    }

    @Test(timeout = 4000)
    public void test258258() throws Throwable {
        double double0 = FastMath.signum(0.0);
    }

    @Test(timeout = 4000)
    public void test259259() throws Throwable {
        double double0 = FastMath.signum((-1.5707963267948966));
    }

    @Test(timeout = 4000)
    public void test260260() throws Throwable {
        double double0 = FastMath.signum(952.592);
    }

    @Test(timeout = 4000)
    public void test261261() throws Throwable {
        double double0 = FastMath.atanh(0.036);
    }

    @Test(timeout = 4000)
    public void test262262() throws Throwable {
        double double0 = FastMath.atanh(0.0);
    }

    @Test(timeout = 4000)
    public void test263263() throws Throwable {
        double double0 = FastMath.atanh((-1413.2458));
    }

    @Test(timeout = 4000)
    public void test264264() throws Throwable {
        double double0 = FastMath.atanh(0.14285714285714285);
    }

    @Test(timeout = 4000)
    public void test265265() throws Throwable {
        double double0 = FastMath.asinh(0.036);
    }

    @Test(timeout = 4000)
    public void test266266() throws Throwable {
        double double0 = FastMath.asinh(0);
    }

    @Test(timeout = 4000)
    public void test267267() throws Throwable {
        double double0 = FastMath.asinh(Double.NEGATIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test268268() throws Throwable {
        double double0 = FastMath.asinh(0.14384103622589045);
    }

    @Test(timeout = 4000)
    public void test269269() throws Throwable {
        double double0 = FastMath.tanh((-5.301386276260592E-111));
    }

    @Test(timeout = 4000)
    public void test270270() throws Throwable {
        double double0 = FastMath.tanh(2.1837735844595634);
    }

    @Test(timeout = 4000)
    public void test271271() throws Throwable {
        double double0 = FastMath.tanh(0.0);
    }

    @Test(timeout = 4000)
    public void test272272() throws Throwable {
        double double0 = FastMath.tanh(870.010546069);
    }

    @Test(timeout = 4000)
    public void test273273() throws Throwable {
        double double0 = FastMath.tanh(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test274274() throws Throwable {
        double double0 = FastMath.tanh((-694.1540916770182));
    }

    @Test(timeout = 4000)
    public void test275275() throws Throwable {
        double double0 = FastMath.sinh(0.14384103622589045);
    }

    @Test(timeout = 4000)
    public void test276276() throws Throwable {
        double double0 = FastMath.sinh((-1.0F));
    }

    @Test(timeout = 4000)
    public void test277277() throws Throwable {
        double double0 = FastMath.sinh(0.0F);
    }

    @Test(timeout = 4000)
    public void test278278() throws Throwable {
        double double0 = FastMath.sinh((-1853.0));
    }

    @Test(timeout = 4000)
    public void test279279() throws Throwable {
        double double0 = FastMath.sinh(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test280280() throws Throwable {
        double double0 = FastMath.cosh((-5.71041540961));
    }

    @Test(timeout = 4000)
    public void test281281() throws Throwable {
        double double0 = FastMath.cosh(0.0);
    }

    @Test(timeout = 4000)
    public void test282282() throws Throwable {
        double double0 = FastMath.cosh((-2222.9998F));
    }

    @Test(timeout = 4000)
    public void test283283() throws Throwable {
        double double0 = FastMath.cosh(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test284284() throws Throwable {
        double double0 = FastMath.cosh(2.113946677051906E252);
    }

    @Test(timeout = 4000)
    public void test285285() throws Throwable {
        double double0 = FastMath.toRadians(0.9553693136063989);
    }

    @Test(timeout = 4000)
    public void test286286() throws Throwable {
        double double0 = FastMath.random();
        double double1 = FastMath.random();
    }

    @Test(timeout = 4000)
    public void test287287() throws Throwable {
        int int0 = FastMath.getExponent((-473.29));
    }

    @Test(timeout = 4000)
    public void test288288() throws Throwable {
        double double0 = FastMath.cos(0L);
    }

    @Test(timeout = 4000)
    public void test289289() throws Throwable {
        double double0 = FastMath.log(592.5416056, 3.683043641790553E-251);
    }

    @Test(timeout = 4000)
    public void test290290() throws Throwable {
        int int0 = FastMath.getExponent(0.0F);
    }

    @Test(timeout = 4000)
    public void test291291() throws Throwable {
        String[] stringArray0 = new String[2];
        FastMath.main(stringArray0);
        // Undeclared exception!
        FastMath.main(stringArray0);
    }

    @Test(timeout = 4000)
    public void test292292() throws Throwable {
        double double0 = FastMath.sinh(273L);
    }

    @Test(timeout = 4000)
    public void test293293() throws Throwable {
        double double0 = FastMath.nextUp((double) 0.0F);
    }

    @Test(timeout = 4000)
    public void test294294() throws Throwable {
        double double0 = FastMath.atan((-1205.0));
    }

    @Test(timeout = 4000)
    public void test295295() throws Throwable {
        double double0 = FastMath.acosh(0.036);
    }

    @Test(timeout = 4000)
    public void test296296() throws Throwable {
        double double0 = FastMath.expm1(0.0);
    }

    @Test(timeout = 4000)
    public void test297297() throws Throwable {
        int int0 = FastMath.round((-1.0F));
    }

    @Test(timeout = 4000)
    public void test298298() throws Throwable {
        long long0 = FastMath.round(849.5716377);
    }
}
