/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 18:44:04 GMT 2023
 */
package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.polynomials.PolynomialFunction;
import org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm;
import org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction;
import org.apache.commons.math.analysis.solvers.BrentSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class BrentSolver_ESTest extends BrentSolver_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = 1419.4666928059294;
        doubleArray0[2] = (-1776.17128565465);
        doubleArray0[3] = (-4983.0756048);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        brentSolver0.setFunctionValueAccuracy(0.0);
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, (-4983.0756048), 1419.4666928059294, (-1776.17128565465));
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = 1419.4666928059294;
        doubleArray0[2] = (-1776.17128565465);
        doubleArray0[3] = (-4983.0756048);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        brentSolver0.setFunctionValueAccuracy(0.0);
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, (-4983.0756048), 1419.4666928059294, (-1776.17128565465));
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        double[] doubleArray0 = new double[3];
        doubleArray0[0] = (-1896.7903696425149);
        doubleArray0[1] = (-170.24);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunction0);
        brentSolver0.solve((-1.0), 26.3059117);
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[5];
        doubleArray0[3] = Double.POSITIVE_INFINITY;
        brentSolver0.setFunctionValueAccuracy(Double.POSITIVE_INFINITY);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, 12.087001769246022, Double.POSITIVE_INFINITY);
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test024() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[5];
        doubleArray0[3] = Double.POSITIVE_INFINITY;
        brentSolver0.setFunctionValueAccuracy(Double.POSITIVE_INFINITY);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, 12.087001769246022, Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test035() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = 1419.4666928059294;
        doubleArray0[2] = (-1776.17128565465);
        doubleArray0[3] = (-4983.0756048);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        brentSolver0.setFunctionValueAccuracy(0.0);
        double double0 = brentSolver0.solve((-4983.0756048), 0.0, (-383.43450018));
    }

    @Test(timeout = 4000)
    public void test036() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = 1419.4666928059294;
        doubleArray0[2] = (-1776.17128565465);
        doubleArray0[3] = (-4983.0756048);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        brentSolver0.setFunctionValueAccuracy(0.0);
        double double0 = brentSolver0.solve((-4983.0756048), 0.0, (-383.43450018));
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test047() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = 1419.4666928059294;
        doubleArray0[2] = (-1776.17128565465);
        doubleArray0[3] = (-4983.0756048);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        brentSolver0.functionValueAccuracy = (-4983.0756048);
        double double0 = brentSolver0.solve((-27.3), 1.0E-6, 0.0);
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test048() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = 1419.4666928059294;
        doubleArray0[2] = (-1776.17128565465);
        doubleArray0[3] = (-4983.0756048);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        brentSolver0.functionValueAccuracy = (-4983.0756048);
        double double0 = brentSolver0.solve((-27.3), 1.0E-6, 0.0);
    }

    @Test(timeout = 4000)
    public void test059() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 0.02345304505532445;
        doubleArray0[2] = (-542.5170680645357);
        doubleArray0[3] = 53.552053770836466;
        doubleArray0[4] = (-855.7896);
        doubleArray0[5] = (-1291.83660043);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 1.0E-15, 749.0, 10.497525920877363);
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test0510() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 0.02345304505532445;
        doubleArray0[2] = (-542.5170680645357);
        doubleArray0[3] = 53.552053770836466;
        doubleArray0[4] = (-855.7896);
        doubleArray0[5] = (-1291.83660043);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 1.0E-15, 749.0, 10.497525920877363);
    }

    @Test(timeout = 4000)
    public void test0611() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[6];
        doubleArray0[1] = 13.709875087451534;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        brentSolver0.functionValueAccuracy = 3570.0680944;
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, 4.999999987376214E-7, 1486.3511402677, 1048.27);
    }

    @Test(timeout = 4000)
    public void test0612() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[6];
        doubleArray0[1] = 13.709875087451534;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        brentSolver0.functionValueAccuracy = 3570.0680944;
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, 4.999999987376214E-7, 1486.3511402677, 1048.27);
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test0713() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[5];
        doubleArray0[3] = Double.POSITIVE_INFINITY;
        brentSolver0.setFunctionValueAccuracy(Double.POSITIVE_INFINITY);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, 0.0, Double.POSITIVE_INFINITY, 2.0);
    }

    @Test(timeout = 4000)
    public void test0714() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[5];
        doubleArray0[3] = Double.POSITIVE_INFINITY;
        brentSolver0.setFunctionValueAccuracy(Double.POSITIVE_INFINITY);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, 0.0, Double.POSITIVE_INFINITY, 2.0);
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test0815() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[6];
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, (-542.2543455515), 2010.2915);
    }

    @Test(timeout = 4000)
    public void test0916() throws Throwable {
        double[] doubleArray0 = new double[2];
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunction0);
        double double0 = brentSolver0.solve((-2372.54135), 2527.0343077284, 1164.63524);
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test0917() throws Throwable {
        double[] doubleArray0 = new double[2];
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunction0);
        double double0 = brentSolver0.solve((-2372.54135), 2527.0343077284, 1164.63524);
    }

    @Test(timeout = 4000)
    public void test1018() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = 1447.70931;
        doubleArray0[2] = (-1776.17128565465);
        doubleArray0[3] = (-4983.0756048);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        brentSolver0.setFunctionValueAccuracy(810.940511306);
        double double0 = brentSolver0.solve((-4983.0756048), 1.0E-15, (-383.43450018));
    }

    @Test(timeout = 4000)
    public void test1019() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = 1447.70931;
        doubleArray0[2] = (-1776.17128565465);
        doubleArray0[3] = (-4983.0756048);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        brentSolver0.setFunctionValueAccuracy(810.940511306);
        double double0 = brentSolver0.solve((-4983.0756048), 1.0E-15, (-383.43450018));
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test1120() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = 1419.4666928059294;
        doubleArray0[2] = (-1776.17128565465);
        doubleArray0[3] = (-4983.0756048);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        double double0 = brentSolver0.solve((-1776.17128565465), 6280.561371);
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test1121() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = 1419.4666928059294;
        doubleArray0[2] = (-1776.17128565465);
        doubleArray0[3] = (-4983.0756048);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        double double0 = brentSolver0.solve((-1776.17128565465), 6280.561371);
    }

    @Test(timeout = 4000)
    public void test1222() throws Throwable {
        double[] doubleArray0 = new double[5];
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        brentSolver0.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, (-1291.83660043), 3.842871556224534E12, 0.5);
    }

    @Test(timeout = 4000)
    public void test1323() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        brentSolver0.solve((UnivariateRealFunction) null, (-1707.30751578913), Double.POSITIVE_INFINITY, (-851.19614489238));
    }

    @Test(timeout = 4000)
    public void test1424() throws Throwable {
        double[] doubleArray0 = new double[8];
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        brentSolver0.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 0.0, 1.0E-6);
    }

    @Test(timeout = 4000)
    public void test1525() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = (-2461.1649217198);
        PolynomialFunction[] polynomialFunctionArray0 = new PolynomialFunction[1];
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        polynomialFunctionArray0[0] = polynomialFunction0;
        PolynomialSplineFunction polynomialSplineFunction0 = new PolynomialSplineFunction(doubleArray0, polynomialFunctionArray0);
        brentSolver0.solve((UnivariateRealFunction) polynomialSplineFunction0, (-402.74446603), 416.752904);
    }

    @Test(timeout = 4000)
    public void test1626() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[3] = (-11.137241497247);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver();
        brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, (-0.013944534278288807), Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test1727() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        brentSolver0.solve((UnivariateRealFunction) null, 1.0E-15, 1738.1128364);
    }

    @Test(timeout = 4000)
    public void test1828() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        brentSolver0.solve(10.2, 0.007940250202253404, (-7.616697984080614));
    }

    @Test(timeout = 4000)
    public void test1929() throws Throwable {
        double[] doubleArray0 = new double[4];
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        brentSolver0.solve((-4983.678658193221), 0.0, (-383.1121823635733));
    }

    @Test(timeout = 4000)
    public void test2030() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        brentSolver0.solve((-2969.5739674942), 2671.25822396, 1.0);
    }

    @Test(timeout = 4000)
    public void test2131() throws Throwable {
        double[] doubleArray0 = new double[7];
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        brentSolver0.solve((-817.9897647781), 0.0);
    }

    @Test(timeout = 4000)
    public void test2232() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = (-807.6822);
        doubleArray0[4] = 0.2809785917486991;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunction0);
        brentSolver0.setMaximalIterationCount((-423950648));
        brentSolver0.solve(0.0, 776.6959017385);
    }

    @Test(timeout = 4000)
    public void test2333() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = 1447.70931;
        doubleArray0[2] = (-1776.17128565465);
        doubleArray0[3] = (-4983.0756048);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver();
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 0.0, 1.0);
    }

    @Test(timeout = 4000)
    public void test2434() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[6];
        doubleArray0[4] = 1486.3511402677;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, (-588.2), 4.999999987376214E-7);
    }

    @Test(timeout = 4000)
    public void test2435() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[6];
        doubleArray0[4] = 1486.3511402677;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, (-588.2), 4.999999987376214E-7);
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test2536() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 4.999999987376214E-7;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, (-588.2), 4.999999987376214E-7);
    }

    @Test(timeout = 4000)
    public void test2637() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[6];
        doubleArray0[4] = 1486.3511402677;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, (-1861.77), 4.999999987376214E-7, (-1.0));
    }

    @Test(timeout = 4000)
    public void test2738() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = 1447.70931;
        doubleArray0[2] = (-1776.17128565465);
        doubleArray0[3] = (-4983.0756048);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        brentSolver0.setFunctionValueAccuracy(Double.POSITIVE_INFINITY);
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, (-4983.0756048), 1447.70931, (-1776.17128565465));
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test2739() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = 1447.70931;
        doubleArray0[2] = (-1776.17128565465);
        doubleArray0[3] = (-4983.0756048);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        brentSolver0.setFunctionValueAccuracy(Double.POSITIVE_INFINITY);
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, (-4983.0756048), 1447.70931, (-1776.17128565465));
    }

    @Test(timeout = 4000)
    public void test2840() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[3] = 1.0;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver();
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, (-2608.314155202569), 1.0);
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test2841() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[3] = 1.0;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver();
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, (-2608.314155202569), 1.0);
    }

    @Test(timeout = 4000)
    public void test2942() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[5];
        brentSolver0.setRelativeAccuracy(0.0);
        doubleArray0[3] = Double.POSITIVE_INFINITY;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, 0.0, Double.POSITIVE_INFINITY, 2.0);
    }

    @Test(timeout = 4000)
    public void test3043() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[5];
        doubleArray0[1] = (-628.5740418022539);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, 2.2909552562, Double.NaN);
    }

    @Test(timeout = 4000)
    public void test3144() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = 1447.70931;
        doubleArray0[2] = (-1776.17128565465);
        doubleArray0[3] = (-4983.0756048);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        double double0 = brentSolver0.solve((-1776.17128565465), 6280.561371054391);
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test3145() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = 1447.70931;
        doubleArray0[2] = (-1776.17128565465);
        doubleArray0[3] = (-4983.0756048);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunctionLagrangeForm0);
        double double0 = brentSolver0.solve((-1776.17128565465), 6280.561371054391);
    }

    @Test(timeout = 4000)
    public void test3246() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = (-807.6822);
        doubleArray0[1] = 0.0034965959591759478;
        doubleArray0[2] = 1.0;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunction0);
        brentSolver0.setFunctionValueAccuracy(0.0034965959591759478);
        double double0 = brentSolver0.solve(0.0, 28.41797642366119);
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test3247() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = (-807.6822);
        doubleArray0[1] = 0.0034965959591759478;
        doubleArray0[2] = 1.0;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunction0);
        brentSolver0.setFunctionValueAccuracy(0.0034965959591759478);
        double double0 = brentSolver0.solve(0.0, 28.41797642366119);
    }

    @Test(timeout = 4000)
    public void test3348() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[3] = 1.0;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver();
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, 1.0E-15, Double.POSITIVE_INFINITY);
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test3349() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[3] = 1.0;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver();
        double double0 = brentSolver0.solve((UnivariateRealFunction) polynomialFunction0, 1.0E-15, Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test3450() throws Throwable {
        double[] doubleArray0 = new double[6];
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        BrentSolver brentSolver0 = new BrentSolver(polynomialFunction0);
        double double0 = brentSolver0.solve(0.0, 776.6959017385);
    }

    @Test(timeout = 4000)
    public void test3551() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[5];
        doubleArray0[1] = Double.POSITIVE_INFINITY;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
        brentSolver0.solve(univariateRealFunction0, (-11.339119596985), 0.0, (-1.0));
    }

    @Test(timeout = 4000)
    public void test3652() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[6];
        doubleArray0[1] = 13.709875087451534;
        doubleArray0[4] = 13.709875087451534;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
        double double0 = brentSolver0.solve(univariateRealFunction0, (-1861.77), 1.0, 4.999999987376214E-7);
        brentSolver0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test3653() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        double[] doubleArray0 = new double[6];
        doubleArray0[1] = 13.709875087451534;
        doubleArray0[4] = 13.709875087451534;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
        double double0 = brentSolver0.solve(univariateRealFunction0, (-1861.77), 1.0, 4.999999987376214E-7);
    }

    @Test(timeout = 4000)
    public void test3754() throws Throwable {
        BrentSolver brentSolver0 = new BrentSolver();
        brentSolver0.solve((-1.0), 1.0);
    }

    @Test(timeout = 4000)
    public void test3855() throws Throwable {
        BrentSolver brentSolver0 = null;
        brentSolver0 = new BrentSolver((UnivariateRealFunction) null);
    }
}
