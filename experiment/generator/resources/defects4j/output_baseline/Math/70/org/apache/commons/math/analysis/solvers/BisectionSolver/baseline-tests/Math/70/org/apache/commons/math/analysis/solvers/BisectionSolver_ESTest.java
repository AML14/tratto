/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 18:37:40 GMT 2023
 */
package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.solvers.BisectionSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class BisectionSolver_ESTest extends BisectionSolver_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        double double0 = 3320.200965736362;
        bisectionSolver0.solve(3320.200965736362, Double.POSITIVE_INFINITY);
        double double1 = 0.0;
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        BisectionSolver bisectionSolver0 = new BisectionSolver();
        bisectionSolver0.solve(6.940845639756056, 6.940845639756056, 6.940845639756056);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(5.406718628364615E-9, 5.406718628364615E-9, 5.406718628364615E-9, 5.406718628364615E-9, 5.406718628364615E-9).when(univariateRealFunction0).value(anyDouble());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        bisectionSolver0.solve(univariateRealFunction1, 5.406718628364615E-9, 2.4904010193268507, 5.406718628364615E-9);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        BisectionSolver bisectionSolver0 = new BisectionSolver();
        bisectionSolver0.solve((-251.2857715), 51.981129398, (-251.2857715));
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        BisectionSolver bisectionSolver0 = new BisectionSolver();
        bisectionSolver0.functionValue = 0.0;
        bisectionSolver0.functionValue = (-3726.602805746);
        bisectionSolver0.functionValueAccuracy = (-618.0);
        bisectionSolver0.setFunctionValueAccuracy(0.0);
        double double0 = (-1.0);
        bisectionSolver0.solve((-1.0), (-1.0), (-1.0));
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        double double1 = 2250.543;
        double double2 = 1.0E-14;
        double double3 = 0.0;
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = null;
        BisectionSolver bisectionSolver0 = null;
        bisectionSolver0 = new BisectionSolver((UnivariateRealFunction) null);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        BisectionSolver bisectionSolver0 = new BisectionSolver();
        bisectionSolver0.solve(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
        double double0 = 0.0;
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        BisectionSolver bisectionSolver0 = new BisectionSolver();
        bisectionSolver0.resetRelativeAccuracy();
        double double0 = Double.POSITIVE_INFINITY;
        bisectionSolver0.resetMaximalIterationCount();
        double double1 = 0.0;
        bisectionSolver0.solve(0.0, Double.POSITIVE_INFINITY, 1.0);
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        double double2 = 0.0;
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        BisectionSolver bisectionSolver0 = new BisectionSolver();
        UnivariateRealFunction univariateRealFunction0 = null;
        bisectionSolver0.solve((UnivariateRealFunction) null, 3907.52, 3907.52, 3907.52);
        double double0 = 0.0;
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        BisectionSolver bisectionSolver0 = new BisectionSolver();
        bisectionSolver0.result = (-864.2);
        bisectionSolver0.resetRelativeAccuracy();
        double double0 = 1.0E-15;
        bisectionSolver0.setAbsoluteAccuracy(1.0E-15);
        bisectionSolver0.functionValueAccuracy = (-864.2);
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        double double1 = (-508.649680886601);
        UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        UnivariateRealFunction univariateRealFunction2 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0).when(univariateRealFunction2).value(anyDouble());
        bisectionSolver0.isBracketing((-864.2), (-2348.881511), univariateRealFunction2);
        UnivariateRealFunction univariateRealFunction3 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        bisectionSolver0.solve(univariateRealFunction3, (-864.2), 1.0E-15, 0.0);
        bisectionSolver0.verifyBracketing(double1, double1, univariateRealFunction1);
        double double2 = 1.0;
        bisectionSolver0.resetMaximalIterationCount();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        double double0 = (-2007.8392609);
        bisectionSolver0.solve(univariateRealFunction1, (-2007.8392609), (-2007.8392609));
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        BisectionSolver bisectionSolver0 = new BisectionSolver();
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        bisectionSolver0.solve(univariateRealFunction0, 0.0, (-1619.2), (-1619.2));
        UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        double double0 = 0.0;
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        bisectionSolver0.setResult((-3567.241), 1.0E-14, 3);
        bisectionSolver0.setResult((-432.6581938845), (-2798));
        UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0).when(univariateRealFunction1).value(anyDouble());
        bisectionSolver0.isBracketing(4288.547, 4288.547, univariateRealFunction1);
        double double0 = bisectionSolver0.solve((-432.6581938845), Double.POSITIVE_INFINITY, 0.0);
        UnivariateRealFunction univariateRealFunction2 = null;
        double double1 = 1254.5779;
        bisectionSolver0.solve(univariateRealFunction2, double1, double1);
        double double2 = 156.7199311373;
        bisectionSolver0.solve(double2, double0);
        double double3 = 1.0;
        double double4 = 1293.9865620470193;
        bisectionSolver0.solve(double0, double3, double4);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        bisectionSolver0.solve(0.0, 1.0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        bisectionSolver0.solve((-2698.571479289), 0.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        bisectionSolver0.solve(0.0, 1.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        bisectionSolver0.solve((-3282.6), (-1.0));
        UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction1).value(anyDouble());
        bisectionSolver0.solve(univariateRealFunction1, (-3282.6), 1.0);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        BisectionSolver bisectionSolver0 = new BisectionSolver();
        bisectionSolver0.solve((-1951.135), 0.0);
        double double0 = 0.0;
        double double1 = 1512.15280776768;
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        bisectionSolver0.solve(160.565796062739, 2549.650111994645);
        UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        bisectionSolver0.solve(univariateRealFunction1, 160.565796062739, 2549.650111994645, 2549.650111994645);
        UnivariateRealFunction univariateRealFunction2 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        double double0 = 1.0E-6;
        bisectionSolver0.solve(univariateRealFunction2, 2549.650111994645, 2549.650111994645, 1.0E-6);
        UnivariateRealFunction univariateRealFunction3 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        double double1 = (-1.0);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        bisectionSolver0.functionValue = 1.0;
        bisectionSolver0.solve(1.0, 1033.952836874215);
        UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction1).value(anyDouble());
        bisectionSolver0.solve(univariateRealFunction1, 1.0, 1033.952836874215);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        bisectionSolver0.solve(univariateRealFunction1, (-2220.5), 0.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        BisectionSolver bisectionSolver0 = new BisectionSolver();
        bisectionSolver0.verifyInterval(3615.837, Double.POSITIVE_INFINITY);
        UnivariateRealFunction univariateRealFunction0 = null;
        double double0 = 0.0;
        double double1 = 470.0;
        bisectionSolver0.solve((UnivariateRealFunction) null, 0.0, 470.0);
        double double2 = 0.0;
        bisectionSolver0.verifyInterval(double0, double2);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        BisectionSolver bisectionSolver0 = new BisectionSolver();
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(435.3, 435.3, 0.0, 435.3, 1.0E-15).when(univariateRealFunction0).value(anyDouble());
        bisectionSolver0.resetMaximalIterationCount();
        bisectionSolver0.defaultFunctionValueAccuracy = 2464.25961844;
        bisectionSolver0.setFunctionValueAccuracy(0.0);
        bisectionSolver0.solve(univariateRealFunction0, (-304.0), 0.0);
        bisectionSolver0.setRelativeAccuracy((-304.0));
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn((-2256.798203), 1.0E-6, 0.5, 0.5, 1.0E-6).when(univariateRealFunction0).value(anyDouble());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        double double0 = (-1.0);
        bisectionSolver0.solve((-1.0), 1.0E-14, 0.1474026986481986);
        UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction1).value(anyDouble());
        bisectionSolver0.solve(univariateRealFunction1, 0.0, 1486.1943);
        UnivariateRealFunction univariateRealFunction2 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        bisectionSolver0.solve(univariateRealFunction2, 1.0E-14, (-1.0), 0.1474026986481986);
        double double1 = 1.3413526858130354E-6;
        double double2 = 3236.0328108935964;
        double double3 = Double.POSITIVE_INFINITY;
        bisectionSolver0.solve(double1, double2, double3);
        double double4 = 1482.07479;
        double double5 = 0.0;
        bisectionSolver0.solve(double4, double5, double5);
        UnivariateRealFunction univariateRealFunction3 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn((-2256.798203), 1.0E-6, 0.5, 0.5, 1.0E-6).when(univariateRealFunction0).value(anyDouble());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        double double0 = (-1.0);
        double double1 = 1.0E-14;
        double double2 = 0.1474026986481986;
        bisectionSolver0.solve((-1.0), 1.0E-14, 0.1474026986481986);
        bisectionSolver0.setAbsoluteAccuracy((-1.0));
        UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn((-2797.03060544), 1.0E-14, (-2797.03060544), (-1.0), 4092.78191902655).when(univariateRealFunction1).value(anyDouble());
        double double3 = 1486.1943;
        bisectionSolver0.solve(univariateRealFunction1, 0.0, 1486.1943);
        UnivariateRealFunction univariateRealFunction2 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        bisectionSolver0.solve(univariateRealFunction2, double3, double3, double3);
        UnivariateRealFunction univariateRealFunction3 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        double double4 = (-1.0);
        bisectionSolver0.solve(univariateRealFunction3, double1, double4, double2);
        double double5 = 1.3413526858130354E-6;
        double double6 = 3236.0328108935964;
        double double7 = Double.POSITIVE_INFINITY;
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(5.406718628364615E-9, 5.406718628364615E-9, 5.406718628364615E-9, 436.568589, 436.568589).when(univariateRealFunction0).value(anyDouble());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        bisectionSolver0.setMaximalIterationCount(25);
        bisectionSolver0.solve(univariateRealFunction1, 436.568589, Double.POSITIVE_INFINITY, 3475.0);
        double double0 = 0.0;
        double double1 = 1.0;
        bisectionSolver0.solve(double0, double1, double0);
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(5.406718628364615E-9, 5.406718628364615E-9).when(univariateRealFunction0).value(anyDouble());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        bisectionSolver0.setAbsoluteAccuracy(1.0);
        UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        bisectionSolver0.result = 1.0;
        bisectionSolver0.solve(univariateRealFunction1, (-1.0), 1.0, 0.0);
        UnivariateRealFunction univariateRealFunction2 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        bisectionSolver0.solve(univariateRealFunction2, 0.5, (-3975.2375));
    }
}
