/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 15:44:33 GMT 2023
 */
package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Atanh;
import org.apache.commons.math.analysis.function.Cbrt;
import org.apache.commons.math.analysis.function.Ceil;
import org.apache.commons.math.analysis.function.Cosh;
import org.apache.commons.math.analysis.function.Floor;
import org.apache.commons.math.analysis.function.Gaussian;
import org.apache.commons.math.analysis.function.HarmonicOscillator;
import org.apache.commons.math.analysis.function.Identity;
import org.apache.commons.math.analysis.function.Log1p;
import org.apache.commons.math.analysis.function.Rint;
import org.apache.commons.math.analysis.function.Sigmoid;
import org.apache.commons.math.analysis.function.Sinc;
import org.apache.commons.math.analysis.function.Sinh;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.PegasusSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(1785.980494615, 227.421396);
        Ceil ceil0 = new Ceil();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(1024, (UnivariateRealFunction) ceil0, (-4088.1339917), (double) 1024, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(1785.980494615, 227.421396);
        Ceil ceil0 = new Ceil();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(1024, (UnivariateRealFunction) ceil0, (-4088.1339917), (double) 1024, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.0);
        Rint rint0 = new Rint();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = illinoisSolver0.solve(31, (UnivariateRealFunction) rint0, (double) 31, 1.176342548272881E-8, (-1.5707963267948966), allowedSolution0);
        illinoisSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test013() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.0);
        Rint rint0 = new Rint();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = illinoisSolver0.solve(31, (UnivariateRealFunction) rint0, (double) 31, 1.176342548272881E-8, (-1.5707963267948966), allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test024() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
        UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test025() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
        UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test036() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
        Identity identity0 = new Identity();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = illinoisSolver0.solve(2432, (UnivariateRealFunction) identity0, (-1.5707963267948966), 0.0, allowedSolution0);
        illinoisSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test037() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
        Identity identity0 = new Identity();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = illinoisSolver0.solve(2432, (UnivariateRealFunction) identity0, (-1.5707963267948966), 0.0, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test048() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-864.2), (-2125.2));
        Log1p log1p0 = new Log1p();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = illinoisSolver0.solve(2, (UnivariateRealFunction) log1p0, 0.0, (double) 2, 2012.456450328, allowedSolution0);
        illinoisSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test049() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-864.2), (-2125.2));
        Log1p log1p0 = new Log1p();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = illinoisSolver0.solve(2, (UnivariateRealFunction) log1p0, 0.0, (double) 2, 2012.456450328, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test0510() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver();
        Gaussian gaussian0 = new Gaussian(23, 0.14982303977012634, 4009.763325487);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        double double0 = pegasusSolver0.solve(23, univariateRealFunction0, (-3044.2), 4009.763325487, (-0.1666666567325592));
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test0511() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver();
        Gaussian gaussian0 = new Gaussian(23, 0.14982303977012634, 4009.763325487);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        double double0 = pegasusSolver0.solve(23, univariateRealFunction0, (-3044.2), 4009.763325487, (-0.1666666567325592));
    }

    @Test(timeout = 4000)
    public void test0612() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
        double double0 = regulaFalsiSolver0.doSolve();
    }

    @Test(timeout = 4000)
    public void test0613() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
        double double0 = regulaFalsiSolver0.doSolve();
        regulaFalsiSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test0614() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
        double double0 = regulaFalsiSolver0.doSolve();
        regulaFalsiSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test0715() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        pegasusSolver0.solve(3333, (UnivariateRealFunction) sigmoid0, (-2993.2715265), 549.77032, allowedSolution0);
        double double0 = pegasusSolver0.doSolve();
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test0716() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        pegasusSolver0.solve(3333, (UnivariateRealFunction) sigmoid0, (-2993.2715265), 549.77032, allowedSolution0);
        double double0 = pegasusSolver0.doSolve();
    }

    @Test(timeout = 4000)
    public void test0817() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
        Atanh atanh0 = new Atanh();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        illinoisSolver0.solve(1, (UnivariateRealFunction) atanh0, (-2621.940926377), (-269.5762), allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test0918() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        pegasusSolver0.solve((-742), (UnivariateRealFunction) sinc0, (-3332.0), (-4025.304530957489), 2879.14725, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test1019() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        pegasusSolver0.solve(5, (UnivariateRealFunction) cbrt0, (-4.8559), (-465.9968625720741), 1331.339230942915, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test1120() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        Floor floor0 = new Floor();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        regulaFalsiSolver0.solve(2979, (UnivariateRealFunction) floor0, 359.7455671164, (double) 2979, (double) 2979, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test1221() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.0), (-360.0));
        Sinc sinc0 = new Sinc();
        pegasusSolver0.solve(38, (UnivariateRealFunction) sinc0, 46.042916482279, 951.9258407496, 951.9258407496, (AllowedSolution) null);
    }

    @Test(timeout = 4000)
    public void test1322() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        pegasusSolver0.solve((-3237), (UnivariateRealFunction) gaussian0, 6.4281638347818415E-6, 1.9868161777724352E-8, 1055.616);
    }

    @Test(timeout = 4000)
    public void test1423() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-358.62330608936577), 2725.29567932, 3128.7);
        Floor floor0 = new Floor();
        pegasusSolver0.solve(791, (UnivariateRealFunction) floor0, (double) 791, (-0.12502530217170715), (double) 791);
    }

    @Test(timeout = 4000)
    public void test1524() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966), (-1.5707963267948966));
        Identity identity0 = new Identity();
        illinoisSolver0.solve(2432, (UnivariateRealFunction) identity0, (double) (-32), (-1.5707963267948966), 0.0);
    }

    @Test(timeout = 4000)
    public void test1625() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462), 2725.29567932);
        pegasusSolver0.doSolve();
    }

    @Test(timeout = 4000)
    public void test1726() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(0.0, 0.0036);
        Cosh cosh0 = new Cosh();
        regulaFalsiSolver0.setup(3542, cosh0, 0.0036, 0.0036, 0.0036);
        regulaFalsiSolver0.doSolve();
    }

    @Test(timeout = 4000)
    public void test1827() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(3128.7, (-360.0));
        Sinc sinc0 = new Sinc();
        pegasusSolver0.setup(38, sinc0, 0.0, 46.042916482279, 0.0);
        pegasusSolver0.doSolve();
    }

    @Test(timeout = 4000)
    public void test1928() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(3128.7, (-360.07737924462));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test2029() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(3128.7, (-360.0));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(38, (UnivariateRealFunction) sinc0, 46.042916482279, 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test2030() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(3128.7, (-360.0));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(38, (UnivariateRealFunction) sinc0, 46.042916482279, 951.9258407496, 951.9258407496, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test2131() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(5.549536715928331E21, 372.48719237534914);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(503, (UnivariateRealFunction) sinc0, 46.73805687525366, 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test2132() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(5.549536715928331E21, 372.48719237534914);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(503, (UnivariateRealFunction) sinc0, 46.73805687525366, 951.9258407496, 951.9258407496, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test2233() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462), 2725.29567932);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-2760.7), (double) 5, (-873.93), allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test2234() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462), 2725.29567932);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-2760.7), (double) 5, (-873.93), allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test2335() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(3128.7, (-360.0));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = pegasusSolver0.solve(62, (UnivariateRealFunction) sinc0, 46.042916482279, (double) 62, (double) 62, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test2336() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(3128.7, (-360.0));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = pegasusSolver0.solve(62, (UnivariateRealFunction) sinc0, 46.042916482279, (double) 62, (double) 62, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test2437() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(106, (UnivariateRealFunction) sinc0, (-360.07737924462), 3128.7, 3128.7, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test2438() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(106, (UnivariateRealFunction) sinc0, (-360.07737924462), 3128.7, 3128.7, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test2539() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(1.304E19, 1.304E19, 1.304E19);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(156, (UnivariateRealFunction) cbrt0, (double) (-1720), (double) 156, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test2540() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(1.304E19, 1.304E19, 1.304E19);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(156, (UnivariateRealFunction) cbrt0, (double) (-1720), (double) 156, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test2641() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462), 2725.29567932);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.3550045623978706), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test2642() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462), 2725.29567932);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.3550045623978706), 951.9258407496, 951.9258407496, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test2743() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.0), (-360.0));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        pegasusSolver0.solve(38, (UnivariateRealFunction) sinc0, 46.04291648228, 951.9258407496, 951.9258407496, allowedSolution0);
        double double0 = pegasusSolver0.doSolve();
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test2744() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.0), (-360.0));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        pegasusSolver0.solve(38, (UnivariateRealFunction) sinc0, 46.04291648228, 951.9258407496, 951.9258407496, allowedSolution0);
        double double0 = pegasusSolver0.doSolve();
    }

    @Test(timeout = 4000)
    public void test2845() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(1.592266061490975E-31);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(45, (UnivariateRealFunction) sinc0, 1.0E-6, 2435.9021, 2435.9021, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test2846() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(1.592266061490975E-31);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(45, (UnivariateRealFunction) sinc0, 1.0E-6, 2435.9021, 2435.9021, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test2947() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(1.792510290788597);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-808.9), 2719.82, (double) 8);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test2948() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(1.792510290788597);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-808.9), 2719.82, (double) 8);
    }

    @Test(timeout = 4000)
    public void test3049() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2159.7025852, 2211.438, (-1222.0));
        Sigmoid sigmoid0 = new Sigmoid(2211.438, (-1.0));
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = regulaFalsiSolver0.solve(654, (UnivariateRealFunction) sigmoid0, (-1.0), 2417.36304, (-1521.557701816037), allowedSolution0);
        regulaFalsiSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test3050() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2159.7025852, 2211.438, (-1222.0));
        Sigmoid sigmoid0 = new Sigmoid(2211.438, (-1.0));
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = regulaFalsiSolver0.solve(654, (UnivariateRealFunction) sigmoid0, (-1.0), 2417.36304, (-1521.557701816037), allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test3151() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(1.3217759706711633E-11, 1.3217759706711633E-11, 1.3217759706711633E-11);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(517, (UnivariateRealFunction) cbrt0, (-1206.289937), (double) 156, allowedSolution0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test3152() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(1.3217759706711633E-11, 1.3217759706711633E-11, 1.3217759706711633E-11);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(517, (UnivariateRealFunction) cbrt0, (-1206.289937), (double) 156, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test3253() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
        Sinh sinh0 = new Sinh();
        illinoisSolver0.solve(2432, (UnivariateRealFunction) sinh0, (-1.5707963267948966), (double) 2432);
    }

    @Test(timeout = 4000)
    public void test3354() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0, 0.0, 0.0);
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        pegasusSolver0.solve(0, (UnivariateRealFunction) null, (double) 0, (-1645.0), allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test3455() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver();
        Gaussian gaussian0 = new Gaussian(23, 0.14982303977012634, 4009.763325487);
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        pegasusSolver0.solve(23, (UnivariateRealFunction) gaussian0, 4009.763325487, 5.0, allowedSolution0);
    }
}
