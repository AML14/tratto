--- org.apache.commons.math.distribution.NormalDistributionImpl_ESTest::test1426
org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Standard deviation must be positive.
	at org.apache.commons.math.distribution.NormalDistributionImpl.setStandardDeviation(NormalDistributionImpl.java:94)
	at org.apache.commons.math.distribution.NormalDistributionImpl.<init>(NormalDistributionImpl.java:52)
	at org.apache.commons.math.distribution.NormalDistributionImpl_ESTest.test1426(NormalDistributionImpl_ESTest.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)
--- org.apache.commons.math.distribution.NormalDistributionImpl_ESTest::test1224
org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: p must be between 0.0 and 1.0, inclusive.
	at org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(AbstractContinuousDistribution.java:62)
	at org.apache.commons.math.distribution.NormalDistributionImpl.inverseCumulativeProbability(NormalDistributionImpl.java:135)
	at org.apache.commons.math.distribution.NormalDistributionImpl_ESTest.test1224(NormalDistributionImpl_ESTest.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)
--- org.apache.commons.math.distribution.NormalDistributionImpl_ESTest::test1123
org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (100) exceeded
	at org.apache.commons.math.analysis.BrentSolver.solve(BrentSolver.java:253)
	at org.apache.commons.math.analysis.BrentSolver.solve(BrentSolver.java:143)
	at org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(UnivariateRealSolverUtils.java:55)
	at org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(AbstractContinuousDistribution.java:107)
	at org.apache.commons.math.distribution.NormalDistributionImpl.inverseCumulativeProbability(NormalDistributionImpl.java:135)
	at org.apache.commons.math.distribution.NormalDistributionImpl_ESTest.test1123(NormalDistributionImpl_ESTest.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)
--- org.apache.commons.math.distribution.NormalDistributionImpl_ESTest::test2243
org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Standard deviation must be positive.
	at org.apache.commons.math.distribution.NormalDistributionImpl.setStandardDeviation(NormalDistributionImpl.java:94)
	at org.apache.commons.math.distribution.NormalDistributionImpl_ESTest.test2243(NormalDistributionImpl_ESTest.java:309)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)
