/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 05 01:05:47 GMT 2023
 */
package org.mockito;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.hamcrest.Matcher;
import org.hamcrest.beans.HasProperty;
import org.hamcrest.beans.SamePropertyValuesAs;
import org.hamcrest.collection.IsIn;
import org.hamcrest.core.AnyOf;
import org.hamcrest.core.Is;
import org.hamcrest.core.IsAnything;
import org.hamcrest.core.IsNull;
import org.hamcrest.number.OrderingComparison;
import org.junit.runner.RunWith;
import org.mockito.Matchers;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Matchers_ESTest extends Matchers_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Float float0 = new Float(0.0);
        Matcher<Float> matcher0 = Is.is(float0);
        float float1 = Matchers.floatThat(matcher0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        String[] stringArray0 = new String[8];
        Matcher<String> matcher0 = IsIn.isIn(stringArray0);
        AnyOf<String> anyOf0 = AnyOf.anyOf(matcher0, (Matcher<? super String>) matcher0, (Matcher<? super String>) matcher0, (Matcher<? super String>) matcher0, (Matcher<? super String>) matcher0, (Matcher<? super String>) matcher0);
        String string0 = Matchers.argThat((Matcher<String>) anyOf0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Class<Byte> class0 = Byte.class;
        Set<Byte> set0 = Matchers.anySetOf(class0);
        set0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Object object0 = Matchers.isNotNull();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        char char0 = Matchers.eq('h');
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Boolean boolean0 = Boolean.TRUE;
        Matcher<Boolean> matcher0 = SamePropertyValuesAs.samePropertyValuesAs(boolean0);
        boolean boolean1 = Matchers.booleanThat(matcher0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Double double0 = new Double(0);
        Matcher<Double> matcher0 = OrderingComparison.greaterThan(double0);
        double double1 = Matchers.doubleThat(matcher0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        int int0 = Matchers.eq(587);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Matcher<Integer> matcher0 = HasProperty.hasProperty("");
        int int0 = Matchers.intThat(matcher0);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Byte byte0 = new Byte((byte) 82);
        Matcher<Byte> matcher0 = OrderingComparison.lessThanOrEqualTo(byte0);
        byte byte1 = Matchers.byteThat(matcher0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Long long0 = new Long(0L);
        Matcher<Long> matcher0 = OrderingComparison.lessThanOrEqualTo(long0);
        Is<Long> is0 = new Is<Long>(matcher0);
        long long1 = Matchers.longThat(is0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Class<Character> class0 = Character.class;
        Class<Long> class1 = Long.class;
        Map<Character, Long> map0 = Matchers.anyMapOf(class0, class1);
        map0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Object object0 = Matchers.isNull();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        char char0 = Matchers.anyChar();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        Boolean boolean0 = Matchers.any(class0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        String string0 = Matchers.endsWith("");
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Class<String> class0 = String.class;
        Collection<String> collection0 = Matchers.anyCollectionOf(class0);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        String string0 = Matchers.contains("'=9;*DF1.$ZP'MG){4");
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        Collection collection0 = Matchers.anyCollection();
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        Map map0 = Matchers.anyMap();
        map0.size();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        String string0 = Matchers.startsWith((String) null);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        String string0 = Matchers.anyString();
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        short short0 = Matchers.eq((short) 0);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        String[] stringArray0 = new String[0];
        Object object0 = Matchers.refEq((Object) "", stringArray0);
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        String string0 = Matchers.anyVararg();
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        Class<Short> class0 = Short.class;
        Matcher<Short> matcher0 = IsNull.notNullValue(class0);
        short short0 = Matchers.shortThat(matcher0);
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        String string0 = Matchers.any();
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        byte byte0 = Matchers.eq((byte) 9);
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        int int0 = Matchers.anyInt();
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        Class<Short> class0 = Short.class;
        Short short0 = Matchers.isA(class0);
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        IsAnything<Character> isAnything0 = new IsAnything<Character>("notNull()");
        char char0 = Matchers.charThat(isAnything0);
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        byte byte0 = Matchers.anyByte();
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        Boolean boolean0 = Boolean.valueOf(true);
        Boolean boolean1 = Matchers.same(boolean0);
        boolean1.equals((Object) boolean0);
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        String string0 = Matchers.matches("n=wm`]6");
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        float float0 = Matchers.eq((-2720.677F));
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        Character character0 = new Character('`');
        Character character1 = Matchers.eq(character0);
        character1.equals((Object) character0);
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        long long0 = Matchers.anyLong();
    }

    @Test(timeout = 4000)
    public void test3737() throws Throwable {
        double double0 = Matchers.eq((-2955.331419504));
    }

    @Test(timeout = 4000)
    public void test3838() throws Throwable {
        short short0 = Matchers.anyShort();
    }

    @Test(timeout = 4000)
    public void test3939() throws Throwable {
        boolean boolean0 = Matchers.anyBoolean();
    }

    @Test(timeout = 4000)
    public void test4040() throws Throwable {
        float float0 = Matchers.anyFloat();
    }

    @Test(timeout = 4000)
    public void test4141() throws Throwable {
        double double0 = Matchers.anyDouble();
    }

    @Test(timeout = 4000)
    public void test4242() throws Throwable {
        long long0 = Matchers.eq(0L);
    }

    @Test(timeout = 4000)
    public void test4343() throws Throwable {
        Class<Integer> class0 = Integer.class;
        Integer integer0 = Matchers.isNotNull(class0);
    }

    @Test(timeout = 4000)
    public void test4444() throws Throwable {
        Set set0 = Matchers.anySet();
        set0.size();
    }

    @Test(timeout = 4000)
    public void test4545() throws Throwable {
        Class<Byte> class0 = Byte.class;
        List<Byte> list0 = Matchers.anyListOf(class0);
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test4646() throws Throwable {
        List list0 = Matchers.anyList();
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test4747() throws Throwable {
        Class<Integer> class0 = Integer.class;
        Integer integer0 = Matchers.isNull(class0);
    }

    @Test(timeout = 4000)
    public void test4848() throws Throwable {
        Matchers matchers0 = new Matchers();
    }

    @Test(timeout = 4000)
    public void test4949() throws Throwable {
        boolean boolean0 = Matchers.eq(true);
    }
}
