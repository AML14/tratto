/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 05 01:27:39 GMT 2023
 */
package org.mockito.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Method;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mockito.internal.MockHandler;
import org.mockito.internal.invocation.Invocation;
import org.mockito.internal.progress.ThreadSafeMockingProgress;
import org.mockito.internal.stubbing.InvocationContainerImpl;
import org.mockito.internal.verification.MockAwareVerificationMode;
import org.mockito.stubbing.Answer;
import org.mockito.stubbing.VoidMethodStubbable;
import org.mockito.stubbing.answers.ReturnsElementsOf;
import org.mockito.verification.VerificationMode;
import org.mockito.verification.VerificationWithTimeout;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class MockHandler_ESTest extends MockHandler_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        MockHandler<ReturnsElementsOf> mockHandler0 = new MockHandler<ReturnsElementsOf>();
        MockHandler<ReturnsElementsOf> mockHandler1 = new MockHandler<ReturnsElementsOf>(mockHandler0);
        mockHandler1.equals((Object) mockHandler0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        MockHandler<Object> mockHandler0 = new MockHandler<Object>();
        mockHandler0.setAnswersForStubbing((List<Answer>) null);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        MockHandler<Object> mockHandler0 = new MockHandler<Object>();
        InvocationContainerImpl invocationContainerImpl0 = (InvocationContainerImpl) mockHandler0.getInvocationContainer();
        invocationContainerImpl0.hasAnswersForStubbing();
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        MockHandler<Object> mockHandler0 = new MockHandler<Object>();
        VoidMethodStubbable<Object> voidMethodStubbable0 = mockHandler0.voidMethodStubbable(mockHandler0);
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
        Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
        MockHandler<ReturnsElementsOf> mockHandler0 = new MockHandler<ReturnsElementsOf>();
        mockHandler0.handle(invocation0);
    }

    @Test(timeout = 4000)
    public void test55() throws Throwable {
        Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
        MockHandler<Locale.Category> mockHandler0 = new MockHandler<Locale.Category>();
        ThreadSafeMockingProgress threadSafeMockingProgress0 = (ThreadSafeMockingProgress) mockHandler0.mockingProgress;
        InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(threadSafeMockingProgress0);
        invocationContainerImpl0.addAnswerForVoidMethod((Answer) null);
        mockHandler0.invocationContainerImpl = invocationContainerImpl0;
        mockHandler0.handle(invocation0);
    }

    @Test(timeout = 4000)
    public void test66() throws Throwable {
        Integer integer0 = new Integer((-43));
        Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
        doReturn((Method) null).when(invocation0).getMethod();
        doReturn(integer0).when(invocation0).getMock();
        MockHandler<ReturnsElementsOf> mockHandler0 = new MockHandler<ReturnsElementsOf>();
        ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
        VerificationWithTimeout verificationWithTimeout0 = new VerificationWithTimeout((-43), (VerificationMode) null);
        MockAwareVerificationMode mockAwareVerificationMode0 = new MockAwareVerificationMode(integer0, verificationWithTimeout0);
        threadSafeMockingProgress0.verificationStarted(mockAwareVerificationMode0);
        mockHandler0.handle(invocation0);
    }
}
