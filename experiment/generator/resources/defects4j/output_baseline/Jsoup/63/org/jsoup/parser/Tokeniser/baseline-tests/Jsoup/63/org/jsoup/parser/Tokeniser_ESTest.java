/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 20 06:07:46 GMT 2023
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.parser.CharacterReader;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.Token;
import org.jsoup.parser.Tokeniser;
import org.jsoup.parser.TokeniserState;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Tokeniser_ESTest extends Tokeniser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
        tokeniser0.createTempBuffer();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("kVab&Ox");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.emitDoctypePending();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
        tokeniser0.acknowledgeSelfClosingFlag();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("numeric reference with no numerals");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.createCommentPending();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("W<PM!,iwmAb;P>/2${[");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        characterReader0.pos();
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("W<PM!,iwmAb;P>/2${[");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        token0.toString();
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("#hrB&;CEfG91dq-");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.read();
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("kVab&Ox");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.emitCommentPending();
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
        boolean boolean0 = tokeniser0.currentNodeInHtmlNS();
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
        tokeniser0.createDoctypePending();
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        StringReader stringReader0 = new StringReader("kVab&Ox");
        CharacterReader characterReader0 = new CharacterReader(stringReader0);
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.getState();
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("KD`%\"&#579gRO");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        char[] charArray0 = new char[0];
        tokeniser0.emit(charArray0);
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("kVab&Ox");
        Token.StartTag token_StartTag0 = new Token.StartTag();
        token_StartTag0.selfClosing = true;
        ParseErrorList parseErrorList0 = new ParseErrorList(381, 381);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.emit(token_StartTag0);
        tokeniser0.read();
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("kVab&Ox");
        Token.StartTag token_StartTag0 = new Token.StartTag();
        token_StartTag0.selfClosing = true;
        ParseErrorList parseErrorList0 = new ParseErrorList(381, 381);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.emit(token_StartTag0);
        tokeniser0.read();
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test1214() throws Throwable {
        StringReader stringReader0 = new StringReader("kVab&Ox");
        CharacterReader characterReader0 = new CharacterReader(stringReader0, 1750);
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(1750);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.EndTag token_EndTag0 = tokeniser0.endPending;
        tokeniser0.emit(token_EndTag0);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test1215() throws Throwable {
        StringReader stringReader0 = new StringReader("kVab&Ox");
        CharacterReader characterReader0 = new CharacterReader(stringReader0, 1750);
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(1750);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.EndTag token_EndTag0 = tokeniser0.endPending;
        tokeniser0.emit(token_EndTag0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test1316() throws Throwable {
        StringReader stringReader0 = new StringReader("kVab&Ox");
        CharacterReader characterReader0 = new CharacterReader(stringReader0, 1750);
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(1750);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.EndTag token_EndTag0 = tokeniser0.endPending;
        token_EndTag0.newAttribute();
        tokeniser0.emit(token_EndTag0);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test1317() throws Throwable {
        StringReader stringReader0 = new StringReader("kVab&Ox");
        CharacterReader characterReader0 = new CharacterReader(stringReader0, 1750);
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(1750);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.EndTag token_EndTag0 = tokeniser0.endPending;
        token_EndTag0.newAttribute();
        tokeniser0.emit(token_EndTag0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test1418() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("}K^Fa(r;p<(&");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        token0.toString();
    }

    @Test(timeout = 4000)
    public void test1419() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("}K^Fa(r;p<(&");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test1520() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("[&gg;");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        TokeniserState tokeniserState0 = TokeniserState.AttributeValue_unquoted;
        tokeniser0.advanceTransition(tokeniserState0);
        tokeniser0.read();
    }

    @Test(timeout = 4000)
    public void test1621() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("K\"&#3MgPFO");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Character character0 = new Character('K');
        int[] intArray0 = tokeniser0.consumeCharacterReference(character0, false);
    }

    @Test(timeout = 4000)
    public void test1722() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("\"&&#3MgPFO");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test1723() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("\"&&#3MgPFO");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        token0.toString();
    }

    @Test(timeout = 4000)
    public void test1824() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("&#xa0;");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        token0.toString();
    }

    @Test(timeout = 4000)
    public void test1925() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("K\"&#g3MgPFO");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        token0.toString();
    }

    @Test(timeout = 4000)
    public void test1926() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("K\"&#g3MgPFO");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2027() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("zF$xm_5&#8957792");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test2028() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("zF$xm_5&#8957792");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        token0.toString();
    }

    @Test(timeout = 4000)
    public void test2129() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Ny,&gt-");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        String string0 = tokeniser0.unescapeEntities(true);
        characterReader0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2130() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Ny,&gt-");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        String string0 = tokeniser0.unescapeEntities(true);
    }

    @Test(timeout = 4000)
    public void test2231() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("&gg@;");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        token0.toString();
    }

    @Test(timeout = 4000)
    public void test2332() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("&gg;");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        token0.toString();
    }

    @Test(timeout = 4000)
    public void test2433() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("&gt");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        token0.toString();
    }

    @Test(timeout = 4000)
    public void test2434() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("&gt");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2535() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
        Token.Tag token_Tag0 = tokeniser0.createTagPending(false);
    }

    @Test(timeout = 4000)
    public void test2636() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
        boolean boolean0 = tokeniser0.isAppropriateEndTagToken();
    }

    @Test(timeout = 4000)
    public void test2737() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("kVab&Ox");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Attributes attributes0 = new Attributes();
        tokeniser0.tagPending = (Token.Tag) token_StartTag0;
        token_StartTag0.nameAttr("kVab&Ox", attributes0);
        tokeniser0.emit(token_StartTag0);
        token_StartTag0.appendTagName("kVab&Ox");
        boolean boolean0 = tokeniser0.isAppropriateEndTagToken();
    }

    @Test(timeout = 4000)
    public void test2838() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("kVab&Ox");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Attributes attributes0 = new Attributes();
        tokeniser0.tagPending = (Token.Tag) token_StartTag0;
        token_StartTag0.nameAttr("kVab&Ox", attributes0);
        tokeniser0.emit(token_StartTag0);
        boolean boolean0 = tokeniser0.isAppropriateEndTagToken();
    }

    @Test(timeout = 4000)
    public void test2939() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("kVab&Ox");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Attributes attributes0 = new Attributes();
        token_StartTag0.nameAttr("kVab&Ox", attributes0);
        tokeniser0.emit(token_StartTag0);
        String string0 = tokeniser0.appropriateEndTagName();
    }

    @Test(timeout = 4000)
    public void test3040() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(5);
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
        String string0 = tokeniser0.appropriateEndTagName();
    }

    @Test(timeout = 4000)
    public void test3141() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("yB|< u.s-");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(3843);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test3142() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("yB|< u.s-");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(3843);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        token0.toString();
    }

    @Test(timeout = 4000)
    public void test3243() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("W<Meu/@yX\"c%/Gjqxu");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test3244() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("W<Meu/@yX\"c%/Gjqxu");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        token0.toString();
    }

    @Test(timeout = 4000)
    public void test3345() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("<U@A");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(71);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.read();
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test3346() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("<U@A");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(71);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.read();
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test3447() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("K\"&#532MgO");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(1583);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.read();
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test3448() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("K\"&#532MgO");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(1583);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.read();
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test3549() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("*EK1_?");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.error("*EK1_?");
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test3550() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("*EK1_?");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.error("*EK1_?");
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test3651() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("&gt;");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        String string0 = tokeniser0.unescapeEntities(true);
        characterReader0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test3652() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("&gt;");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        String string0 = tokeniser0.unescapeEntities(true);
    }
}
