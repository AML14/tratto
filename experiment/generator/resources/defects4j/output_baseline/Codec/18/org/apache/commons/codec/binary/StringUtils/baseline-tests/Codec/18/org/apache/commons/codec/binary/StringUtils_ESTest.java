/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 04:17:25 GMT 2023
 */
package org.apache.commons.codec.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.apache.commons.codec.binary.StringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class StringUtils_ESTest extends StringUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUsAscii("");
        byte[] byteArray1 = StringUtils.getBytesUtf16(")'kdQ+{ZJ2)Ww!#{");
        byte[] byteArray2 = StringUtils.getBytesUtf16(")'kdQ+{ZJ2)Ww!#{");
        byte[] byteArray3 = StringUtils.getBytesUtf8("");
        StringUtils.getBytesUtf16Be(")'kdQ+{ZJ2)Ww!#{");
        StringUtils.newStringIso8859_1(byteArray2);
        StringUtils.equals((CharSequence) ")'kdQ+{ZJ2)Ww!#{", (CharSequence) ")'kdQ+{ZJ2)Ww!#{");
        StringUtils.newStringIso8859_1(byteArray0);
        StringUtils.getByteBufferUtf8("org.apache.commons.codec.binary.StringUtils");
        StringUtils.getBytesUtf16Be("");
        StringUtils.newStringUtf16(byteArray2);
        StringUtils.newStringUsAscii(byteArray0);
        StringUtils.newStringUsAscii(byteArray1);
        StringUtils.getBytesUsAscii(")'kdQ+{ZJ2)Ww!#{");
        StringUtils.newStringUtf16Be(byteArray1);
        StringUtils stringUtils0 = new StringUtils();
        StringUtils.newStringUtf16Le(byteArray2);
        StringUtils.getBytesUtf16Le("org.apache.commons.codec.binary.StringUtils");
        StringUtils.newStringUsAscii(byteArray0);
        StringUtils.equals((CharSequence) "", (CharSequence) "org.apache.commons.codec.binary.StringUtils");
        StringUtils.newStringUsAscii(byteArray3);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        StringUtils.newStringUtf8((byte[]) null);
        StringUtils.newString((byte[]) null, (String) null);
        byte[] byteArray0 = StringUtils.getBytesUtf16Be((String) null);
        StringUtils.getBytesUtf16Be((String) null);
        StringUtils.newStringIso8859_1((byte[]) null);
        String string0 = "&TI'*F^;FSQMt_tI";
        byte[] byteArray1 = StringUtils.getBytesUsAscii("&TI'*F^;FSQMt_tI");
        StringUtils.getByteBufferUtf8((String) null);
        StringUtils.equals((CharSequence) null, (CharSequence) null);
        StringUtils.getBytesUtf16Be((String) null);
        StringUtils.newString(byteArray1, (String) null);
        StringUtils.getBytesUtf16Be(string0);
        StringUtils.newStringUtf16Be(byteArray0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        StringUtils.getByteBufferUtf8("fFmJ{F=]qq");
        byte[] byteArray0 = StringUtils.getBytesUtf16Le("fFmJ{F=]qq");
        StringUtils.newStringUtf8(byteArray0);
        StringUtils.getByteBufferUtf8("f\u0000F\u0000m\u0000J\u0000\u0000{\u0000F\u0000=\u0000]\u0000q\u0000q\u0000");
        char[] charArray0 = new char[6];
        charArray0[0] = ')';
        charArray0[1] = 'p';
        charArray0[3] = 'f';
        charArray0[4] = 'n';
        charArray0[5] = 'J';
        CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
        StringUtils.equals((CharSequence) "fFmJ{F=]qq", (CharSequence) charBuffer0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        String string0 = " cjYZ9";
        StringUtils.getBytesUtf8(" cjYZ9");
        StringUtils.getBytesUtf16Be(" cjYZ9");
        StringUtils stringUtils0 = new StringUtils();
        byte[] byteArray0 = new byte[0];
        StringUtils.newStringUtf16Le(byteArray0);
        StringUtils.getBytesUnchecked((String) null, " cjYZ9");
        StringUtils.getBytesUnchecked(" cjYZ9", " cjYZ9");
        String string1 = "";
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) (-97);
        byteArray0[1] = (byte) 0;
        byteArray0[2] = (byte) 1;
        byteArray0[3] = (byte) (-67);
        byteArray0[4] = (byte) (-15);
        byteArray0[5] = (byte) (-1);
        byteArray0[6] = (byte) 84;
        StringUtils.newStringUtf16Le(byteArray0);
        StringUtils.newStringUtf8(byteArray0);
        byte[] byteArray1 = StringUtils.getBytesUtf8("\uFFFD\u0000\u0001\uFFFD\uFFFD\uFFFDT");
        StringUtils.newStringIso8859_1(byteArray1);
        byte[] byteArray2 = StringUtils.getBytesUsAscii("\u00EF\u00BF\u00BD\u0000\u0001\u00EF\u00BF\u00BD\u00EF\u00BF\u00BD\u00EF\u00BF\u00BDT");
        StringUtils.newStringUsAscii(byteArray2);
        StringUtils.getBytesIso8859_1("???\u0000\u0001?????????T");
        StringUtils.newStringIso8859_1(byteArray0);
        StringUtils.newStringUtf16Be(byteArray2);
        StringUtils.newStringIso8859_1((byte[]) null);
        StringUtils.equals((CharSequence) "\u009F\u0000\u0001\u00BD\u00F1\u00FFT", (CharSequence) "\u009F\u0000\u0001\u00BD\u00F1\u00FFT");
        StringUtils.getByteBufferUtf8((String) null);
        StringUtils.equals((CharSequence) null, (CharSequence) "\uFFFD\u0000\u0001\uFFFD\uFFFD\uFFFDT");
        StringUtils.newStringIso8859_1(byteArray2);
        StringUtils.getBytesUtf16Le(";=2q0");
        StringUtils.equals((CharSequence) null, (CharSequence) "\u00EF\u00BF\u00BD\u0000\u0001\u00EF\u00BF\u00BD\u00EF\u00BF\u00BD\u00EF\u00BF\u00BDT");
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        StringUtils.equals((CharSequence) null, (CharSequence) null);
        StringUtils.getByteBufferUtf8("2/");
        StringUtils.getByteBufferUtf8("");
        StringUtils.getByteBufferUtf8(": ");
        CharBuffer charBuffer0 = CharBuffer.allocate(103);
        StringUtils.equals((CharSequence) charBuffer0, (CharSequence) null);
        StringUtils.getByteBufferUtf8((String) null);
        StringUtils.equals((CharSequence) charBuffer0, (CharSequence) charBuffer0);
        StringUtils.getByteBufferUtf8((String) null);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        StringUtils.getByteBufferUtf8("");
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUtf16Le("x");
        StringUtils.newStringUsAscii(byteArray0);
        StringUtils.getBytesUtf16Le("x");
        StringUtils.equals((CharSequence) "x", (CharSequence) "x\u0000");
        StringUtils.newString(byteArray0, "x\u0000");
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        StringUtils.getBytesUsAscii((String) null);
        StringUtils.newStringUtf8((byte[]) null);
        StringUtils.newStringUtf8((byte[]) null);
        StringUtils.newStringUtf16((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        StringUtils.getBytesUtf16(": ");
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        StringUtils stringUtils0 = new StringUtils();
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) 0;
        byteArray0[1] = (byte) 1;
        byteArray0[2] = (byte) 0;
        byteArray0[3] = (byte) (-100);
        byteArray0[4] = (byte) 55;
        byteArray0[5] = (byte) (-1);
        byteArray0[6] = (byte) (-92);
        StringUtils.newStringUtf8(byteArray0);
        StringUtils.getBytesUtf16Le("29JMm8,&AoRu]*'L#oc");
        StringUtils.getByteBufferUtf8("");
        StringUtils.getBytesUtf8("0%Jd}BE$.w");
        StringUtils.getBytesUnchecked("fmYW", "0%Jd}BE$.w");
        byte[] byteArray1 = new byte[4];
        byte byte0 = (byte) 0;
        byteArray1[0] = byte0;
        byte byte1 = (byte) 0;
        byteArray1[1] = byte1;
        byte byte2 = (byte) 92;
        byteArray1[2] = byte2;
        byte byte3 = (byte) 0;
        byteArray1[3] = byte3;
        StringUtils.newStringIso8859_1(byteArray1);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        byte[] byteArray0 = new byte[0];
        String string0 = StringUtils.newStringUsAscii(byteArray0);
        StringUtils.newStringUtf16Be(byteArray0);
        StringUtils.equals((CharSequence) "", (CharSequence) "");
        StringUtils.equals((CharSequence) "", (CharSequence) "");
        StringUtils.newStringUtf8(byteArray0);
        StringUtils.newStringIso8859_1(byteArray0);
        byte[] byteArray1 = StringUtils.getBytesUtf16Be("");
        String string1 = "UTF-16LE";
        StringUtils.newString(byteArray1, "UTF-16LE");
        StringUtils.getBytesUtf16Le("");
        StringUtils.getBytesUtf16("");
        StringUtils.getBytesUtf8("#U,t");
        StringUtils.getBytesUsAscii(")]fjo;OJj}O7W");
        StringUtils.getBytesUsAscii("");
        StringUtils.newString(byteArray1, "`EY,:'[S6tXE");
        StringUtils.getBytesUtf16Le(string0);
        String string2 = "org.apache.commons.codec.binary.StringUtils";
        StringUtils.getBytesUnchecked(string1, string2);
        String string3 = "(G3~{dE,6nC";
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        StringUtils.getBytesUsAscii("");
        StringUtils.getBytesUsAscii("> FNW0uFPtx!%");
        StringUtils.getBytesUnchecked("w}?TDcHSVa_C\u0000]", "w}?TDcHSVa_C\u0000]");
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        StringUtils.getByteBufferUtf8((String) null);
        StringUtils.getByteBufferUtf8("");
        StringUtils.equals((CharSequence) "", (CharSequence) null);
        byte[] byteArray0 = StringUtils.getBytesUtf16Be("");
        StringUtils.equals((CharSequence) null, (CharSequence) null);
        StringUtils.getBytesUtf16Le((String) null);
        StringUtils.newStringUsAscii(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUtf16Be("");
        String string0 = "y22Pi3($^nL:";
        StringUtils.getBytesIso8859_1("y22Pi3($^nL:");
        StringUtils.getBytesUtf16Be("");
        byte[] byteArray1 = StringUtils.getBytesUtf16Le("");
        byte[] byteArray2 = StringUtils.getBytesUtf16Be("");
        StringUtils.newStringUsAscii(byteArray2);
        StringUtils.newStringIso8859_1(byteArray0);
        StringUtils.newStringUtf16(byteArray1);
        StringUtils.getBytesUnchecked("mvQ'c_y4`a}$l^J", (String) null);
        String string1 = "C)IX*%\\&sV4pZ1IE";
        StringUtils.getBytesUtf8(string1);
        StringUtils.equals((CharSequence) string1, (CharSequence) string0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUtf16Le("-?n}t3oZ#S'V4mL]");
        StringUtils.newStringUtf16(byteArray0);
        StringUtils.newStringUtf8(byteArray0);
        StringUtils stringUtils0 = new StringUtils();
        byte[] byteArray1 = StringUtils.getBytesUsAscii("");
        byte[] byteArray2 = StringUtils.getBytesUtf16Be("\u0000-\u0000?\u0000n\u0000}\u0000t\u00003\u0000o\u0000Z\u0000#\u0000S\u0000'\u0000V\u00004\u0000m\u0000L\u0000]\u0000");
        StringUtils.newStringUtf16Be(byteArray2);
        StringUtils.newStringUtf16Be(byteArray1);
        byte[] byteArray3 = new byte[2];
        byteArray3[0] = (byte) 73;
        byteArray3[1] = (byte) (-58);
        StringUtils.newString(byteArray3, "\u0000-\u0000?\u0000n\u0000}\u0000t\u00003\u0000o\u0000Z\u0000#\u0000S\u0000'\u0000V\u00004\u0000m\u0000L\u0000]\u0000");
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        StringUtils.getByteBufferUtf8("L0<w9n' K%<a ||!-O");
        StringUtils.newStringUtf16Le((byte[]) null);
        StringUtils.newStringUtf16((byte[]) null);
        StringUtils.getBytesUtf8((String) null);
        StringUtils.newStringUtf8((byte[]) null);
        StringUtils.newStringUtf16((byte[]) null);
        StringUtils.newStringUtf16Le((byte[]) null);
        StringUtils.newStringUtf16Be((byte[]) null);
        StringUtils.getBytesUnchecked("\"mrWYsn", "\"mrWYsn");
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        byte[] byteArray0 = new byte[0];
        StringUtils.newStringUsAscii(byteArray0);
        StringUtils.newStringUtf8(byteArray0);
        StringUtils.newStringUtf16Be(byteArray0);
        StringUtils.getBytesUtf8("yI_I6oCIR&s");
        StringUtils.getByteBufferUtf8("zG");
        StringUtils.newStringUtf16Le(byteArray0);
        StringUtils.getBytesUtf16(": ");
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesIso8859_1("");
        StringUtils.equals((CharSequence) "", (CharSequence) "");
        String string0 = "8!,H/6RhUL8L}x";
        StringUtils.newString(byteArray0, "8!,H/6RhUL8L}x");
        StringUtils.getBytesUtf8(string0);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        String string0 = "ISO-8859-1";
        StringUtils.getBytesUnchecked("ISO-8859-1", "ISO-8859-1");
        StringUtils.getBytesUnchecked("", "w$>G*(");
        StringUtils.getByteBufferUtf8(string0);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        StringUtils.getBytesUnchecked(": ", "UTF-8");
        StringUtils.getBytesUtf16(": ");
        StringUtils.getBytesUtf16(": ");
        StringUtils.getBytesUtf8("");
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        StringUtils.newStringUsAscii((byte[]) null);
        StringUtils.newStringUsAscii((byte[]) null);
        StringUtils.newStringIso8859_1((byte[]) null);
        StringUtils stringUtils0 = new StringUtils();
        StringUtils.getBytesIso8859_1((String) null);
        StringUtils.getByteBufferUtf8("TLK .xCO$m");
        StringUtils.getBytesUnchecked((String) null, (String) null);
        StringUtils.newStringUtf16Le((byte[]) null);
        StringUtils.getByteBufferUtf8("");
        StringUtils.equals((CharSequence) "", (CharSequence) null);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        StringUtils.getByteBufferUtf8((String) null);
        byte[] byteArray0 = new byte[0];
        StringUtils.newStringUtf16Be(byteArray0);
        byte[] byteArray1 = StringUtils.getBytesUnchecked("", "US-ASCII");
        StringUtils.newStringUtf8(byteArray1);
        StringUtils.newStringUtf16Le(byteArray1);
        StringUtils.getBytesIso8859_1("");
        StringUtils.getBytesUtf8("N");
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        StringUtils.getBytesUtf8("");
        byte[] byteArray0 = StringUtils.getBytesUtf16("");
        byte[] byteArray1 = StringUtils.getBytesUsAscii((String) null);
        StringUtils stringUtils0 = new StringUtils();
        StringUtils.getBytesUtf16Be("");
        StringUtils.newStringUtf8(byteArray0);
        StringUtils.getBytesUnchecked("", (String) null);
        String string0 = "org.apache.commons.codec.binary.StringUtils";
        StringUtils.newString(byteArray1, string0);
        String string1 = "org.apache.commons.codec.Charsets";
        StringUtils.getBytesUtf16Le(string1);
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) 0;
        byteArray0[1] = (byte) 89;
        StringUtils.newStringUtf8(byteArray0);
        StringUtils.getBytesIso8859_1((String) null);
        byte[] byteArray1 = StringUtils.getBytesUtf8("\u0000Y");
        StringUtils.getBytesUtf8((String) null);
        StringUtils.getBytesUtf16((String) null);
        StringUtils.getBytesUtf16((String) null);
        StringUtils.newStringIso8859_1(byteArray0);
        StringUtils.newStringUtf16Be(byteArray1);
        StringUtils.getBytesUtf16Le("Y");
        StringUtils.newStringUtf16Be(byteArray0);
        StringUtils.equals((CharSequence) "Y", (CharSequence) "Y");
        StringUtils.getBytesUsAscii("3hQ\"~ejLg;=`mCF'-$5");
        StringUtils.getByteBufferUtf8((String) null);
        StringUtils.getBytesUtf8((String) null);
        StringUtils.getBytesUtf16("l\u0002&}j>4?g+\"<,");
        StringUtils.newStringUsAscii(byteArray0);
        StringUtils.equals((CharSequence) "\u0000Y", (CharSequence) null);
        StringUtils.getByteBufferUtf8("\u0000Y");
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        byte[] byteArray0 = new byte[1];
        byteArray0[0] = (byte) (-93);
        StringUtils.newString(byteArray0, "UTF-16");
        StringUtils.getByteBufferUtf8("");
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        StringUtils.newString((byte[]) null, "dzT1_@'Zx4^+oj7)*@n");
        byte[] byteArray0 = StringUtils.getBytesUtf8("dzT1_@'Zx4^+oj7)*@n");
        StringUtils.getBytesUsAscii("");
        StringUtils stringUtils0 = new StringUtils();
        StringUtils.newString(byteArray0, (String) null);
        String string0 = "US-ASCII";
        StringUtils.getBytesUtf16Le(string0);
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        StringUtils.getByteBufferUtf8("fFmJ{F=]qq");
        byte[] byteArray0 = StringUtils.getBytesUtf16Le("fFmJ{F=]qq");
        StringUtils.newStringUtf8(byteArray0);
        StringUtils.getByteBufferUtf8("f\u0000F\u0000m\u0000J\u0000\u0000{\u0000F\u0000=\u0000]\u0000q\u0000q\u0000");
        char[] charArray0 = new char[6];
        charArray0[0] = ')';
        charArray0[1] = 'p';
        charArray0[2] = 'f';
        charArray0[3] = '^';
        charArray0[4] = 'n';
        charArray0[5] = 'J';
        CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
        StringUtils.equals((CharSequence) "fFmJ{F=]qq", (CharSequence) charBuffer0);
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 44;
        byteArray0[1] = (byte) 5;
        byteArray0[2] = (byte) (-18);
        byteArray0[3] = (byte) 0;
        StringUtils.newStringUtf16(byteArray0);
        StringUtils.equals((CharSequence) "\u2C05\uEE00", (CharSequence) "\u2C05\uEE00");
        StringUtils.equals((CharSequence) "\u2C05\uEE00", (CharSequence) "\u2C05\uEE00");
        StringUtils.equals((CharSequence) "\u2C05\uEE00", (CharSequence) "\u2C05\uEE00");
        StringUtils.getByteBufferUtf8("");
        StringUtils.getByteBufferUtf8("");
        StringUtils.equals((CharSequence) "", (CharSequence) "");
        StringUtils.getByteBufferUtf8("e~bUBA;gw HSy");
        StringUtils.getByteBufferUtf8("\u2C05\uEE00");
        StringUtils.getByteBufferUtf8("");
        StringUtils.equals((CharSequence) "", (CharSequence) "");
        StringUtils.equals((CharSequence) null, (CharSequence) "e~bUBA;gw HSy");
        StringUtils.newString(byteArray0, "UTF-16BE");
        CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\u2C05\uEE00");
        StringUtils.equals((CharSequence) charBuffer0, (CharSequence) charBuffer0);
        StringUtils.getByteBufferUtf8("\u2C05\uEE00");
        StringUtils.getByteBufferUtf8("");
        StringUtils.equals((CharSequence) null, (CharSequence) "\u2C05\uEE00");
        StringUtils.getByteBufferUtf8("");
        StringUtils.equals((CharSequence) charBuffer0, (CharSequence) "\u2C05\uEE00");
        StringUtils.getByteBufferUtf8("");
    }
}
