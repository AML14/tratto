/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 02:04:07 GMT 2023
 */
package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.SystemColor;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.title.DateTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class MultiplePiePlot_ESTest extends MultiplePiePlot_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        Color color0 = (Color) JFreeChart.DEFAULT_BACKGROUND_PAINT;
        multiplePiePlot0.setAggregatedItemsPaint(color0);
        MultiplePiePlot multiplePiePlot1 = (MultiplePiePlot) multiplePiePlot0.clone();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        Color color0 = (Color) JFreeChart.DEFAULT_BACKGROUND_PAINT;
        multiplePiePlot0.setAggregatedItemsPaint(color0);
        MultiplePiePlot multiplePiePlot1 = (MultiplePiePlot) multiplePiePlot0.clone();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
        multiplePiePlot1.getLimit();
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        multiplePiePlot1.getLimit();
    }

    @Test(timeout = 4000)
    public void test013() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        multiplePiePlot1.setLimit(1.0F);
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
    }

    @Test(timeout = 4000)
    public void test024() throws Throwable {
        double[][] doubleArray0 = new double[2][0];
        double[] doubleArray1 = new double[10];
        doubleArray0[0] = doubleArray1;
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        JFreeChart jFreeChart0 = new JFreeChart("hnlXySWvrw", multiplePiePlot0);
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        jFreeChart0.createBufferedImage(20, 20, chartRenderingInfo0);
    }

    @Test(timeout = 4000)
    public void test035() throws Throwable {
        TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(taskSeriesCollection0);
        JFreeChart jFreeChart0 = new JFreeChart("", multiplePiePlot0);
        RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
        multiplePiePlot0.setInsets(rectangleInsets0, false);
        jFreeChart0.createBufferedImage(4, 10);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test046() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        SystemColor systemColor0 = SystemColor.scrollbar;
        multiplePiePlot0.setAggregatedItemsPaint(systemColor0);
        multiplePiePlot0.getAggregatedItemsPaint();
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
        DateTitle dateTitle0 = new DateTitle();
        jFreeChart0.addSubtitle((Title) dateTitle0);
        multiplePiePlot0.getPieChart();
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test069() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        multiplePiePlot0.setLimit(1.0);
        double double0 = multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test0710() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        multiplePiePlot0.setLimit((-1761.638998));
        double double0 = multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test0811() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        multiplePiePlot0.getDataset();
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test0912() throws Throwable {
        String[] stringArray0 = new String[3];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        multiplePiePlot0.getLegendItems();
    }

    @Test(timeout = 4000)
    public void test1013() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 2670, 15, 10, 10, 2670, 3224, true, true, true, true, true, true);
        Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea();
        PlotState plotState0 = new PlotState();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        multiplePiePlot0.draw((Graphics2D) null, rectangle2D0, (Point2D) null, plotState0, plotRenderingInfo0);
    }

    @Test(timeout = 4000)
    public void test1114() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        multiplePiePlot0.getDataset();
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test1215() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        multiplePiePlot0.setBackgroundAlpha(10);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
    }

    @Test(timeout = 4000)
    public void test1216() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        multiplePiePlot0.setBackgroundAlpha(10);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
        multiplePiePlot1.getLimit();
    }

    @Test(timeout = 4000)
    public void test1317() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        Color color0 = (Color) JFreeChart.DEFAULT_BACKGROUND_PAINT;
        multiplePiePlot0.setAggregatedItemsPaint(color0);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
        multiplePiePlot1.equals((Object) multiplePiePlot0);
    }

    @Test(timeout = 4000)
    public void test1318() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        Color color0 = (Color) JFreeChart.DEFAULT_BACKGROUND_PAINT;
        multiplePiePlot0.setAggregatedItemsPaint(color0);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
        multiplePiePlot1.getLimit();
    }

    @Test(timeout = 4000)
    public void test1319() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        Color color0 = (Color) JFreeChart.DEFAULT_BACKGROUND_PAINT;
        multiplePiePlot0.setAggregatedItemsPaint(color0);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
    }

    @Test(timeout = 4000)
    public void test1420() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        multiplePiePlot0.setAggregatedItemsKey(0.5F);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
        multiplePiePlot1.getLimit();
    }

    @Test(timeout = 4000)
    public void test1421() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        multiplePiePlot0.setAggregatedItemsKey(0.5F);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
    }

    @Test(timeout = 4000)
    public void test1522() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        multiplePiePlot0.setLimit(10);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test1523() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        multiplePiePlot0.setLimit(10);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
    }

    @Test(timeout = 4000)
    public void test1624() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        multiplePiePlot0.setDataExtractOrder(tableOrder0);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
    }

    @Test(timeout = 4000)
    public void test1625() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        multiplePiePlot0.setDataExtractOrder(tableOrder0);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
        multiplePiePlot1.getLimit();
    }

    @Test(timeout = 4000)
    public void test1726() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        defaultKeyedValues2DDataset0.addChangeListener(multiplePiePlot0);
        multiplePiePlot0.setDataset(defaultKeyedValues2DDataset0);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test1827() throws Throwable {
        DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultStatisticalCategoryDataset0);
        Object object0 = new Object();
        boolean boolean0 = multiplePiePlot0.equals(object0);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test1828() throws Throwable {
        DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultStatisticalCategoryDataset0);
        Object object0 = new Object();
        boolean boolean0 = multiplePiePlot0.equals(object0);
    }

    @Test(timeout = 4000)
    public void test1929() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        multiplePiePlot0.getLegendItems();
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test2030() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        defaultKeyedValues2DDataset0.setValue((Number) 1.0F, (Comparable) 10, (Comparable) 1.0F);
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        multiplePiePlot0.setDataExtractOrder(tableOrder0);
        multiplePiePlot0.getLegendItems();
        LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
        legendItemCollection0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test2031() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        defaultKeyedValues2DDataset0.setValue((Number) 1.0F, (Comparable) 10, (Comparable) 1.0F);
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        multiplePiePlot0.setDataExtractOrder(tableOrder0);
        multiplePiePlot0.getLegendItems();
        LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test2132() throws Throwable {
        double[][] doubleArray0 = new double[2][0];
        double[] doubleArray1 = new double[9];
        doubleArray0[0] = doubleArray1;
        doubleArray0[1] = doubleArray1;
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        JFreeChart jFreeChart0 = new JFreeChart("hnlXySWvrw", multiplePiePlot0);
        jFreeChart0.createBufferedImage(10, 10);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test2233() throws Throwable {
        double[][] doubleArray0 = new double[2][0];
        double[] doubleArray1 = new double[10];
        doubleArray0[0] = doubleArray1;
        doubleArray0[1] = doubleArray1;
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        JFreeChart jFreeChart0 = new JFreeChart("hnlXySWvrw", multiplePiePlot0);
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        jFreeChart0.createBufferedImage(8, 8, chartRenderingInfo0);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test2334() throws Throwable {
        DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultStatisticalCategoryDataset0);
        BufferedImage bufferedImage0 = new BufferedImage(24, 24, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(547.2595721, (-319.649), (-5.0), 1.0F);
        Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D_Double0, (RectangleAnchor) null);
        Rectangle rectangle0 = new Rectangle(0, 0);
        PlotState plotState0 = new PlotState();
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        multiplePiePlot0.draw(graphics2D0, rectangle0, point2D0, plotState0, plotRenderingInfo0);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test2435() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        multiplePiePlot0.setAggregatedItemsPaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test2536() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        multiplePiePlot0.setAggregatedItemsKey((Comparable) null);
    }

    @Test(timeout = 4000)
    public void test2637() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        multiplePiePlot0.setDataExtractOrder((TableOrder) null);
    }

    @Test(timeout = 4000)
    public void test2738() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        JFreeChart jFreeChart0 = new JFreeChart(multiplePiePlot0);
        multiplePiePlot0.setPieChart(jFreeChart0);
    }

    @Test(timeout = 4000)
    public void test2839() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        multiplePiePlot0.setPieChart((JFreeChart) null);
    }

    @Test(timeout = 4000)
    public void test2940() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        multiplePiePlot0.setDataset((CategoryDataset) null);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test3041() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
        multiplePiePlot0.setDataExtractOrder(tableOrder0);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test3142() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        double double0 = multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test3244() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        multiplePiePlot0.setLimit(1.0);
        LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
        legendItemCollection0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test3345() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        defaultKeyedValues2DDataset0.setValue((Number) 1.0F, (Comparable) 10, (Comparable) 1.0F);
        multiplePiePlot0.getLegendItems();
        LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test3346() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        defaultKeyedValues2DDataset0.setValue((Number) 1.0F, (Comparable) 10, (Comparable) 1.0F);
        multiplePiePlot0.getLegendItems();
        LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
        legendItemCollection0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test3447() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        Comparable comparable0 = multiplePiePlot0.getAggregatedItemsKey();
    }

    @Test(timeout = 4000)
    public void test3448() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        Comparable comparable0 = multiplePiePlot0.getAggregatedItemsKey();
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test3549() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        String string0 = multiplePiePlot0.getPlotType();
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test3550() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        String string0 = multiplePiePlot0.getPlotType();
    }

    @Test(timeout = 4000)
    public void test3651() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
        multiplePiePlot0.setPieChart(jFreeChart0);
        multiplePiePlot0.getLimit();
    }
}
