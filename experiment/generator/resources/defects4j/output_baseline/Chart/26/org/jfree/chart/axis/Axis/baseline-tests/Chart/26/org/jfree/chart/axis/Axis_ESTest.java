/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 02:40:18 GMT 2023
 */
package org.jfree.chart.axis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.io.PipedInputStream;
import java.util.Date;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.renderer.PolarItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.title.Title;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.general.PieDataset;
import org.jfree.data.general.SubSeriesDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class Axis_ESTest extends Axis_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getBackgroundSelectionColor();
        categoryAxis3D0.setTickMarkPaint(color0);
        categoryAxis3D0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getBackgroundSelectionColor();
        categoryAxis3D0.setTickMarkPaint(color0);
        categoryAxis3D0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test002() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getBackgroundSelectionColor();
        categoryAxis3D0.setTickMarkPaint(color0);
        categoryAxis3D0.isVisible();
    }

    @Test(timeout = 4000)
    public void test003() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getBackgroundSelectionColor();
        categoryAxis3D0.setTickMarkPaint(color0);
        categoryAxis3D0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test004() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getBackgroundSelectionColor();
        categoryAxis3D0.setTickMarkPaint(color0);
        categoryAxis3D0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test005() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getBackgroundSelectionColor();
        categoryAxis3D0.setTickMarkPaint(color0);
        categoryAxis3D0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test006() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getBackgroundSelectionColor();
        categoryAxis3D0.setTickMarkPaint(color0);
        categoryAxis3D0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test017() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
        categoryAxis0.setTickMarkOutsideLength(1542.5818F);
        categoryAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test028() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CategoryPlot categoryPlot0 = new CategoryPlot();
        RectangleInsets rectangleInsets0 = categoryPlot0.getInsets();
        numberAxis0.setTickLabelInsets(rectangleInsets0);
        numberAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test029() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CategoryPlot categoryPlot0 = new CategoryPlot();
        RectangleInsets rectangleInsets0 = categoryPlot0.getInsets();
        numberAxis0.setTickLabelInsets(rectangleInsets0);
        numberAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test0210() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CategoryPlot categoryPlot0 = new CategoryPlot();
        RectangleInsets rectangleInsets0 = categoryPlot0.getInsets();
        numberAxis0.setTickLabelInsets(rectangleInsets0);
        numberAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test0211() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CategoryPlot categoryPlot0 = new CategoryPlot();
        RectangleInsets rectangleInsets0 = categoryPlot0.getInsets();
        numberAxis0.setTickLabelInsets(rectangleInsets0);
        numberAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test0212() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CategoryPlot categoryPlot0 = new CategoryPlot();
        RectangleInsets rectangleInsets0 = categoryPlot0.getInsets();
        numberAxis0.setTickLabelInsets(rectangleInsets0);
        numberAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test0213() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CategoryPlot categoryPlot0 = new CategoryPlot();
        RectangleInsets rectangleInsets0 = categoryPlot0.getInsets();
        numberAxis0.setTickLabelInsets(rectangleInsets0);
        numberAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test0214() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CategoryPlot categoryPlot0 = new CategoryPlot();
        RectangleInsets rectangleInsets0 = categoryPlot0.getInsets();
        numberAxis0.setTickLabelInsets(rectangleInsets0);
        numberAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test0315() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("Fast_Scatter_Plot");
        PeriodAxis periodAxis0 = new PeriodAxis("~neErvtv|w<'");
        Paint paint0 = periodAxis0.getMinorTickMarkPaint();
        categoryAxis0.setTickLabelPaint(paint0);
        periodAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test0316() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("Fast_Scatter_Plot");
        PeriodAxis periodAxis0 = new PeriodAxis("~neErvtv|w<'");
        Paint paint0 = periodAxis0.getMinorTickMarkPaint();
        categoryAxis0.setTickLabelPaint(paint0);
        periodAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test0317() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("Fast_Scatter_Plot");
        PeriodAxis periodAxis0 = new PeriodAxis("~neErvtv|w<'");
        Paint paint0 = periodAxis0.getMinorTickMarkPaint();
        categoryAxis0.setTickLabelPaint(paint0);
        periodAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test0318() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("Fast_Scatter_Plot");
        PeriodAxis periodAxis0 = new PeriodAxis("~neErvtv|w<'");
        Paint paint0 = periodAxis0.getMinorTickMarkPaint();
        categoryAxis0.setTickLabelPaint(paint0);
        categoryAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test0319() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("Fast_Scatter_Plot");
        PeriodAxis periodAxis0 = new PeriodAxis("~neErvtv|w<'");
        Paint paint0 = periodAxis0.getMinorTickMarkPaint();
        categoryAxis0.setTickLabelPaint(paint0);
        periodAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test0320() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("Fast_Scatter_Plot");
        PeriodAxis periodAxis0 = new PeriodAxis("~neErvtv|w<'");
        Paint paint0 = periodAxis0.getMinorTickMarkPaint();
        categoryAxis0.setTickLabelPaint(paint0);
        periodAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test0321() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("Fast_Scatter_Plot");
        PeriodAxis periodAxis0 = new PeriodAxis("~neErvtv|w<'");
        Paint paint0 = periodAxis0.getMinorTickMarkPaint();
        categoryAxis0.setTickLabelPaint(paint0);
        periodAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test0322() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("Fast_Scatter_Plot");
        PeriodAxis periodAxis0 = new PeriodAxis("~neErvtv|w<'");
        Paint paint0 = periodAxis0.getMinorTickMarkPaint();
        categoryAxis0.setTickLabelPaint(paint0);
        periodAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test0423() throws Throwable {
        Hour hour0 = new Hour();
        PeriodAxis periodAxis0 = new PeriodAxis("/>", hour0, hour0, hour0.DEFAULT_TIME_ZONE);
        MeterPlot meterPlot0 = new MeterPlot();
        Font font0 = meterPlot0.getValueFont();
        periodAxis0.setTickLabelFont(font0);
        periodAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test0424() throws Throwable {
        Hour hour0 = new Hour();
        PeriodAxis periodAxis0 = new PeriodAxis("/>", hour0, hour0, hour0.DEFAULT_TIME_ZONE);
        MeterPlot meterPlot0 = new MeterPlot();
        Font font0 = meterPlot0.getValueFont();
        periodAxis0.setTickLabelFont(font0);
        periodAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test0425() throws Throwable {
        Hour hour0 = new Hour();
        PeriodAxis periodAxis0 = new PeriodAxis("/>", hour0, hour0, hour0.DEFAULT_TIME_ZONE);
        MeterPlot meterPlot0 = new MeterPlot();
        Font font0 = meterPlot0.getValueFont();
        periodAxis0.setTickLabelFont(font0);
        periodAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test0426() throws Throwable {
        Hour hour0 = new Hour();
        PeriodAxis periodAxis0 = new PeriodAxis("/>", hour0, hour0, hour0.DEFAULT_TIME_ZONE);
        MeterPlot meterPlot0 = new MeterPlot();
        Font font0 = meterPlot0.getValueFont();
        periodAxis0.setTickLabelFont(font0);
        periodAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test0427() throws Throwable {
        Hour hour0 = new Hour();
        PeriodAxis periodAxis0 = new PeriodAxis("/>", hour0, hour0, hour0.DEFAULT_TIME_ZONE);
        MeterPlot meterPlot0 = new MeterPlot();
        Font font0 = meterPlot0.getValueFont();
        periodAxis0.setTickLabelFont(font0);
        periodAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test0428() throws Throwable {
        Hour hour0 = new Hour();
        PeriodAxis periodAxis0 = new PeriodAxis("/>", hour0, hour0, hour0.DEFAULT_TIME_ZONE);
        MeterPlot meterPlot0 = new MeterPlot();
        Font font0 = meterPlot0.getValueFont();
        periodAxis0.setTickLabelFont(font0);
        periodAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test0429() throws Throwable {
        Hour hour0 = new Hour();
        PeriodAxis periodAxis0 = new PeriodAxis("/>", hour0, hour0, hour0.DEFAULT_TIME_ZONE);
        MeterPlot meterPlot0 = new MeterPlot();
        Font font0 = meterPlot0.getValueFont();
        periodAxis0.setTickLabelFont(font0);
        periodAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test0530() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
        Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();
        cyclicNumberAxis0.setAxisLineStroke(stroke0);
        cyclicNumberAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test0531() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
        Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();
        cyclicNumberAxis0.setAxisLineStroke(stroke0);
        cyclicNumberAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test0532() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
        Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();
        cyclicNumberAxis0.setAxisLineStroke(stroke0);
        cyclicNumberAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test0533() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
        Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();
        cyclicNumberAxis0.setAxisLineStroke(stroke0);
        cyclicNumberAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test0534() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
        Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();
        cyclicNumberAxis0.setAxisLineStroke(stroke0);
        cyclicNumberAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test0535() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
        Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();
        cyclicNumberAxis0.setAxisLineStroke(stroke0);
        cyclicNumberAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test0536() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
        Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();
        cyclicNumberAxis0.setAxisLineStroke(stroke0);
        cyclicNumberAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test0637() throws Throwable {
        Week week0 = new Week();
        PeriodAxis periodAxis0 = new PeriodAxis(" 25;eHgg RIKc", week0, week0);
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        periodAxis0.setLabelFont(ganttRenderer0.DEFAULT_VALUE_LABEL_FONT);
        periodAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test0638() throws Throwable {
        Week week0 = new Week();
        PeriodAxis periodAxis0 = new PeriodAxis(" 25;eHgg RIKc", week0, week0);
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        periodAxis0.setLabelFont(ganttRenderer0.DEFAULT_VALUE_LABEL_FONT);
        periodAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test0639() throws Throwable {
        Week week0 = new Week();
        PeriodAxis periodAxis0 = new PeriodAxis(" 25;eHgg RIKc", week0, week0);
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        periodAxis0.setLabelFont(ganttRenderer0.DEFAULT_VALUE_LABEL_FONT);
        periodAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test0640() throws Throwable {
        Week week0 = new Week();
        PeriodAxis periodAxis0 = new PeriodAxis(" 25;eHgg RIKc", week0, week0);
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        periodAxis0.setLabelFont(ganttRenderer0.DEFAULT_VALUE_LABEL_FONT);
        periodAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test0641() throws Throwable {
        Week week0 = new Week();
        PeriodAxis periodAxis0 = new PeriodAxis(" 25;eHgg RIKc", week0, week0);
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        periodAxis0.setLabelFont(ganttRenderer0.DEFAULT_VALUE_LABEL_FONT);
        periodAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test0642() throws Throwable {
        Week week0 = new Week();
        PeriodAxis periodAxis0 = new PeriodAxis(" 25;eHgg RIKc", week0, week0);
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        periodAxis0.setLabelFont(ganttRenderer0.DEFAULT_VALUE_LABEL_FONT);
        periodAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test0643() throws Throwable {
        Week week0 = new Week();
        PeriodAxis periodAxis0 = new PeriodAxis(" 25;eHgg RIKc", week0, week0);
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        periodAxis0.setLabelFont(ganttRenderer0.DEFAULT_VALUE_LABEL_FONT);
        periodAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test0744() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("");
        AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(categoryAxis0);
        categoryAxis0.notifyListeners(axisChangeEvent0);
        categoryAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test0745() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("");
        AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(categoryAxis0);
        categoryAxis0.notifyListeners(axisChangeEvent0);
        categoryAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test0746() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("");
        AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(categoryAxis0);
        categoryAxis0.notifyListeners(axisChangeEvent0);
        categoryAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test0747() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("");
        AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(categoryAxis0);
        categoryAxis0.notifyListeners(axisChangeEvent0);
        categoryAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test0748() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("");
        AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(categoryAxis0);
        categoryAxis0.notifyListeners(axisChangeEvent0);
        categoryAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test0749() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("");
        AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(categoryAxis0);
        categoryAxis0.notifyListeners(axisChangeEvent0);
        categoryAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test0750() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("");
        AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(categoryAxis0);
        categoryAxis0.notifyListeners(axisChangeEvent0);
        categoryAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test0851() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("vURU#qE7Fy.y");
        dateAxis0.configure();
        dateAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test0852() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("vURU#qE7Fy.y");
        dateAxis0.configure();
        dateAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test0853() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("vURU#qE7Fy.y");
        dateAxis0.configure();
        dateAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test0854() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("vURU#qE7Fy.y");
        dateAxis0.configure();
        dateAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test0855() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("vURU#qE7Fy.y");
        dateAxis0.configure();
        dateAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test0856() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("vURU#qE7Fy.y");
        dateAxis0.configure();
        dateAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test0857() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("vURU#qE7Fy.y");
        dateAxis0.configure();
        dateAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test0958() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        AxisSpace axisSpace0 = categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);
        categoryAxis0.getFixedDimension();
    }

    @Test(timeout = 4000)
    public void test0959() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        AxisSpace axisSpace0 = categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);
        categoryAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test0960() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        AxisSpace axisSpace0 = categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);
        categoryAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test0961() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        AxisSpace axisSpace0 = categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);
        categoryAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test0962() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        AxisSpace axisSpace0 = categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);
        categoryAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test0963() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        AxisSpace axisSpace0 = categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);
        axisSpace0.getRight();
    }

    @Test(timeout = 4000)
    public void test0964() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        AxisSpace axisSpace0 = categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);
        categoryAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test0965() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        AxisSpace axisSpace0 = categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);
        categoryAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test1066() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        boolean boolean0 = numberAxis3D0.isAxisLineVisible();
        numberAxis3D0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test1067() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        boolean boolean0 = numberAxis3D0.isAxisLineVisible();
        numberAxis3D0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test1068() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        boolean boolean0 = numberAxis3D0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test1069() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        boolean boolean0 = numberAxis3D0.isAxisLineVisible();
        numberAxis3D0.isVisible();
    }

    @Test(timeout = 4000)
    public void test1070() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        boolean boolean0 = numberAxis3D0.isAxisLineVisible();
        numberAxis3D0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test1071() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        boolean boolean0 = numberAxis3D0.isAxisLineVisible();
        numberAxis3D0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test1072() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        boolean boolean0 = numberAxis3D0.isAxisLineVisible();
        numberAxis3D0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test1173() throws Throwable {
        DateAxis dateAxis0 = new DateAxis((String) null);
        RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
        dateAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);
        dateAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test1174() throws Throwable {
        DateAxis dateAxis0 = new DateAxis((String) null);
        RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
        dateAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);
        dateAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test1175() throws Throwable {
        DateAxis dateAxis0 = new DateAxis((String) null);
        RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
        dateAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);
        dateAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test1176() throws Throwable {
        DateAxis dateAxis0 = new DateAxis((String) null);
        RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
        dateAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);
        dateAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test1177() throws Throwable {
        DateAxis dateAxis0 = new DateAxis((String) null);
        RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
        dateAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);
        dateAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test1178() throws Throwable {
        DateAxis dateAxis0 = new DateAxis((String) null);
        RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
        dateAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);
        dateAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test1179() throws Throwable {
        DateAxis dateAxis0 = new DateAxis((String) null);
        RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
        dateAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);
        dateAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test1280() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        valueAxis0.getLabel();
        valueAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test1281() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        valueAxis0.getLabel();
        valueAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test1282() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        valueAxis0.getLabel();
        valueAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test1283() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        valueAxis0.getLabel();
        valueAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test1284() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        valueAxis0.getLabel();
        valueAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test1285() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        valueAxis0.getLabel();
        valueAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test1286() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        valueAxis0.getLabel();
        valueAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test1387() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("0m-'*");
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        periodAxis0.equals(pipedInputStream0);
        periodAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test1388() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("0m-'*");
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        periodAxis0.equals(pipedInputStream0);
        periodAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test1389() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("0m-'*");
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        periodAxis0.equals(pipedInputStream0);
        periodAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test1390() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("0m-'*");
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        periodAxis0.equals(pipedInputStream0);
        periodAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test1391() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("0m-'*");
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        periodAxis0.equals(pipedInputStream0);
        periodAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test1392() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("0m-'*");
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        periodAxis0.equals(pipedInputStream0);
        periodAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test1393() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("0m-'*");
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        periodAxis0.equals(pipedInputStream0);
        periodAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test1494() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
        ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis) extendedCategoryAxis0.clone();
        extendedCategoryAxis1.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test1495() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
        ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis) extendedCategoryAxis0.clone();
        extendedCategoryAxis1.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test1496() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
        ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis) extendedCategoryAxis0.clone();
        extendedCategoryAxis1.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test1497() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
        ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis) extendedCategoryAxis0.clone();
        extendedCategoryAxis1.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test1498() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
        ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis) extendedCategoryAxis0.clone();
        extendedCategoryAxis1.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test1499() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
        ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis) extendedCategoryAxis0.clone();
        extendedCategoryAxis1.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test14100() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
        ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis) extendedCategoryAxis0.clone();
    }

    @Test(timeout = 4000)
    public void test14101() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
        ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis) extendedCategoryAxis0.clone();
        extendedCategoryAxis1.isVisible();
    }

    @Test(timeout = 4000)
    public void test15102() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "");
        DateAxis dateAxis0 = new DateAxis("|+q|07W5K~ FVX%q", simpleTimeZone0);
        CategoryAxis categoryAxis0 = new CategoryAxis("");
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
        RectangleEdge rectangleEdge0 = combinedDomainCategoryPlot0.getDomainAxisEdge(0);
        dateAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);
    }

    @Test(timeout = 4000)
    public void test16103() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
        dateAxis0.addChangeListener(piePlot3D0);
        dateAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test16104() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
        dateAxis0.addChangeListener(piePlot3D0);
        dateAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test16105() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
        dateAxis0.addChangeListener(piePlot3D0);
        dateAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test16106() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
        dateAxis0.addChangeListener(piePlot3D0);
        dateAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test16107() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
        dateAxis0.addChangeListener(piePlot3D0);
        dateAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test16108() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
        dateAxis0.addChangeListener(piePlot3D0);
        dateAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test16109() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
        dateAxis0.addChangeListener(piePlot3D0);
        dateAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test17110() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("X");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        logarithmicAxis0.addChangeListener(combinedRangeXYPlot0);
        logarithmicAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test17111() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("X");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        logarithmicAxis0.addChangeListener(combinedRangeXYPlot0);
        logarithmicAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test17112() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("X");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        logarithmicAxis0.addChangeListener(combinedRangeXYPlot0);
        logarithmicAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test17113() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("X");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        logarithmicAxis0.addChangeListener(combinedRangeXYPlot0);
        logarithmicAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test17114() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("X");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        logarithmicAxis0.addChangeListener(combinedRangeXYPlot0);
        logarithmicAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test17115() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("X");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        logarithmicAxis0.addChangeListener(combinedRangeXYPlot0);
        logarithmicAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test17116() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("X");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        logarithmicAxis0.addChangeListener(combinedRangeXYPlot0);
        logarithmicAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test18117() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 309.828, "g0iK");
        cyclicNumberAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test18118() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 309.828, "g0iK");
        cyclicNumberAxis0.setTickMarksVisible(false);
        boolean boolean0 = cyclicNumberAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test19119() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2679.4453444254);
        Color color0 = (Color) cyclicNumberAxis0.getAxisLinePaint();
        cyclicNumberAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test19120() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2679.4453444254);
        Color color0 = (Color) cyclicNumberAxis0.getAxisLinePaint();
        cyclicNumberAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test19121() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2679.4453444254);
        Color color0 = (Color) cyclicNumberAxis0.getAxisLinePaint();
        cyclicNumberAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test19122() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2679.4453444254);
        Color color0 = (Color) cyclicNumberAxis0.getAxisLinePaint();
        color0.getRGB();
    }

    @Test(timeout = 4000)
    public void test19123() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2679.4453444254);
        Color color0 = (Color) cyclicNumberAxis0.getAxisLinePaint();
        cyclicNumberAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test19124() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2679.4453444254);
        Color color0 = (Color) cyclicNumberAxis0.getAxisLinePaint();
        cyclicNumberAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test19125() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2679.4453444254);
        Color color0 = (Color) cyclicNumberAxis0.getAxisLinePaint();
        cyclicNumberAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test19126() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2679.4453444254);
        Color color0 = (Color) cyclicNumberAxis0.getAxisLinePaint();
        cyclicNumberAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test20127() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "[v7");
        Font font0 = cyclicNumberAxis0.getTickLabelFont();
        cyclicNumberAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test20128() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "[v7");
        Font font0 = cyclicNumberAxis0.getTickLabelFont();
        cyclicNumberAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test20129() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "[v7");
        Font font0 = cyclicNumberAxis0.getTickLabelFont();
        cyclicNumberAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test20130() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "[v7");
        Font font0 = cyclicNumberAxis0.getTickLabelFont();
        cyclicNumberAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test20131() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "[v7");
        Font font0 = cyclicNumberAxis0.getTickLabelFont();
        cyclicNumberAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test20132() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "[v7");
        Font font0 = cyclicNumberAxis0.getTickLabelFont();
        cyclicNumberAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test20133() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "[v7");
        Font font0 = cyclicNumberAxis0.getTickLabelFont();
        cyclicNumberAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test20134() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "[v7");
        Font font0 = cyclicNumberAxis0.getTickLabelFont();
        font0.getSize();
    }

    @Test(timeout = 4000)
    public void test21135() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2354.619742125702));
        double double0 = cyclicNumberAxis0.getLabelAngle();
        cyclicNumberAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test21136() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2354.619742125702));
        double double0 = cyclicNumberAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test21137() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2354.619742125702));
        double double0 = cyclicNumberAxis0.getLabelAngle();
        cyclicNumberAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test21138() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2354.619742125702));
        double double0 = cyclicNumberAxis0.getLabelAngle();
        cyclicNumberAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test21139() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2354.619742125702));
        double double0 = cyclicNumberAxis0.getLabelAngle();
        cyclicNumberAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test21140() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2354.619742125702));
        double double0 = cyclicNumberAxis0.getLabelAngle();
        cyclicNumberAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test21141() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2354.619742125702));
        double double0 = cyclicNumberAxis0.getLabelAngle();
        cyclicNumberAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test22142() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("6bP8]y~(h{v?");
        DateAxis dateAxis0 = new DateAxis("6bP8]y~(h{v?", timeZone0);
        dateAxis0.getAxisLineStroke();
        dateAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test22143() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("6bP8]y~(h{v?");
        DateAxis dateAxis0 = new DateAxis("6bP8]y~(h{v?", timeZone0);
        dateAxis0.getAxisLineStroke();
        dateAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test22144() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("6bP8]y~(h{v?");
        DateAxis dateAxis0 = new DateAxis("6bP8]y~(h{v?", timeZone0);
        dateAxis0.getAxisLineStroke();
        dateAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test22145() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("6bP8]y~(h{v?");
        DateAxis dateAxis0 = new DateAxis("6bP8]y~(h{v?", timeZone0);
        dateAxis0.getAxisLineStroke();
        dateAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test22146() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("6bP8]y~(h{v?");
        DateAxis dateAxis0 = new DateAxis("6bP8]y~(h{v?", timeZone0);
        dateAxis0.getAxisLineStroke();
        dateAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test22147() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("6bP8]y~(h{v?");
        DateAxis dateAxis0 = new DateAxis("6bP8]y~(h{v?", timeZone0);
        dateAxis0.getAxisLineStroke();
        dateAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test22148() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("6bP8]y~(h{v?");
        DateAxis dateAxis0 = new DateAxis("6bP8]y~(h{v?", timeZone0);
        dateAxis0.getAxisLineStroke();
        dateAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test23149() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 0.0F, "org.jfree.chart.text.TextFragment");
        Font font0 = cyclicNumberAxis0.getLabelFont();
        cyclicNumberAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test23150() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 0.0F, "org.jfree.chart.text.TextFragment");
        Font font0 = cyclicNumberAxis0.getLabelFont();
        cyclicNumberAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test23151() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 0.0F, "org.jfree.chart.text.TextFragment");
        Font font0 = cyclicNumberAxis0.getLabelFont();
        cyclicNumberAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test23152() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 0.0F, "org.jfree.chart.text.TextFragment");
        Font font0 = cyclicNumberAxis0.getLabelFont();
        cyclicNumberAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test23153() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 0.0F, "org.jfree.chart.text.TextFragment");
        Font font0 = cyclicNumberAxis0.getLabelFont();
        cyclicNumberAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test23154() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 0.0F, "org.jfree.chart.text.TextFragment");
        Font font0 = cyclicNumberAxis0.getLabelFont();
        font0.getSize();
    }

    @Test(timeout = 4000)
    public void test23155() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 0.0F, "org.jfree.chart.text.TextFragment");
        Font font0 = cyclicNumberAxis0.getLabelFont();
        cyclicNumberAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test23156() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 0.0F, "org.jfree.chart.text.TextFragment");
        Font font0 = cyclicNumberAxis0.getLabelFont();
        cyclicNumberAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test24157() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "org.jfree.chart.axis.Axis");
        boolean boolean0 = cyclicNumberAxis0.isVisible();
        cyclicNumberAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test24158() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "org.jfree.chart.axis.Axis");
        boolean boolean0 = cyclicNumberAxis0.isVisible();
        cyclicNumberAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test24159() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "org.jfree.chart.axis.Axis");
        boolean boolean0 = cyclicNumberAxis0.isVisible();
        cyclicNumberAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test24160() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "org.jfree.chart.axis.Axis");
        boolean boolean0 = cyclicNumberAxis0.isVisible();
        cyclicNumberAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test24161() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "org.jfree.chart.axis.Axis");
        boolean boolean0 = cyclicNumberAxis0.isVisible();
        cyclicNumberAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test24162() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "org.jfree.chart.axis.Axis");
        boolean boolean0 = cyclicNumberAxis0.isVisible();
        cyclicNumberAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test24163() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "org.jfree.chart.axis.Axis");
        boolean boolean0 = cyclicNumberAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test25164() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("HorizontalAlignment.LEFT");
        periodAxis0.getPlot();
        periodAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test25165() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("HorizontalAlignment.LEFT");
        periodAxis0.getPlot();
        periodAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test25166() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("HorizontalAlignment.LEFT");
        periodAxis0.getPlot();
        periodAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test25167() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("HorizontalAlignment.LEFT");
        periodAxis0.getPlot();
        periodAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test25168() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("HorizontalAlignment.LEFT");
        periodAxis0.getPlot();
        periodAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test25169() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("HorizontalAlignment.LEFT");
        periodAxis0.getPlot();
        periodAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test25170() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("HorizontalAlignment.LEFT");
        periodAxis0.getPlot();
        periodAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test26171() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        Color color0 = (Color) dateAxis0.getTickLabelPaint();
        dateAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test26172() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        Color color0 = (Color) dateAxis0.getTickLabelPaint();
        dateAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test26173() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        Color color0 = (Color) dateAxis0.getTickLabelPaint();
        dateAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test26174() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        Color color0 = (Color) dateAxis0.getTickLabelPaint();
        dateAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test26175() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        Color color0 = (Color) dateAxis0.getTickLabelPaint();
        dateAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test26176() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        Color color0 = (Color) dateAxis0.getTickLabelPaint();
        dateAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test26177() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        Color color0 = (Color) dateAxis0.getTickLabelPaint();
        color0.getRed();
    }

    @Test(timeout = 4000)
    public void test26178() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        Color color0 = (Color) dateAxis0.getTickLabelPaint();
        dateAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test27179() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        RectangleInsets rectangleInsets0 = logarithmicAxis0.getTickLabelInsets();
        logarithmicAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test27180() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        RectangleInsets rectangleInsets0 = logarithmicAxis0.getTickLabelInsets();
        logarithmicAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test27181() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        RectangleInsets rectangleInsets0 = logarithmicAxis0.getTickLabelInsets();
        logarithmicAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test27182() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        RectangleInsets rectangleInsets0 = logarithmicAxis0.getTickLabelInsets();
        logarithmicAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test27183() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        RectangleInsets rectangleInsets0 = logarithmicAxis0.getTickLabelInsets();
        logarithmicAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test27184() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        RectangleInsets rectangleInsets0 = logarithmicAxis0.getTickLabelInsets();
        logarithmicAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test27185() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        RectangleInsets rectangleInsets0 = logarithmicAxis0.getTickLabelInsets();
        logarithmicAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test27186() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        RectangleInsets rectangleInsets0 = logarithmicAxis0.getTickLabelInsets();
        rectangleInsets0.getLeft();
    }

    @Test(timeout = 4000)
    public void test28187() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
        logarithmicAxis0.getTickMarkStroke();
        logarithmicAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test28188() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
        logarithmicAxis0.getTickMarkStroke();
        logarithmicAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test28189() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
        logarithmicAxis0.getTickMarkStroke();
        logarithmicAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test28190() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
        logarithmicAxis0.getTickMarkStroke();
        logarithmicAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test28191() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
        logarithmicAxis0.getTickMarkStroke();
        logarithmicAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test28192() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
        logarithmicAxis0.getTickMarkStroke();
        logarithmicAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test28193() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
        logarithmicAxis0.getTickMarkStroke();
        logarithmicAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test29194() throws Throwable {
        ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;
        DateAxis dateAxis0 = new DateAxis("sYZwccxsFNxVh!", zoneInfo0);
        double double0 = dateAxis0.getFixedDimension();
        dateAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test29195() throws Throwable {
        ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;
        DateAxis dateAxis0 = new DateAxis("sYZwccxsFNxVh!", zoneInfo0);
        double double0 = dateAxis0.getFixedDimension();
        dateAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test29196() throws Throwable {
        ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;
        DateAxis dateAxis0 = new DateAxis("sYZwccxsFNxVh!", zoneInfo0);
        double double0 = dateAxis0.getFixedDimension();
        dateAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test29197() throws Throwable {
        ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;
        DateAxis dateAxis0 = new DateAxis("sYZwccxsFNxVh!", zoneInfo0);
        double double0 = dateAxis0.getFixedDimension();
        dateAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test29198() throws Throwable {
        ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;
        DateAxis dateAxis0 = new DateAxis("sYZwccxsFNxVh!", zoneInfo0);
        double double0 = dateAxis0.getFixedDimension();
        dateAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test29199() throws Throwable {
        ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;
        DateAxis dateAxis0 = new DateAxis("sYZwccxsFNxVh!", zoneInfo0);
        double double0 = dateAxis0.getFixedDimension();
    }

    @Test(timeout = 4000)
    public void test29200() throws Throwable {
        ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;
        DateAxis dateAxis0 = new DateAxis("sYZwccxsFNxVh!", zoneInfo0);
        double double0 = dateAxis0.getFixedDimension();
        dateAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test29201() throws Throwable {
        ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;
        DateAxis dateAxis0 = new DateAxis("sYZwccxsFNxVh!", zoneInfo0);
        double double0 = dateAxis0.getFixedDimension();
        dateAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test30202() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("M znijI]xx5~");
        float float0 = extendedCategoryAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test30203() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("M znijI]xx5~");
        float float0 = extendedCategoryAxis0.getTickMarkOutsideLength();
        extendedCategoryAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test30204() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("M znijI]xx5~");
        float float0 = extendedCategoryAxis0.getTickMarkOutsideLength();
        extendedCategoryAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test30205() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("M znijI]xx5~");
        float float0 = extendedCategoryAxis0.getTickMarkOutsideLength();
        extendedCategoryAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test30206() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("M znijI]xx5~");
        float float0 = extendedCategoryAxis0.getTickMarkOutsideLength();
        extendedCategoryAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test30207() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("M znijI]xx5~");
        float float0 = extendedCategoryAxis0.getTickMarkOutsideLength();
        extendedCategoryAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test30208() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("M znijI]xx5~");
        float float0 = extendedCategoryAxis0.getTickMarkOutsideLength();
        extendedCategoryAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test31209() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test31210() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.setAxisLineVisible(false);
        categoryAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test32211() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        RectangleInsets rectangleInsets0 = dateAxis0.getLabelInsets();
        dateAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test32212() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        RectangleInsets rectangleInsets0 = dateAxis0.getLabelInsets();
        dateAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test32213() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        RectangleInsets rectangleInsets0 = dateAxis0.getLabelInsets();
        dateAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test32214() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        RectangleInsets rectangleInsets0 = dateAxis0.getLabelInsets();
        dateAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test32215() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        RectangleInsets rectangleInsets0 = dateAxis0.getLabelInsets();
        dateAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test32216() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        RectangleInsets rectangleInsets0 = dateAxis0.getLabelInsets();
        rectangleInsets0.getTop();
    }

    @Test(timeout = 4000)
    public void test32217() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        RectangleInsets rectangleInsets0 = dateAxis0.getLabelInsets();
        dateAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test32218() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        RectangleInsets rectangleInsets0 = dateAxis0.getLabelInsets();
        dateAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test33219() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        Color color0 = (Color) dateAxis0.getLabelPaint();
        dateAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test33220() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        Color color0 = (Color) dateAxis0.getLabelPaint();
        dateAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test33221() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        Color color0 = (Color) dateAxis0.getLabelPaint();
        dateAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test33222() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        Color color0 = (Color) dateAxis0.getLabelPaint();
        dateAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test33223() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        Color color0 = (Color) dateAxis0.getLabelPaint();
        dateAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test33224() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        Color color0 = (Color) dateAxis0.getLabelPaint();
        dateAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test33225() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        Color color0 = (Color) dateAxis0.getLabelPaint();
        dateAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test33226() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        Color color0 = (Color) dateAxis0.getLabelPaint();
        color0.getRed();
    }

    @Test(timeout = 4000)
    public void test34227() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
        float float0 = logarithmicAxis0.getTickMarkInsideLength();
        logarithmicAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test34228() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
        float float0 = logarithmicAxis0.getTickMarkInsideLength();
        logarithmicAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test34229() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
        float float0 = logarithmicAxis0.getTickMarkInsideLength();
        logarithmicAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test34230() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
        float float0 = logarithmicAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test34231() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
        float float0 = logarithmicAxis0.getTickMarkInsideLength();
        logarithmicAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test34232() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
        float float0 = logarithmicAxis0.getTickMarkInsideLength();
        logarithmicAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test34233() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
        float float0 = logarithmicAxis0.getTickMarkInsideLength();
        logarithmicAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test35234() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("N3Cvx5H#52#K");
        categoryAxis0.getLabel();
        categoryAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test35235() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("N3Cvx5H#52#K");
        categoryAxis0.getLabel();
        categoryAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test35236() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("N3Cvx5H#52#K");
        categoryAxis0.getLabel();
        categoryAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test35237() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("N3Cvx5H#52#K");
        categoryAxis0.getLabel();
        categoryAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test35238() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("N3Cvx5H#52#K");
        categoryAxis0.getLabel();
        categoryAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test35239() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("N3Cvx5H#52#K");
        categoryAxis0.getLabel();
        categoryAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test35240() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("N3Cvx5H#52#K");
        categoryAxis0.getLabel();
        categoryAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test36241() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        boolean boolean0 = categoryAxis3D0.isAxisLineVisible();
        categoryAxis3D0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test36242() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        boolean boolean0 = categoryAxis3D0.isAxisLineVisible();
        categoryAxis3D0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test36243() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        boolean boolean0 = categoryAxis3D0.isAxisLineVisible();
        categoryAxis3D0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test36244() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        boolean boolean0 = categoryAxis3D0.isAxisLineVisible();
        categoryAxis3D0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test36245() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        boolean boolean0 = categoryAxis3D0.isAxisLineVisible();
        categoryAxis3D0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test36246() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        boolean boolean0 = categoryAxis3D0.isAxisLineVisible();
        categoryAxis3D0.isVisible();
    }

    @Test(timeout = 4000)
    public void test36247() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        boolean boolean0 = categoryAxis3D0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test37248() throws Throwable {
        Hour hour0 = new Hour();
        PeriodAxis periodAxis0 = new PeriodAxis("/>", hour0, hour0, hour0.DEFAULT_TIME_ZONE);
        PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, periodAxis0, (PolarItemRenderer) null);
        periodAxis0.setPlot(polarPlot0);
        periodAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test37249() throws Throwable {
        Hour hour0 = new Hour();
        PeriodAxis periodAxis0 = new PeriodAxis("/>", hour0, hour0, hour0.DEFAULT_TIME_ZONE);
        PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, periodAxis0, (PolarItemRenderer) null);
        periodAxis0.setPlot(polarPlot0);
        periodAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test37250() throws Throwable {
        Hour hour0 = new Hour();
        PeriodAxis periodAxis0 = new PeriodAxis("/>", hour0, hour0, hour0.DEFAULT_TIME_ZONE);
        PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, periodAxis0, (PolarItemRenderer) null);
        periodAxis0.setPlot(polarPlot0);
        periodAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test37251() throws Throwable {
        Hour hour0 = new Hour();
        PeriodAxis periodAxis0 = new PeriodAxis("/>", hour0, hour0, hour0.DEFAULT_TIME_ZONE);
        PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, periodAxis0, (PolarItemRenderer) null);
        periodAxis0.setPlot(polarPlot0);
        periodAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test37252() throws Throwable {
        Hour hour0 = new Hour();
        PeriodAxis periodAxis0 = new PeriodAxis("/>", hour0, hour0, hour0.DEFAULT_TIME_ZONE);
        PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, periodAxis0, (PolarItemRenderer) null);
        periodAxis0.setPlot(polarPlot0);
        periodAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test37253() throws Throwable {
        Hour hour0 = new Hour();
        PeriodAxis periodAxis0 = new PeriodAxis("/>", hour0, hour0, hour0.DEFAULT_TIME_ZONE);
        PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, periodAxis0, (PolarItemRenderer) null);
        periodAxis0.setPlot(polarPlot0);
        periodAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test37254() throws Throwable {
        Hour hour0 = new Hour();
        PeriodAxis periodAxis0 = new PeriodAxis("/>", hour0, hour0, hour0.DEFAULT_TIME_ZONE);
        PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, periodAxis0, (PolarItemRenderer) null);
        periodAxis0.setPlot(polarPlot0);
        periodAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test38255() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis("");
        boolean boolean0 = numberAxis0.isTickLabelsVisible();
        numberAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test38256() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis("");
        boolean boolean0 = numberAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test38257() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis("");
        boolean boolean0 = numberAxis0.isTickLabelsVisible();
        numberAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test38258() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis("");
        boolean boolean0 = numberAxis0.isTickLabelsVisible();
        numberAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test38259() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis("");
        boolean boolean0 = numberAxis0.isTickLabelsVisible();
        numberAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test38260() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis("");
        boolean boolean0 = numberAxis0.isTickLabelsVisible();
        numberAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test38261() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis("");
        boolean boolean0 = numberAxis0.isTickLabelsVisible();
        numberAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test39262() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("");
        Color color0 = (Color) dateAxis0.getTickMarkPaint();
        dateAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test39263() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("");
        Color color0 = (Color) dateAxis0.getTickMarkPaint();
        dateAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test39264() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("");
        Color color0 = (Color) dateAxis0.getTickMarkPaint();
        dateAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test39265() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("");
        Color color0 = (Color) dateAxis0.getTickMarkPaint();
        dateAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test39266() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("");
        Color color0 = (Color) dateAxis0.getTickMarkPaint();
        dateAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test39267() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("");
        Color color0 = (Color) dateAxis0.getTickMarkPaint();
        dateAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test39268() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("");
        Color color0 = (Color) dateAxis0.getTickMarkPaint();
        dateAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test39269() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("");
        Color color0 = (Color) dateAxis0.getTickMarkPaint();
        color0.getRed();
    }

    @Test(timeout = 4000)
    public void test40270() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        boolean boolean0 = valueAxis0.isTickMarksVisible();
        valueAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test40271() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        boolean boolean0 = valueAxis0.isTickMarksVisible();
        valueAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test40272() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        boolean boolean0 = valueAxis0.isTickMarksVisible();
        valueAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test40273() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        boolean boolean0 = valueAxis0.isTickMarksVisible();
        valueAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test40274() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        boolean boolean0 = valueAxis0.isTickMarksVisible();
        valueAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test40275() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        boolean boolean0 = valueAxis0.isTickMarksVisible();
        valueAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test40276() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        boolean boolean0 = valueAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test41277() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        boolean boolean0 = numberAxis3D0.equals(cyclicNumberAxis0);
        cyclicNumberAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test41278() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        boolean boolean0 = numberAxis3D0.equals(cyclicNumberAxis0);
        cyclicNumberAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test41279() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        boolean boolean0 = numberAxis3D0.equals(cyclicNumberAxis0);
    }

    @Test(timeout = 4000)
    public void test41280() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        boolean boolean0 = numberAxis3D0.equals(cyclicNumberAxis0);
        cyclicNumberAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test41281() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        boolean boolean0 = numberAxis3D0.equals(cyclicNumberAxis0);
        cyclicNumberAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test41282() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        boolean boolean0 = numberAxis3D0.equals(cyclicNumberAxis0);
        cyclicNumberAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test41283() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        boolean boolean0 = numberAxis3D0.equals(cyclicNumberAxis0);
        cyclicNumberAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test42284() throws Throwable {
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'insets' argument.");
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        subCategoryAxis0.draw((Graphics2D) null, 1.0E-8, rectangle2D_Double0, rectangle2D_Double0, rectangleEdge0, plotRenderingInfo0);
    }

    @Test(timeout = 4000)
    public void test43285() throws Throwable {
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'insets' argument.");
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        subCategoryAxis0.draw((Graphics2D) null, 1.0E-8, rectangle2D_Double0, rectangle2D_Double0, rectangleEdge0, plotRenderingInfo0);
    }

    @Test(timeout = 4000)
    public void test44286() throws Throwable {
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'insets' argument.");
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        subCategoryAxis0.draw((Graphics2D) null, 1.0E-8, rectangle2D_Double0, rectangle2D_Double0, rectangleEdge0, plotRenderingInfo0);
    }

    @Test(timeout = 4000)
    public void test45287() throws Throwable {
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'insets' argument.");
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        subCategoryAxis0.draw((Graphics2D) null, 1.0E-8, rectangle2D_Double0, rectangle2D_Double0, rectangleEdge0, plotRenderingInfo0);
    }

    @Test(timeout = 4000)
    public void test46288() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, "Null 'stroke' argument.");
        float[][] floatArray0 = new float[2][1];
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);
        PeriodAxis periodAxis0 = new PeriodAxis("0m-'*");
        JFreeChart jFreeChart0 = new JFreeChart("0m-'*", periodAxis0.DEFAULT_AXIS_LABEL_FONT, fastScatterPlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        chartRenderingInfo0.setEntityCollection((EntityCollection) null);
        jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);
        periodAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test46289() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, "Null 'stroke' argument.");
        float[][] floatArray0 = new float[2][1];
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);
        PeriodAxis periodAxis0 = new PeriodAxis("0m-'*");
        JFreeChart jFreeChart0 = new JFreeChart("0m-'*", periodAxis0.DEFAULT_AXIS_LABEL_FONT, fastScatterPlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        chartRenderingInfo0.setEntityCollection((EntityCollection) null);
        jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);
        periodAxis0.getFixedDimension();
    }

    @Test(timeout = 4000)
    public void test46290() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, "Null 'stroke' argument.");
        float[][] floatArray0 = new float[2][1];
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);
        PeriodAxis periodAxis0 = new PeriodAxis("0m-'*");
        JFreeChart jFreeChart0 = new JFreeChart("0m-'*", periodAxis0.DEFAULT_AXIS_LABEL_FONT, fastScatterPlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        chartRenderingInfo0.setEntityCollection((EntityCollection) null);
        jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);
        periodAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test46291() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, "Null 'stroke' argument.");
        float[][] floatArray0 = new float[2][1];
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);
        PeriodAxis periodAxis0 = new PeriodAxis("0m-'*");
        JFreeChart jFreeChart0 = new JFreeChart("0m-'*", periodAxis0.DEFAULT_AXIS_LABEL_FONT, fastScatterPlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        chartRenderingInfo0.setEntityCollection((EntityCollection) null);
        jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);
        periodAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test46292() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, "Null 'stroke' argument.");
        float[][] floatArray0 = new float[2][1];
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);
        PeriodAxis periodAxis0 = new PeriodAxis("0m-'*");
        JFreeChart jFreeChart0 = new JFreeChart("0m-'*", periodAxis0.DEFAULT_AXIS_LABEL_FONT, fastScatterPlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        chartRenderingInfo0.setEntityCollection((EntityCollection) null);
        jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);
        periodAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test46293() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, "Null 'stroke' argument.");
        float[][] floatArray0 = new float[2][1];
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);
        PeriodAxis periodAxis0 = new PeriodAxis("0m-'*");
        JFreeChart jFreeChart0 = new JFreeChart("0m-'*", periodAxis0.DEFAULT_AXIS_LABEL_FONT, fastScatterPlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        chartRenderingInfo0.setEntityCollection((EntityCollection) null);
        jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);
        periodAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test46294() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, "Null 'stroke' argument.");
        float[][] floatArray0 = new float[2][1];
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);
        PeriodAxis periodAxis0 = new PeriodAxis("0m-'*");
        JFreeChart jFreeChart0 = new JFreeChart("0m-'*", periodAxis0.DEFAULT_AXIS_LABEL_FONT, fastScatterPlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        chartRenderingInfo0.setEntityCollection((EntityCollection) null);
        jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);
        cyclicNumberAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test47295() throws Throwable {
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
        JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500);
        bufferedImage0.getAccelerationPriority();
    }

    @Test(timeout = 4000)
    public void test48296() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        HistogramDataset histogramDataset0 = new HistogramDataset();
        int[] intArray0 = new int[3];
        SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);
        boolean boolean0 = logarithmicAxis0.hasListener(subSeriesDataset0);
        logarithmicAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test48297() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        HistogramDataset histogramDataset0 = new HistogramDataset();
        int[] intArray0 = new int[3];
        SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);
        boolean boolean0 = logarithmicAxis0.hasListener(subSeriesDataset0);
        logarithmicAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test48298() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        HistogramDataset histogramDataset0 = new HistogramDataset();
        int[] intArray0 = new int[3];
        SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);
        boolean boolean0 = logarithmicAxis0.hasListener(subSeriesDataset0);
        logarithmicAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test48299() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        HistogramDataset histogramDataset0 = new HistogramDataset();
        int[] intArray0 = new int[3];
        SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);
        boolean boolean0 = logarithmicAxis0.hasListener(subSeriesDataset0);
        logarithmicAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test48300() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        HistogramDataset histogramDataset0 = new HistogramDataset();
        int[] intArray0 = new int[3];
        SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);
        boolean boolean0 = logarithmicAxis0.hasListener(subSeriesDataset0);
        logarithmicAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test48301() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        HistogramDataset histogramDataset0 = new HistogramDataset();
        int[] intArray0 = new int[3];
        SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);
        boolean boolean0 = logarithmicAxis0.hasListener(subSeriesDataset0);
    }

    @Test(timeout = 4000)
    public void test48302() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        HistogramDataset histogramDataset0 = new HistogramDataset();
        int[] intArray0 = new int[3];
        SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);
        boolean boolean0 = logarithmicAxis0.hasListener(subSeriesDataset0);
        logarithmicAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test48303() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        HistogramDataset histogramDataset0 = new HistogramDataset();
        int[] intArray0 = new int[3];
        SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);
        boolean boolean0 = logarithmicAxis0.hasListener(subSeriesDataset0);
        logarithmicAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test49304() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
        dateAxis0.removeChangeListener(spiderWebPlot0);
        dateAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test49305() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
        dateAxis0.removeChangeListener(spiderWebPlot0);
        dateAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test49306() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
        dateAxis0.removeChangeListener(spiderWebPlot0);
        dateAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test49307() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
        dateAxis0.removeChangeListener(spiderWebPlot0);
        dateAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test49308() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
        dateAxis0.removeChangeListener(spiderWebPlot0);
        dateAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test49309() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
        dateAxis0.removeChangeListener(spiderWebPlot0);
        dateAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test49310() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
        dateAxis0.removeChangeListener(spiderWebPlot0);
        dateAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test50311() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("Fast_Scatter_Plot");
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
        categoryAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test50312() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("Fast_Scatter_Plot");
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
        categoryAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test50313() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("Fast_Scatter_Plot");
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
        categoryAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test50314() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("Fast_Scatter_Plot");
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
        categoryAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test50315() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("Fast_Scatter_Plot");
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
        categoryAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test50316() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("Fast_Scatter_Plot");
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
        categoryAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test50317() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("Fast_Scatter_Plot");
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
        categoryAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test51318() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D("7(+/%G<");
        numberAxis3D0.setTickMarkPaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test52319() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        PeriodAxis periodAxis0 = new PeriodAxis("?6?y{g>)q`1");
        periodAxis0.setTickMarkStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
        periodAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test52320() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        PeriodAxis periodAxis0 = new PeriodAxis("?6?y{g>)q`1");
        periodAxis0.setTickMarkStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
        periodAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test52321() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        PeriodAxis periodAxis0 = new PeriodAxis("?6?y{g>)q`1");
        periodAxis0.setTickMarkStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
        periodAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test52322() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        PeriodAxis periodAxis0 = new PeriodAxis("?6?y{g>)q`1");
        periodAxis0.setTickMarkStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
        periodAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test52323() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        PeriodAxis periodAxis0 = new PeriodAxis("?6?y{g>)q`1");
        periodAxis0.setTickMarkStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
        numberAxis3D0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test52324() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        PeriodAxis periodAxis0 = new PeriodAxis("?6?y{g>)q`1");
        periodAxis0.setTickMarkStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
        periodAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test52325() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        PeriodAxis periodAxis0 = new PeriodAxis("?6?y{g>)q`1");
        periodAxis0.setTickMarkStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
        periodAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test52326() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        PeriodAxis periodAxis0 = new PeriodAxis("?6?y{g>)q`1");
        periodAxis0.setTickMarkStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
        periodAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test53327() throws Throwable {
        Week week0 = new Week();
        PeriodAxis periodAxis0 = new PeriodAxis(" 25;eHgg RIKc", week0, week0);
        periodAxis0.setTickMarkStroke((Stroke) null);
    }

    @Test(timeout = 4000)
    public void test54328() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        categoryAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
        categoryAxis3D0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test54329() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        categoryAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
        categoryAxis3D0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test54330() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        categoryAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
        categoryAxis3D0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test54331() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        categoryAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
        categoryAxis3D0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test54332() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        categoryAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
        categoryAxis3D0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test54333() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        categoryAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
        categoryAxis3D0.isVisible();
    }

    @Test(timeout = 4000)
    public void test54334() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        categoryAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
        categoryAxis3D0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test55335() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("TK`");
        categoryAxis3D0.setTickMarksVisible(false);
        categoryAxis3D0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test55336() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("TK`");
        categoryAxis3D0.setTickMarksVisible(false);
        categoryAxis3D0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test55337() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("TK`");
        categoryAxis3D0.setTickMarksVisible(false);
        categoryAxis3D0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test55338() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("TK`");
        categoryAxis3D0.setTickMarksVisible(false);
        categoryAxis3D0.isVisible();
    }

    @Test(timeout = 4000)
    public void test55339() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("TK`");
        categoryAxis3D0.setTickMarksVisible(false);
        categoryAxis3D0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test55340() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("TK`");
        categoryAxis3D0.setTickMarksVisible(false);
        categoryAxis3D0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test55341() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("TK`");
        categoryAxis3D0.setTickMarksVisible(false);
        categoryAxis3D0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test56342() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
        numberAxis3D0.setTickLabelInsets((RectangleInsets) null);
    }

    @Test(timeout = 4000)
    public void test57343() throws Throwable {
        String[] stringArray0 = new String[6];
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        SymbolAxis symbolAxis0 = new SymbolAxis("TK`", stringArray0);
        categoryAxis3D0.setTickLabelInsets(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);
        symbolAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test57344() throws Throwable {
        String[] stringArray0 = new String[6];
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        SymbolAxis symbolAxis0 = new SymbolAxis("TK`", stringArray0);
        categoryAxis3D0.setTickLabelInsets(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);
        symbolAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test57345() throws Throwable {
        String[] stringArray0 = new String[6];
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        SymbolAxis symbolAxis0 = new SymbolAxis("TK`", stringArray0);
        categoryAxis3D0.setTickLabelInsets(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);
        symbolAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test57346() throws Throwable {
        String[] stringArray0 = new String[6];
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        SymbolAxis symbolAxis0 = new SymbolAxis("TK`", stringArray0);
        categoryAxis3D0.setTickLabelInsets(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);
        categoryAxis3D0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test57347() throws Throwable {
        String[] stringArray0 = new String[6];
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        SymbolAxis symbolAxis0 = new SymbolAxis("TK`", stringArray0);
        categoryAxis3D0.setTickLabelInsets(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);
        symbolAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test57348() throws Throwable {
        String[] stringArray0 = new String[6];
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        SymbolAxis symbolAxis0 = new SymbolAxis("TK`", stringArray0);
        categoryAxis3D0.setTickLabelInsets(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);
        symbolAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test57349() throws Throwable {
        String[] stringArray0 = new String[6];
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        SymbolAxis symbolAxis0 = new SymbolAxis("TK`", stringArray0);
        categoryAxis3D0.setTickLabelInsets(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);
        symbolAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test57350() throws Throwable {
        String[] stringArray0 = new String[6];
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        SymbolAxis symbolAxis0 = new SymbolAxis("TK`", stringArray0);
        categoryAxis3D0.setTickLabelInsets(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);
        symbolAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test58351() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("6bP8]y~(h{v?");
        DateAxis dateAxis0 = new DateAxis("6bP8]y~(h{v?", timeZone0);
        Date date0 = dateAxis0.getMaximumDate();
        Week week0 = new Week(date0, timeZone0);
        PeriodAxis periodAxis0 = new PeriodAxis("q9GCg4", week0, week0, week0.DEFAULT_TIME_ZONE);
        dateAxis0.setTickLabelPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);
        periodAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test58352() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("6bP8]y~(h{v?");
        DateAxis dateAxis0 = new DateAxis("6bP8]y~(h{v?", timeZone0);
        Date date0 = dateAxis0.getMaximumDate();
        Week week0 = new Week(date0, timeZone0);
        PeriodAxis periodAxis0 = new PeriodAxis("q9GCg4", week0, week0, week0.DEFAULT_TIME_ZONE);
        dateAxis0.setTickLabelPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);
        periodAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test58353() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("6bP8]y~(h{v?");
        DateAxis dateAxis0 = new DateAxis("6bP8]y~(h{v?", timeZone0);
        Date date0 = dateAxis0.getMaximumDate();
        Week week0 = new Week(date0, timeZone0);
        PeriodAxis periodAxis0 = new PeriodAxis("q9GCg4", week0, week0, week0.DEFAULT_TIME_ZONE);
        dateAxis0.setTickLabelPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);
        periodAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test58354() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("6bP8]y~(h{v?");
        DateAxis dateAxis0 = new DateAxis("6bP8]y~(h{v?", timeZone0);
        Date date0 = dateAxis0.getMaximumDate();
        Week week0 = new Week(date0, timeZone0);
        PeriodAxis periodAxis0 = new PeriodAxis("q9GCg4", week0, week0, week0.DEFAULT_TIME_ZONE);
        dateAxis0.setTickLabelPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);
        periodAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test58355() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("6bP8]y~(h{v?");
        DateAxis dateAxis0 = new DateAxis("6bP8]y~(h{v?", timeZone0);
        Date date0 = dateAxis0.getMaximumDate();
        Week week0 = new Week(date0, timeZone0);
        PeriodAxis periodAxis0 = new PeriodAxis("q9GCg4", week0, week0, week0.DEFAULT_TIME_ZONE);
        dateAxis0.setTickLabelPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);
        periodAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test58356() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("6bP8]y~(h{v?");
        DateAxis dateAxis0 = new DateAxis("6bP8]y~(h{v?", timeZone0);
        Date date0 = dateAxis0.getMaximumDate();
        Week week0 = new Week(date0, timeZone0);
        PeriodAxis periodAxis0 = new PeriodAxis("q9GCg4", week0, week0, week0.DEFAULT_TIME_ZONE);
        dateAxis0.setTickLabelPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);
        periodAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test58357() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("6bP8]y~(h{v?");
        DateAxis dateAxis0 = new DateAxis("6bP8]y~(h{v?", timeZone0);
        Date date0 = dateAxis0.getMaximumDate();
        Week week0 = new Week(date0, timeZone0);
        PeriodAxis periodAxis0 = new PeriodAxis("q9GCg4", week0, week0, week0.DEFAULT_TIME_ZONE);
        dateAxis0.setTickLabelPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);
        periodAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test58358() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("6bP8]y~(h{v?");
        DateAxis dateAxis0 = new DateAxis("6bP8]y~(h{v?", timeZone0);
        Date date0 = dateAxis0.getMaximumDate();
        Week week0 = new Week(date0, timeZone0);
        PeriodAxis periodAxis0 = new PeriodAxis("q9GCg4", week0, week0, week0.DEFAULT_TIME_ZONE);
        dateAxis0.setTickLabelPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);
        dateAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test59359() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.setTickLabelFont(categoryAxis0.DEFAULT_AXIS_LABEL_FONT);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);
        categoryAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test59360() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.setTickLabelFont(categoryAxis0.DEFAULT_AXIS_LABEL_FONT);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);
        categoryAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test59361() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.setTickLabelFont(categoryAxis0.DEFAULT_AXIS_LABEL_FONT);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);
        categoryAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test59362() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.setTickLabelFont(categoryAxis0.DEFAULT_AXIS_LABEL_FONT);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);
        categoryAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test59363() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.setTickLabelFont(categoryAxis0.DEFAULT_AXIS_LABEL_FONT);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);
        categoryAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test59364() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.setTickLabelFont(categoryAxis0.DEFAULT_AXIS_LABEL_FONT);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);
        categoryAxis0.getFixedDimension();
    }

    @Test(timeout = 4000)
    public void test59365() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.setTickLabelFont(categoryAxis0.DEFAULT_AXIS_LABEL_FONT);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);
        categoryAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test60366() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("0m-'*");
        periodAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test60367() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("0m-'*");
        periodAxis0.setTickLabelsVisible(false);
        periodAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test61368() throws Throwable {
        Year year0 = new Year();
        PeriodAxis periodAxis0 = new PeriodAxis("SansSerif", year0, year0, year0.DEFAULT_TIME_ZONE);
        periodAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test61369() throws Throwable {
        Year year0 = new Year();
        PeriodAxis periodAxis0 = new PeriodAxis("SansSerif", year0, year0, year0.DEFAULT_TIME_ZONE);
        periodAxis0.setTickLabelsVisible(true);
        periodAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test61370() throws Throwable {
        Year year0 = new Year();
        PeriodAxis periodAxis0 = new PeriodAxis("SansSerif", year0, year0, year0.DEFAULT_TIME_ZONE);
        periodAxis0.setTickLabelsVisible(true);
        periodAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test61371() throws Throwable {
        Year year0 = new Year();
        PeriodAxis periodAxis0 = new PeriodAxis("SansSerif", year0, year0, year0.DEFAULT_TIME_ZONE);
        periodAxis0.setTickLabelsVisible(true);
        periodAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test61372() throws Throwable {
        Year year0 = new Year();
        PeriodAxis periodAxis0 = new PeriodAxis("SansSerif", year0, year0, year0.DEFAULT_TIME_ZONE);
        periodAxis0.setTickLabelsVisible(true);
        periodAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test61373() throws Throwable {
        Year year0 = new Year();
        PeriodAxis periodAxis0 = new PeriodAxis("SansSerif", year0, year0, year0.DEFAULT_TIME_ZONE);
        periodAxis0.setTickLabelsVisible(true);
        periodAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test61374() throws Throwable {
        Year year0 = new Year();
        PeriodAxis periodAxis0 = new PeriodAxis("SansSerif", year0, year0, year0.DEFAULT_TIME_ZONE);
        periodAxis0.setTickLabelsVisible(true);
        periodAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test62375() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("org.jfree.chart.axis.Axis");
        periodAxis0.setAxisLineStroke((Stroke) null);
    }

    @Test(timeout = 4000)
    public void test63376() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("6bP8]y~(h{v?");
        DateAxis dateAxis0 = new DateAxis("6bP8]y~(h{v?", timeZone0);
        dateAxis0.setAxisLinePaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test64377() throws Throwable {
        Week week0 = new Week();
        PeriodAxis periodAxis0 = new PeriodAxis(" 25;eHgg RIKc", week0, week0);
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        Paint paint0 = ganttRenderer0.getIncompletePaint();
        periodAxis0.setAxisLinePaint(paint0);
        periodAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test64378() throws Throwable {
        Week week0 = new Week();
        PeriodAxis periodAxis0 = new PeriodAxis(" 25;eHgg RIKc", week0, week0);
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        Paint paint0 = ganttRenderer0.getIncompletePaint();
        periodAxis0.setAxisLinePaint(paint0);
        periodAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test64379() throws Throwable {
        Week week0 = new Week();
        PeriodAxis periodAxis0 = new PeriodAxis(" 25;eHgg RIKc", week0, week0);
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        Paint paint0 = ganttRenderer0.getIncompletePaint();
        periodAxis0.setAxisLinePaint(paint0);
        periodAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test64380() throws Throwable {
        Week week0 = new Week();
        PeriodAxis periodAxis0 = new PeriodAxis(" 25;eHgg RIKc", week0, week0);
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        Paint paint0 = ganttRenderer0.getIncompletePaint();
        periodAxis0.setAxisLinePaint(paint0);
        periodAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test64381() throws Throwable {
        Week week0 = new Week();
        PeriodAxis periodAxis0 = new PeriodAxis(" 25;eHgg RIKc", week0, week0);
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        Paint paint0 = ganttRenderer0.getIncompletePaint();
        periodAxis0.setAxisLinePaint(paint0);
        periodAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test64382() throws Throwable {
        Week week0 = new Week();
        PeriodAxis periodAxis0 = new PeriodAxis(" 25;eHgg RIKc", week0, week0);
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        Paint paint0 = ganttRenderer0.getIncompletePaint();
        periodAxis0.setAxisLinePaint(paint0);
        periodAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test64383() throws Throwable {
        Week week0 = new Week();
        PeriodAxis periodAxis0 = new PeriodAxis(" 25;eHgg RIKc", week0, week0);
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        Paint paint0 = ganttRenderer0.getIncompletePaint();
        periodAxis0.setAxisLinePaint(paint0);
        periodAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test65384() throws Throwable {
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'paint' argument.");
        PeriodAxis periodAxis0 = new PeriodAxis("L");
        periodAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
        periodAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test65385() throws Throwable {
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'paint' argument.");
        PeriodAxis periodAxis0 = new PeriodAxis("L");
        periodAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
        periodAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test65386() throws Throwable {
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'paint' argument.");
        PeriodAxis periodAxis0 = new PeriodAxis("L");
        periodAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
        periodAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test65387() throws Throwable {
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'paint' argument.");
        PeriodAxis periodAxis0 = new PeriodAxis("L");
        periodAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
        periodAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test65388() throws Throwable {
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'paint' argument.");
        PeriodAxis periodAxis0 = new PeriodAxis("L");
        periodAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
        subCategoryAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test65389() throws Throwable {
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'paint' argument.");
        PeriodAxis periodAxis0 = new PeriodAxis("L");
        periodAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
        periodAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test65390() throws Throwable {
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'paint' argument.");
        PeriodAxis periodAxis0 = new PeriodAxis("L");
        periodAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
        periodAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test65391() throws Throwable {
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'paint' argument.");
        PeriodAxis periodAxis0 = new PeriodAxis("L");
        periodAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
        periodAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test66392() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, "Null 'stroke' argument.");
        float[][] floatArray0 = new float[2][1];
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);
        cyclicNumberAxis0.setLabelInsets(fastScatterPlot0.DEFAULT_INSETS);
        JFreeChart jFreeChart0 = new JFreeChart("0m-'*", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, fastScatterPlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);
        cyclicNumberAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test66393() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, "Null 'stroke' argument.");
        float[][] floatArray0 = new float[2][1];
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);
        cyclicNumberAxis0.setLabelInsets(fastScatterPlot0.DEFAULT_INSETS);
        JFreeChart jFreeChart0 = new JFreeChart("0m-'*", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, fastScatterPlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);
        cyclicNumberAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test66394() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, "Null 'stroke' argument.");
        float[][] floatArray0 = new float[2][1];
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);
        cyclicNumberAxis0.setLabelInsets(fastScatterPlot0.DEFAULT_INSETS);
        JFreeChart jFreeChart0 = new JFreeChart("0m-'*", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, fastScatterPlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);
        cyclicNumberAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test66395() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, "Null 'stroke' argument.");
        float[][] floatArray0 = new float[2][1];
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);
        cyclicNumberAxis0.setLabelInsets(fastScatterPlot0.DEFAULT_INSETS);
        JFreeChart jFreeChart0 = new JFreeChart("0m-'*", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, fastScatterPlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);
        cyclicNumberAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test66396() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, "Null 'stroke' argument.");
        float[][] floatArray0 = new float[2][1];
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);
        cyclicNumberAxis0.setLabelInsets(fastScatterPlot0.DEFAULT_INSETS);
        JFreeChart jFreeChart0 = new JFreeChart("0m-'*", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, fastScatterPlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);
        cyclicNumberAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test67397() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("q )Rl|!:5");
        extendedCategoryAxis0.setLabelPaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test68398() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        SystemColor systemColor0 = SystemColor.menu;
        logarithmicAxis0.setLabelPaint(systemColor0);
        logarithmicAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test68399() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        SystemColor systemColor0 = SystemColor.menu;
        logarithmicAxis0.setLabelPaint(systemColor0);
        logarithmicAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test68400() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        SystemColor systemColor0 = SystemColor.menu;
        logarithmicAxis0.setLabelPaint(systemColor0);
        logarithmicAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test68401() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        SystemColor systemColor0 = SystemColor.menu;
        logarithmicAxis0.setLabelPaint(systemColor0);
        logarithmicAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test68402() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        SystemColor systemColor0 = SystemColor.menu;
        logarithmicAxis0.setLabelPaint(systemColor0);
        logarithmicAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test68403() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        SystemColor systemColor0 = SystemColor.menu;
        logarithmicAxis0.setLabelPaint(systemColor0);
        logarithmicAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test68404() throws Throwable {
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("r9i `5'939m{}T0");
        SystemColor systemColor0 = SystemColor.menu;
        logarithmicAxis0.setLabelPaint(systemColor0);
        logarithmicAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test69405() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.setLabelFont((Font) null);
    }

    @Test(timeout = 4000)
    public void test70406() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        NumberAxis numberAxis0 = new NumberAxis();
        numberAxis0.setLabelFont(dateAxis0.DEFAULT_AXIS_LABEL_FONT);
        numberAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test70407() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        NumberAxis numberAxis0 = new NumberAxis();
        numberAxis0.setLabelFont(dateAxis0.DEFAULT_AXIS_LABEL_FONT);
        numberAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test70408() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        NumberAxis numberAxis0 = new NumberAxis();
        numberAxis0.setLabelFont(dateAxis0.DEFAULT_AXIS_LABEL_FONT);
        numberAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test70409() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        NumberAxis numberAxis0 = new NumberAxis();
        numberAxis0.setLabelFont(dateAxis0.DEFAULT_AXIS_LABEL_FONT);
        numberAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test70410() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        NumberAxis numberAxis0 = new NumberAxis();
        numberAxis0.setLabelFont(dateAxis0.DEFAULT_AXIS_LABEL_FONT);
        numberAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test70411() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        NumberAxis numberAxis0 = new NumberAxis();
        numberAxis0.setLabelFont(dateAxis0.DEFAULT_AXIS_LABEL_FONT);
        numberAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test70412() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        NumberAxis numberAxis0 = new NumberAxis();
        numberAxis0.setLabelFont(dateAxis0.DEFAULT_AXIS_LABEL_FONT);
        numberAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test71413() throws Throwable {
        String[] stringArray0 = new String[6];
        SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
        symbolAxis0.setLabel((String) null);
        symbolAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test71414() throws Throwable {
        String[] stringArray0 = new String[6];
        SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
        symbolAxis0.setLabel((String) null);
        symbolAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test71415() throws Throwable {
        String[] stringArray0 = new String[6];
        SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
        symbolAxis0.setLabel((String) null);
        symbolAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test71416() throws Throwable {
        String[] stringArray0 = new String[6];
        SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
        symbolAxis0.setLabel((String) null);
        symbolAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test71417() throws Throwable {
        String[] stringArray0 = new String[6];
        SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
        symbolAxis0.setLabel((String) null);
        symbolAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test71418() throws Throwable {
        String[] stringArray0 = new String[6];
        SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
        symbolAxis0.setLabel((String) null);
        symbolAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test71419() throws Throwable {
        String[] stringArray0 = new String[6];
        SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
        symbolAxis0.setLabel((String) null);
        symbolAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test72420() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("");
        periodAxis0.setLabel("");
        periodAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test72421() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("");
        periodAxis0.setLabel("");
        periodAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test72422() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("");
        periodAxis0.setLabel("");
        periodAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test72423() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("");
        periodAxis0.setLabel("");
        periodAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test72424() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("");
        periodAxis0.setLabel("");
        periodAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test72425() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("");
        periodAxis0.setLabel("");
        periodAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test72426() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("");
        periodAxis0.setLabel("");
        periodAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test73427() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        numberAxis3D0.setLabel("org.jfree.data.general.DatasetChangeListener");
        numberAxis3D0.setLabel("?6?y{g>)q`1");
        numberAxis3D0.getLabel();
    }

    @Test(timeout = 4000)
    public void test74428() throws Throwable {
        Quarter quarter0 = new Quarter();
        PeriodAxis periodAxis0 = new PeriodAxis((String) null, quarter0, quarter0);
        periodAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test74429() throws Throwable {
        Quarter quarter0 = new Quarter();
        PeriodAxis periodAxis0 = new PeriodAxis((String) null, quarter0, quarter0);
        periodAxis0.setVisible(false);
        periodAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test75430() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        dateAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test75431() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        dateAxis0.setVisible(true);
        dateAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test75432() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        dateAxis0.setVisible(true);
        dateAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test75433() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        dateAxis0.setVisible(true);
        dateAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test75434() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        dateAxis0.setVisible(true);
        dateAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test75435() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        dateAxis0.setVisible(true);
        dateAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test75436() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        dateAxis0.setVisible(true);
        dateAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test76437() throws Throwable {
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("r");
        subCategoryAxis0.setTickMarkInsideLength(2539.738F);
        subCategoryAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test77438() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("");
        periodAxis0.getLabelToolTip();
        periodAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test77439() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("");
        periodAxis0.getLabelToolTip();
        periodAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test77440() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("");
        periodAxis0.getLabelToolTip();
        periodAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test77441() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("");
        periodAxis0.getLabelToolTip();
        periodAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test77442() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("");
        periodAxis0.getLabelToolTip();
        periodAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test77443() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("");
        periodAxis0.getLabelToolTip();
        periodAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test77444() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("");
        periodAxis0.getLabelToolTip();
        periodAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test78445() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("x>eJX?N9S%_X>");
        dateAxis0.getLabelURL();
        dateAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test78446() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("x>eJX?N9S%_X>");
        dateAxis0.getLabelURL();
        dateAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test78447() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("x>eJX?N9S%_X>");
        dateAxis0.getLabelURL();
        dateAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test78448() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("x>eJX?N9S%_X>");
        dateAxis0.getLabelURL();
        dateAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test78449() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("x>eJX?N9S%_X>");
        dateAxis0.getLabelURL();
        dateAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test78450() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("x>eJX?N9S%_X>");
        dateAxis0.getLabelURL();
        dateAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test78451() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("x>eJX?N9S%_X>");
        dateAxis0.getLabelURL();
        dateAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test79452() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("TK`");
        categoryAxis3D0.setLabelAngle(0.0F);
        categoryAxis3D0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test79453() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("TK`");
        categoryAxis3D0.setLabelAngle(0.0F);
        categoryAxis3D0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test79454() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("TK`");
        categoryAxis3D0.setLabelAngle(0.0F);
        categoryAxis3D0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test79455() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("TK`");
        categoryAxis3D0.setLabelAngle(0.0F);
        categoryAxis3D0.isVisible();
    }

    @Test(timeout = 4000)
    public void test79456() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("TK`");
        categoryAxis3D0.setLabelAngle(0.0F);
        categoryAxis3D0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test79457() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("TK`");
        categoryAxis3D0.setLabelAngle(0.0F);
        categoryAxis3D0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test79458() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("TK`");
        categoryAxis3D0.setLabelAngle(0.0F);
        categoryAxis3D0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test80459() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        numberAxis3D0.setLabelToolTip("?6?y{g>)q`1");
        numberAxis3D0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test80460() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        numberAxis3D0.setLabelToolTip("?6?y{g>)q`1");
        numberAxis3D0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test80461() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        numberAxis3D0.setLabelToolTip("?6?y{g>)q`1");
        numberAxis3D0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test80462() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        numberAxis3D0.setLabelToolTip("?6?y{g>)q`1");
        numberAxis3D0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test80463() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        numberAxis3D0.setLabelToolTip("?6?y{g>)q`1");
        numberAxis3D0.isVisible();
    }

    @Test(timeout = 4000)
    public void test80464() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        numberAxis3D0.setLabelToolTip("?6?y{g>)q`1");
        numberAxis3D0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test80465() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        numberAxis3D0.setLabelToolTip("?6?y{g>)q`1");
        numberAxis3D0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test81466() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.setLabelURL("ZF#c3@e32uoO[K");
        categoryAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test81467() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.setLabelURL("ZF#c3@e32uoO[K");
        categoryAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test81468() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.setLabelURL("ZF#c3@e32uoO[K");
        categoryAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test81469() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.setLabelURL("ZF#c3@e32uoO[K");
        categoryAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test81470() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.setLabelURL("ZF#c3@e32uoO[K");
        categoryAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test81471() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.setLabelURL("ZF#c3@e32uoO[K");
        categoryAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test81472() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis();
        categoryAxis0.setLabelURL("ZF#c3@e32uoO[K");
        categoryAxis0.isAxisLineVisible();
    }

    @Test(timeout = 4000)
    public void test82473() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        cyclicNumberAxis0.setFixedDimension(0.0);
        cyclicNumberAxis0.getLabelAngle();
    }

    @Test(timeout = 4000)
    public void test82474() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        cyclicNumberAxis0.setFixedDimension(0.0);
        cyclicNumberAxis0.isTickMarksVisible();
    }

    @Test(timeout = 4000)
    public void test82475() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        cyclicNumberAxis0.setFixedDimension(0.0);
        cyclicNumberAxis0.getTickMarkOutsideLength();
    }

    @Test(timeout = 4000)
    public void test82476() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        cyclicNumberAxis0.setFixedDimension(0.0);
        cyclicNumberAxis0.getTickMarkInsideLength();
    }

    @Test(timeout = 4000)
    public void test82477() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        cyclicNumberAxis0.setFixedDimension(0.0);
        cyclicNumberAxis0.isTickLabelsVisible();
    }

    @Test(timeout = 4000)
    public void test82478() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        cyclicNumberAxis0.setFixedDimension(0.0);
        cyclicNumberAxis0.getFixedDimension();
    }

    @Test(timeout = 4000)
    public void test82479() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        cyclicNumberAxis0.setFixedDimension(0.0);
        cyclicNumberAxis0.isVisible();
    }

    @Test(timeout = 4000)
    public void test82480() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
        cyclicNumberAxis0.setFixedDimension(0.0);
        cyclicNumberAxis0.isAxisLineVisible();
    }
}
