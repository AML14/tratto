/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 01:51:39 GMT 2023
 */
package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.GeneralPath;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.LookupOp;
import java.awt.image.ShortLookupTable;
import java.sql.Connection;
import java.text.AttributedCharacterIterator;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.RenderingSource;
import org.jfree.chart.annotations.XYAnnotation;
import org.jfree.chart.annotations.XYDrawableAnnotation;
import org.jfree.chart.annotations.XYLineAnnotation;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.annotations.XYPolygonAnnotation;
import org.jfree.chart.annotations.XYShapeAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.StandardXYZToolTipGenerator;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SeriesRenderingOrder;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.LookupPaintScale;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.xy.CyclicXYItemRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer2;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer;
import org.jfree.chart.renderer.xy.XYBubbleRenderer;
import org.jfree.chart.renderer.xy.XYDifferenceRenderer;
import org.jfree.chart.renderer.xy.XYDotRenderer;
import org.jfree.chart.renderer.xy.XYErrorRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.urls.XYURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.data.Range;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.statistics.SimpleHistogramDataset;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Month;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.time.Year;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.MatrixSeries;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.XIntervalSeriesCollection;
import org.jfree.data.xy.XYBarDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYIntervalSeriesCollection;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class XYPlot_ESTest extends XYPlot_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("lM'8h(1mMLzI:\"'G");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
        XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
        combinedDomainXYPlot0.setRenderer(1607, (XYItemRenderer) xYBubbleRenderer0);
        combinedDomainXYPlot0.getRendererCount();
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.mapDatasetToRangeAxis(1114, 1114);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test0012() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.mapDatasetToRangeAxis(1114, 1114);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test0013() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.mapDatasetToRangeAxis(1114, 1114);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test0024() throws Throwable {
        MockDate mockDate0 = new MockDate();
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1781), "cQC|40!,Z2D`'!A0{");
        Minute minute0 = new Minute(mockDate0, simpleTimeZone0);
        PeriodAxis periodAxis0 = new PeriodAxis("+9lOI", minute0, minute0);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
        Color color0 = (Color) MeterPlot.DEFAULT_DIAL_BACKGROUND_PAINT;
        CategoryMarker categoryMarker0 = new CategoryMarker(0.0F, periodAxis0.DEFAULT_TICK_MARK_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, color0, periodAxis0.DEFAULT_AXIS_LINE_STROKE, 0.0F);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.addRangeMarker((Marker) categoryMarker0, layer0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test0025() throws Throwable {
        MockDate mockDate0 = new MockDate();
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1781), "cQC|40!,Z2D`'!A0{");
        Minute minute0 = new Minute(mockDate0, simpleTimeZone0);
        PeriodAxis periodAxis0 = new PeriodAxis("+9lOI", minute0, minute0);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
        Color color0 = (Color) MeterPlot.DEFAULT_DIAL_BACKGROUND_PAINT;
        CategoryMarker categoryMarker0 = new CategoryMarker(0.0F, periodAxis0.DEFAULT_TICK_MARK_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, color0, periodAxis0.DEFAULT_AXIS_LINE_STROKE, 0.0F);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.addRangeMarker((Marker) categoryMarker0, layer0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test0036() throws Throwable {
        String[] stringArray0 = new String[0];
        SymbolAxis symbolAxis0 = new SymbolAxis("Requires 'index' >= 0.", stringArray0);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
        CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
        Layer layer0 = Layer.BACKGROUND;
        combinedDomainXYPlot0.addDomainMarker(500, (Marker) categoryMarker0, layer0);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test0037() throws Throwable {
        String[] stringArray0 = new String[0];
        SymbolAxis symbolAxis0 = new SymbolAxis("Requires 'index' >= 0.", stringArray0);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
        CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
        Layer layer0 = Layer.BACKGROUND;
        combinedDomainXYPlot0.addDomainMarker(500, (Marker) categoryMarker0, layer0);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test0048() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
        RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
        Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
        combinedRangeXYPlot0.zoomDomainAxes(1098.1, 1098.1, plotRenderingInfo0, point2D0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test0049() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
        RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
        Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
        combinedRangeXYPlot0.zoomDomainAxes(1098.1, 1098.1, plotRenderingInfo0, point2D0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test00410() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
        RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
        Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
        combinedRangeXYPlot0.zoomDomainAxes(1098.1, 1098.1, plotRenderingInfo0, point2D0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test00511() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        combinedDomainXYPlot0.handleClick(5, 500, plotRenderingInfo0);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test00512() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        combinedDomainXYPlot0.handleClick(5, 500, plotRenderingInfo0);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test00613() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getRangeAxis();
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test00614() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getRangeAxis();
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test00715() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Point2D point2D0 = RectangleAnchor.coordinates((Rectangle2D) null, (RectangleAnchor) null);
        combinedDomainXYPlot0.zoomRangeAxes(0.0, 735.223704, (PlotRenderingInfo) null, point2D0);
    }

    @Test(timeout = 4000)
    public void test00816() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
        xYPlot0.setDomainAxis((-1), (ValueAxis) numberAxis3D0);
    }

    @Test(timeout = 4000)
    public void test00917() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.addRangeMarker(4893, (Marker) null, (Layer) null, true);
    }

    @Test(timeout = 4000)
    public void test01018() throws Throwable {
        XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
        PeriodAxis periodAxis0 = new PeriodAxis("N~IO2 dKo1e4%9%$Iz9");
        StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
        XYPlot xYPlot0 = null;
        xYPlot0 = new XYPlot(xYIntervalSeriesCollection0, periodAxis0, periodAxis0, stackedXYAreaRenderer2_0);
    }

    @Test(timeout = 4000)
    public void test01119() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        XYPlot xYPlot1 = (XYPlot) xYPlot0.clone();
        xYPlot1.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01120() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        XYPlot xYPlot1 = (XYPlot) xYPlot0.clone();
        xYPlot1.getWeight();
    }

    @Test(timeout = 4000)
    public void test01221() throws Throwable {
        Year year0 = new Year();
        DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, (-70), year0);
        String[] stringArray0 = new String[3];
        SymbolAxis symbolAxis0 = new SymbolAxis("Z>,0][>mO{[", stringArray0);
        StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
        StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(4, standardXYZToolTipGenerator0, (XYURLGenerator) null);
        XYPlot xYPlot0 = new XYPlot(dynamicTimeSeriesCollection0, symbolAxis0, symbolAxis0, standardXYItemRenderer0);
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        Point point0 = new Point(0, 10);
        xYPlot0.zoomRangeAxes((double) 3, plotRenderingInfo0, (Point2D) point0, false);
        symbolAxis0.getLowerBound();
    }

    @Test(timeout = 4000)
    public void test01222() throws Throwable {
        Year year0 = new Year();
        DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, (-70), year0);
        String[] stringArray0 = new String[3];
        SymbolAxis symbolAxis0 = new SymbolAxis("Z>,0][>mO{[", stringArray0);
        StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
        StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(4, standardXYZToolTipGenerator0, (XYURLGenerator) null);
        XYPlot xYPlot0 = new XYPlot(dynamicTimeSeriesCollection0, symbolAxis0, symbolAxis0, standardXYItemRenderer0);
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        Point point0 = new Point(0, 10);
        xYPlot0.zoomRangeAxes((double) 3, plotRenderingInfo0, (Point2D) point0, false);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01323() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis((String) null);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
        combinedDomainXYPlot0.setFixedRangeAxisSpace((AxisSpace) null, true);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01324() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis((String) null);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
        combinedDomainXYPlot0.setFixedRangeAxisSpace((AxisSpace) null, true);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test01425() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setRangeCrosshairValue(0.2, false);
        combinedDomainXYPlot0.getRangeCrosshairValue();
    }

    @Test(timeout = 4000)
    public void test01526() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("}1e(abVox");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
        combinedDomainXYPlot0.setDomainCrosshairValue(3252.212, true);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01527() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("}1e(abVox");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
        combinedDomainXYPlot0.setDomainCrosshairValue(3252.212, true);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01628() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2455.0, "Null 'insets' argument.");
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(cyclicNumberAxis0, defaultKeyedValuesDataset0);
        combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01629() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2455.0, "Null 'insets' argument.");
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(cyclicNumberAxis0, defaultKeyedValuesDataset0);
        combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01730() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        NumberAxis numberAxis0 = new NumberAxis("fcs[#>");
        StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
        XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
        xYPlot0.getDataRange((ValueAxis) null);
        numberAxis0.getLowerBound();
    }

    @Test(timeout = 4000)
    public void test01731() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        NumberAxis numberAxis0 = new NumberAxis("fcs[#>");
        StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
        XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
        xYPlot0.getDataRange((ValueAxis) null);
        numberAxis0.getUpperBound();
    }

    @Test(timeout = 4000)
    public void test01832() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getDataRange((ValueAxis) null);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01833() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getDataRange((ValueAxis) null);
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01934() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
        int int0 = combinedRangeXYPlot0.getRangeAxisIndex(logarithmicAxis0);
    }

    @Test(timeout = 4000)
    public void test02035() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        NumberAxis numberAxis0 = new NumberAxis("fcs[#>");
        StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
        XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
        int int0 = xYPlot0.getDomainAxisIndex(numberAxis0);
        numberAxis0.getLowerBound();
    }

    @Test(timeout = 4000)
    public void test02036() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        NumberAxis numberAxis0 = new NumberAxis("fcs[#>");
        StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
        XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
        int int0 = xYPlot0.getDomainAxisIndex(numberAxis0);
    }

    @Test(timeout = 4000)
    public void test02137() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        int int0 = combinedDomainXYPlot0.getDomainAxisIndex(numberAxis3D0);
    }

    @Test(timeout = 4000)
    public void test02138() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        int int0 = combinedDomainXYPlot0.getDomainAxisIndex(numberAxis3D0);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02139() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        int int0 = combinedDomainXYPlot0.getDomainAxisIndex(numberAxis3D0);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02240() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
        XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.4, 10, 0.35, 10, (-904.71297004), jFreeChart0);
        boolean boolean0 = xYPlot0.removeAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02241() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
        XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.4, 10, 0.35, 10, (-904.71297004), jFreeChart0);
        boolean boolean0 = xYPlot0.removeAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test02242() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
        XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.4, 10, 0.35, 10, (-904.71297004), jFreeChart0);
        boolean boolean0 = xYPlot0.removeAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
    }

    @Test(timeout = 4000)
    public void test02343() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeXYPlot0.addRangeMarker(163, (Marker) categoryMarker0, layer0, false);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test02444() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Layer layer0 = Layer.FOREGROUND;
        IntervalMarker intervalMarker0 = new IntervalMarker((-980.914558), 0.0);
        boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker(817, (Marker) intervalMarker0, layer0, true);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test02445() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Layer layer0 = Layer.FOREGROUND;
        IntervalMarker intervalMarker0 = new IntervalMarker((-980.914558), 0.0);
        boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker(817, (Marker) intervalMarker0, layer0, true);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02446() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Layer layer0 = Layer.FOREGROUND;
        IntervalMarker intervalMarker0 = new IntervalMarker((-980.914558), 0.0);
        boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker(817, (Marker) intervalMarker0, layer0, true);
    }

    @Test(timeout = 4000)
    public void test02547() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(Double.POSITIVE_INFINITY, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.removeDomainMarker(10, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02548() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(Double.POSITIVE_INFINITY, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.removeDomainMarker(10, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02649() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getRenderer(0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02650() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getRenderer(0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test02751() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Vector<XYErrorRenderer> vector0 = new Vector<XYErrorRenderer>();
        combinedRangeXYPlot0.mapDatasetToDomainAxes(0, vector0);
    }

    @Test(timeout = 4000)
    public void test02852() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
        combinedRangeXYPlot0.setDataset(0, (XYDataset) simpleHistogramDataset0);
        combinedRangeXYPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test02853() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
        combinedRangeXYPlot0.setDataset(0, (XYDataset) simpleHistogramDataset0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02954() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection((MatrixSeries) null);
        combinedDomainXYPlot0.setDataset((-2861), (XYDataset) matrixSeriesCollection0);
    }

    @Test(timeout = 4000)
    public void test03055() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation(459);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03056() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation(459);
    }

    @Test(timeout = 4000)
    public void test03157() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
        combinedDomainXYPlot0.setRangeAxis(500, (ValueAxis) null, false);
        combinedDomainXYPlot0.getRangeAxisCount();
    }

    @Test(timeout = 4000)
    public void test03258() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.getRangeAxis((-1611));
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03359() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
        combinedDomainXYPlot0.setDomainAxisLocation(200, axisLocation0, true);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03360() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
        combinedDomainXYPlot0.setDomainAxisLocation(200, axisLocation0, true);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03461() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, (-1956.2458428825128));
        combinedRangeXYPlot0.setDomainAxis(10, (ValueAxis) cyclicNumberAxis0, true);
        cyclicNumberAxis0.getLowerBound();
    }

    @Test(timeout = 4000)
    public void test03462() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, (-1956.2458428825128));
        combinedRangeXYPlot0.setDomainAxis(10, (ValueAxis) cyclicNumberAxis0, true);
        combinedRangeXYPlot0.getDomainAxisCount();
    }

    @Test(timeout = 4000)
    public void test03563() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, (-1956.2458428825128));
        combinedRangeXYPlot0.setDomainAxis((-3602), (ValueAxis) cyclicNumberAxis0, true);
    }

    @Test(timeout = 4000)
    public void test03664() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("=");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
        combinedRangeXYPlot0.getDomainAxis(0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03765() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis("DHoDLjC].,yo");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
        combinedRangeXYPlot0.isDomainZoomable();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test03766() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis("DHoDLjC].,yo");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
        combinedRangeXYPlot0.isDomainZoomable();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03867() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
        combinedRangeXYPlot0.setRenderer((-93), (XYItemRenderer) xYBoxAndWhiskerRenderer0);
    }

    @Test(timeout = 4000)
    public void test03968() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.mapDatasetToRangeAxis((-1), (-1));
    }

    @Test(timeout = 4000)
    public void test04069() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis((String) null);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
        AxisSpace axisSpace0 = combinedDomainXYPlot0.getFixedRangeAxisSpace();
    }

    @Test(timeout = 4000)
    public void test04170() throws Throwable {
        MockDate mockDate0 = new MockDate();
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1781), "cQC|40!,Z2D`'!A0{");
        Minute minute0 = new Minute(mockDate0, simpleTimeZone0);
        PeriodAxis periodAxis0 = new PeriodAxis("+9lOI", minute0, minute0);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
        combinedRangeXYPlot0.getDomainAxis();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04271() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
        combinedRangeXYPlot0.getFixedLegendItems();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test04372() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getRangeAxisEdge();
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04373() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getRangeAxisEdge();
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04474() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.0);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
        combinedRangeXYPlot0.getFixedDomainAxisSpace();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test04475() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.0);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
        combinedRangeXYPlot0.getFixedDomainAxisSpace();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04576() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        int int0 = combinedDomainXYPlot0.getRendererCount();
    }

    @Test(timeout = 4000)
    public void test04677() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        boolean boolean0 = combinedDomainXYPlot0.isRangeZoomable();
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04678() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        boolean boolean0 = combinedDomainXYPlot0.isRangeZoomable();
    }

    @Test(timeout = 4000)
    public void test04679() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        boolean boolean0 = combinedDomainXYPlot0.isRangeZoomable();
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test04780() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.0, "f<oJ!XU,");
        combinedRangeXYPlot0.setDomainAxis(2, (ValueAxis) cyclicNumberAxis0);
        combinedRangeXYPlot0.getDomainAxisCount();
    }

    @Test(timeout = 4000)
    public void test04881() throws Throwable {
        LogAxis logAxis0 = new LogAxis(", ");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
        combinedDomainXYPlot0.getRenderer();
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04882() throws Throwable {
        LogAxis logAxis0 = new LogAxis(", ");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
        combinedDomainXYPlot0.getRenderer();
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test04983() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.0);
        Layer layer0 = Layer.BACKGROUND;
        boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker((-270), (Marker) intervalMarker0, layer0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04984() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.0);
        Layer layer0 = Layer.BACKGROUND;
        boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker((-270), (Marker) intervalMarker0, layer0);
    }

    @Test(timeout = 4000)
    public void test04985() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.0);
        Layer layer0 = Layer.BACKGROUND;
        boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker((-270), (Marker) intervalMarker0, layer0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04986() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.0);
        Layer layer0 = Layer.BACKGROUND;
        boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker((-270), (Marker) intervalMarker0, layer0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test05087() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        IntervalMarker intervalMarker0 = new IntervalMarker(0.05, (-1494.001655), combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeXYPlot0.addRangeMarker(2, (Marker) intervalMarker0, layer0);
    }

    @Test(timeout = 4000)
    public void test05188() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.getDatasetCount();
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test05289() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueAxis valueAxis0 = combinedRangeXYPlot0.getRangeAxis();
    }

    @Test(timeout = 4000)
    public void test05290() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueAxis valueAxis0 = combinedRangeXYPlot0.getRangeAxis();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test05291() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueAxis valueAxis0 = combinedRangeXYPlot0.getRangeAxis();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test05392() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
        xYPlot0.getIndexOf(xYDotRenderer0);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test05393() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
        xYPlot0.getIndexOf(xYDotRenderer0);
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test05494() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("=");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
        combinedRangeXYPlot0.clearSelection();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test05495() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("=");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
        combinedRangeXYPlot0.clearSelection();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test05596() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        GeneralPath generalPath0 = new GeneralPath(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
        Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(459, Float.POSITIVE_INFINITY, 264.31018F, (-61.768425F));
        ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
        combinedDomainXYPlot0.select(generalPath0, (Rectangle2D) rectangle2D_Float0, (RenderingSource) chartPanel0);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test05597() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        GeneralPath generalPath0 = new GeneralPath(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
        Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(459, Float.POSITIVE_INFINITY, 264.31018F, (-61.768425F));
        ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
        combinedDomainXYPlot0.select(generalPath0, (Rectangle2D) rectangle2D_Float0, (RenderingSource) chartPanel0);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test05698() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        NumberAxis numberAxis0 = new NumberAxis("fcs[#>");
        StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
        XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
        xYPlot0.getLegendItems();
        numberAxis0.getLowerBound();
    }

    @Test(timeout = 4000)
    public void test05699() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        NumberAxis numberAxis0 = new NumberAxis("fcs[#>");
        StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
        XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
        xYPlot0.getLegendItems();
        numberAxis0.getUpperBound();
    }

    @Test(timeout = 4000)
    public void test057100() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        NumberAxis numberAxis0 = new NumberAxis("fcs[#>");
        StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
        XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
        int int0 = xYPlot0.getSeriesCount();
        numberAxis0.getLowerBound();
    }

    @Test(timeout = 4000)
    public void test057101() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        NumberAxis numberAxis0 = new NumberAxis("fcs[#>");
        StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
        XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
        int int0 = xYPlot0.getSeriesCount();
    }

    @Test(timeout = 4000)
    public void test058102() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Point2D.Double point2D_Double0 = new Point2D.Double((-2311.4268), 0.1);
        combinedDomainXYPlot0.zoomDomainAxes(0.0, (PlotRenderingInfo) null, (Point2D) point2D_Double0, false);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test058103() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Point2D.Double point2D_Double0 = new Point2D.Double((-2311.4268), 0.1);
        combinedDomainXYPlot0.zoomDomainAxes(0.0, (PlotRenderingInfo) null, (Point2D) point2D_Double0, false);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test059104() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = Color.getColor("Requires 'count' > 0.", 445);
        combinedRangeXYPlot0.setRangeCrosshairPaint(color0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test060105() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeCrosshairStroke((Stroke) null);
    }

    @Test(timeout = 4000)
    public void test061106() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) PolarPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot0.setRangeCrosshairStroke(basicStroke0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test061107() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) PolarPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot0.setRangeCrosshairStroke(basicStroke0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test062108() throws Throwable {
        LogAxis logAxis0 = new LogAxis(", ");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test062109() throws Throwable {
        LogAxis logAxis0 = new LogAxis(", ");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
        combinedDomainXYPlot0.setRangeCrosshairLockedOnData(true);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test063110() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeCrosshairVisible(true);
        combinedRangeXYPlot0.isRangeCrosshairVisible();
    }

    @Test(timeout = 4000)
    public void test064111() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("lM'8h(1mMLzI:\"'G");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
        combinedDomainXYPlot0.setRangeCrosshairVisible(false);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test064112() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("lM'8h(1mMLzI:\"'G");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
        combinedDomainXYPlot0.setRangeCrosshairVisible(false);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test065113() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.setDomainCrosshairPaint(xYPlot0.DEFAULT_GRIDLINE_PAINT);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test065114() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.setDomainCrosshairPaint(xYPlot0.DEFAULT_GRIDLINE_PAINT);
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test066115() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, ")CCY],<-DU#:@<Az");
        combinedRangeXYPlot0.setDomainCrosshairStroke(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test067116() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test067117() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainCrosshairLockedOnData(true);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test068118() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.setDomainCrosshairVisible(false);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test069119() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("=");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
        MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
        TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
        RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(timeZone0, false);
        combinedRangeXYPlot0.rendererChanged(rendererChangeEvent0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test069120() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("=");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
        MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
        TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
        RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(timeZone0, false);
        combinedRangeXYPlot0.rendererChanged(rendererChangeEvent0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test069121() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("=");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
        MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
        TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
        RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(timeZone0, false);
        combinedRangeXYPlot0.rendererChanged(rendererChangeEvent0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test070122() throws Throwable {
        MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
        PeriodAxis periodAxis0 = new PeriodAxis("Null 'offset' argument.");
        Color color0 = (Color) Axis.DEFAULT_AXIS_LINE_PAINT;
        XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer(color0, periodAxis0.DEFAULT_TICK_MARK_PAINT, true);
        XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, periodAxis0, periodAxis0, xYDifferenceRenderer0);
        XYPlot xYPlot1 = (XYPlot) xYPlot0.clone();
        xYPlot1.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test071123() throws Throwable {
        String[] stringArray0 = new String[0];
        SymbolAxis symbolAxis0 = new SymbolAxis("Requires 'index' >= 0.", stringArray0);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
        Layer layer0 = Layer.BACKGROUND;
        combinedDomainXYPlot0.getRangeMarkers(0, layer0);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test072124() throws Throwable {
        TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
        StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
        XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, (ValueAxis) null, (ValueAxis) null, stackedXYAreaRenderer2_0);
        Layer layer0 = Layer.BACKGROUND;
        xYPlot0.getDomainMarkers(0, layer0);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test072125() throws Throwable {
        TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
        StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
        XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, (ValueAxis) null, (ValueAxis) null, stackedXYAreaRenderer2_0);
        Layer layer0 = Layer.BACKGROUND;
        xYPlot0.getDomainMarkers(0, layer0);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test073126() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Hashtable<AttributedCharacterIterator.Attribute, XIntervalSeriesCollection> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, XIntervalSeriesCollection>();
        Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
        JFreeChart jFreeChart0 = new JFreeChart("", font0, combinedDomainXYPlot0, true);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        short[][] shortArray0 = new short[4][7];
        ShortLookupTable shortLookupTable0 = new ShortLookupTable(1, shortArray0);
        LookupOp lookupOp0 = new LookupOp(shortLookupTable0, ((SunGraphics2D) graphics2D0).hints);
        Rectangle2D rectangle2D0 = lookupOp0.getBounds2D(bufferedImage0);
        Vector<Integer> vector0 = new Vector<Integer>();
        combinedDomainXYPlot0.drawDomainGridlines(graphics2D0, rectangle2D0, vector0);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test073127() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Hashtable<AttributedCharacterIterator.Attribute, XIntervalSeriesCollection> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, XIntervalSeriesCollection>();
        Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
        JFreeChart jFreeChart0 = new JFreeChart("", font0, combinedDomainXYPlot0, true);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        short[][] shortArray0 = new short[4][7];
        ShortLookupTable shortLookupTable0 = new ShortLookupTable(1, shortArray0);
        LookupOp lookupOp0 = new LookupOp(shortLookupTable0, ((SunGraphics2D) graphics2D0).hints);
        Rectangle2D rectangle2D0 = lookupOp0.getBounds2D(bufferedImage0);
        Vector<Integer> vector0 = new Vector<Integer>();
        combinedDomainXYPlot0.drawDomainGridlines(graphics2D0, rectangle2D0, vector0);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test073128() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Hashtable<AttributedCharacterIterator.Attribute, XIntervalSeriesCollection> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, XIntervalSeriesCollection>();
        Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
        JFreeChart jFreeChart0 = new JFreeChart("", font0, combinedDomainXYPlot0, true);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        short[][] shortArray0 = new short[4][7];
        ShortLookupTable shortLookupTable0 = new ShortLookupTable(1, shortArray0);
        LookupOp lookupOp0 = new LookupOp(shortLookupTable0, ((SunGraphics2D) graphics2D0).hints);
        Rectangle2D rectangle2D0 = lookupOp0.getBounds2D(bufferedImage0);
        Vector<Integer> vector0 = new Vector<Integer>();
        combinedDomainXYPlot0.drawDomainGridlines(graphics2D0, rectangle2D0, vector0);
        chartPanel0.isDomainZoomable();
    }

    @Test(timeout = 4000)
    public void test073129() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Hashtable<AttributedCharacterIterator.Attribute, XIntervalSeriesCollection> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, XIntervalSeriesCollection>();
        Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
        JFreeChart jFreeChart0 = new JFreeChart("", font0, combinedDomainXYPlot0, true);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        short[][] shortArray0 = new short[4][7];
        ShortLookupTable shortLookupTable0 = new ShortLookupTable(1, shortArray0);
        LookupOp lookupOp0 = new LookupOp(shortLookupTable0, ((SunGraphics2D) graphics2D0).hints);
        Rectangle2D rectangle2D0 = lookupOp0.getBounds2D(bufferedImage0);
        Vector<Integer> vector0 = new Vector<Integer>();
        combinedDomainXYPlot0.drawDomainGridlines(graphics2D0, rectangle2D0, vector0);
        chartPanel0.isRangeZoomable();
    }

    @Test(timeout = 4000)
    public void test074130() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.getRangeAxisForDataset((-1949));
    }

    @Test(timeout = 4000)
    public void test075131() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.PRC;
        DateAxis dateAxis0 = new DateAxis("]a/9S,W^5 a3i%", timeZone0, locale0);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
        combinedDomainXYPlot0.getDomainAxisForDataset(4);
    }

    @Test(timeout = 4000)
    public void test076132() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("=");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
        combinedRangeXYPlot0.getDomainAxisForDataset((-1517));
    }

    @Test(timeout = 4000)
    public void test077133() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
        JFreeChart jFreeChart0 = new JFreeChart("Null 'location' for index 0 not permitted.", font0, xYPlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, 1, chartRenderingInfo0);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test077134() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
        JFreeChart jFreeChart0 = new JFreeChart("Null 'location' for index 0 not permitted.", font0, xYPlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, 1, chartRenderingInfo0);
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test078135() throws Throwable {
        String[] stringArray0 = new String[0];
        SymbolAxis symbolAxis0 = new SymbolAxis("Requires 'index' >= 0.", stringArray0);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
        XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, symbolAxis0.DEFAULT_TICK_MARK_PAINT, symbolAxis0.DEFAULT_AXIS_LINE_PAINT);
        combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test079136() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        Layer layer0 = Layer.FOREGROUND;
        xYPlot0.removeRangeMarker(84, (Marker) null, layer0, false);
    }

    @Test(timeout = 4000)
    public void test080137() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        NumberAxis numberAxis0 = new NumberAxis("fcs[#>");
        StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
        XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
        xYPlot0.clearRangeMarkers((-1443));
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test080138() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        NumberAxis numberAxis0 = new NumberAxis("fcs[#>");
        StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
        XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
        xYPlot0.clearRangeMarkers((-1443));
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test080139() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        NumberAxis numberAxis0 = new NumberAxis("fcs[#>");
        StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
        XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
        xYPlot0.clearRangeMarkers((-1443));
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test081140() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
        Paint paint0 = xYBoxAndWhiskerRenderer0.getBoxPaint();
        ValueMarker valueMarker0 = new ValueMarker(6715.1971257, paint0, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.addRangeMarker(6, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test082141() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.clearRangeMarkers();
        combinedRangeXYPlot0.getBackgroundImageAlpha();
    }

    @Test(timeout = 4000)
    public void test083142() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false);
        Layer layer0 = Layer.BACKGROUND;
        xYPlot0.addDomainMarker(3665, (Marker) categoryMarker0, layer0, false);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test083143() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false);
        Layer layer0 = Layer.BACKGROUND;
        xYPlot0.addDomainMarker(3665, (Marker) categoryMarker0, layer0, false);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test084144() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        IntervalMarker intervalMarker0 = new IntervalMarker((-208), 0.0, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
        combinedRangeXYPlot0.addDomainMarker((-208), (Marker) intervalMarker0, (Layer) null);
    }

    @Test(timeout = 4000)
    public void test085145() throws Throwable {
        LogAxis logAxis0 = new LogAxis(", ");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
        combinedDomainXYPlot0.clearDomainMarkers(353);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test086146() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.clearDomainMarkers();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test086147() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.clearDomainMarkers();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test087148() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
        combinedRangeXYPlot0.setQuadrantPaint(2, (Paint) null);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test087149() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
        combinedRangeXYPlot0.setQuadrantPaint(2, (Paint) null);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test088150() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("Null 'order' argument.", 10.0, (-30.0), (-2151));
        Paint paint0 = xYPointerAnnotation0.getOutlinePaint();
        xYPlot0.setQuadrantPaint((-2727), paint0);
    }

    @Test(timeout = 4000)
    public void test089151() throws Throwable {
        String[] stringArray0 = new String[0];
        SymbolAxis symbolAxis0 = new SymbolAxis("Requires 'index' >= 0.", stringArray0);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
        combinedDomainXYPlot0.getQuadrantPaint((-16));
    }

    @Test(timeout = 4000)
    public void test090152() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeZeroBaselinePaint(combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
        combinedRangeXYPlot0.getRangeAxisCount();
    }

    @Test(timeout = 4000)
    public void test091153() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
        combinedDomainXYPlot0.setRangeZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test092154() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = (Color) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
        combinedRangeXYPlot0.setDomainZeroBaselinePaint(color0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test093155() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setDomainZeroBaselineStroke((Stroke) null);
    }

    @Test(timeout = 4000)
    public void test094156() throws Throwable {
        LogAxis logAxis0 = new LogAxis(", ");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
        combinedDomainXYPlot0.setDomainZeroBaselineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test094157() throws Throwable {
        LogAxis logAxis0 = new LogAxis(", ");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
        combinedDomainXYPlot0.setDomainZeroBaselineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test095158() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis((String) null);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
        combinedRangeXYPlot0.setRangeMinorGridlinePaint(numberAxis0.DEFAULT_TICK_MARK_PAINT);
        numberAxis0.getAutoRangeMinimumSize();
    }

    @Test(timeout = 4000)
    public void test096159() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
        Stroke stroke0 = defaultPolarItemRenderer0.getBaseStroke();
        combinedDomainXYPlot0.setRangeMinorGridlineStroke(stroke0);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test096160() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
        Stroke stroke0 = defaultPolarItemRenderer0.getBaseStroke();
        combinedDomainXYPlot0.setRangeMinorGridlineStroke(stroke0);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test097161() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
        combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test097162() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
        combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test098163() throws Throwable {
        LogAxis logAxis0 = new LogAxis(", ");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
        combinedDomainXYPlot0.setRangeGridlineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test098164() throws Throwable {
        LogAxis logAxis0 = new LogAxis(", ");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
        combinedDomainXYPlot0.setRangeGridlineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test098165() throws Throwable {
        LogAxis logAxis0 = new LogAxis(", ");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
        combinedDomainXYPlot0.setRangeGridlineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test099166() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setRangeGridlinesVisible(false);
        combinedDomainXYPlot0.isRangeGridlinesVisible();
    }

    @Test(timeout = 4000)
    public void test100167() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-436.367), (String) null);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
        combinedRangeXYPlot0.setRangeGridlinesVisible(true);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test100168() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-436.367), (String) null);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
        combinedRangeXYPlot0.setRangeGridlinesVisible(true);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test101169() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainMinorGridlinePaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test102170() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        SystemColor systemColor0 = SystemColor.windowText;
        combinedDomainXYPlot0.setDomainMinorGridlinePaint(systemColor0);
        combinedDomainXYPlot0.getPlotType();
    }

    @Test(timeout = 4000)
    public void test103171() throws Throwable {
        LogAxis logAxis0 = new LogAxis("");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setDomainGridlinePaint(logAxis0.DEFAULT_TICK_MARK_PAINT);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test103172() throws Throwable {
        LogAxis logAxis0 = new LogAxis("");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setDomainGridlinePaint(logAxis0.DEFAULT_TICK_MARK_PAINT);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test103173() throws Throwable {
        LogAxis logAxis0 = new LogAxis("");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setDomainGridlinePaint(logAxis0.DEFAULT_TICK_MARK_PAINT);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test104174() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
        xYPlot0.setDomainMinorGridlineStroke(xYDotRenderer0.DEFAULT_OUTLINE_STROKE);
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test104175() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
        xYPlot0.setDomainMinorGridlineStroke(xYDotRenderer0.DEFAULT_OUTLINE_STROKE);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test105176() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), (-1218.73699));
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
        combinedRangeXYPlot0.setDomainGridlineStroke(cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test105177() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), (-1218.73699));
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
        combinedRangeXYPlot0.setDomainGridlineStroke(cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test105178() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), (-1218.73699));
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
        combinedRangeXYPlot0.setDomainGridlineStroke(cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test106179() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
        combinedDomainXYPlot0.setDomainMinorGridlinesVisible(true);
        combinedDomainXYPlot0.isDomainMinorGridlinesVisible();
    }

    @Test(timeout = 4000)
    public void test107180() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setDomainMinorGridlinesVisible(false);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test108181() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        NumberAxis numberAxis0 = new NumberAxis("fcs[#>");
        StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
        XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
        xYPlot0.setDomainGridlinesVisible(false);
        numberAxis0.getLowerBound();
    }

    @Test(timeout = 4000)
    public void test108182() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        NumberAxis numberAxis0 = new NumberAxis("fcs[#>");
        StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
        XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
        xYPlot0.setDomainGridlinesVisible(false);
        xYPlot0.isDomainGridlinesVisible();
    }

    @Test(timeout = 4000)
    public void test109183() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.setDomainGridlinesVisible(true);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test109184() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.setDomainGridlinesVisible(true);
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test109185() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.setDomainGridlinesVisible(true);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test110186() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
        combinedRangeXYPlot0.getRendererForDataset(defaultWindDataset0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test111187() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis("DHoDLjC].,yo");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
        SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
        combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test111188() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis("DHoDLjC].,yo");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
        SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
        combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test112189() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
    }

    @Test(timeout = 4000)
    public void test113190() throws Throwable {
        LogAxis logAxis0 = new LogAxis("Xl{g(M':lrZ");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
        DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
        combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test114191() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
        XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[8];
        combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
        combinedDomainXYPlot0.getRendererCount();
    }

    @Test(timeout = 4000)
    public void test115192() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        LinkedList<Rectangle2D.Float> linkedList0 = new LinkedList<Rectangle2D.Float>();
        combinedDomainXYPlot0.mapDatasetToRangeAxes(6, linkedList0);
    }

    @Test(timeout = 4000)
    public void test116193() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis("DHoDLjC].,yo");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
        combinedRangeXYPlot0.mapDatasetToRangeAxes(500, (List) null);
    }

    @Test(timeout = 4000)
    public void test117194() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Vector<GradientPaint> vector0 = new Vector<GradientPaint>();
        combinedRangeXYPlot0.mapDatasetToRangeAxes((-476), vector0);
    }

    @Test(timeout = 4000)
    public void test118195() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        int int0 = xYPlot0.indexOf((XYDataset) null);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test118196() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        int int0 = xYPlot0.indexOf((XYDataset) null);
    }

    @Test(timeout = 4000)
    public void test118197() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        int int0 = xYPlot0.indexOf((XYDataset) null);
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test119198() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
        int int0 = combinedRangeXYPlot0.indexOf(xIntervalSeriesCollection0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test119199() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
        int int0 = combinedRangeXYPlot0.indexOf(xIntervalSeriesCollection0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test119200() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
        int int0 = combinedRangeXYPlot0.indexOf(xIntervalSeriesCollection0);
    }

    @Test(timeout = 4000)
    public void test120201() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("lM'8h(1mMLzI:\"'G");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
        combinedDomainXYPlot0.mapDatasetToDomainAxis(3489, 1607);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test120202() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("lM'8h(1mMLzI:\"'G");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
        combinedDomainXYPlot0.mapDatasetToDomainAxis(3489, 1607);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test121203() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
        xYPlot0.setRangeAxisLocation(0, axisLocation0, false);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test122204() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        RectangleEdge rectangleEdge0 = combinedRangeXYPlot0.getRangeAxisEdge(0);
        rectangleEdge0.toString();
    }

    @Test(timeout = 4000)
    public void test122205() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        RectangleEdge rectangleEdge0 = combinedRangeXYPlot0.getRangeAxisEdge(0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test123206() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.clearRangeAxes();
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test123207() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.clearRangeAxes();
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test124208() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
        combinedDomainXYPlot0.setRangeAxis(0, (ValueAxis) numberAxis3D0);
        combinedDomainXYPlot0.getRangeAxisCount();
    }

    @Test(timeout = 4000)
    public void test124209() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
        combinedDomainXYPlot0.setRangeAxis(0, (ValueAxis) numberAxis3D0);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test125210() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D("nQa@N;O{9g>Dy:47t4");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
        ValueAxis[] valueAxisArray0 = new ValueAxis[2];
        combinedRangeXYPlot0.setRangeAxes(valueAxisArray0);
        combinedRangeXYPlot0.getRangeAxisCount();
    }

    @Test(timeout = 4000)
    public void test126211() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.getRangeAxis(10);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test126212() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.getRangeAxis(10);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test126213() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.getRangeAxis(10);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test127214() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3900.162748021003, "");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
        combinedDomainXYPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
        combinedDomainXYPlot0.getGap();
    }

    @Test(timeout = 4000)
    public void test128215() throws Throwable {
        Month month0 = new Month();
        XYSeries xYSeries0 = new XYSeries(month0, true);
        XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
        XYBarDataset xYBarDataset0 = new XYBarDataset(xYSeriesCollection0, 1086);
        CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(0);
        XYPlot xYPlot0 = new XYPlot(xYBarDataset0, (ValueAxis) null, (ValueAxis) null, cyclicXYItemRenderer0);
        xYPlot0.setRangeAxis((ValueAxis) null);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test129216() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        RectangleEdge rectangleEdge0 = xYPlot0.getDomainAxisEdge((-1));
        rectangleEdge0.toString();
    }

    @Test(timeout = 4000)
    public void test129217() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        RectangleEdge rectangleEdge0 = xYPlot0.getDomainAxisEdge((-1));
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test129218() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        RectangleEdge rectangleEdge0 = xYPlot0.getDomainAxisEdge((-1));
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test130219() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        AxisLocation axisLocation0 = xYPlot0.getDomainAxisLocation(0);
        axisLocation0.toString();
    }

    @Test(timeout = 4000)
    public void test130220() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        AxisLocation axisLocation0 = xYPlot0.getDomainAxisLocation(0);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test130221() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        AxisLocation axisLocation0 = xYPlot0.getDomainAxisLocation(0);
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test131222() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(3);
    }

    @Test(timeout = 4000)
    public void test131223() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(3);
        combinedRangeXYPlot0.setRangeAxisLocation(3, axisLocation0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test131224() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(3);
        combinedRangeXYPlot0.setRangeAxisLocation(3, axisLocation0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test132225() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.clearDomainAxes();
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test132226() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.clearDomainAxes();
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test133227() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        ValueAxis[] valueAxisArray0 = new ValueAxis[0];
        combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test133228() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        ValueAxis[] valueAxisArray0 = new ValueAxis[0];
        combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test134229() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainAxis((-3602), (ValueAxis) null, true);
    }

    @Test(timeout = 4000)
    public void test135230() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        ModuloAxis moduloAxis0 = new ModuloAxis("<P~<bw./oaEx]Ct", (Range) null);
        combinedDomainXYPlot0.setDomainAxis((ValueAxis) moduloAxis0);
    }

    @Test(timeout = 4000)
    public void test136231() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getDomainAxis(1);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test136232() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getDomainAxis(1);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test137233() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setAxisOffset(combinedRangeXYPlot0.DEFAULT_INSETS);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test137234() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setAxisOffset(combinedRangeXYPlot0.DEFAULT_INSETS);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test138235() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setOrientation((PlotOrientation) null);
    }

    @Test(timeout = 4000)
    public void test139236() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        PlotOrientation plotOrientation0 = combinedRangeXYPlot0.getOrientation();
        combinedRangeXYPlot0.setOrientation(plotOrientation0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test139237() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        PlotOrientation plotOrientation0 = combinedRangeXYPlot0.getOrientation();
        combinedRangeXYPlot0.setOrientation(plotOrientation0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test140238() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) combinedDomainXYPlot0.getDomainCrosshairStroke();
        basicStroke0.getEndCap();
    }

    @Test(timeout = 4000)
    public void test141239() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis((String) null);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
        combinedRangeXYPlot0.setDomainTickBandPaint(numberAxis0.DEFAULT_TICK_MARK_PAINT);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test141240() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis((String) null);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
        combinedRangeXYPlot0.setDomainTickBandPaint(numberAxis0.DEFAULT_TICK_MARK_PAINT);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test141241() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis((String) null);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
        combinedRangeXYPlot0.setDomainTickBandPaint(numberAxis0.DEFAULT_TICK_MARK_PAINT);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test142242() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        boolean boolean0 = combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test142243() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        boolean boolean0 = combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test142244() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        boolean boolean0 = combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test143245() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        double[] doubleArray0 = new double[0];
        XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
        combinedRangeXYPlot0.addAnnotation((XYAnnotation) xYPolygonAnnotation0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test143246() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        double[] doubleArray0 = new double[0];
        XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
        combinedRangeXYPlot0.addAnnotation((XYAnnotation) xYPolygonAnnotation0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test144247() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
        xYPlot0.setDomainAxisLocation(axisLocation0);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test145248() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangePannable(false);
        combinedRangeXYPlot0.getBackgroundImageAlpha();
    }

    @Test(timeout = 4000)
    public void test146249() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        int int0 = xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test147250() throws Throwable {
        XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection((XYSeries) null);
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
        XYPlot xYPlot0 = null;
        xYPlot0 = new XYPlot(xYSeriesCollection0, logarithmicAxis0, logarithmicAxis0, (XYItemRenderer) null);
    }

    @Test(timeout = 4000)
    public void test148251() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
        boolean boolean0 = combinedDomainXYPlot0.removeDomainMarker((Marker) categoryMarker0);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test148252() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
        boolean boolean0 = combinedDomainXYPlot0.removeDomainMarker((Marker) categoryMarker0);
    }

    @Test(timeout = 4000)
    public void test149253() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.isRangeZeroBaselineVisible();
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test150254() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getDataset();
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test150255() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getDataset();
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test150256() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getDataset();
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test151257() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.isDomainGridlinesVisible();
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test151258() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.isDomainGridlinesVisible();
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test152259() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-308.3487655), 0.0);
        XYPlot xYPlot0 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, (XYItemRenderer) null);
        xYPlot0.getRangeMinorGridlinePaint();
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test152260() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-308.3487655), 0.0);
        XYPlot xYPlot0 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, (XYItemRenderer) null);
        xYPlot0.getRangeMinorGridlinePaint();
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test153261() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        NumberAxis numberAxis0 = new NumberAxis("fcs[#>");
        StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
        XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
        xYPlot0.getDomainMinorGridlinePaint();
        numberAxis0.getUpperBound();
    }

    @Test(timeout = 4000)
    public void test153262() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        NumberAxis numberAxis0 = new NumberAxis("fcs[#>");
        StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
        XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
        xYPlot0.getDomainMinorGridlinePaint();
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test154263() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Color color0 = (Color) combinedDomainXYPlot0.getDomainCrosshairPaint();
        ValueMarker valueMarker0 = new ValueMarker(1663.66881479802, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, color0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 0.0F);
        Layer layer0 = Layer.BACKGROUND;
        combinedDomainXYPlot0.removeRangeMarker(0, (Marker) valueMarker0, layer0, true);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test154264() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Color color0 = (Color) combinedDomainXYPlot0.getDomainCrosshairPaint();
        ValueMarker valueMarker0 = new ValueMarker(1663.66881479802, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, color0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 0.0F);
        Layer layer0 = Layer.BACKGROUND;
        combinedDomainXYPlot0.removeRangeMarker(0, (Marker) valueMarker0, layer0, true);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test154265() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Color color0 = (Color) combinedDomainXYPlot0.getDomainCrosshairPaint();
        ValueMarker valueMarker0 = new ValueMarker(1663.66881479802, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, color0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 0.0F);
        Layer layer0 = Layer.BACKGROUND;
        combinedDomainXYPlot0.removeRangeMarker(0, (Marker) valueMarker0, layer0, true);
        color0.getRed();
    }

    @Test(timeout = 4000)
    public void test155266() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Layer layer0 = Layer.FOREGROUND;
        combinedDomainXYPlot0.getDomainMarkers(layer0);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test155267() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Layer layer0 = Layer.FOREGROUND;
        combinedDomainXYPlot0.getDomainMarkers(layer0);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test156268() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.getDomainAxisCount();
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test157269() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = (Color) combinedRangeXYPlot0.getRangeGridlinePaint();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test157270() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = (Color) combinedRangeXYPlot0.getRangeGridlinePaint();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test157271() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = (Color) combinedRangeXYPlot0.getRangeGridlinePaint();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test157272() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = (Color) combinedRangeXYPlot0.getRangeGridlinePaint();
        color0.getGreen();
    }

    @Test(timeout = 4000)
    public void test158273() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        LegendItemCollection legendItemCollection0 = combinedDomainXYPlot0.getLegendItems();
        combinedDomainXYPlot0.setFixedLegendItems(legendItemCollection0);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test159274() throws Throwable {
        LogAxis logAxis0 = new LogAxis(", ");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
        combinedDomainXYPlot0.getRangeGridlineStroke();
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test160275() throws Throwable {
        Year year0 = new Year();
        DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, (-70), year0);
        String[] stringArray0 = new String[3];
        SymbolAxis symbolAxis0 = new SymbolAxis("Z>,0][>mO{[", stringArray0);
        StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
        StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(4, standardXYZToolTipGenerator0, (XYURLGenerator) null);
        XYPlot xYPlot0 = new XYPlot(dynamicTimeSeriesCollection0, symbolAxis0, symbolAxis0, standardXYItemRenderer0);
        CategoryMarker categoryMarker0 = new CategoryMarker(true);
        xYPlot0.addDomainMarker((Marker) categoryMarker0);
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test160276() throws Throwable {
        Year year0 = new Year();
        DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, (-70), year0);
        String[] stringArray0 = new String[3];
        SymbolAxis symbolAxis0 = new SymbolAxis("Z>,0][>mO{[", stringArray0);
        StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
        StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(4, standardXYZToolTipGenerator0, (XYURLGenerator) null);
        XYPlot xYPlot0 = new XYPlot(dynamicTimeSeriesCollection0, symbolAxis0, symbolAxis0, standardXYItemRenderer0);
        CategoryMarker categoryMarker0 = new CategoryMarker(true);
        xYPlot0.addDomainMarker((Marker) categoryMarker0);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test161277() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) combinedDomainXYPlot0.getDomainZeroBaselineStroke();
        basicStroke0.getLineJoin();
    }

    @Test(timeout = 4000)
    public void test161278() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) combinedDomainXYPlot0.getDomainZeroBaselineStroke();
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test161279() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) combinedDomainXYPlot0.getDomainZeroBaselineStroke();
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test162280() throws Throwable {
        String[] stringArray0 = new String[0];
        SymbolAxis symbolAxis0 = new SymbolAxis("Requires 'index' >= 0.", stringArray0);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
        combinedDomainXYPlot0.setRangeCrosshairValue(0.35);
        combinedDomainXYPlot0.getRangeCrosshairValue();
    }

    @Test(timeout = 4000)
    public void test163281() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
        StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0, standardXYZToolTipGenerator0);
        combinedDomainXYPlot0.setRenderer((XYItemRenderer) standardXYItemRenderer0);
        combinedDomainXYPlot0.getRendererCount();
    }

    @Test(timeout = 4000)
    public void test164282() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getAnnotations();
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test164283() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getAnnotations();
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test165284() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(10);
        combinedRangeXYPlot0.removeRangeMarker((Marker) valueMarker0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test166285() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Layer layer0 = Layer.FOREGROUND;
        combinedDomainXYPlot0.getRangeMarkers(layer0);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test167286() throws Throwable {
        LogAxis logAxis0 = new LogAxis(", ");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
        AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
        combinedDomainXYPlot0.setDomainAxisLocation(500, axisLocation0);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test168287() throws Throwable {
        LogAxis logAxis0 = new LogAxis(", ");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
        boolean boolean0 = combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test168288() throws Throwable {
        LogAxis logAxis0 = new LogAxis(", ");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
        boolean boolean0 = combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test169289() throws Throwable {
        MockDate mockDate0 = new MockDate();
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(mockDate0);
        PeriodAxis periodAxis0 = new PeriodAxis("mfaJ[$`'[", fixedMillisecond0, fixedMillisecond0);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
        combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test170290() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        LookupPaintScale lookupPaintScale0 = new LookupPaintScale(Double.NaN, 10, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
        PeriodAxis periodAxis0 = new PeriodAxis("");
        PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, periodAxis0);
        AxisLocation axisLocation0 = paintScaleLegend0.getAxisLocation();
        combinedRangeXYPlot0.setRangeAxisLocation(axisLocation0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test170291() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        LookupPaintScale lookupPaintScale0 = new LookupPaintScale(Double.NaN, 10, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
        PeriodAxis periodAxis0 = new PeriodAxis("");
        PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, periodAxis0);
        AxisLocation axisLocation0 = paintScaleLegend0.getAxisLocation();
        combinedRangeXYPlot0.setRangeAxisLocation(axisLocation0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test171292() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        SeriesRenderingOrder seriesRenderingOrder0 = combinedDomainXYPlot0.getSeriesRenderingOrder();
        seriesRenderingOrder0.toString();
    }

    @Test(timeout = 4000)
    public void test172293() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) combinedRangeXYPlot0.getRangeZeroBaselineStroke();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test172294() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) combinedRangeXYPlot0.getRangeZeroBaselineStroke();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test172295() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) combinedRangeXYPlot0.getRangeZeroBaselineStroke();
        basicStroke0.getLineJoin();
    }

    @Test(timeout = 4000)
    public void test173296() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeZeroBaselineVisible(false);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test174297() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false);
        xYPlot0.addRangeMarker((Marker) categoryMarker0);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test175298() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
        xYPlot0.setRangeAxisLocation((-62), axisLocation0);
    }

    @Test(timeout = 4000)
    public void test176299() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("=");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
        combinedRangeXYPlot0.isDomainZeroBaselineVisible();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test176300() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("=");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
        combinedRangeXYPlot0.isDomainZeroBaselineVisible();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test177301() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getDatasetRenderingOrder();
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test177302() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getDatasetRenderingOrder();
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test178303() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
        rectangleInsets0.getLeft();
    }

    @Test(timeout = 4000)
    public void test178304() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
        rectangleInsets0.getRight();
    }

    @Test(timeout = 4000)
    public void test178305() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test178306() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
        rectangleInsets0.getBottom();
    }

    @Test(timeout = 4000)
    public void test178307() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test178308() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
        rectangleInsets0.getTop();
    }

    @Test(timeout = 4000)
    public void test179309() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        Point2D.Float point2D_Float0 = new Point2D.Float(10, 0.0F);
        combinedRangeXYPlot0.zoomRangeAxes(1.0, plotRenderingInfo0, (Point2D) point2D_Float0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test180310() throws Throwable {
        LogAxis logAxis0 = new LogAxis();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
        combinedRangeXYPlot0.setDomainAxis((ValueAxis) logAxis0);
        combinedRangeXYPlot0.getDomainAxisCount();
    }

    @Test(timeout = 4000)
    public void test181311() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
        BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
        Paint paint0 = boxAndWhiskerRenderer0.getArtifactPaint();
        combinedDomainXYPlot0.setRangeTickBandPaint(paint0);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test181312() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
        BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
        Paint paint0 = boxAndWhiskerRenderer0.getArtifactPaint();
        combinedDomainXYPlot0.setRangeTickBandPaint(paint0);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test182313() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.0);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
        combinedRangeXYPlot0.isDomainMinorGridlinesVisible();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test182314() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.0);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
        combinedRangeXYPlot0.isDomainMinorGridlinesVisible();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test183315() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.setFixedRangeAxisSpace((AxisSpace) null);
        xYPlot0.getForegroundAlpha();
    }

    @Test(timeout = 4000)
    public void test184316() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.isRangePannable();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test184317() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.isRangePannable();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test184318() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.isRangePannable();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test185319() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
        Layer layer0 = Layer.FOREGROUND;
        combinedDomainXYPlot0.removeRangeMarker((Marker) categoryMarker0, layer0);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test186320() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
        BasicStroke basicStroke0 = (BasicStroke) combinedDomainXYPlot0.getRangeCrosshairStroke();
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test186321() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
        BasicStroke basicStroke0 = (BasicStroke) combinedDomainXYPlot0.getRangeCrosshairStroke();
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test186322() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
        BasicStroke basicStroke0 = (BasicStroke) combinedDomainXYPlot0.getRangeCrosshairStroke();
        basicStroke0.getLineJoin();
    }

    @Test(timeout = 4000)
    public void test187323() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.getDomainAxisEdge();
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test188324() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeXYPlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        GridBagLayout gridBagLayout0 = new GridBagLayout();
        Point point0 = gridBagLayout0.getLayoutOrigin();
        combinedRangeXYPlot0.zoomRangeAxes(10.0, 57.52977, plotRenderingInfo0, (Point2D) point0);
        chartPanel0.getRefreshBuffer();
    }

    @Test(timeout = 4000)
    public void test188325() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeXYPlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        GridBagLayout gridBagLayout0 = new GridBagLayout();
        Point point0 = gridBagLayout0.getLayoutOrigin();
        combinedRangeXYPlot0.zoomRangeAxes(10.0, 57.52977, plotRenderingInfo0, (Point2D) point0);
        combinedRangeXYPlot0.isRangeZoomable();
    }

    @Test(timeout = 4000)
    public void test189326() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("(6k{sdDj#~V:Q!");
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
        double double0 = combinedRangeXYPlot0.getRangeCrosshairValue();
    }

    @Test(timeout = 4000)
    public void test190327() throws Throwable {
        MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
        PeriodAxis periodAxis0 = new PeriodAxis("Null 'offset' argument.");
        Color color0 = (Color) Axis.DEFAULT_AXIS_LINE_PAINT;
        XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer(color0, periodAxis0.DEFAULT_TICK_MARK_PAINT, true);
        XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, periodAxis0, periodAxis0, xYDifferenceRenderer0);
        AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
        xYPlot0.setDomainAxisLocation(axisLocation0, false);
        xYPlot0.isRangeZeroBaselineVisible();
    }

    @Test(timeout = 4000)
    public void test191328() throws Throwable {
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
        DateAxis dateAxis0 = new DateAxis("XY_Plot");
        XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
        XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, dateAxis0, dateAxis0, xYLineAndShapeRenderer0);
        xYPlot0.setDomainAxes((ValueAxis[]) null);
    }

    @Test(timeout = 4000)
    public void test192329() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.setWeight(335);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test193330() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        Color color0 = (Color) xYPlot0.getRangeCrosshairPaint();
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test193331() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        Color color0 = (Color) xYPlot0.getRangeCrosshairPaint();
        color0.getBlue();
    }

    @Test(timeout = 4000)
    public void test194332() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.clearAnnotations();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test194333() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.clearAnnotations();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test195334() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1, 1746);
        combinedRangeXYPlot0.setDataset((XYDataset) dynamicTimeSeriesCollection0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test195335() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1, 1746);
        combinedRangeXYPlot0.setDataset((XYDataset) dynamicTimeSeriesCollection0);
        combinedRangeXYPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test196336() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Color color0 = (Color) combinedDomainXYPlot0.getRangeZeroBaselinePaint();
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test196337() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Color color0 = (Color) combinedDomainXYPlot0.getRangeZeroBaselinePaint();
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test196338() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Color color0 = (Color) combinedDomainXYPlot0.getRangeZeroBaselinePaint();
        color0.getRGB();
    }

    @Test(timeout = 4000)
    public void test197339() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("lM'8h(1mMLzI:\"'G");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
        combinedDomainXYPlot0.isRangeMinorGridlinesVisible();
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test197340() throws Throwable {
        DateAxis dateAxis0 = new DateAxis("lM'8h(1mMLzI:\"'G");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
        combinedDomainXYPlot0.isRangeMinorGridlinesVisible();
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test198341() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
        Layer layer0 = Layer.FOREGROUND;
        combinedDomainXYPlot0.addDomainMarker((Marker) categoryMarker0, layer0);
        boolean boolean0 = combinedDomainXYPlot0.removeDomainMarker((Marker) categoryMarker0);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test198342() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
        Layer layer0 = Layer.FOREGROUND;
        combinedDomainXYPlot0.addDomainMarker((Marker) categoryMarker0, layer0);
        boolean boolean0 = combinedDomainXYPlot0.removeDomainMarker((Marker) categoryMarker0);
    }

    @Test(timeout = 4000)
    public void test199343() throws Throwable {
        MockDate mockDate0 = new MockDate();
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(mockDate0);
        PeriodAxis periodAxis0 = new PeriodAxis("mfaJ[$`'[", fixedMillisecond0, fixedMillisecond0);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
        combinedRangeXYPlot0.getRangeAxisCount();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test199344() throws Throwable {
        MockDate mockDate0 = new MockDate();
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(mockDate0);
        PeriodAxis periodAxis0 = new PeriodAxis("mfaJ[$`'[", fixedMillisecond0, fixedMillisecond0);
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
        combinedRangeXYPlot0.getRangeAxisCount();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test200345() throws Throwable {
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, (-850.8));
        XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
        XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYErrorRenderer0);
        xYPlot0.setDomainCrosshairValue(0.05);
        cyclicNumberAxis0.getPeriod();
    }

    @Test(timeout = 4000)
    public void test200346() throws Throwable {
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, (-850.8));
        XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
        XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYErrorRenderer0);
        xYPlot0.setDomainCrosshairValue(0.05);
        cyclicNumberAxis0.getLowerBound();
    }

    @Test(timeout = 4000)
    public void test201347() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.removeDomainMarker((Marker) categoryMarker0, layer0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test201348() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.removeDomainMarker((Marker) categoryMarker0, layer0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test202349() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.canSelectByRegion();
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test203350() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getDomainZeroBaselinePaint();
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test203351() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getDomainZeroBaselinePaint();
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test204352() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation();
    }

    @Test(timeout = 4000)
    public void test204353() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test205354() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.getRangeAxisForDataset(355);
    }

    @Test(timeout = 4000)
    public void test206355() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation(1.0F, 0.0, (-1566.47034), 0.0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
        boolean boolean0 = combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYLineAnnotation0);
    }

    @Test(timeout = 4000)
    public void test207356() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Layer layer0 = Layer.FOREGROUND;
        combinedDomainXYPlot0.addRangeMarker((Marker) null, layer0);
    }

    @Test(timeout = 4000)
    public void test208357() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getDomainMinorGridlineStroke();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test208358() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getDomainMinorGridlineStroke();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test208359() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getDomainMinorGridlineStroke();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test209360() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        DateAxis dateAxis0 = new DateAxis();
        combinedRangeXYPlot0.setRangeAxis((-693), (ValueAxis) dateAxis0);
    }

    @Test(timeout = 4000)
    public void test210361() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        double double0 = combinedRangeXYPlot0.getDomainCrosshairValue();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test210362() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        double double0 = combinedRangeXYPlot0.getDomainCrosshairValue();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test210363() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        double double0 = combinedRangeXYPlot0.getDomainCrosshairValue();
    }
}
