/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 00:06:39 GMT 2023
 */
package org.apache.commons.jxpath.ri.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.JXPathContextReferenceImpl;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.NodePointerFactory;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator;
import org.apache.commons.jxpath.ri.model.beans.BeanPointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class NodePointer_ESTest extends NodePointer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
    }

    @Test(timeout = 4000)
    public void test0001() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0002() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0003() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0004() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
    }

    @Test(timeout = 4000)
    public void test0005() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0006() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0007() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0008() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0009() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test00010() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test00011() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
    }

    @Test(timeout = 4000)
    public void test00012() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test00013() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test00014() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test00015() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test00016() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test00017() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test00018() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test00019() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test00020() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test00021() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test00022() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test00023() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test00024() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test00025() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test00026() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test00027() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test00028() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test00029() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test00031() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "");
    }

    @Test(timeout = 4000)
    public void test00032() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "");
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test00034() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "");
        beanPointer0.createChild((JXPathContext) jXPathContextReferenceImpl0, qName0, (-340), (Object) jXPathContextReferenceImpl0);
    }

    @Test(timeout = 4000)
    public void test00135() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
    }

    @Test(timeout = 4000)
    public void test00136() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test00137() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test00138() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test00139() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test00140() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test00141() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test00142() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test00143() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test00144() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test00145() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test00146() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test00147() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test00148() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test00149() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test00151() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test00152() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test00153() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test00154() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test00155() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test00156() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test00157() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test00158() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test00159() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test00160() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test00161() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
    }

    @Test(timeout = 4000)
    public void test00162() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        int int0 = variablePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
    }

    @Test(timeout = 4000)
    public void test00163() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        int int0 = variablePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test00164() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        int int0 = variablePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test00165() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        int int0 = variablePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test00166() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        int int0 = variablePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test00167() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        int int0 = variablePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test00168() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        int int0 = variablePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test00169() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        int int0 = variablePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test00170() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        int int0 = variablePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test00171() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        int int0 = variablePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test00172() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(1698);
        int int0 = variablePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test00274() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
    }

    @Test(timeout = 4000)
    public void test00275() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
    }

    @Test(timeout = 4000)
    public void test00276() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test00277() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test00278() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test00279() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test00280() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test00281() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test00282() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test00283() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test00284() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test00285() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test00286() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test00287() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test00288() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test00289() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test00291() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.remove();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test00292() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.remove();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test00293() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.remove();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test00294() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.remove();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test00295() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.remove();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test00296() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.remove();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test00297() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.remove();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test00298() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.remove();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test00299() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.remove();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test002100() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.remove();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test002101() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("POINTER: ");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.remove();
    }

    @Test(timeout = 4000)
    public void test003102() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
    }

    @Test(timeout = 4000)
    public void test003103() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test003104() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test003105() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test003106() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test003107() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test003108() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test003109() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test003110() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test003111() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test003112() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test003113() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test003114() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test003115() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test003116() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test003118() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(Integer.MIN_VALUE);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test003119() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(Integer.MIN_VALUE);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test003120() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(Integer.MIN_VALUE);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test003121() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(Integer.MIN_VALUE);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test003122() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(Integer.MIN_VALUE);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test003123() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(Integer.MIN_VALUE);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test003124() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(Integer.MIN_VALUE);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test003125() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(Integer.MIN_VALUE);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test003126() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(Integer.MIN_VALUE);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test003127() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(Integer.MIN_VALUE);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test003128() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "{O%xno)((");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setIndex(Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test004129() throws Throwable {
        QName qName0 = new QName("@{g}t");
    }

    @Test(timeout = 4000)
    public void test004130() throws Throwable {
        QName qName0 = new QName("@{g}t");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test004131() throws Throwable {
        QName qName0 = new QName("@{g}t");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test004132() throws Throwable {
        QName qName0 = new QName("@{g}t");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test004133() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test004134() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test004135() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test004136() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test004137() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test004138() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test004139() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test004140() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test004141() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test004142() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test004143() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test004145() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
    }

    @Test(timeout = 4000)
    public void test004146() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test004147() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test004148() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test004149() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test004150() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test004151() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test004152() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test004153() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test004154() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test004155() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test004158() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test004159() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.isLeaf();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test004160() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.isLeaf();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test004161() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.isLeaf();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test004162() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.isLeaf();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test004163() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.isLeaf();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test004164() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.isLeaf();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test004165() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.isLeaf();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test004166() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.isLeaf();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test004167() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.isLeaf();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test004168() throws Throwable {
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.isLeaf();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test005171() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
    }

    @Test(timeout = 4000)
    public void test005172() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test005173() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test005174() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test005175() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test005177() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
    }

    @Test(timeout = 4000)
    public void test005178() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test005179() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test005181() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
    }

    @Test(timeout = 4000)
    public void test005182() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test005183() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test005184() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test005185() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test005186() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test005187() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test005188() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test005189() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test005190() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test005191() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test005192() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test005193() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test005194() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test005195() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test005196() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test005197() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test005200() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
    }

    @Test(timeout = 4000)
    public void test005203() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test005204() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test005205() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test005206() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test005207() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test005208() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test005209() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test005210() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test005211() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test005212() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test005213() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test005214() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test005215() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        variablePointer1.isNode();
    }

    @Test(timeout = 4000)
    public void test005216() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        variablePointer1.isActual();
    }

    @Test(timeout = 4000)
    public void test005217() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        variablePointer1.isContainer();
    }

    @Test(timeout = 4000)
    public void test005218() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        variablePointer1.getIndex();
    }

    @Test(timeout = 4000)
    public void test005219() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        variablePointer1.isRoot();
    }

    @Test(timeout = 4000)
    public void test005220() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        variablePointer1.isAttribute();
    }

    @Test(timeout = 4000)
    public void test005221() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        variablePointer1.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test005225() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
    }

    @Test(timeout = 4000)
    public void test005227() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test005228() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test005229() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test005230() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test005231() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test005232() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test005233() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test005234() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test005235() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test005236() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test005237() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test005238() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test005239() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test005240() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test005241() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test005242() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test005243() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test005244() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test005245() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test005246() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test005247() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test005251() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test005253() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test005254() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test005255() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test005256() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test005257() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test005258() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test005259() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test005260() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test005261() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test005262() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test005263() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test005264() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test005265() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test005266() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test005267() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test005268() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test005269() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test005270() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test005271() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test005272() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test005273() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.isLeaf();
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test006277() throws Throwable {
        QName qName0 = new QName("");
    }

    @Test(timeout = 4000)
    public void test006278() throws Throwable {
        QName qName0 = new QName("");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test006279() throws Throwable {
        QName qName0 = new QName("");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test006280() throws Throwable {
        QName qName0 = new QName("");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test006281() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test006282() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test006283() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test006284() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test006285() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test006286() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test006287() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test006288() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test006289() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test006290() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test006291() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test006293() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace((String) null);
    }

    @Test(timeout = 4000)
    public void test006294() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace((String) null);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test006295() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace((String) null);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test006296() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace((String) null);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test006297() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace((String) null);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test006298() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace((String) null);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test006299() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace((String) null);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test006300() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace((String) null);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test006301() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace((String) null);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test006302() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace((String) null);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test006303() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace((String) null);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test007309() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
    }

    @Test(timeout = 4000)
    public void test007310() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test007311() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test007312() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test007313() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test007314() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test007315() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test007316() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test007317() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test007318() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test007319() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test007320() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test007321() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test007322() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test007323() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test007325() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
    }

    @Test(timeout = 4000)
    public void test007326() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test007327() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test007328() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test007329() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test007330() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test007331() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test007332() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test007334() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test007335() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test007336() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test007337() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test007338() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test007339() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test007340() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test007341() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test007342() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test007343() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test007344() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test007345() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test007346() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test007347() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test007348() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test007351() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace("");
    }

    @Test(timeout = 4000)
    public void test007352() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace("");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test007353() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace("");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test007354() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace("");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test007355() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace("");
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test007356() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace("");
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test007357() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace("");
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test007358() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace("");
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test007359() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace("");
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test007360() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace("");
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test007361() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace("");
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test007362() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace("");
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test007363() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace("");
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test007364() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace("");
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test007365() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isDefaultNamespace("");
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test008369() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
    }

    @Test(timeout = 4000)
    public void test008370() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test008371() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test008372() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test008373() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test008374() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test008375() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test008376() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test008377() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test008378() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test008379() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test008380() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test008381() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test008382() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test008383() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test008385() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test008386() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isContainer();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test008387() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isContainer();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test008388() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isContainer();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test008389() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isContainer();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test008390() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isContainer();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test008391() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isContainer();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test008392() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isContainer();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test008393() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isContainer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test008394() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isContainer();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test008395() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        boolean boolean0 = variablePointer0.isContainer();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test009397() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
    }

    @Test(timeout = 4000)
    public void test009398() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test009399() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test009400() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test009401() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
    }

    @Test(timeout = 4000)
    public void test009402() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test009403() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test009404() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test009405() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test009406() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test009407() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test009408() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test009409() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test009410() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test009411() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test009412() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test009413() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test009415() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        boolean boolean0 = beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test009416() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        boolean boolean0 = beanPointer0.isCollection();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test009417() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        boolean boolean0 = beanPointer0.isCollection();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test009418() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        boolean boolean0 = beanPointer0.isCollection();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test009419() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        boolean boolean0 = beanPointer0.isCollection();
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test009420() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        boolean boolean0 = beanPointer0.isCollection();
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test009421() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        boolean boolean0 = beanPointer0.isCollection();
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test009422() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        boolean boolean0 = beanPointer0.isCollection();
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test009423() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        boolean boolean0 = beanPointer0.isCollection();
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test009424() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        boolean boolean0 = beanPointer0.isCollection();
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test009425() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        boolean boolean0 = beanPointer0.isCollection();
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test009426() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        boolean boolean0 = beanPointer0.isCollection();
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test009427() throws Throwable {
        QName qName0 = new QName("ZP7J6;JS@");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        boolean boolean0 = beanPointer0.isCollection();
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test010429() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
    }

    @Test(timeout = 4000)
    public void test010430() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test010431() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test010432() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test010433() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test010434() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test010435() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test010436() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test010438() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        boolean boolean0 = variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test010439() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        boolean boolean0 = variablePointer0.isActual();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test010440() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        boolean boolean0 = variablePointer0.isActual();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test010441() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        boolean boolean0 = variablePointer0.isActual();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test010442() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        boolean boolean0 = variablePointer0.isActual();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test010443() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        boolean boolean0 = variablePointer0.isActual();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test010444() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        boolean boolean0 = variablePointer0.isActual();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test010445() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        boolean boolean0 = variablePointer0.isActual();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test011447() throws Throwable {
        QName qName0 = new QName("", "");
    }

    @Test(timeout = 4000)
    public void test011448() throws Throwable {
        QName qName0 = new QName("", "");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test011449() throws Throwable {
        QName qName0 = new QName("", "");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test011450() throws Throwable {
        QName qName0 = new QName("", "");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test011451() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
    }

    @Test(timeout = 4000)
    public void test011452() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test011453() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test011454() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test011455() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        nullPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test011456() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        nullPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test011457() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        nullPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test011458() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        nullPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test011459() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        nullPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test011460() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        nullPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test011461() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        nullPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test011462() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        nullPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test011463() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        nullPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test011464() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        nullPointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test011465() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        nullPointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test011467() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
    }

    @Test(timeout = 4000)
    public void test011470() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test011471() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test011472() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test011473() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test011474() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test011475() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test011476() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test011477() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test011478() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test011479() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test011480() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test011481() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test011482() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test011483() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test011484() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer1.isContainer();
    }

    @Test(timeout = 4000)
    public void test011485() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer1.getLength();
    }

    @Test(timeout = 4000)
    public void test011486() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer1.isLeaf();
    }

    @Test(timeout = 4000)
    public void test011487() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer1.isActual();
    }

    @Test(timeout = 4000)
    public void test011488() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer1.isAttribute();
    }

    @Test(timeout = 4000)
    public void test011489() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer1.isRoot();
    }

    @Test(timeout = 4000)
    public void test011490() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer1.getIndex();
    }

    @Test(timeout = 4000)
    public void test011491() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer1.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test011492() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer1.isNode();
    }

    @Test(timeout = 4000)
    public void test011493() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer1.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test011494() throws Throwable {
        QName qName0 = new QName("", "");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
        NullPointer nullPointer1 = (NullPointer) nullPointer0.getValuePointer();
        nullPointer1.isCollection();
    }

    @Test(timeout = 4000)
    public void test012498() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
    }

    @Test(timeout = 4000)
    public void test012499() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test012500() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test012501() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test012502() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test012503() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test012504() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test012505() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test012506() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test012507() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test012508() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test012509() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test012510() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test012511() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test012512() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test012514() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        Object object0 = variablePointer0.getRootNode();
    }

    @Test(timeout = 4000)
    public void test012515() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        Object object0 = variablePointer0.getRootNode();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test012516() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        Object object0 = variablePointer0.getRootNode();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test012517() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        Object object0 = variablePointer0.getRootNode();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test012518() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        Object object0 = variablePointer0.getRootNode();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test012519() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        Object object0 = variablePointer0.getRootNode();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test012520() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        Object object0 = variablePointer0.getRootNode();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test012521() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        Object object0 = variablePointer0.getRootNode();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test012522() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        Object object0 = variablePointer0.getRootNode();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test012523() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        Object object0 = variablePointer0.getRootNode();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test012524() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("4v\"CmO@q|.~vebCE/");
        basicVariables0.declareVariable("4v\"CmO@q|.~vebCE/", (Object) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        Object object0 = variablePointer0.getRootNode();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test013527() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
    }

    @Test(timeout = 4000)
    public void test013528() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test013529() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test013530() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test013531() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test013532() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test013533() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test013534() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test013535() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test013536() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test013537() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test013538() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test013539() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test013540() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test013541() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test013543() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
    }

    @Test(timeout = 4000)
    public void test013546() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test013547() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test013548() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test013549() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test013550() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test013551() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test013552() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test013553() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test013554() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test013555() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test013556() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        nodePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test013557() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        nodePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test013558() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        nodePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test013559() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        nodePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test013560() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        nodePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test013561() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        nodePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test013562() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        nodePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test013565() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
    }

    @Test(timeout = 4000)
    public void test013570() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test013571() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test013572() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test013573() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test013574() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test013575() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test013576() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test013577() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test013578() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test013579() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test013580() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        nodePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test013581() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        nodePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test013582() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        nodePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test013583() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        nodePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test013584() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        nodePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test013585() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        nodePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test013586() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNodeValue();
        nodePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test014628() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
    }

    @Test(timeout = 4000)
    public void test014633() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test014634() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test014635() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test014636() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test014637() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test014638() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test014639() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test014640() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test014641() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test014642() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test014643() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        nodePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test014644() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        nodePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test014645() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        nodePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test014646() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        nodePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test014647() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        nodePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test014648() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        nodePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test014649() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
        Object object0 = nodePointer0.getNode();
        nodePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test015652() throws Throwable {
        Object object0 = new Object();
    }

    @Test(timeout = 4000)
    public void test015653() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
    }

    @Test(timeout = 4000)
    public void test015654() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test015656() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
    }

    @Test(timeout = 4000)
    public void test015657() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test015659() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
    }

    @Test(timeout = 4000)
    public void test015660() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test015661() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test015662() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test015663() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test015664() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test015665() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test015666() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test015667() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test015670() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        QName qName0 = variablePointer0.getName();
    }

    @Test(timeout = 4000)
    public void test015671() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        QName qName0 = variablePointer0.getName();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test015672() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        QName qName0 = variablePointer0.getName();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test015673() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        QName qName0 = variablePointer0.getName();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test015674() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        QName qName0 = variablePointer0.getName();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test015675() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        QName qName0 = variablePointer0.getName();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test015676() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        QName qName0 = variablePointer0.getName();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test015677() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        QName qName0 = variablePointer0.getName();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test015678() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        QName qName0 = variablePointer0.getName();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test016727() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
    }

    @Test(timeout = 4000)
    public void test016730() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test016731() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test016732() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test016733() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test016734() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test016735() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test016736() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test016737() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test016738() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test016739() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test016740() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test016741() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test016742() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test016743() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test016744() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        qName1.toString();
    }

    @Test(timeout = 4000)
    public void test016745() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        qName1.getName();
    }

    @Test(timeout = 4000)
    public void test016746() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        QName qName1 = variablePointer0.getName();
        qName1.getPrefix();
    }

    @Test(timeout = 4000)
    public void test017765() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        int int0 = variablePointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test017766() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        int int0 = variablePointer0.getLength();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test017767() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        int int0 = variablePointer0.getLength();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test017768() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        int int0 = variablePointer0.getLength();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test017769() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        int int0 = variablePointer0.getLength();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test017770() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        int int0 = variablePointer0.getLength();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test017771() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        int int0 = variablePointer0.getLength();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test017772() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        int int0 = variablePointer0.getLength();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test017773() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        int int0 = variablePointer0.getLength();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test017774() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        int int0 = variablePointer0.getLength();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test017775() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        int int0 = variablePointer0.getLength();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test018823() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test018826() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test018827() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test018828() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test018829() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test018830() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test018831() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test018832() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test018833() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test018834() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test018835() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test018836() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test018837() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test018838() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test018839() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test018840() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer1.isActual();
    }

    @Test(timeout = 4000)
    public void test018841() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer1.isNode();
    }

    @Test(timeout = 4000)
    public void test018842() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer1.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test018843() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer1.isAttribute();
    }

    @Test(timeout = 4000)
    public void test018844() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer1.getIndex();
    }

    @Test(timeout = 4000)
    public void test018845() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer1.isRoot();
    }

    @Test(timeout = 4000)
    public void test018846() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer1.isContainer();
    }

    @Test(timeout = 4000)
    public void test018850() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
    }

    @Test(timeout = 4000)
    public void test018853() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test018854() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test018855() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test018856() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test018857() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test018858() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test018859() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test018860() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test018861() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test018862() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test018863() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test018864() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test018865() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test018866() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test018867() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        variablePointer1.isActual();
    }

    @Test(timeout = 4000)
    public void test018868() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        variablePointer1.isNode();
    }

    @Test(timeout = 4000)
    public void test018869() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        variablePointer1.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test018870() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        variablePointer1.isAttribute();
    }

    @Test(timeout = 4000)
    public void test018871() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        variablePointer1.getIndex();
    }

    @Test(timeout = 4000)
    public void test018872() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        variablePointer1.isRoot();
    }

    @Test(timeout = 4000)
    public void test018873() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        int int0 = variablePointer1.getLength();
        variablePointer1.isContainer();
    }

    @Test(timeout = 4000)
    public void test019877() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
    }

    @Test(timeout = 4000)
    public void test019878() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test019879() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test019880() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test019881() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
    }

    @Test(timeout = 4000)
    public void test019882() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test019883() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test019884() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test019885() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test019886() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test019887() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test019888() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test019889() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test019890() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test019891() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test019892() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test019893() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test019894() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test019895() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test019896() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test019897() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test019898() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test019899() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test019900() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test019901() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test019902() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test019903() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test019905() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
    }

    @Test(timeout = 4000)
    public void test019908() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test019909() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test019910() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test019911() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test019912() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test019913() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test019914() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test019915() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test019916() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test019917() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test019918() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test019919() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test019920() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test019921() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test019922() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test019923() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer1.isContainer();
    }

    @Test(timeout = 4000)
    public void test019924() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer1.isCollection();
    }

    @Test(timeout = 4000)
    public void test019925() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer1.isAttribute();
    }

    @Test(timeout = 4000)
    public void test019926() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer1.getLength();
    }

    @Test(timeout = 4000)
    public void test019927() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer1.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test019928() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer1.isNode();
    }

    @Test(timeout = 4000)
    public void test019929() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer1.getIndex();
    }

    @Test(timeout = 4000)
    public void test019930() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer1.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test019931() throws Throwable {
        QName qName0 = new QName(">.Y{GXqZPc3'h>0", ">.Y{GXqZPc3'h>0");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer((NodePointer) null, qName0, nodeNameTest0);
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getImmediateValuePointer();
        beanPointer1.isRoot();
    }

    @Test(timeout = 4000)
    public void test020934() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
    }

    @Test(timeout = 4000)
    public void test020935() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test020936() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test020937() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test020938() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test020940() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
    }

    @Test(timeout = 4000)
    public void test020941() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test020942() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test020944() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
    }

    @Test(timeout = 4000)
    public void test020945() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test020946() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test020947() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test020948() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test020949() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test020950() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test020951() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test020952() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test020953() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test020954() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test020955() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test020956() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test020957() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test020958() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test020959() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test020960() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test020963() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateParentPointer();
    }

    @Test(timeout = 4000)
    public void test020964() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateParentPointer();
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test020965() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateParentPointer();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test020966() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateParentPointer();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test020967() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateParentPointer();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test020968() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateParentPointer();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test020969() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateParentPointer();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test020970() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateParentPointer();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test020971() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateParentPointer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test020972() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateParentPointer();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test020973() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateParentPointer();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test020974() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateParentPointer();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test020975() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(160);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("J!:+~\"y|k\"vv&?kK:M", "#,7n8{Oq");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateParentPointer();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test021979() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
    }

    @Test(timeout = 4000)
    public void test021980() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test021981() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test021982() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test021983() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test021984() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test021985() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test021986() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test021987() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test021988() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test021989() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test021990() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test021991() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test021992() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test021993() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test021995() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
    }

    @Test(timeout = 4000)
    public void test021996() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test021997() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test021998() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test021999() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0211000() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0211001() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0211002() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0211003() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0211004() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0211005() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0211006() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0211007() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0211008() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0211009() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0211010() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0211011() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0211012() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0211013() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0211014() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0211015() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test0211016() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        NodeNameTest nodeNameTest1 = (NodeNameTest) variablePointer0.getImmediateNode();
    }

    @Test(timeout = 4000)
    public void test0211018() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        NodeNameTest nodeNameTest1 = (NodeNameTest) variablePointer0.getImmediateNode();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0211019() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        NodeNameTest nodeNameTest1 = (NodeNameTest) variablePointer0.getImmediateNode();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0211020() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        NodeNameTest nodeNameTest1 = (NodeNameTest) variablePointer0.getImmediateNode();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0211021() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        NodeNameTest nodeNameTest1 = (NodeNameTest) variablePointer0.getImmediateNode();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0211022() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        NodeNameTest nodeNameTest1 = (NodeNameTest) variablePointer0.getImmediateNode();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0211023() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        NodeNameTest nodeNameTest1 = (NodeNameTest) variablePointer0.getImmediateNode();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0211024() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        NodeNameTest nodeNameTest1 = (NodeNameTest) variablePointer0.getImmediateNode();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0211025() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        NodeNameTest nodeNameTest1 = (NodeNameTest) variablePointer0.getImmediateNode();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0211026() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        NodeNameTest nodeNameTest1 = (NodeNameTest) variablePointer0.getImmediateNode();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0211027() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        NodeNameTest nodeNameTest1 = (NodeNameTest) variablePointer0.getImmediateNode();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0211028() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        NodeNameTest nodeNameTest1 = (NodeNameTest) variablePointer0.getImmediateNode();
        nodeNameTest1.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0211029() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        NodeNameTest nodeNameTest1 = (NodeNameTest) variablePointer0.getImmediateNode();
        nodeNameTest1.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0211030() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("q");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        variablePointer0.setValue(nodeNameTest0);
        NodeNameTest nodeNameTest1 = (NodeNameTest) variablePointer0.getImmediateNode();
        nodeNameTest1.toString();
    }

    @Test(timeout = 4000)
    public void test0221032() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
    }

    @Test(timeout = 4000)
    public void test0221033() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0221034() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0221035() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0221036() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test0221037() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0221038() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0221039() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0221040() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0221041() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0221042() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0221043() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0221044() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0221045() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0221046() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0221048() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
    }

    @Test(timeout = 4000)
    public void test0221049() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0221050() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0221051() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0221052() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0221053() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0221054() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0221055() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0221056() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0221057() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0221058() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0221061() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Object object0 = nodePointer0.getBaseValue();
    }

    @Test(timeout = 4000)
    public void test0221062() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Object object0 = nodePointer0.getBaseValue();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0221063() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Object object0 = nodePointer0.getBaseValue();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0221064() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Object object0 = nodePointer0.getBaseValue();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0221065() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Object object0 = nodePointer0.getBaseValue();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0221066() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Object object0 = nodePointer0.getBaseValue();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0221067() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Object object0 = nodePointer0.getBaseValue();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0221068() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Object object0 = nodePointer0.getBaseValue();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0221069() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Object object0 = nodePointer0.getBaseValue();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0221070() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Object object0 = nodePointer0.getBaseValue();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0221071() throws Throwable {
        QName qName0 = new QName("/wHW6^NE$S", "org.apache.commons.jxpath.ri.compiler.NameAttributeTest");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Object object0 = nodePointer0.getBaseValue();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0231074() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
    }

    @Test(timeout = 4000)
    public void test0231075() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0231076() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0231077() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0231078() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
    }

    @Test(timeout = 4000)
    public void test0231079() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0231080() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0231081() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0231082() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0231083() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0231084() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
    }

    @Test(timeout = 4000)
    public void test0231085() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0231086() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0231087() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0231088() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0231089() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0231090() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0231091() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0231092() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0231093() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0231094() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0231095() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0231096() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0231097() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0231098() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0231099() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0231100() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0231101() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0231103() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
    }

    @Test(timeout = 4000)
    public void test0231105() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0231106() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0231107() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0231108() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0231109() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0231110() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0231111() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0231112() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0231113() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0231114() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0231115() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0231116() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0231117() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0231118() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0231119() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0231120() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0231121() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        String string0 = (String) beanPointer0.getBaseValue();
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0241123() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
    }

    @Test(timeout = 4000)
    public void test0241124() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0241126() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
    }

    @Test(timeout = 4000)
    public void test0241127() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0241129() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
    }

    @Test(timeout = 4000)
    public void test0241130() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0241131() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0241132() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0241133() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test0241134() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0241135() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0241136() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0241137() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0241138() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0241139() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0241140() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0241141() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0241142() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0241143() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0241144() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0241147() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test0241148() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0241149() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test0241152() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0241153() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0241154() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0241155() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0241156() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0241157() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0241158() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0241159() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0241160() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0241161() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0241162() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0241163() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0241164() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        variablePointer1.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0241165() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        variablePointer1.getIndex();
    }

    @Test(timeout = 4000)
    public void test0241166() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        variablePointer1.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0241167() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        variablePointer1.isRoot();
    }

    @Test(timeout = 4000)
    public void test0241168() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        variablePointer1.isContainer();
    }

    @Test(timeout = 4000)
    public void test0241169() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        variablePointer1.isNode();
    }

    @Test(timeout = 4000)
    public void test0241170() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        variablePointer1.isActual();
    }

    @Test(timeout = 4000)
    public void test0251175() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
    }

    @Test(timeout = 4000)
    public void test0251176() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0251177() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0251178() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0251179() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test0251180() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0251181() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0251182() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0251183() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0251184() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0251185() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0251186() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0251187() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0251188() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0251189() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0251191() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
    }

    @Test(timeout = 4000)
    public void test0251192() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0251194() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
    }

    @Test(timeout = 4000)
    public void test0251197() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0251198() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0251199() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0251200() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0251201() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0251202() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0251203() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0251204() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0251205() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0251206() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0251207() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0251208() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        variablePointer1.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0251209() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        variablePointer1.isActual();
    }

    @Test(timeout = 4000)
    public void test0251210() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        variablePointer1.isContainer();
    }

    @Test(timeout = 4000)
    public void test0251211() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        variablePointer1.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0251212() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        variablePointer1.isNode();
    }

    @Test(timeout = 4000)
    public void test0251213() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        variablePointer1.isRoot();
    }

    @Test(timeout = 4000)
    public void test0251214() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
        variablePointer1.getIndex();
    }

    @Test(timeout = 4000)
    public void test0261219() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
    }

    @Test(timeout = 4000)
    public void test0261220() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0261221() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0261222() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0261223() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test0261224() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0261225() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0261226() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0261227() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0261228() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0261229() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0261230() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0261231() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0261232() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0261233() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0261235() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
    }

    @Test(timeout = 4000)
    public void test0261236() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0261237() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0261238() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0261239() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0261240() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0261241() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0261242() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0261243() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0261244() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0261245() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0261246() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0261247() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0261248() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0261249() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0261250() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0261251() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0261252() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0261253() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0261254() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0261257() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
    }

    @Test(timeout = 4000)
    public void test0261258() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0261259() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0261260() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0261261() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0261262() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0261263() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0261264() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0261265() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0261266() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0261267() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0261268() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0261269() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0261270() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0261271() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0261272() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0261273() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0261274() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0261275() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0261276() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0261277() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("[", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator) beanPointer0.attributeIterator(qName0);
        beanAttributeIterator0.getPosition();
    }

    @Test(timeout = 4000)
    public void test0271291() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
    }

    @Test(timeout = 4000)
    public void test0271292() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0271293() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0271294() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0271295() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0271296() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0271297() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0271298() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
    }

    @Test(timeout = 4000)
    public void test0271299() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0271300() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0271301() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0271302() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0271303() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0271304() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0271305() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0271306() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0271307() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0271308() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0271309() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0271310() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0271311() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0271312() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0271313() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0271314() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0271315() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0271316() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0271317() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0271318() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0271319() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0271321() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test0271323() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0271324() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0271325() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0271326() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0271327() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0271328() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0271329() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0271330() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0271331() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0271332() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0271333() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0271334() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0271335() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0271336() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0271337() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0271338() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0271339() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0271340() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0271341() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0271342() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0271343() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        String string0 = beanPointer0.asPath();
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0281345() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
    }

    @Test(timeout = 4000)
    public void test0281346() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0281347() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test0281348() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0281349() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0281351() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
    }

    @Test(timeout = 4000)
    public void test0281352() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0281353() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0281355() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
    }

    @Test(timeout = 4000)
    public void test0281356() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0281357() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0281358() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0281359() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0281360() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0281361() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0281362() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0281363() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0281364() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0281367() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1660));
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.testNode(nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test0291368() throws Throwable {
        QName qName0 = new QName("JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates");
    }

    @Test(timeout = 4000)
    public void test0291369() throws Throwable {
        QName qName0 = new QName("JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0291370() throws Throwable {
        QName qName0 = new QName("JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0291371() throws Throwable {
        QName qName0 = new QName("JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0291372() throws Throwable {
        QName qName0 = new QName("JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test0291373() throws Throwable {
        QName qName0 = new QName("JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0291374() throws Throwable {
        QName qName0 = new QName("JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0291375() throws Throwable {
        QName qName0 = new QName("JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0291376() throws Throwable {
        QName qName0 = new QName("JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0291377() throws Throwable {
        QName qName0 = new QName("JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0291378() throws Throwable {
        QName qName0 = new QName("JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0291379() throws Throwable {
        QName qName0 = new QName("JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0291380() throws Throwable {
        QName qName0 = new QName("JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0291381() throws Throwable {
        QName qName0 = new QName("JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0291382() throws Throwable {
        QName qName0 = new QName("JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0291384() throws Throwable {
        QName qName0 = new QName("JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setValue(qName0);
    }

    @Test(timeout = 4000)
    public void test0301386() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
    }

    @Test(timeout = 4000)
    public void test0301387() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0301388() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0301389() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0301390() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0301391() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0301392() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0301393() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0301395() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
    }

    @Test(timeout = 4000)
    public void test0301396() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0301397() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
        variablePointer0.setValue(nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test0311398() throws Throwable {
        Locale locale0 = Locale.US;
    }

    @Test(timeout = 4000)
    public void test0311399() throws Throwable {
        Locale locale0 = Locale.US;
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0311400() throws Throwable {
        Locale locale0 = Locale.US;
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0311401() throws Throwable {
        Locale locale0 = Locale.US;
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0311402() throws Throwable {
        Locale locale0 = Locale.US;
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0311403() throws Throwable {
        Locale locale0 = Locale.US;
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0311404() throws Throwable {
        Locale locale0 = Locale.US;
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0311405() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
    }

    @Test(timeout = 4000)
    public void test0311406() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0311407() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0311408() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0311409() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0311410() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0311411() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0311412() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0311413() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0311414() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0311415() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0311416() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0311417() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0311418() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test0311419() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0311420() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0311421() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0311422() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0311424() throws Throwable {
        Locale locale0 = Locale.US;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.remove();
    }

    @Test(timeout = 4000)
    public void test0321435() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.remove();
    }

    @Test(timeout = 4000)
    public void test0331437() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
    }

    @Test(timeout = 4000)
    public void test0331438() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0331439() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0331440() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0331441() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test0331442() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0331443() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0331444() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0331445() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0331446() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0331447() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0331448() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0331449() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0331450() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0331451() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0331453() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = (int) (byte) 38;
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0331454() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = (int) (byte) 38;
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0331455() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = (int) (byte) 38;
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0331456() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = (int) (byte) 38;
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0331457() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = (int) (byte) 38;
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0331458() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = (int) (byte) 38;
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0331459() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = (int) (byte) 38;
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0331460() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = (int) (byte) 38;
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0331461() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = (int) (byte) 38;
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0331462() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = (int) (byte) 38;
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0331463() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = (int) (byte) 38;
        variablePointer0.printPointerChain();
    }

    @Test(timeout = 4000)
    public void test0341473() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointerFactory nodePointerFactory0 = mock(NodePointerFactory.class, new ViolatedAssumptionAnswer());
        JXPathContextReferenceImpl.addNodePointerFactory(nodePointerFactory0);
        NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
    }

    @Test(timeout = 4000)
    public void test0351474() throws Throwable {
        QName qName0 = new QName("<<unknown namespace>>", "");
    }

    @Test(timeout = 4000)
    public void test0351475() throws Throwable {
        QName qName0 = new QName("<<unknown namespace>>", "");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0351476() throws Throwable {
        QName qName0 = new QName("<<unknown namespace>>", "");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0351477() throws Throwable {
        QName qName0 = new QName("<<unknown namespace>>", "");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0351478() throws Throwable {
        QName qName0 = new QName("<<unknown namespace>>", "");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
    }

    @Test(timeout = 4000)
    public void test0351479() throws Throwable {
        QName qName0 = new QName("<<unknown namespace>>", "");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0351480() throws Throwable {
        QName qName0 = new QName("<<unknown namespace>>", "");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0351481() throws Throwable {
        QName qName0 = new QName("<<unknown namespace>>", "");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0351482() throws Throwable {
        QName qName0 = new QName("<<unknown namespace>>", "");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0351483() throws Throwable {
        QName qName0 = new QName("<<unknown namespace>>", "");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0351484() throws Throwable {
        QName qName0 = new QName("<<unknown namespace>>", "");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0351485() throws Throwable {
        QName qName0 = new QName("<<unknown namespace>>", "");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0351486() throws Throwable {
        QName qName0 = new QName("<<unknown namespace>>", "");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0351487() throws Throwable {
        QName qName0 = new QName("<<unknown namespace>>", "");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0351488() throws Throwable {
        QName qName0 = new QName("<<unknown namespace>>", "");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0351490() throws Throwable {
        QName qName0 = new QName("<<unknown namespace>>", "");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.namespacePointer("  ");
    }

    @Test(timeout = 4000)
    public void test0361491() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, (QName) null);
    }

    @Test(timeout = 4000)
    public void test0361492() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, (QName) null);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0361493() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, (QName) null);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0361494() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, (QName) null);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0361495() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, (QName) null);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0361496() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, (QName) null);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0361497() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, (QName) null);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0361498() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, (QName) null);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0361500() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, (QName) null);
        variablePointer0.namespaceIterator();
    }

    @Test(timeout = 4000)
    public void test0371501() throws Throwable {
        QName qName0 = new QName("%", "%");
    }

    @Test(timeout = 4000)
    public void test0371502() throws Throwable {
        QName qName0 = new QName("%", "%");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0371503() throws Throwable {
        QName qName0 = new QName("%", "%");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0371504() throws Throwable {
        QName qName0 = new QName("%", "%");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0371505() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test0371506() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0371507() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0371508() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0371509() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0371510() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0371511() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0371512() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0371513() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0371514() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0371515() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0371517() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test0381534() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isLanguage("<<unknown namespace>>");
    }

    @Test(timeout = 4000)
    public void test0391535() throws Throwable {
        QName qName0 = new QName(">{Dz~nER$ 3[Z~zT");
    }

    @Test(timeout = 4000)
    public void test0391536() throws Throwable {
        QName qName0 = new QName(">{Dz~nER$ 3[Z~zT");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0391537() throws Throwable {
        QName qName0 = new QName(">{Dz~nER$ 3[Z~zT");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0391538() throws Throwable {
        QName qName0 = new QName(">{Dz~nER$ 3[Z~zT");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0391539() throws Throwable {
        QName qName0 = new QName(">{Dz~nER$ 3[Z~zT");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test0391540() throws Throwable {
        QName qName0 = new QName(">{Dz~nER$ 3[Z~zT");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0391541() throws Throwable {
        QName qName0 = new QName(">{Dz~nER$ 3[Z~zT");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0391542() throws Throwable {
        QName qName0 = new QName(">{Dz~nER$ 3[Z~zT");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0391543() throws Throwable {
        QName qName0 = new QName(">{Dz~nER$ 3[Z~zT");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0391544() throws Throwable {
        QName qName0 = new QName(">{Dz~nER$ 3[Z~zT");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0391545() throws Throwable {
        QName qName0 = new QName(">{Dz~nER$ 3[Z~zT");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0391546() throws Throwable {
        QName qName0 = new QName(">{Dz~nER$ 3[Z~zT");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0391547() throws Throwable {
        QName qName0 = new QName(">{Dz~nER$ 3[Z~zT");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0391548() throws Throwable {
        QName qName0 = new QName(">{Dz~nER$ 3[Z~zT");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0391549() throws Throwable {
        QName qName0 = new QName(">{Dz~nER$ 3[Z~zT");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0391551() throws Throwable {
        QName qName0 = new QName(">{Dz~nER$ 3[Z~zT");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0401552() throws Throwable {
        QName qName0 = new QName(" ", " ");
    }

    @Test(timeout = 4000)
    public void test0401553() throws Throwable {
        QName qName0 = new QName(" ", " ");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0401554() throws Throwable {
        QName qName0 = new QName(" ", " ");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0401555() throws Throwable {
        QName qName0 = new QName(" ", " ");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0401556() throws Throwable {
        QName qName0 = new QName(" ", " ");
        BasicVariables basicVariables0 = new BasicVariables();
    }

    @Test(timeout = 4000)
    public void test0401557() throws Throwable {
        QName qName0 = new QName(" ", " ");
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test0401558() throws Throwable {
        QName qName0 = new QName(" ", " ");
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0401559() throws Throwable {
        QName qName0 = new QName(" ", " ");
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0401560() throws Throwable {
        QName qName0 = new QName(" ", " ");
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0401561() throws Throwable {
        QName qName0 = new QName(" ", " ");
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0401562() throws Throwable {
        QName qName0 = new QName(" ", " ");
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0401563() throws Throwable {
        QName qName0 = new QName(" ", " ");
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0401564() throws Throwable {
        QName qName0 = new QName(" ", " ");
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0401565() throws Throwable {
        QName qName0 = new QName(" ", " ");
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0401566() throws Throwable {
        QName qName0 = new QName(" ", " ");
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0401567() throws Throwable {
        QName qName0 = new QName(" ", " ");
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0401569() throws Throwable {
        QName qName0 = new QName(" ", " ");
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0411580() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.getValuePointer();
    }

    @Test(timeout = 4000)
    public void test0421581() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
    }

    @Test(timeout = 4000)
    public void test0421582() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0421583() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test0421584() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0421585() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0421587() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
    }

    @Test(timeout = 4000)
    public void test0421588() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0421589() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0421591() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
    }

    @Test(timeout = 4000)
    public void test0421592() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0421593() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0421594() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0421595() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test0421596() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0421597() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0421598() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0421599() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0421600() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0421601() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0421602() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0421603() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0421604() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0421605() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0421606() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0421607() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0421610() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2474);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("JXPath iterators cannot remove nodes", (String) null);
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getValuePointer();
    }

    @Test(timeout = 4000)
    public void test0431611() throws Throwable {
        QName qName0 = new QName("-,_eC%Z~#X", "-,_eC%Z~#X");
    }

    @Test(timeout = 4000)
    public void test0431612() throws Throwable {
        QName qName0 = new QName("-,_eC%Z~#X", "-,_eC%Z~#X");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0431613() throws Throwable {
        QName qName0 = new QName("-,_eC%Z~#X", "-,_eC%Z~#X");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0431614() throws Throwable {
        QName qName0 = new QName("-,_eC%Z~#X", "-,_eC%Z~#X");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0431615() throws Throwable {
        QName qName0 = new QName("-,_eC%Z~#X", "-,_eC%Z~#X");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
    }

    @Test(timeout = 4000)
    public void test0431616() throws Throwable {
        QName qName0 = new QName("-,_eC%Z~#X", "-,_eC%Z~#X");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0431617() throws Throwable {
        QName qName0 = new QName("-,_eC%Z~#X", "-,_eC%Z~#X");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0431618() throws Throwable {
        QName qName0 = new QName("-,_eC%Z~#X", "-,_eC%Z~#X");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0431619() throws Throwable {
        QName qName0 = new QName("-,_eC%Z~#X", "-,_eC%Z~#X");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0431620() throws Throwable {
        QName qName0 = new QName("-,_eC%Z~#X", "-,_eC%Z~#X");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0431621() throws Throwable {
        QName qName0 = new QName("-,_eC%Z~#X", "-,_eC%Z~#X");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0431622() throws Throwable {
        QName qName0 = new QName("-,_eC%Z~#X", "-,_eC%Z~#X");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0431623() throws Throwable {
        QName qName0 = new QName("-,_eC%Z~#X", "-,_eC%Z~#X");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0431624() throws Throwable {
        QName qName0 = new QName("-,_eC%Z~#X", "-,_eC%Z~#X");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0431625() throws Throwable {
        QName qName0 = new QName("-,_eC%Z~#X", "-,_eC%Z~#X");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0431627() throws Throwable {
        QName qName0 = new QName("-,_eC%Z~#X", "-,_eC%Z~#X");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test0441629() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
    }

    @Test(timeout = 4000)
    public void test0441630() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0441631() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0441632() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0441633() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test0441634() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0441635() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0441636() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0441637() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0441638() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0441639() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0441640() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0441641() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0441642() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0441643() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0441645() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test0451655() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, (QName) null);
        variablePointer0.getRootNode();
    }

    @Test(timeout = 4000)
    public void test0461656() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
    }

    @Test(timeout = 4000)
    public void test0461657() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0461658() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0461659() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0461660() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
    }

    @Test(timeout = 4000)
    public void test0461661() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0461662() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0461663() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0461664() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0461665() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0461666() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0461667() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
    }

    @Test(timeout = 4000)
    public void test0461668() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0461669() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0461670() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0461671() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0461672() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0461673() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0461674() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0461675() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0461676() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0461677() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0461678() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0461679() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0461680() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0461681() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0461682() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0461683() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0461684() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0461685() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0461687() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.getPointerByKey((JXPathContext) null, "", "<<unknown namespace>>");
    }

    @Test(timeout = 4000)
    public void test0471692() throws Throwable {
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test0471693() throws Throwable {
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0471694() throws Throwable {
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0471695() throws Throwable {
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0471696() throws Throwable {
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0471697() throws Throwable {
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0471698() throws Throwable {
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0471699() throws Throwable {
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0471700() throws Throwable {
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0471701() throws Throwable {
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0471702() throws Throwable {
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0471704() throws Throwable {
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNodeValue();
    }

    @Test(timeout = 4000)
    public void test0481778() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        NodePointerFactory nodePointerFactory0 = mock(NodePointerFactory.class, new ViolatedAssumptionAnswer());
        JXPathContextReferenceImpl.addNodePointerFactory(nodePointerFactory0);
        variablePointer1.getNodeValue();
    }

    @Test(timeout = 4000)
    public void test0491779() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
    }

    @Test(timeout = 4000)
    public void test0491780() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0491781() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0491782() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0491783() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test0491784() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0491785() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0491786() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0491787() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0491788() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0491789() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0491790() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0491791() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0491792() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0491793() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0491795() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNode();
    }

    @Test(timeout = 4000)
    public void test0501800() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
    }

    @Test(timeout = 4000)
    public void test0501801() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0501802() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0501803() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0501804() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0501805() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0501806() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0501807() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0501808() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0501809() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0501810() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0501812() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        variablePointer0.getNode();
    }

    @Test(timeout = 4000)
    public void test0511823() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0521841() throws Throwable {
        QName qName0 = new QName(" ", " ");
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0531851() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, (QName) null);
        variablePointer0.getImmediateValuePointer();
    }

    @Test(timeout = 4000)
    public void test0541853() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Mvl|(os?FVs1", "");
    }

    @Test(timeout = 4000)
    public void test0541854() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Mvl|(os?FVs1", "");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0541855() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Mvl|(os?FVs1", "");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0541856() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Mvl|(os?FVs1", "");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0541857() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Mvl|(os?FVs1", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test0541858() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Mvl|(os?FVs1", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0541859() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Mvl|(os?FVs1", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0541860() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Mvl|(os?FVs1", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0541861() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Mvl|(os?FVs1", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0541862() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Mvl|(os?FVs1", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0541863() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Mvl|(os?FVs1", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0541864() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Mvl|(os?FVs1", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0541865() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Mvl|(os?FVs1", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0541866() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Mvl|(os?FVs1", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0541867() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Mvl|(os?FVs1", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0541869() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Mvl|(os?FVs1", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getImmediateValuePointer();
    }

    @Test(timeout = 4000)
    public void test0551886() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getImmediateNode();
    }

    @Test(timeout = 4000)
    public void test0561897() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        variablePointer0.getImmediateNode();
    }

    @Test(timeout = 4000)
    public void test0571898() throws Throwable {
        QName qName0 = new QName("oWmo E;9F@");
    }

    @Test(timeout = 4000)
    public void test0571899() throws Throwable {
        QName qName0 = new QName("oWmo E;9F@");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0571900() throws Throwable {
        QName qName0 = new QName("oWmo E;9F@");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0571901() throws Throwable {
        QName qName0 = new QName("oWmo E;9F@");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0571902() throws Throwable {
        QName qName0 = new QName("oWmo E;9F@");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test0571903() throws Throwable {
        QName qName0 = new QName("oWmo E;9F@");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0571904() throws Throwable {
        QName qName0 = new QName("oWmo E;9F@");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0571905() throws Throwable {
        QName qName0 = new QName("oWmo E;9F@");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0571906() throws Throwable {
        QName qName0 = new QName("oWmo E;9F@");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0571907() throws Throwable {
        QName qName0 = new QName("oWmo E;9F@");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0571908() throws Throwable {
        QName qName0 = new QName("oWmo E;9F@");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0571909() throws Throwable {
        QName qName0 = new QName("oWmo E;9F@");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0571910() throws Throwable {
        QName qName0 = new QName("oWmo E;9F@");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0571911() throws Throwable {
        QName qName0 = new QName("oWmo E;9F@");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0571912() throws Throwable {
        QName qName0 = new QName("oWmo E;9F@");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0571914() throws Throwable {
        QName qName0 = new QName("oWmo E;9F@");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getBaseValue();
    }

    @Test(timeout = 4000)
    public void test0581915() throws Throwable {
        QName qName0 = new QName((String) null, "");
    }

    @Test(timeout = 4000)
    public void test0581916() throws Throwable {
        QName qName0 = new QName((String) null, "");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0581917() throws Throwable {
        QName qName0 = new QName((String) null, "");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0581918() throws Throwable {
        QName qName0 = new QName((String) null, "");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0581919() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test0581920() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0581921() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0581922() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0581923() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0581924() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0581925() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0581926() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0581927() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0581928() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0581929() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0581931() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
    }

    @Test(timeout = 4000)
    public void test0581932() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0581933() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0581934() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0581935() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0581936() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0581937() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0581938() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0581939() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0581940() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0581941() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0581944() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
    }

    @Test(timeout = 4000)
    public void test0581945() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0581946() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0581947() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0581948() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0581949() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0581950() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0581951() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0581952() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0581953() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0581954() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0581955() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0581956() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0581957() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0581958() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0581959() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0581960() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0581961() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0581962() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0581963() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0581967() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, qName0, variablePointer0);
        beanPointer0.createPath((JXPathContext) null, (Object) variablePointer0);
    }

    @Test(timeout = 4000)
    public void test0591972() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
    }

    @Test(timeout = 4000)
    public void test0591973() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0591974() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0591975() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0591976() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0591977() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0591978() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0591979() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    }

    @Test(timeout = 4000)
    public void test0591980() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        linkedList0.size();
    }

    @Test(timeout = 4000)
    public void test0591981() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
    }

    @Test(timeout = 4000)
    public void test0591982() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0591983() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0591984() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0591985() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0591986() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0591987() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0591988() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0591989() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0591990() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0591991() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0591992() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0591993() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0591994() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0591995() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0591996() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0591997() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0591998() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0591999() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0592001() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) linkedList0);
    }

    @Test(timeout = 4000)
    public void test0592002() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) linkedList0);
        linkedList0.size();
    }

    @Test(timeout = 4000)
    public void test0592003() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) linkedList0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0592005() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) linkedList0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test0592006() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) linkedList0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0592007() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.KOREA;
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "cbsby", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) linkedList0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        beanPointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test0602008() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
    }

    @Test(timeout = 4000)
    public void test0602009() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0602010() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test0602011() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0602012() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0602014() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
    }

    @Test(timeout = 4000)
    public void test0602015() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0602016() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0602018() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
    }

    @Test(timeout = 4000)
    public void test0602019() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0602020() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0602021() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0602022() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test0602023() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0602024() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0602025() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0602026() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0602027() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0602028() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0602029() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0602030() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0602031() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0602032() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0602033() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0602034() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0602037() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = 3122;
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0602038() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = 3122;
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0602039() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = 3122;
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0602040() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = 3122;
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0602041() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = 3122;
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0602042() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = 3122;
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0602043() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = 3122;
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0602044() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = 3122;
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0602045() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = 3122;
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0602046() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = 3122;
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0602047() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = 3122;
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0602048() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = 3122;
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0602049() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL", "LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.index = 3122;
        variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) variablePointer0);
    }

    @Test(timeout = 4000)
    public void test0612050() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
    }

    @Test(timeout = 4000)
    public void test0612051() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0612052() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0612053() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0612054() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test0612055() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0612056() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0612057() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0612058() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0612059() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0612060() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0612061() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0612062() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0612063() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0612064() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0612066() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
    }

    @Test(timeout = 4000)
    public void test0612067() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0612068() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0612069() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0612070() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0612071() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0612072() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0612073() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0612074() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0612075() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0612076() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0612077() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        nullPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0612078() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        nullPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0612079() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        nullPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0612080() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        nullPointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test0612081() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        nullPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0612082() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        nullPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0612083() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        nullPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0612084() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        nullPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0612085() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        nullPointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0612086() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        nullPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0612087() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        nullPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0612090() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
    }

    @Test(timeout = 4000)
    public void test0612091() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0612092() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0612093() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0612094() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0612095() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0612096() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0612097() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0612098() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0612099() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0612100() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0612101() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        nullPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0612102() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        nullPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0612103() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        nullPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0612104() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        nullPointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test0612105() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        nullPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0612106() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        nullPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0612107() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        nullPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0612108() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        nullPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0612109() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        nullPointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0612110() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        nullPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0612111() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        nullPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0612112() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0612116() throws Throwable {
        QName qName0 = new QName((String) null, (String) null);
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NullPointer nullPointer0 = (NullPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, (Object) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nullPointer0);
        nullPointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
    }

    @Test(timeout = 4000)
    public void test0622117() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
    }

    @Test(timeout = 4000)
    public void test0622118() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0622119() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0622120() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0622121() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
    }

    @Test(timeout = 4000)
    public void test0622122() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0622123() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0622124() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0622125() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0622126() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0622127() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0622128() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0622129() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0622130() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test0622131() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0622132() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0622133() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0622134() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0622135() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0622137() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
    }

    @Test(timeout = 4000)
    public void test0622138() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0622140() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", ");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        nullPointer0.createPath((JXPathContext) jXPathContextReferenceImpl0);
    }

    @Test(timeout = 4000)
    public void test0632157() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.createPath((JXPathContext) null);
    }

    @Test(timeout = 4000)
    public void test0642159() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
    }

    @Test(timeout = 4000)
    public void test0642160() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0642161() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0642162() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0642163() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
    }

    @Test(timeout = 4000)
    public void test0642164() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0642165() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0642166() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0642167() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0642168() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0642169() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0642170() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0642171() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0642172() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0642173() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0642174() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0642175() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0642176() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
    }

    @Test(timeout = 4000)
    public void test0642177() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        qName1.equals((Object) qName0);
    }

    @Test(timeout = 4000)
    public void test0642178() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        qName1.toString();
    }

    @Test(timeout = 4000)
    public void test0642179() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        qName1.getName();
    }

    @Test(timeout = 4000)
    public void test0642180() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        qName1.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0642181() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
    }

    @Test(timeout = 4000)
    public void test0642182() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        qName1.equals((Object) qName0);
    }

    @Test(timeout = 4000)
    public void test0642183() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        qName1.toString();
    }

    @Test(timeout = 4000)
    public void test0642184() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        qName1.getName();
    }

    @Test(timeout = 4000)
    public void test0642185() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        qName1.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0642186() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0642187() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0642188() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0642189() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0642190() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0642191() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0642192() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0642194() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test0642195() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        qName0.equals((Object) qName1);
    }

    @Test(timeout = 4000)
    public void test0642197() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0642198() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0642199() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0642200() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0642201() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0642202() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0642203() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0642205() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName((String) null, "$1EB/;/R");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "' and '");
        basicVariables0.declareVariable("e%p@XtA`N856w{D<X", nodeNameTest0);
        QName qName1 = new QName("e%p@XtA`N856w{D<X");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName1);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        variablePointer0.createChild((JXPathContext) jXPathContextReferenceImpl0, qName0, (-3515), (Object) qName0);
    }

    @Test(timeout = 4000)
    public void test0652206() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
    }

    @Test(timeout = 4000)
    public void test0652207() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0652208() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0652209() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0652210() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
    }

    @Test(timeout = 4000)
    public void test0652211() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0652212() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0652213() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0652214() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0652215() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0652216() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0652217() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
    }

    @Test(timeout = 4000)
    public void test0652218() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0652219() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0652220() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0652221() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0652222() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0652223() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0652224() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0652225() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0652226() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0652227() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        nullPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0652228() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        nullPointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test0652229() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        nullPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0652230() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        nullPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0652231() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        nullPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0652232() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        nullPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0652233() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        nullPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0652234() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        nullPointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0652235() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        nullPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0652236() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        nullPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0652237() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        nullPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0652239() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        Object object0 = new Object();
    }

    @Test(timeout = 4000)
    public void test0652240() throws Throwable {
        QName qName0 = new QName("5QL%\"K4%S`U,tzlM-^", "fI 8@w!\"*W9FO]G");
        Locale locale0 = Locale.ROOT;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, locale0);
        Object object0 = new Object();
        nullPointer0.createChild((JXPathContext) null, qName0, 2937, object0);
    }

    @Test(timeout = 4000)
    public void test0662257() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "<<unknown namespace>>");
    }

    @Test(timeout = 4000)
    public void test0662258() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "<<unknown namespace>>");
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0662260() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "<<unknown namespace>>");
        Object object0 = new Object();
    }

    @Test(timeout = 4000)
    public void test0662261() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "<<unknown namespace>>");
        Object object0 = new Object();
        variablePointer0.createChild((JXPathContext) jXPathContextReferenceImpl0, qName0, Integer.MIN_VALUE, object0);
    }

    @Test(timeout = 4000)
    public void test0672263() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Bn9pK", "Bn9pK");
    }

    @Test(timeout = 4000)
    public void test0672264() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Bn9pK", "Bn9pK");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0672265() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Bn9pK", "Bn9pK");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0672266() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Bn9pK", "Bn9pK");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0672267() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Bn9pK", "Bn9pK");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test0672268() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Bn9pK", "Bn9pK");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0672269() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Bn9pK", "Bn9pK");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0672270() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Bn9pK", "Bn9pK");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0672271() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Bn9pK", "Bn9pK");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0672272() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Bn9pK", "Bn9pK");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0672273() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Bn9pK", "Bn9pK");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0672274() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Bn9pK", "Bn9pK");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0672275() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Bn9pK", "Bn9pK");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0672276() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Bn9pK", "Bn9pK");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0672277() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Bn9pK", "Bn9pK");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0672279() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Bn9pK", "Bn9pK");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContext jXPathContext0 = mock(JXPathContext.class, new ViolatedAssumptionAnswer());
        variablePointer0.createChild(jXPathContext0, qName0, 5, (Object) null);
    }

    @Test(timeout = 4000)
    public void test0682280() throws Throwable {
        QName qName0 = new QName((String) null, ")d-]P't~)(E");
    }

    @Test(timeout = 4000)
    public void test0682281() throws Throwable {
        QName qName0 = new QName((String) null, ")d-]P't~)(E");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0682282() throws Throwable {
        QName qName0 = new QName((String) null, ")d-]P't~)(E");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0682283() throws Throwable {
        QName qName0 = new QName((String) null, ")d-]P't~)(E");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0682284() throws Throwable {
        QName qName0 = new QName((String) null, ")d-]P't~)(E");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test0682285() throws Throwable {
        QName qName0 = new QName((String) null, ")d-]P't~)(E");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0682286() throws Throwable {
        QName qName0 = new QName((String) null, ")d-]P't~)(E");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0682287() throws Throwable {
        QName qName0 = new QName((String) null, ")d-]P't~)(E");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0682288() throws Throwable {
        QName qName0 = new QName((String) null, ")d-]P't~)(E");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0682289() throws Throwable {
        QName qName0 = new QName((String) null, ")d-]P't~)(E");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0682290() throws Throwable {
        QName qName0 = new QName((String) null, ")d-]P't~)(E");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0682291() throws Throwable {
        QName qName0 = new QName((String) null, ")d-]P't~)(E");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0682292() throws Throwable {
        QName qName0 = new QName((String) null, ")d-]P't~)(E");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0682293() throws Throwable {
        QName qName0 = new QName((String) null, ")d-]P't~)(E");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0682294() throws Throwable {
        QName qName0 = new QName((String) null, ")d-]P't~)(E");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0682296() throws Throwable {
        QName qName0 = new QName((String) null, ")d-]P't~)(E");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.createChild((JXPathContext) null, qName0, 45);
    }

    @Test(timeout = 4000)
    public void test0692317() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName(", operation is not allowed for this type of node", "0");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) ", operation is not allowed for this type of node");
        variablePointer0.createChild((JXPathContext) jXPathContextReferenceImpl0, qName0, (-1634));
    }

    @Test(timeout = 4000)
    public void test0702335() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.compareTo((Object) null);
    }

    @Test(timeout = 4000)
    public void test0712337() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Simultaneous operations: should not request pointer list while iterating over an EvalContext", "");
    }

    @Test(timeout = 4000)
    public void test0712338() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Simultaneous operations: should not request pointer list while iterating over an EvalContext", "");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0712339() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Simultaneous operations: should not request pointer list while iterating over an EvalContext", "");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0712340() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Simultaneous operations: should not request pointer list while iterating over an EvalContext", "");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0712341() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Simultaneous operations: should not request pointer list while iterating over an EvalContext", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test0712342() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Simultaneous operations: should not request pointer list while iterating over an EvalContext", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0712343() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Simultaneous operations: should not request pointer list while iterating over an EvalContext", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0712344() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Simultaneous operations: should not request pointer list while iterating over an EvalContext", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0712345() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Simultaneous operations: should not request pointer list while iterating over an EvalContext", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0712346() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Simultaneous operations: should not request pointer list while iterating over an EvalContext", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0712347() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Simultaneous operations: should not request pointer list while iterating over an EvalContext", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0712348() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Simultaneous operations: should not request pointer list while iterating over an EvalContext", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0712349() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Simultaneous operations: should not request pointer list while iterating over an EvalContext", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0712350() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Simultaneous operations: should not request pointer list while iterating over an EvalContext", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0712351() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Simultaneous operations: should not request pointer list while iterating over an EvalContext", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0712353() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Simultaneous operations: should not request pointer list while iterating over an EvalContext", "");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.compareTo("");
    }

    @Test(timeout = 4000)
    public void test0722363() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
    }

    @Test(timeout = 4000)
    public void test0722364() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0722365() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0722366() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0722367() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0722368() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0722369() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0722370() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0722371() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0722372() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0722373() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0722374() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0722375() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0722376() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0722377() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0722378() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0722379() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0722382() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, (QName) null, variablePointer0);
        beanPointer0.compareChildNodePointers(variablePointer0, variablePointer0);
    }

    @Test(timeout = 4000)
    public void test0732456() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer0.childIterator(nodeNameTest0, false, variablePointer1);
    }

    @Test(timeout = 4000)
    public void test0742461() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
    }

    @Test(timeout = 4000)
    public void test0742462() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0742463() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0742464() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0742465() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0742466() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0742467() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0742468() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test0742469() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0742470() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0742471() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0742472() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0742473() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0742474() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0742475() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0742477() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
    }

    @Test(timeout = 4000)
    public void test0742478() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0742479() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0742480() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0742481() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0742482() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0742483() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0742484() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0742486() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test0742487() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0742488() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0742489() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0742490() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0742491() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0742492() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0742493() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0742494() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0742495() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0742496() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0742497() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0742498() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0742499() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0742500() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0742503() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test0742506() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0742507() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0742508() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0742509() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0742510() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0742511() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0742512() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0742513() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0742514() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0742515() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0742516() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0742517() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0742518() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0742519() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0742520() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer1.isRoot();
    }

    @Test(timeout = 4000)
    public void test0742521() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer1.isNode();
    }

    @Test(timeout = 4000)
    public void test0742522() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer1.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0742523() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer1.isContainer();
    }

    @Test(timeout = 4000)
    public void test0742524() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer1.isActual();
    }

    @Test(timeout = 4000)
    public void test0742525() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer1.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0742526() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        variablePointer1.getIndex();
    }

    @Test(timeout = 4000)
    public void test0742530() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeNameTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeNameTest0);
        NodePointerFactory nodePointerFactory0 = mock(NodePointerFactory.class, new ViolatedAssumptionAnswer());
        JXPathContextReferenceImpl.addNodePointerFactory(nodePointerFactory0);
        variablePointer1.childIterator(nodeNameTest0, false, variablePointer1);
    }

    @Test(timeout = 4000)
    public void test0752531() throws Throwable {
        Locale locale0 = Locale.PRC;
    }

    @Test(timeout = 4000)
    public void test0752532() throws Throwable {
        Locale locale0 = Locale.PRC;
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0752533() throws Throwable {
        Locale locale0 = Locale.PRC;
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0752534() throws Throwable {
        Locale locale0 = Locale.PRC;
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0752535() throws Throwable {
        Locale locale0 = Locale.PRC;
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0752536() throws Throwable {
        Locale locale0 = Locale.PRC;
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0752537() throws Throwable {
        Locale locale0 = Locale.PRC;
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0752538() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
    }

    @Test(timeout = 4000)
    public void test0752539() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0752540() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0752541() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0752542() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0752543() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0752544() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0752545() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0752546() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0752547() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0752548() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0752549() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0752550() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0752551() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0752552() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test0752553() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0752554() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0752555() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0752557() throws Throwable {
        Locale locale0 = Locale.PRC;
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer((QName) null, (Object) null, locale0);
        nullPointer0.attributeIterator((QName) null);
    }

    @Test(timeout = 4000)
    public void test0762558() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
    }

    @Test(timeout = 4000)
    public void test0762559() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0762561() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
    }

    @Test(timeout = 4000)
    public void test0762562() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0762564() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
    }

    @Test(timeout = 4000)
    public void test0762565() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0762566() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0762567() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0762568() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test0762569() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0762570() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0762571() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0762572() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0762573() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0762574() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0762575() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0762576() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0762577() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0762578() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0762579() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0762582() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "substring-before");
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("(F");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.attributeIterator(qName0);
    }

    @Test(timeout = 4000)
    public void test0772634() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
    }

    @Test(timeout = 4000)
    public void test0772636() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0772637() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0772638() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0772639() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0772640() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0772641() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0772642() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0772643() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0772644() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0772645() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0772646() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0772647() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0772648() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0772649() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0772650() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0772651() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0772652() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0772653() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0772654() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0772655() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0772659() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
    }

    @Test(timeout = 4000)
    public void test0772660() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer1.equals((Object) beanPointer0);
    }

    @Test(timeout = 4000)
    public void test0772664() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0772665() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0772666() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0772667() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0772668() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0772669() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0772670() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0772671() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0772672() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0772673() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0772674() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0772675() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0772676() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0772677() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0772678() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0772679() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0772680() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0772681() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0772682() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0772683() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0772684() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer1.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0772685() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer1.isCollection();
    }

    @Test(timeout = 4000)
    public void test0772686() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer1.isNode();
    }

    @Test(timeout = 4000)
    public void test0772687() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer1.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0772688() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer1.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0772689() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer1.isRoot();
    }

    @Test(timeout = 4000)
    public void test0772690() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer1.getIndex();
    }

    @Test(timeout = 4000)
    public void test0772691() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer1.getLength();
    }

    @Test(timeout = 4000)
    public void test0772692() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.clone();
        beanPointer1.isContainer();
    }

    @Test(timeout = 4000)
    public void test0782714() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
    }

    @Test(timeout = 4000)
    public void test0782715() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        variablePointer1.equals((Object) variablePointer0);
    }

    @Test(timeout = 4000)
    public void test0782718() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0782719() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0782720() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0782721() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0782722() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0782723() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0782724() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0782725() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0782726() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0782727() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0782728() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        variablePointer1.isActual();
    }

    @Test(timeout = 4000)
    public void test0782729() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        variablePointer1.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0782730() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        variablePointer1.isContainer();
    }

    @Test(timeout = 4000)
    public void test0782731() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        variablePointer1.isRoot();
    }

    @Test(timeout = 4000)
    public void test0782732() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        variablePointer1.isNode();
    }

    @Test(timeout = 4000)
    public void test0782733() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        variablePointer1.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0782734() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.clone();
        variablePointer1.getIndex();
    }

    @Test(timeout = 4000)
    public void test0792753() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
    }

    @Test(timeout = 4000)
    public void test0792754() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0792755() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0792756() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0792757() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0792758() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0792759() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0792760() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0792761() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0792762() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0792763() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0792764() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0792765() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0792766() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0792767() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0792768() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0792769() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0792770() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0792771() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0792772() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0792773() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0792774() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0792775() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0792776() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        variablePointer0.locale.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0792777() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        variablePointer0.locale.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0792778() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        variablePointer0.locale.getCountry();
    }

    @Test(timeout = 4000)
    public void test0792779() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        variablePointer0.locale.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0792780() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        variablePointer0.locale.getVariant();
    }

    @Test(timeout = 4000)
    public void test0792781() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        variablePointer0.locale.toString();
    }

    @Test(timeout = 4000)
    public void test0792782() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
    }

    @Test(timeout = 4000)
    public void test0792784() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0792785() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0792786() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0792787() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0792788() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0792789() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0792790() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0792791() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0792792() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0792793() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0792794() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
        locale1.getCountry();
    }

    @Test(timeout = 4000)
    public void test0792795() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
        locale1.getVariant();
    }

    @Test(timeout = 4000)
    public void test0792796() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
        locale1.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0792797() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
        locale1.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0792798() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
        locale1.toString();
    }

    @Test(timeout = 4000)
    public void test0792799() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.GERMANY;
        variablePointer0.locale = locale0;
        Locale locale1 = variablePointer0.getLocale();
        locale1.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0802801() throws Throwable {
        QName qName0 = new QName("h", "h");
    }

    @Test(timeout = 4000)
    public void test0802802() throws Throwable {
        QName qName0 = new QName("h", "h");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0802803() throws Throwable {
        QName qName0 = new QName("h", "h");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0802804() throws Throwable {
        QName qName0 = new QName("h", "h");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0802805() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test0802806() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0802807() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0802808() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0802809() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0802810() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0802811() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0802812() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0802813() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0802814() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0802815() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0802817() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
    }

    @Test(timeout = 4000)
    public void test0802818() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0802819() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0802820() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0802821() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0802822() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0802823() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0802824() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0802825() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0802826() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0802827() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0802830() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("h");
    }

    @Test(timeout = 4000)
    public void test0802831() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("h");
        processingInstructionTest0.getTarget();
    }

    @Test(timeout = 4000)
    public void test0802832() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("h");
        boolean boolean0 = nodePointer0.testNode(processingInstructionTest0);
    }

    @Test(timeout = 4000)
    public void test0802833() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("h");
        boolean boolean0 = nodePointer0.testNode(processingInstructionTest0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0802834() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("h");
        boolean boolean0 = nodePointer0.testNode(processingInstructionTest0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0802835() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("h");
        boolean boolean0 = nodePointer0.testNode(processingInstructionTest0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0802836() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("h");
        boolean boolean0 = nodePointer0.testNode(processingInstructionTest0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0802837() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("h");
        boolean boolean0 = nodePointer0.testNode(processingInstructionTest0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0802838() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("h");
        boolean boolean0 = nodePointer0.testNode(processingInstructionTest0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0802839() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("h");
        boolean boolean0 = nodePointer0.testNode(processingInstructionTest0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0802840() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("h");
        boolean boolean0 = nodePointer0.testNode(processingInstructionTest0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0802841() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("h");
        boolean boolean0 = nodePointer0.testNode(processingInstructionTest0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0802842() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("h");
        boolean boolean0 = nodePointer0.testNode(processingInstructionTest0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0802843() throws Throwable {
        QName qName0 = new QName("h", "h");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("h");
        boolean boolean0 = nodePointer0.testNode(processingInstructionTest0);
        processingInstructionTest0.getTarget();
    }

    @Test(timeout = 4000)
    public void test0812862() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
    }

    @Test(timeout = 4000)
    public void test0812863() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        qName1.equals((Object) qName0);
    }

    @Test(timeout = 4000)
    public void test0812864() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        qName1.getName();
    }

    @Test(timeout = 4000)
    public void test0812865() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        qName1.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0812866() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        qName1.toString();
    }

    @Test(timeout = 4000)
    public void test0812867() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
    }

    @Test(timeout = 4000)
    public void test0812868() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        qName1.equals((Object) qName0);
    }

    @Test(timeout = 4000)
    public void test0812869() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        qName1.getName();
    }

    @Test(timeout = 4000)
    public void test0812870() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        qName1.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0812871() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        qName1.toString();
    }

    @Test(timeout = 4000)
    public void test0812872() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0812873() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0812874() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0812875() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
    }

    @Test(timeout = 4000)
    public void test0812876() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        qName0.equals((Object) qName1);
    }

    @Test(timeout = 4000)
    public void test0812878() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0812879() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0812880() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0812881() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0812882() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0812883() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0812884() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0812885() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0812886() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0812887() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0812890() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test0812891() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        qName0.equals((Object) qName1);
    }

    @Test(timeout = 4000)
    public void test0812892() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        qName1.equals((Object) qName0);
    }

    @Test(timeout = 4000)
    public void test0812895() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0812896() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0812897() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0812898() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0812899() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0812900() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0812901() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0812902() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0812903() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0812904() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0812905() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        qName1.getName();
    }

    @Test(timeout = 4000)
    public void test0812906() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        qName1.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0812907() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        qName1.toString();
    }

    @Test(timeout = 4000)
    public void test0812908() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0812909() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0812910() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0822929() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
    }

    @Test(timeout = 4000)
    public void test0822930() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0822931() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0822932() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0822933() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0822934() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0822935() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0822936() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
    }

    @Test(timeout = 4000)
    public void test0822937() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0822938() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0822939() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0822940() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0822941() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0822942() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0822943() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0822944() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0822945() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0822946() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0822949() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test0822950() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0822951() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0822952() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0822953() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0822954() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0822955() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0822956() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0822957() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0822958() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0822959() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0822960() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0822961() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0822962() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        boolean boolean0 = nodePointer0.testNode(nodeNameTest0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0833041() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test0833043() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0833044() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0833045() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0833046() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0833047() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0833048() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0833049() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0833050() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0833051() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0833052() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0833053() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0833054() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0833055() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0833056() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0833057() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0833058() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0833059() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0833060() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0833061() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0833062() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0833063() throws Throwable {
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) nodeTypeTest0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        boolean boolean0 = beanPointer0.testNode(nodeTypeTest0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0843083() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
    }

    @Test(timeout = 4000)
    public void test0843084() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0843085() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0843086() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0843087() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0843088() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0843089() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0843090() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0843091() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0843092() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0843093() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0843096() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        nodePointer0.getRootNode();
    }

    @Test(timeout = 4000)
    public void test0853177() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
    }

    @Test(timeout = 4000)
    public void test0853181() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0853182() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0853183() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0853184() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0853185() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0853186() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0853187() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0853188() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0853189() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0853190() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0853191() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0853192() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0853193() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0853194() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0853195() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0853196() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0853197() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0853198() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0853199() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0853200() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0853201() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0853202() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer1.getIndex();
    }

    @Test(timeout = 4000)
    public void test0853203() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer1.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0853204() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer1.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0853205() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer1.isRoot();
    }

    @Test(timeout = 4000)
    public void test0853206() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer1.isCollection();
    }

    @Test(timeout = 4000)
    public void test0853207() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer1.isNode();
    }

    @Test(timeout = 4000)
    public void test0853208() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer1.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0853209() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer1.getLength();
    }

    @Test(timeout = 4000)
    public void test0853210() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(749);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("@{g}t");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        VariablePointer variablePointer1 = (VariablePointer) variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) jXPathContextReferenceImpl0);
        BeanPointer beanPointer0 = (BeanPointer) variablePointer0.getImmediateValuePointer();
        BeanPointer beanPointer1 = (BeanPointer) beanPointer0.getValuePointer();
        beanPointer1.isContainer();
    }

    @Test(timeout = 4000)
    public void test0863246() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test0863248() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0863249() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0863250() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0863251() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0863252() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0863253() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0863254() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0863255() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0863256() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0863257() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0863258() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0863259() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0863260() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0863261() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0863262() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0863263() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0863264() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0863265() throws Throwable {
        QName qName0 = new QName("zn>.Dq;=2q0U!|^pCV", "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        String string0 = (String) beanPointer0.getValue();
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0873267() throws Throwable {
        QName qName0 = new QName("$;g;e");
    }

    @Test(timeout = 4000)
    public void test0873268() throws Throwable {
        QName qName0 = new QName("$;g;e");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0873269() throws Throwable {
        QName qName0 = new QName("$;g;e");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0873270() throws Throwable {
        QName qName0 = new QName("$;g;e");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0873271() throws Throwable {
        QName qName0 = new QName("$;g;e");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
    }

    @Test(timeout = 4000)
    public void test0873272() throws Throwable {
        QName qName0 = new QName("$;g;e");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0873273() throws Throwable {
        QName qName0 = new QName("$;g;e");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0873274() throws Throwable {
        QName qName0 = new QName("$;g;e");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0873275() throws Throwable {
        QName qName0 = new QName("$;g;e");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0873276() throws Throwable {
        QName qName0 = new QName("$;g;e");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0873277() throws Throwable {
        QName qName0 = new QName("$;g;e");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0873278() throws Throwable {
        QName qName0 = new QName("$;g;e");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0873279() throws Throwable {
        QName qName0 = new QName("$;g;e");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0873280() throws Throwable {
        QName qName0 = new QName("$;g;e");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test0873281() throws Throwable {
        QName qName0 = new QName("$;g;e");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0873282() throws Throwable {
        QName qName0 = new QName("$;g;e");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0873283() throws Throwable {
        QName qName0 = new QName("$;g;e");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0873284() throws Throwable {
        QName qName0 = new QName("$;g;e");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0873285() throws Throwable {
        QName qName0 = new QName("$;g;e");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0873287() throws Throwable {
        QName qName0 = new QName("$;g;e");
        NullPointer nullPointer0 = (NullPointer) NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
        nullPointer0.getPointerByID((JXPathContext) null, "/");
    }

    @Test(timeout = 4000)
    public void test0883292() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
    }

    @Test(timeout = 4000)
    public void test0883293() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0883294() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0883295() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0883296() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0883297() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0883298() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0883299() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
    }

    @Test(timeout = 4000)
    public void test0883300() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0883301() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0883302() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0883303() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0883304() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0883305() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0883306() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0883307() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0883308() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0883309() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0883310() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0883311() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0883312() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0883313() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0883314() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0883315() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0883316() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0883317() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0883319() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0883320() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0883321() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0883322() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0883323() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0883324() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0883325() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0883326() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0883327() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0883328() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0883329() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0883330() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0883331() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0883332() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0883333() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0883334() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0883335() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0883336() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0883337() throws Throwable {
        QName qName0 = new QName("", "");
        Locale locale0 = Locale.GERMANY;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        int int0 = beanPointer0.getIndex();
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0893356() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNode();
    }

    @Test(timeout = 4000)
    public void test0903366() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
    }

    @Test(timeout = 4000)
    public void test0903367() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0903368() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0903369() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0903370() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0903371() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0903372() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0903373() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0903376() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        boolean boolean0 = nodePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0903377() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        boolean boolean0 = nodePointer0.isContainer();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0903378() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        boolean boolean0 = nodePointer0.isContainer();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0903379() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        boolean boolean0 = nodePointer0.isContainer();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0903380() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        boolean boolean0 = nodePointer0.isContainer();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0903381() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        boolean boolean0 = nodePointer0.isContainer();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0903382() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        boolean boolean0 = nodePointer0.isContainer();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0903383() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        boolean boolean0 = nodePointer0.isContainer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0913386() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
    }

    @Test(timeout = 4000)
    public void test0913387() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0913388() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0913389() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0913390() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test0913391() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0913392() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0913393() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0913394() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0913395() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0913396() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0913397() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0913398() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0913399() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0913400() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0913402() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        String string0 = variablePointer0.getNamespaceURI((String) null);
    }

    @Test(timeout = 4000)
    public void test0913403() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        String string0 = variablePointer0.getNamespaceURI((String) null);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0913404() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        String string0 = variablePointer0.getNamespaceURI((String) null);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0913405() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        String string0 = variablePointer0.getNamespaceURI((String) null);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0913406() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        String string0 = variablePointer0.getNamespaceURI((String) null);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0913407() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        String string0 = variablePointer0.getNamespaceURI((String) null);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0913408() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        String string0 = variablePointer0.getNamespaceURI((String) null);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0913409() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        String string0 = variablePointer0.getNamespaceURI((String) null);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0913410() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        String string0 = variablePointer0.getNamespaceURI((String) null);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0913411() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        String string0 = variablePointer0.getNamespaceURI((String) null);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0913412() throws Throwable {
        QName qName0 = new QName(",e2Z#_fstZ9RYK_*");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        String string0 = variablePointer0.getNamespaceURI((String) null);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0923455() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
    }

    @Test(timeout = 4000)
    public void test0923456() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0923457() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0923458() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0923459() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test0923460() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0923461() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0923462() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0923463() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0923464() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0923465() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0923466() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0923467() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0923468() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0923469() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0923470() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0923471() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0923472() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0923473() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0923474() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0923475() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0923476() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
        NodeIterator nodeIterator0 = beanPointer0.namespaceIterator();
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0933495() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
    }

    @Test(timeout = 4000)
    public void test0933496() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0933497() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0933498() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0933499() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0933500() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0933501() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0933502() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0933503() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0933504() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0933505() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0933506() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0933507() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0933508() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0933509() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0933510() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0933511() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0933512() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0933513() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0933514() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0933517() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
    }

    @Test(timeout = 4000)
    public void test0933520() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0933521() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0933522() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0933523() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0933524() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0933525() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0933526() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0933527() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0933528() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0933529() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0933530() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0933531() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0933532() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0933533() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0933534() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0933535() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0933536() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0933537() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0933538() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0933539() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        variablePointer1.isContainer();
    }

    @Test(timeout = 4000)
    public void test0933540() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        variablePointer1.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0933541() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        variablePointer1.isActual();
    }

    @Test(timeout = 4000)
    public void test0933542() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        variablePointer1.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0933543() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        variablePointer1.isNode();
    }

    @Test(timeout = 4000)
    public void test0933544() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        variablePointer1.isRoot();
    }

    @Test(timeout = 4000)
    public void test0933545() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        VariablePointer variablePointer1 = (VariablePointer) beanPointer0.getImmediateParentPointer();
        variablePointer1.getIndex();
    }

    @Test(timeout = 4000)
    public void test0943567() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        String string0 = variablePointer0.toString();
    }

    @Test(timeout = 4000)
    public void test0943569() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        String string0 = variablePointer0.toString();
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0943570() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        String string0 = variablePointer0.toString();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0943571() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        String string0 = variablePointer0.toString();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0943572() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        String string0 = variablePointer0.toString();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0943573() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        String string0 = variablePointer0.toString();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0943574() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        String string0 = variablePointer0.toString();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0943575() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        String string0 = variablePointer0.toString();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0943576() throws Throwable {
        Object object0 = new Object();
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext(object0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        String string0 = variablePointer0.toString();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0953580() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
    }

    @Test(timeout = 4000)
    public void test0953581() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0953582() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0953583() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0953584() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test0953585() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0953586() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0953587() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0953588() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0953589() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0953590() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0953591() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0953592() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0953593() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0953594() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0953596() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
    }

    @Test(timeout = 4000)
    public void test0953597() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0953598() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0953599() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0953600() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0953601() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0953602() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0953603() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0953604() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0953605() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0953606() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0953607() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0953608() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0953609() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0953610() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0953611() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0953612() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0953613() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0953614() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0953615() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0953618() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0953619() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0953620() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0953621() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0953622() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0953623() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0953624() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0953625() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0953626() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0953627() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0953628() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0953629() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0953630() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0953631() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0953632() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0953633() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0953634() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0953635() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0953636() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0953637() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("false()", "ffkD7dzT");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, "ffkD7dzT");
        beanPointer0.setNamespaceResolver((NamespaceResolver) null);
    }

    @Test(timeout = 4000)
    public void test0963649() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
    }

    @Test(timeout = 4000)
    public void test0963650() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0963651() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0963652() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0963653() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    }

    @Test(timeout = 4000)
    public void test0963654() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0963655() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0963656() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0963657() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0963658() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0963659() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0963660() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0963661() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0963662() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0963663() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0963664() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0963665() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0963668() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        int int0 = variablePointer0.compareTo(variablePointer0);
    }

    @Test(timeout = 4000)
    public void test0963669() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        int int0 = variablePointer0.compareTo(variablePointer0);
        nodeTypeTest0.getNodeType();
    }

    @Test(timeout = 4000)
    public void test0963670() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        int int0 = variablePointer0.compareTo(variablePointer0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0963671() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        int int0 = variablePointer0.compareTo(variablePointer0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0963672() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        int int0 = variablePointer0.compareTo(variablePointer0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0963673() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        int int0 = variablePointer0.compareTo(variablePointer0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0963674() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        int int0 = variablePointer0.compareTo(variablePointer0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0963675() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        int int0 = variablePointer0.compareTo(variablePointer0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0963676() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        int int0 = variablePointer0.compareTo(variablePointer0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0963677() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        int int0 = variablePointer0.compareTo(variablePointer0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0963678() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        int int0 = variablePointer0.compareTo(variablePointer0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0963679() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        int int0 = variablePointer0.compareTo(variablePointer0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0963680() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) nodeTypeTest0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        int int0 = variablePointer0.compareTo(variablePointer0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0973692() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
    }

    @Test(timeout = 4000)
    public void test0973693() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0973694() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0973695() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0973696() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0973697() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0973698() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0973699() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0973702() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
    }

    @Test(timeout = 4000)
    public void test0973703() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0973704() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0973705() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0973706() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0973707() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0973708() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0973709() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0973710() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0973711() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0973712() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0973713() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0973714() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0973715() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0973716() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0973717() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0973718() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0973722() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) variablePointer0);
    }

    @Test(timeout = 4000)
    public void test0973723() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) variablePointer0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0973724() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) variablePointer0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0973725() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) variablePointer0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0973726() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) variablePointer0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0973727() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) variablePointer0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0973728() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) variablePointer0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0973729() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) variablePointer0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0973730() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) variablePointer0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0973733() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) variablePointer0);
        QName qName0 = new QName("<<unknown namespace>>");
    }

    @Test(timeout = 4000)
    public void test0973734() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) variablePointer0);
        QName qName0 = new QName("<<unknown namespace>>");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0973735() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) variablePointer0);
        QName qName0 = new QName("<<unknown namespace>>");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0973736() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) variablePointer0);
        QName qName0 = new QName("<<unknown namespace>>");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0973737() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(nodePointer0, (QName) null, variablePointer0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) variablePointer0);
        QName qName0 = new QName("<<unknown namespace>>");
        beanPointer0.createAttribute(jXPathContextReferenceImpl0, qName0);
    }

    @Test(timeout = 4000)
    public void test0983738() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
    }

    @Test(timeout = 4000)
    public void test0983739() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0983740() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0983741() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0983742() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
    }

    @Test(timeout = 4000)
    public void test0983743() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0983744() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0983745() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0983746() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0983747() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0983748() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0983749() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0983750() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0983751() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0983752() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0983754() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
    }

    @Test(timeout = 4000)
    public void test0983755() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0983756() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0983757() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0983758() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0983759() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0983760() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0983761() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
    }

    @Test(timeout = 4000)
    public void test0983762() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0983763() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0983764() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0983765() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0983766() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0983767() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0983768() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0983769() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0983770() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0983771() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0983772() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0983773() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0983774() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0983775() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0983776() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0983777() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0983778() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0983779() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0983780() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0983781() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0983782() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0983783() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0983784() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0983785() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0983786() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0983789() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
    }

    @Test(timeout = 4000)
    public void test0983790() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer1.equals((Object) beanPointer0);
    }

    @Test(timeout = 4000)
    public void test0983793() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0983794() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0983795() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0983796() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0983797() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0983798() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0983799() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0983800() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0983801() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0983802() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0983803() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test0983804() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test0983805() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test0983806() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test0983807() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test0983808() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test0983809() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0983810() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0983811() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0983812() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0983813() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test0983814() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test0983815() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0983816() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0983817() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0983818() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer1.isRoot();
    }

    @Test(timeout = 4000)
    public void test0983819() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer1.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test0983820() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer1.isNode();
    }

    @Test(timeout = 4000)
    public void test0983821() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer1.isCollection();
    }

    @Test(timeout = 4000)
    public void test0983822() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer1.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0983823() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer1.getIndex();
    }

    @Test(timeout = 4000)
    public void test0983824() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer1.isContainer();
    }

    @Test(timeout = 4000)
    public void test0983825() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer1.getLength();
    }

    @Test(timeout = 4000)
    public void test0983826() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        beanPointer1.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0983830() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
    }

    @Test(timeout = 4000)
    public void test0983831() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test0983833() throws Throwable {
        QName qName0 = new QName("T-9'|*M(xF[", "T-9'|*M(xF[");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, variablePointer0, locale0);
        BeanPointer beanPointer1 = (BeanPointer) NodePointer.newChildNodePointer(beanPointer0, qName0, qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) null);
        beanPointer1.createChild((JXPathContext) jXPathContextReferenceImpl0, qName0, Integer.MIN_VALUE, (Object) variablePointer0);
    }

    @Test(timeout = 4000)
    public void test0993863() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
    }

    @Test(timeout = 4000)
    public void test0993864() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        qName0.equals((Object) qName1);
    }

    @Test(timeout = 4000)
    public void test0993865() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        qName1.equals((Object) qName0);
    }

    @Test(timeout = 4000)
    public void test0993868() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test0993869() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0993870() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test0993871() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test0993872() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test0993873() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test0993874() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test0993875() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test0993876() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0993877() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test0993878() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        qName1.getName();
    }

    @Test(timeout = 4000)
    public void test0993879() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        qName1.toString();
    }

    @Test(timeout = 4000)
    public void test0993880() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        qName1.getPrefix();
    }

    @Test(timeout = 4000)
    public void test0993881() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test0993882() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test0993883() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("Was expecting one of:", "<<unknown namespace>>");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        NodeIterator nodeIterator0 = variablePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test1003904() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Locale locale0 = nodePointer0.getLocale();
    }

    @Test(timeout = 4000)
    public void test1003905() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Locale locale0 = nodePointer0.getLocale();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test1003906() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Locale locale0 = nodePointer0.getLocale();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test1003907() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Locale locale0 = nodePointer0.getLocale();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test1003908() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Locale locale0 = nodePointer0.getLocale();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1003909() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Locale locale0 = nodePointer0.getLocale();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test1003910() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Locale locale0 = nodePointer0.getLocale();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test1003911() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        Locale locale0 = nodePointer0.getLocale();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1013930() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = variablePointer0.getLocale();
    }

    @Test(timeout = 4000)
    public void test1013931() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = variablePointer0.getLocale();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test1013932() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = variablePointer0.getLocale();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test1013933() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = variablePointer0.getLocale();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test1013934() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = variablePointer0.getLocale();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1013935() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = variablePointer0.getLocale();
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test1013936() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = variablePointer0.getLocale();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1013937() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = variablePointer0.getLocale();
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test1013938() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = variablePointer0.getLocale();
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test1013939() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = variablePointer0.getLocale();
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test1013940() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Locale locale0 = variablePointer0.getLocale();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test1023946() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
    }

    @Test(timeout = 4000)
    public void test1023947() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test1023948() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1023949() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test1023950() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test1023951() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test1023952() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test1023953() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1023955() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
    }

    @Test(timeout = 4000)
    public void test1023956() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test1023957() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test1023958() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test1023959() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test1023960() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test1023961() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test1023962() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test1023963() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test1023964() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test1023965() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test1023966() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test1023967() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1023968() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test1023969() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test1023970() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test1023971() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test1023972() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1023973() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
        nodeNameTest0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test1023974() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
        nodeNameTest0.isWildcard();
    }

    @Test(timeout = 4000)
    public void test1023975() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test1033993() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.testNode((NodeTest) null);
    }

    @Test(timeout = 4000)
    public void test1033994() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.testNode((NodeTest) null);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test1033995() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.testNode((NodeTest) null);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test1033996() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.testNode((NodeTest) null);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test1033997() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.testNode((NodeTest) null);
        variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test1033998() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.testNode((NodeTest) null);
        variablePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test1033999() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.testNode((NodeTest) null);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1034000() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.testNode((NodeTest) null);
        variablePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test1034001() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.testNode((NodeTest) null);
        variablePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test1034002() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.testNode((NodeTest) null);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test1034003() throws Throwable {
        QName qName0 = new QName("%", "%");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.testNode((NodeTest) null);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1044005() throws Throwable {
        QName qName0 = new QName("(");
    }

    @Test(timeout = 4000)
    public void test1044006() throws Throwable {
        QName qName0 = new QName("(");
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test1044007() throws Throwable {
        QName qName0 = new QName("(");
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test1044008() throws Throwable {
        QName qName0 = new QName("(");
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test1044009() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
    }

    @Test(timeout = 4000)
    public void test1044010() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test1044011() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test1044012() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test1044013() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test1044014() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
    }

    @Test(timeout = 4000)
    public void test1044015() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test1044016() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test1044017() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test1044018() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test1044019() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test1044020() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test1044021() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test1044022() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test1044023() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test1044024() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test1044025() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test1044026() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test1044027() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test1044028() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1044029() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1044030() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test1044032() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
    }

    @Test(timeout = 4000)
    public void test1044033() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test1044034() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test1044035() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test1044036() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test1044037() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test1044039() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
    }

    @Test(timeout = 4000)
    public void test1044040() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        jXPathContextReferenceImpl1.equals((Object) jXPathContextReferenceImpl0);
    }

    @Test(timeout = 4000)
    public void test1044043() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test1044044() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test1044045() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test1044046() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test1044047() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test1044048() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test1044049() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test1044050() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test1044051() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test1044052() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test1044053() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test1044054() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test1044055() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test1044056() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1044057() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1044058() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test1044059() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        jXPathContextReferenceImpl0.isLenient();
    }

    @Test(timeout = 4000)
    public void test1044060() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        jXPathContextReferenceImpl1.isLenient();
    }

    @Test(timeout = 4000)
    public void test1044064() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
    }

    @Test(timeout = 4000)
    public void test1044066() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test1044067() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test1044068() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test1044069() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test1044070() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test1044071() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test1044072() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test1044073() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test1044074() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test1044075() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test1044076() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test1044077() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test1044078() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test1044079() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1044080() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1044081() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl1 = (JXPathContextReferenceImpl) jXPathContextReferenceImpl0.getRelativeContext(beanPointer0);
        String string0 = (String) beanPointer0.getRootNode();
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test1054114() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test1054115() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test1054116() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test1054117() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        qName0.getPrefix();
    }

    @Test(timeout = 4000)
    public void test1054118() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        locale0.getISO3Language();
    }

    @Test(timeout = 4000)
    public void test1054119() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test1054120() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test1054121() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test1054122() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test1054123() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test1054124() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        beanPointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test1054125() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        beanPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1054126() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        beanPointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test1054127() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        beanPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test1054128() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        beanPointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test1054129() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        beanPointer0.isDynamicPropertyDeclarationSupported();
    }

    @Test(timeout = 4000)
    public void test1054130() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        beanPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test1054131() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        beanPointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1054132() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = beanPointer0.isActual();
        beanPointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test1064134() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "(b]\"/{");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test1074135() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        boolean boolean0 = nodePointer0.isNode();
        nodePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test1074136() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        boolean boolean0 = nodePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test1074137() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        boolean boolean0 = nodePointer0.isNode();
        nodePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1074138() throws Throwable {
        QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "", "");
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
        boolean boolean0 = nodePointer0.isNode();
        nodePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1084139() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeNameTest0);
        Variables variables0 = jXPathContext0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
        boolean boolean0 = variablePointer0.isNode();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1084140() throws Throwable {
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeNameTest0);
        Variables variables0 = jXPathContext0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
        boolean boolean0 = variablePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test1094141() throws Throwable {
        QName qName0 = new QName("hV21", "/@");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1094142() throws Throwable {
        QName qName0 = new QName("hV21", "/@");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.isRoot();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1104143() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, (QName) null, (Object) null);
        boolean boolean0 = nodePointer0.isRoot();
        nodePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1104144() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, (QName) null, (Object) null);
        boolean boolean0 = nodePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1114145() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "(b]\"/{");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        NodePointer nodePointer1 = nodePointer0.getParent();
    }

    @Test(timeout = 4000)
    public void test1114146() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "(b]\"/{");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
        NodePointer nodePointer1 = nodePointer0.getParent();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1124147() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1124148() throws Throwable {
        QName qName0 = new QName("UNKNOWN");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = variablePointer0.getValuePointer();
        nodePointer0.getNamespaceResolver();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1134149() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeTypeTest0);
        Variables variables0 = jXPathContext0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1134150() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3122);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeTypeTest0);
        Variables variables0 = jXPathContext0.getVariables();
        QName qName0 = new QName("LPBVL");
        VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
        variablePointer0.getNamespaceResolver();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1144151() throws Throwable {
        QName qName0 = new QName("Was expecting one of", (String) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Z6|_I{3LQ)~T,$OSBZH-TW");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeNameTest0);
        Variables variables0 = jXPathContext0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
        variablePointer0.getPointerByID(jXPathContext0, (String) null);
    }

    @Test(timeout = 4000)
    public void test1154152() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("", "A");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1154153() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("", "A");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1154154() throws Throwable {
        QName qName0 = new QName(", operation is not allowed for this type of node", ", operation is not allowed for this type of node");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        QName qName1 = new QName("", "A");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
        boolean boolean0 = variablePointer0.testNode(nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test1164155() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, variablePointer0, (Locale) null);
        nodePointer0.namespacePointer("<<unknown namespace>>");
        nodePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1164156() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, variablePointer0, (Locale) null);
        nodePointer0.namespacePointer("<<unknown namespace>>");
        nodePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test1164157() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, variablePointer0, (Locale) null);
        nodePointer0.namespacePointer("<<unknown namespace>>");
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1164158() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, variablePointer0, (Locale) null);
        nodePointer0.namespacePointer("<<unknown namespace>>");
        nodePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1164159() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
        NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, variablePointer0, (Locale) null);
        nodePointer0.namespacePointer("<<unknown namespace>>");
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1174160() throws Throwable {
        QName qName0 = new QName("hV21", "' and '");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1174161() throws Throwable {
        QName qName0 = new QName("hV21", "' and '");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.getNamespaceURI();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1184162() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
    }

    @Test(timeout = 4000)
    public void test1184163() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        NodePointer nodePointer1 = nodePointer0.createPath((JXPathContext) null);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1184164() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        NodePointer nodePointer1 = nodePointer0.createPath((JXPathContext) null);
        nodePointer1.isRoot();
    }

    @Test(timeout = 4000)
    public void test1184165() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Vzm&]`p9tkIVzH");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        NodePointer nodePointer1 = nodePointer0.createPath((JXPathContext) null);
        nodePointer1.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1194166() throws Throwable {
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "substring-before");
        Variables variables0 = jXPathContext0.getVariables();
        QName qName0 = new QName("(F");
        VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
        variablePointer0.getDefaultNamespaceURI();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1194167() throws Throwable {
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "substring-before");
        Variables variables0 = jXPathContext0.getVariables();
        QName qName0 = new QName("(F");
        VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
        variablePointer0.getDefaultNamespaceURI();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1204168() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "", locale0);
    }

    @Test(timeout = 4000)
    public void test1204169() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = nodePointer0.isLanguage("Was expecting one of");
    }

    @Test(timeout = 4000)
    public void test1204170() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = nodePointer0.isLanguage("Was expecting one of");
        nodePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1204171() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = nodePointer0.isLanguage("Was expecting one of");
        nodePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1204172() throws Throwable {
        QName qName0 = new QName("b}suu:/Feh.z", "");
        Locale locale0 = Locale.CANADA_FRENCH;
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "", locale0);
        boolean boolean0 = nodePointer0.isLanguage("Was expecting one of");
        nodePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test1214173() throws Throwable {
        QName qName0 = new QName((String) null, "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
        nodePointer0.createPath((JXPathContext) null, (Object) variablePointer0);
    }

    @Test(timeout = 4000)
    public void test1224176() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("Hce<v[>5Q1");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.printPointerChain();
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1234177() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.isAttribute();
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test1234178() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1234179() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        boolean boolean0 = variablePointer0.isAttribute();
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1244180() throws Throwable {
        QName qName0 = new QName("(");
        Locale locale0 = new Locale("yj", "yj");
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "yj", locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
        nodePointer0.createChild(jXPathContext0, qName0, 6);
    }

    @Test(timeout = 4000)
    public void test1254181() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "(b]\"/{");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setAttribute(false);
        variablePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test1254182() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "(b]\"/{");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setAttribute(false);
        variablePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test1254183() throws Throwable {
        QName qName0 = new QName("(b]\"/{", "(b]\"/{");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        variablePointer0.setAttribute(false);
        variablePointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test1264184() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("'");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "'");
        variablePointer0.getPointerByKey(jXPathContext0, "'", "'");
    }
}
