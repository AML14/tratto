/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 04 06:16:03 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.PrepareAst;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class PrepareAst_ESTest extends PrepareAst_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("vZ0bc$RRC");
        PrepareAst prepareAst0 = new PrepareAst(compiler0, true);
        prepareAst0.process(node0, node0);
        node0.isWhile();
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        Compiler compiler0 = new Compiler();
        PrepareAst prepareAst0 = new PrepareAst(compiler0);
        prepareAst0.process((Node) null, (Node) null);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = Node.newString(108, "i)=mbX|RwV1q:", 108, 108);
        PrepareAst prepareAst0 = new PrepareAst(compiler0, true);
        Node node1 = new Node(108, node0);
        prepareAst0.process(node0, node1);
        node1.isDelProp();
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        Compiler compiler0 = new Compiler();
        compiler0.parseTestCode("vZ0bc$RRC");
        compiler0.ensureLibraryInjected("vZ0bc$RRC");
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("A function call cannot be of the form: new Object.call()");
        PrepareAst prepareAst0 = new PrepareAst(compiler0);
        Node node1 = new Node(37, node0, node0, 0, 52);
        prepareAst0.process(node1, node1);
        node1.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test55() throws Throwable {
        PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, prepareAst_PrepareAnnotations0);
        Node node0 = new Node(105);
        prepareAst_PrepareAnnotations0.visit(nodeTraversal0, node0, node0);
    }
}
