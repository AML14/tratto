/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 31 06:26:25 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Position;
import com.google.javascript.jscomp.SourceMap;
import com.google.javascript.rhino.Node;
import java.io.CharArrayWriter;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class SourceMap_ESTest extends SourceMap_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        SourceMap sourceMap0 = new SourceMap();
        sourceMap0.setStartingPosition(1950, 1950);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        SourceMap sourceMap0 = new SourceMap();
        sourceMap0.reset();
    }

    @Test(timeout = 4000)
    public void test032() throws Throwable {
        SourceMap sourceMap0 = new SourceMap();
        Node node0 = Node.newString("LC2'5#j2=^o1g^C_a");
        Position position0 = new Position(1, 4095);
        sourceMap0.addMapping(node0, position0, position0);
    }

    @Test(timeout = 4000)
    public void test043() throws Throwable {
        SourceMap sourceMap0 = new SourceMap();
        Node node0 = Node.newString(22, "\"Z{)3m=.vhNxmrqpi");
        node0.putProp(38, "\"Z{)3m=.vhNxmrqpi");
        Position position0 = new Position(5, 16);
        sourceMap0.addMapping(node0, position0, position0);
    }

    @Test(timeout = 4000)
    public void test054() throws Throwable {
        SourceMap sourceMap0 = new SourceMap();
        Node node0 = Node.newString(22, "\"Z{)hm=.vhNxmOqpi", 22, 22);
        node0.putProp(38, "\"Z{)hm=.vhNxmOqpi");
        Position position0 = new Position(1, (-2785));
        sourceMap0.addMapping(node0, position0, position0);
        sourceMap0.addMapping(node0, position0, position0);
        StringWriter stringWriter0 = new StringWriter();
        sourceMap0.appendTo(stringWriter0, "\"Z{)hm=.vhNxmOqpi");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test065() throws Throwable {
        SourceMap sourceMap0 = new SourceMap();
        Node node0 = Node.newString(22, "\"Z{)hm=.vhNxmOqpi", 22, 22);
        node0.putProp(38, "\"Z{)hm=.vhNxmOqpi");
        Position position0 = new Position(1, (-2785));
        node0.putProp(40, "]\n");
        sourceMap0.addMapping(node0, position0, position0);
        node0.isUnscopedQualifiedName();
    }

    @Test(timeout = 4000)
    public void test076() throws Throwable {
        SourceMap sourceMap0 = new SourceMap();
        sourceMap0.setWrapperPrefix("[]\n");
    }

    @Test(timeout = 4000)
    public void test087() throws Throwable {
        SourceMap sourceMap0 = new SourceMap();
        StringWriter stringWriter0 = new StringWriter();
        sourceMap0.appendTo(stringWriter0, "F8`xq%`^\"KExo_3+5");
    }

    @Test(timeout = 4000)
    public void test098() throws Throwable {
        SourceMap sourceMap0 = new SourceMap();
        Node node0 = Node.newString(22, "\"Z{)hm=.vhNxmOqpi", 22, 22);
        node0.putProp(38, "\"Z{)hm=.vhNxmOqpi");
        Position position0 = new Position(1, (-2785));
        Position position1 = new Position(1, (-1545));
        sourceMap0.addMapping(node0, position1, position0);
        sourceMap0.addMapping(node0, position1, position1);
        StringWriter stringWriter0 = new StringWriter();
        sourceMap0.appendTo(stringWriter0, "\"Z{)hm=.vhNxmOqpi");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test109() throws Throwable {
        SourceMap sourceMap0 = new SourceMap();
        Node node0 = Node.newString(22, "WZ{)h^=.vTxmOqp+i", 22, 22);
        node0.putProp(38, "WZ{)h^=.vTxmOqp+i");
        Position position0 = new Position(5, 19);
        Position position1 = new Position(41, 34);
        sourceMap0.addMapping(node0, position0, position1);
        sourceMap0.addMapping(node0, position0, position0);
        StringWriter stringWriter0 = new StringWriter();
        sourceMap0.appendTo(stringWriter0, "WZ{)h^=.vTxmOqp+i");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test1110() throws Throwable {
        SourceMap sourceMap0 = new SourceMap();
        Node node0 = new Node(22, 22, 22);
        node0.putProp(38, "\"Z{)hm=.vhNxmOqpi");
        Position position0 = new Position(32, 40);
        Position position1 = new Position(40, (-2275));
        sourceMap0.addMapping(node0, position1, position0);
        StringWriter stringWriter0 = new StringWriter(20);
        sourceMap0.appendTo(stringWriter0, "\"Z{)hm=.vhNxmOqpi");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test1211() throws Throwable {
        SourceMap sourceMap0 = new SourceMap();
        Node node0 = Node.newString(15, "WZ{)h:=.vTxmOq;+i", 15, 15);
        node0.putProp(38, "WZ{)h:=.vTxmOq;+i");
        Position position0 = new Position(31, 2);
        Position position1 = new Position(31, 40);
        sourceMap0.addMapping(node0, position0, position1);
        StringWriter stringWriter0 = new StringWriter(2);
        sourceMap0.appendTo(stringWriter0, "HG>2L'/;>mhE!{ ");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test1312() throws Throwable {
        SourceMap sourceMap0 = new SourceMap();
        Node node0 = Node.newString(22, "\"Z{)hm=.vhNxmOqpi", 22, 22);
        node0.putProp(38, "\"Z{)hm=.vhNxmOqpi");
        Position position0 = new Position((-2), 0);
        sourceMap0.addMapping(node0, position0, position0);
        StringWriter stringWriter0 = new StringWriter();
        sourceMap0.appendTo(stringWriter0, "\"Z{)hm=.vhNxmOqpi");
    }

    @Test(timeout = 4000)
    public void test1413() throws Throwable {
        SourceMap sourceMap0 = new SourceMap();
        Node node0 = new Node(26, 26, 95);
        node0.putProp(38, "aZ%$d9");
        Position position0 = new Position(0, (-1835));
        sourceMap0.addMapping(node0, position0, position0);
        StringWriter stringWriter0 = new StringWriter();
        sourceMap0.appendTo(stringWriter0, "]\n");
    }
}
