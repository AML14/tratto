/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 04 09:04:35 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JsAst;
import com.google.javascript.jscomp.SourceFile;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.rhino.Node;
import java.util.ArrayList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class JsAst_ESTest extends JsAst_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        SyntheticAst syntheticAst0 = new SyntheticAst("com.google.javascript.rhino.head.ast.ParenthesizedExpression");
        SourceFile sourceFile0 = syntheticAst0.getSourceFile();
        JsAst jsAst0 = new JsAst(sourceFile0);
        jsAst0.clearAst();
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        SourceFile sourceFile0 = SourceFile.fromFile("^,Pl%K");
        JsAst jsAst0 = new JsAst(sourceFile0);
        jsAst0.setSourceFile(sourceFile0);
        sourceFile0.getOriginalPath();
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        SourceFile sourceFile0 = SourceFile.fromCode("|XB12`zHog09(#(_", "");
        ArrayList<SourceFile> arrayList0 = new ArrayList<SourceFile>();
        Compiler compiler0 = new Compiler();
        ImmutableList.of(sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0);
        CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
        compiler0.init((List<SourceFile>) arrayList0, (List<SourceFile>) arrayList0, compilerOptions0);
        JsAst jsAst0 = new JsAst(sourceFile0);
        jsAst0.getAstRoot(compiler0);
        Node node0 = jsAst0.getAstRoot(compiler0);
    }

    @Test(timeout = 4000)
    public void test23() throws Throwable {
        SourceFile sourceFile0 = SourceFile.fromCode("|XB12`zHog09(#(_", "");
        ArrayList<SourceFile> arrayList0 = new ArrayList<SourceFile>();
        Compiler compiler0 = new Compiler();
        ImmutableList.of(sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0);
        CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
        compiler0.init((List<SourceFile>) arrayList0, (List<SourceFile>) arrayList0, compilerOptions0);
        JsAst jsAst0 = new JsAst(sourceFile0);
        jsAst0.getAstRoot(compiler0);
        Node node0 = jsAst0.getAstRoot(compiler0);
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test34() throws Throwable {
        CompilerOptions compilerOptions0 = new CompilerOptions();
        Compiler compiler0 = new Compiler();
        compiler0.parseTestCode("|XB12`zHog09(#(_");
    }

    @Test(timeout = 4000)
    public void test45() throws Throwable {
        SourceFile sourceFile0 = SourceFile.fromCode("|XB12`zHog09(#(_", "");
        ArrayList<SourceFile> arrayList0 = new ArrayList<SourceFile>();
        CompilerOptions compilerOptions0 = new CompilerOptions();
        Compiler compiler0 = new Compiler();
        SourceFile sourceFile1 = SourceFile.fromCode("|XB12`zHog09(#(_", (String) null);
        ImmutableList<SourceFile> immutableList0 = ImmutableList.of(sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile1);
        compiler0.init((List<SourceFile>) arrayList0, (List<SourceFile>) immutableList0, compilerOptions0);
        JsAst jsAst0 = new JsAst(sourceFile0);
        Node node0 = jsAst0.getAstRoot(compiler0);
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test46() throws Throwable {
        SourceFile sourceFile0 = SourceFile.fromCode("|XB12`zHog09(#(_", "");
        ArrayList<SourceFile> arrayList0 = new ArrayList<SourceFile>();
        CompilerOptions compilerOptions0 = new CompilerOptions();
        Compiler compiler0 = new Compiler();
        SourceFile sourceFile1 = SourceFile.fromCode("|XB12`zHog09(#(_", (String) null);
        ImmutableList<SourceFile> immutableList0 = ImmutableList.of(sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile1);
        compiler0.init((List<SourceFile>) arrayList0, (List<SourceFile>) immutableList0, compilerOptions0);
        JsAst jsAst0 = new JsAst(sourceFile0);
        Node node0 = jsAst0.getAstRoot(compiler0);
    }
}
