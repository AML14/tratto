/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 19 22:31:01 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.CodingConvention;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerInput;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Scope;
import com.google.javascript.jscomp.TypedScopeCreator;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.NamedType;
import java.util.List;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class TypedScopeCreator_ESTest extends TypedScopeCreator_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Compiler compiler0 = new Compiler();
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Node node0 = compiler0.parseTestCode("com.google.javascript.jscomp.AnalyzePrototypeProperties$ProcessProperties");
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        scope0.isLocal();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(105);
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        typedScopeCreator0.createScope(node0, (Scope) null);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(118, 118, 118);
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        typedScopeCreator0.createScope(node0, (Scope) null);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Compiler compiler0 = new Compiler();
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Node node0 = compiler0.parseSyntheticCode("$sg.d=p.label", "$sg.d=p.label");
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        scope0.isLocal();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Compiler compiler0 = new Compiler();
        JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
        Stack<JSType> stack0 = new Stack<JSType>();
        Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
        Node node1 = Node.newString("os");
        NamedType namedType0 = new NamedType(jSTypeRegistry0, "os", "os", 6, 4);
        Node node2 = new Node(24, node1, node0);
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, (CodingConvention) null);
        Scope scope0 = new Scope(node0, namedType0);
        typedScopeCreator0.createScope(node2, scope0);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Compiler compiler0 = new Compiler();
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Node node0 = new Node(106);
        Node node1 = new Node(37, node0, node0, node0);
        Scope scope0 = typedScopeCreator0.createScope(node1, (Scope) null);
        scope0.getVarCount();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Compiler compiler0 = new Compiler();
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Node node0 = compiler0.parseSyntheticCode("EmZ|TCN4D=jvq", "EmZ|TCN4D=jvq");
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        scope0.getVarCount();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Compiler compiler0 = new Compiler();
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Node node0 = compiler0.parseTestCode("goog.typedef");
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        scope0.isLocal();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Compiler compiler0 = new Compiler();
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
        Stack<JSType> stack0 = new Stack<JSType>();
        Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
        Node node1 = new Node(36, node0, node0);
        Scope scope0 = typedScopeCreator0.createInitialScope(node0);
        Node node2 = new Node(42, node1, node1);
        Scope scope1 = typedScopeCreator0.createScope(node2, scope0);
        scope1.isLocal();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(118);
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Node node1 = new Node(20, node0, node0, node0, node0);
        Scope scope0 = typedScopeCreator0.createInitialScope(node0);
        typedScopeCreator0.createScope(node1, scope0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Compiler compiler0 = new Compiler();
        JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
        Stack<JSType> stack0 = new Stack<JSType>();
        Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
        Node node1 = Node.newString("");
        Node node2 = new Node(24, node1, node0);
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        Scope scope1 = typedScopeCreator0.createScope(node2, scope0);
        scope1.isLocal();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Compiler compiler0 = new Compiler();
        JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
        Stack<JSType> stack0 = new Stack<JSType>();
        Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
        Node node1 = Node.newString("os");
        NamedType namedType0 = new NamedType(jSTypeRegistry0, "os", "os", 6, 4);
        Node node2 = new Node(24, node1, node0);
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, (CodingConvention) null);
        Scope scope0 = new Scope(node0, namedType0);
        JSSourceFile jSSourceFile0 = JSSourceFile.fromFile("Named type with empty name component");
        CompilerInput compilerInput0 = new CompilerInput(jSSourceFile0, false);
        scope0.declare("os", node0, namedType0, compilerInput0, false);
        typedScopeCreator0.createScope(node2, scope0);
    }
}
