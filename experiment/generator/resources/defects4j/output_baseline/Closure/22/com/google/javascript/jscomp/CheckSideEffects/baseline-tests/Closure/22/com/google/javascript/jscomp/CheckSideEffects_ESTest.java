/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 03 22:53:14 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.CheckLevel;
import com.google.javascript.jscomp.CheckSideEffects;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.rhino.Node;
import java.util.List;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class CheckSideEffects_ESTest extends CheckSideEffects_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("T,w10R");
        CheckLevel checkLevel0 = CheckLevel.OFF;
        CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, true);
        checkSideEffects0.hotSwapScript(node0, node0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(1237, 1237, 1237);
        CheckSideEffects.StripProtection checkSideEffects_StripProtection0 = new CheckSideEffects.StripProtection(compiler0);
        checkSideEffects_StripProtection0.process(node0, node0);
        node0.isTrue();
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode(";jQ---xiR7");
        CheckLevel checkLevel0 = CheckLevel.WARNING;
        CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, true);
        checkSideEffects0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseSyntheticCode("G,w10R", "G,w10R");
        CheckLevel checkLevel0 = CheckLevel.ERROR;
        node0.setType(125);
        CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, false);
        checkSideEffects0.process(node0, node0);
        compiler0.hasErrors();
    }

    @Test(timeout = 4000)
    public void test34() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseSyntheticCode("G,w10R", "G,w10R");
        CheckLevel checkLevel0 = CheckLevel.ERROR;
        node0.setType(125);
        CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, false);
        checkSideEffects0.process(node0, node0);
        compiler0.getErrorCount();
    }

    @Test(timeout = 4000)
    public void test45() throws Throwable {
        Compiler compiler0 = new Compiler();
        CheckLevel checkLevel0 = CheckLevel.ERROR;
        CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, false);
        Node node0 = compiler0.parseTestCode("W`vj%h");
        Node node1 = new Node(115, node0, node0, node0, 4, 12);
        checkSideEffects0.process(node1, node1);
        node1.isWhile();
    }

    @Test(timeout = 4000)
    public void test56() throws Throwable {
        Compiler compiler0 = new Compiler();
        CheckLevel checkLevel0 = CheckLevel.OFF;
        CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, true);
        Node node0 = compiler0.parseTestCode("Q3_5HJ(T)!`]pLmVV");
        Stack<JSSourceFile> stack0 = new Stack<JSSourceFile>();
        Compiler compiler1 = new Compiler();
        NodeTraversal nodeTraversal0 = new NodeTraversal(compiler1, checkSideEffects0);
        CompilerOptions compilerOptions0 = compiler1.newCompilerOptions();
        compiler1.compile((List<JSSourceFile>) stack0, (List<JSSourceFile>) stack0, compilerOptions0);
        Node node1 = new Node(49, node0, node0, node0, 639, (-1053));
        Node node2 = compiler1.parseInputs();
        checkSideEffects0.visit(nodeTraversal0, node0, node2);
        node0.getChildCount();
    }

    @Test(timeout = 4000)
    public void test67() throws Throwable {
        Compiler compiler0 = new Compiler();
        CheckLevel checkLevel0 = CheckLevel.ERROR;
        CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, true);
        Node node0 = compiler0.parseSyntheticCode("Y", "Y");
        Node node1 = Node.newString("Y", 38, 49);
        Node node2 = new Node(125, node0, node0, node1, 39, 32);
        checkSideEffects0.process(node0, node2);
    }

    @Test(timeout = 4000)
    public void test78() throws Throwable {
        Compiler compiler0 = new Compiler();
        CheckLevel checkLevel0 = CheckLevel.OFF;
        CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, true);
        Node node0 = compiler0.parseTestCode("Q3_5HJ(T)!`]pLmVV");
        checkSideEffects0.process(node0, node0);
        node0.isNE();
    }

    @Test(timeout = 4000)
    public void test89() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = Node.newString("i<C>(+N8ct&#'C9");
        Node node1 = new Node(37, node0, node0, node0, 54, 30);
        CheckSideEffects.StripProtection checkSideEffects_StripProtection0 = new CheckSideEffects.StripProtection(compiler0);
        checkSideEffects_StripProtection0.visit((NodeTraversal) null, node1, node0);
    }
}
