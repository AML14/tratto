/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 03 22:30:45 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.ControlFlowAnalysis;
import com.google.javascript.jscomp.ControlFlowGraph;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.ScopeCreator;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class ControlFlowAnalysis_ESTest extends ControlFlowAnalysis_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Node node0 = Node.newString("");
        Node node1 = new Node(119, node0, node0);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node0, node1);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Node node0 = Node.newString("");
        Node node1 = new Node(77, node0, node0);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node0, node1);
        node0.isQuotedString();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Node node0 = new Node(77);
        Node node1 = new Node(49, node0, node0, node0, node0);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false, false);
        controlFlowAnalysis0.process(node0, node1);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Node node0 = new Node(65136, (-95), (-95));
        Node node1 = new Node(112, node0, node0);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true, true);
        controlFlowAnalysis0.process(node1, node1);
        node1.isGetterDef();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true, true);
        ControlFlowGraph<Node> controlFlowGraph0 = controlFlowAnalysis0.getCfg();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Node node0 = Node.newString("JSC_PRIVATE_OVERRIDE", 114, 114);
        Node node1 = new Node(114, node0, node0);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true, true);
        controlFlowAnalysis0.process(node0, node1);
        node1.isWhile();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Node node0 = Node.newString(105, " `<t0R!Q?29!", 105, 105);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true, true);
        controlFlowAnalysis0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Node node0 = Node.newString(105, " `<t0R!Q?29!", 105, 105);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Node node0 = new Node(160);
        Node node1 = new Node(4, node0, node0);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node1, node1);
        node1.isBlock();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Node node0 = new Node((-1803), (-1803), (-1803));
        Node node1 = new Node(49, node0, node0);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node0, node1);
        node0.isFromExterns();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = Node.newNumber((double) 131, 131, 131);
        Node node1 = new Node(105, node0, 29, 45);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node1, node0);
        NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, controlFlowAnalysis0);
        controlFlowAnalysis0.shouldTraverse(nodeTraversal0, node0, node1);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Node node0 = new Node(4);
        Compiler compiler0 = new Compiler();
        Node node1 = new Node(110, node0, 2, 35);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true, true);
        controlFlowAnalysis0.process(node0, node1);
        NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, controlFlowAnalysis0);
        boolean boolean0 = controlFlowAnalysis0.shouldTraverse(nodeTraversal0, node1, node1);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Node node0 = new Node(4);
        Node node1 = new Node(113, node0, 4095, 36);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true, true);
        controlFlowAnalysis0.process(node1, node1);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Node node0 = new Node((-21), (-21), (-21));
        Node node1 = new Node(115, node0, 4095, 36);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node0, node0);
        NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, controlFlowAnalysis0);
        boolean boolean0 = controlFlowAnalysis0.shouldTraverse(nodeTraversal0, node1, node1);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Node node0 = new Node(4);
        Node node1 = new Node(116, node0, 4095, 36);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true, true);
        controlFlowAnalysis0.process(node0, node1);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("ey~oS&n!~T+K");
        Node node1 = new Node(117, node0, node0);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true, true);
        controlFlowAnalysis0.process(node0, node1);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Node node0 = new Node((-1216), (-1216), (-1216));
        Node node1 = new Node(118, node0, node0);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false, false);
        controlFlowAnalysis0.process(node1, node1);
        node1.isIf();
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        Node node0 = new Node(981);
        Node node1 = new Node(120, node0, 2, 35);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true, true);
        controlFlowAnalysis0.process(node1, node1);
        node1.isIn();
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        Node node0 = Node.newString("JSC_PRIVATE_OVERRIDE", 126, 126);
        Node node1 = new Node(126, node0, node0);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true, true);
        controlFlowAnalysis0.process(node0, node1);
        node0.isAnd();
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        Node node0 = new Node(453);
        Node node1 = new Node(115, node0, 4095, 2);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node0, node1);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        Node node0 = Node.newString("");
        Compiler compiler0 = new Compiler();
        Node node1 = compiler0.parseTestCode("");
        Node node2 = new Node(108, node0, node1);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true, true);
        controlFlowAnalysis0.process(node1, node2);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = Node.newNumber((double) (-83), (-83), (-83));
        Node node1 = new Node(105, node0, 29, 45);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, controlFlowAnalysis0, (ScopeCreator) null);
        controlFlowAnalysis0.visit(nodeTraversal0, node1, node1);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        Node node0 = new Node(115);
        Node node1 = new Node(37, node0, node0, node0);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node0, node1);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        Node node0 = new Node(125);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true, true);
        controlFlowAnalysis0.process(node0, node0);
        node0.isGetProp();
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        Node node0 = new Node(125);
        Node node1 = new Node(37, node0, node0, node0);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("ey~oS&Vn!~T+K");
        Node node1 = new Node(77, node0, node0);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true, true);
        controlFlowAnalysis0.process(node1, node0);
        node1.isInc();
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("_W`4t9|6R`$%<MrK");
        Node node1 = new Node(111, node0, node0);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, true);
        controlFlowAnalysis0.process(node1, node0);
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(106, 106, 106);
        SyntheticAst syntheticAst0 = new SyntheticAst("com.google.javascrpt.jscopp.ControlFlowAnalysis$AstControlFlowG5apA$2");
        Node node1 = syntheticAst0.getAstRoot(compiler0);
        Node node2 = new Node(112, node0, node1, node1, node1);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node0, node1);
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        Node node0 = new Node(116);
        Compiler compiler0 = new Compiler();
        Node node1 = new Node(110, node0, node0, node0, node0);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        Node node0 = new Node(116);
        Compiler compiler0 = new Compiler();
        Node node1 = compiler0.parseTestCode("xhQBWkiO4%J)^");
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node1, node0);
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        Node node0 = new Node(117, 117, 117);
        Node node1 = new Node(37, node0, node0, node0);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node0, node1);
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        Node node0 = new Node(77);
        Node node1 = new Node(4, node0, node0);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node1, node1);
        node1.isFunction();
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        Node node0 = new Node(4);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        Node node0 = new Node(453);
        Node node1 = new Node(136, node0, 4095, 2);
        Node node2 = ControlFlowAnalysis.computeFollowNode(node0);
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        Node node0 = new Node((-1216), (-1216), (-1216));
        Node node1 = new Node(111, node0, node0);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true, true);
        Node node2 = ControlFlowAnalysis.computeFollowNode(node0, controlFlowAnalysis0);
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        Node node0 = new Node(77);
        Node node1 = new Node(113, node0, node0);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, true);
        Node node2 = ControlFlowAnalysis.computeFollowNode(node0, controlFlowAnalysis0);
    }

    @Test(timeout = 4000)
    public void test3536() throws Throwable {
        Node node0 = new Node(77);
        Node node1 = new Node(113, node0, node0);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, true);
        Node node2 = ControlFlowAnalysis.computeFollowNode(node0, controlFlowAnalysis0);
        node2.isWhile();
    }

    @Test(timeout = 4000)
    public void test3637() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = Node.newNumber((-504.6993505358), 423, 423);
        Node node1 = new Node(112, node0, 47, 32);
        SyntheticAst syntheticAst0 = new SyntheticAst("com.google.javascript.jscomp.ControlFlowAnalysis$AstControlFlowGraph$2");
        Node node2 = syntheticAst0.getAstRoot(compiler0);
        Node node3 = new Node(8, node2, node1, node1, node2);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node1, node1);
    }

    @Test(timeout = 4000)
    public void test3738() throws Throwable {
        Node node0 = Node.newString("z");
        Compiler compiler0 = new Compiler();
        Node node1 = compiler0.parseTestCode("z");
        Node node2 = new Node(50, node0, node1);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true, true);
        controlFlowAnalysis0.process(node1, node2);
    }

    @Test(timeout = 4000)
    public void test3839() throws Throwable {
        Node node0 = new Node(105, 105, (-1587));
        Node node1 = Node.newString(32, "");
        Node node2 = new Node(30, node1, node0);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, true);
        controlFlowAnalysis0.process(node0, node2);
    }

    @Test(timeout = 4000)
    public void test3940() throws Throwable {
        Node node0 = new Node((-1148), (-1148), (-1148));
        Node node1 = new Node(111, node0, node0);
        Node node2 = Node.newString("com.googe.javascrpt.jscomp.ControFlowAnalysis$1");
        Node node3 = new Node(37, node2, node2, node2, node1);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true, true);
        controlFlowAnalysis0.process(node3, node3);
        node3.isNew();
    }

    @Test(timeout = 4000)
    public void test4041() throws Throwable {
        Node node0 = new Node(125, 125, 125);
        ControlFlowAnalysis.isBreakTarget(node0, "");
    }

    @Test(timeout = 4000)
    public void test4142() throws Throwable {
        Node node0 = new Node(108);
        Node node1 = new Node(40, node0, node0, node0, node0);
        boolean boolean0 = ControlFlowAnalysis.isBreakTarget(node0, "");
    }

    @Test(timeout = 4000)
    public void test4243() throws Throwable {
        Node node0 = new Node(33);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test4344() throws Throwable {
        Node node0 = new Node(65136, 65136, 65136);
        Node node1 = new Node(35, node0, node0, node0, 4, 31);
        boolean boolean0 = ControlFlowAnalysis.mayThrowException(node1);
    }

    @Test(timeout = 4000)
    public void test4445() throws Throwable {
        Node node0 = new Node((-1511));
        Node node1 = new Node(52, node0, node0);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true, true);
        controlFlowAnalysis0.process(node0, node1);
    }

    @Test(timeout = 4000)
    public void test4546() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("ey~oS&n!~T+K");
        Node node1 = new Node(86, node0, node0);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true, true);
        controlFlowAnalysis0.process(node0, node1);
        node1.isOptionalArg();
    }

    @Test(timeout = 4000)
    public void test4647() throws Throwable {
        Node node0 = new Node((-447));
        Node node1 = new Node(102, node0);
        boolean boolean0 = ControlFlowAnalysis.mayThrowException(node1);
    }

    @Test(timeout = 4000)
    public void test4748() throws Throwable {
        Node node0 = new Node(103, 103, 103);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        controlFlowAnalysis0.process(node0, node0);
        node0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test4849() throws Throwable {
        Node node0 = new Node(131);
        Node node1 = new Node(105, node0, 29, 45);
        boolean boolean0 = ControlFlowAnalysis.mayThrowException(node1);
    }

    @Test(timeout = 4000)
    public void test4950() throws Throwable {
        Node node0 = new Node(49);
        Node node1 = new Node(15, node0, node0, node0);
        boolean boolean0 = ControlFlowAnalysis.mayThrowException(node1);
    }

    @Test(timeout = 4000)
    public void test5051() throws Throwable {
        Node node0 = new Node(77);
        ControlFlowAnalysis.isBreakTarget(node0, ";qn");
    }

    @Test(timeout = 4000)
    public void test5152() throws Throwable {
        Node node0 = new Node(113, 113, 113);
        ControlFlowAnalysis.isBreakTarget(node0, "");
    }

    @Test(timeout = 4000)
    public void test5253() throws Throwable {
        Node node0 = Node.newString("", 114, 114);
        Node node1 = new Node(114, node0, node0);
        ControlFlowAnalysis.isBreakTarget(node1, "");
    }

    @Test(timeout = 4000)
    public void test5354() throws Throwable {
        Node node0 = new Node(498, 498, 498);
        Node node1 = new Node(115, node0, 4095, 2);
        ControlFlowAnalysis.isBreakTarget(node1, "");
    }

    @Test(timeout = 4000)
    public void test5455() throws Throwable {
        Node node0 = new Node(113, 113, 113);
        boolean boolean0 = ControlFlowAnalysis.isContinueStructure(node0);
    }

    @Test(timeout = 4000)
    public void test5556() throws Throwable {
        Node node0 = Node.newString("", 114, 114);
        Node node1 = new Node(114, node0, node0);
        boolean boolean0 = ControlFlowAnalysis.isContinueStructure(node1);
    }

    @Test(timeout = 4000)
    public void test5657() throws Throwable {
        Node node0 = new Node(453, 453, 453);
        Node node1 = new Node(115, node0, 4095, 2);
        boolean boolean0 = ControlFlowAnalysis.isContinueStructure(node1);
    }

    @Test(timeout = 4000)
    public void test5758() throws Throwable {
        Node node0 = new Node(132);
        Node node1 = ControlFlowAnalysis.getExceptionHandler(node0);
    }

    @Test(timeout = 4000)
    public void test5859() throws Throwable {
        Node node0 = new Node(105);
        Node node1 = ControlFlowAnalysis.getExceptionHandler(node0);
    }

    @Test(timeout = 4000)
    public void test5960() throws Throwable {
        Node node0 = new Node(125, 125, 125);
        Node node1 = new Node(4095, node0, 53, 41);
        ControlFlowAnalysis.getExceptionHandler(node0);
    }
}
