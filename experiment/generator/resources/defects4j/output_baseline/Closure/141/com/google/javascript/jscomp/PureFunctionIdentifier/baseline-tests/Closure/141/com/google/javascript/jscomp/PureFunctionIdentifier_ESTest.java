/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 19 22:47:57 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.PureFunctionIdentifier;
import com.google.javascript.jscomp.SimpleDefinitionFinder;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class PureFunctionIdentifier_ESTest extends PureFunctionIdentifier_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        SimpleDefinitionFinder simpleDefinitionFinder0 = new SimpleDefinitionFinder((AbstractCompiler) null);
        PureFunctionIdentifier pureFunctionIdentifier0 = new PureFunctionIdentifier((AbstractCompiler) null, simpleDefinitionFinder0);
        Node node0 = Node.newString("Qs/\"ZoU8K$<<");
        pureFunctionIdentifier0.process(node0, node0);
        pureFunctionIdentifier0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        SimpleDefinitionFinder simpleDefinitionFinder0 = new SimpleDefinitionFinder((AbstractCompiler) null);
        PureFunctionIdentifier pureFunctionIdentifier0 = new PureFunctionIdentifier((AbstractCompiler) null, simpleDefinitionFinder0);
        Node node0 = Node.newString("`");
        pureFunctionIdentifier0.process(node0, node0);
        String string0 = pureFunctionIdentifier0.getDebugReport();
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        SimpleDefinitionFinder simpleDefinitionFinder0 = new SimpleDefinitionFinder((AbstractCompiler) null);
        PureFunctionIdentifier pureFunctionIdentifier0 = new PureFunctionIdentifier((AbstractCompiler) null, simpleDefinitionFinder0);
        Node node0 = new Node(37);
        Node node1 = new Node(33);
        node0.addChildToFront(node1);
        pureFunctionIdentifier0.process(node1, node0);
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        SimpleDefinitionFinder simpleDefinitionFinder0 = new SimpleDefinitionFinder((AbstractCompiler) null);
        PureFunctionIdentifier pureFunctionIdentifier0 = new PureFunctionIdentifier((AbstractCompiler) null, simpleDefinitionFinder0);
        Node node0 = new Node(37, 37, 37);
        Node node1 = new Node(0);
        node0.addChildToFront(node1);
        pureFunctionIdentifier0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
        SimpleDefinitionFinder simpleDefinitionFinder0 = new SimpleDefinitionFinder((AbstractCompiler) null);
        PureFunctionIdentifier pureFunctionIdentifier0 = new PureFunctionIdentifier((AbstractCompiler) null, simpleDefinitionFinder0);
        Node node0 = new Node(37);
        Node node1 = new Node(0);
        node1.setType(38);
        node0.addChildToFront(node1);
        pureFunctionIdentifier0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test55() throws Throwable {
        SimpleDefinitionFinder simpleDefinitionFinder0 = new SimpleDefinitionFinder((AbstractCompiler) null);
        PureFunctionIdentifier pureFunctionIdentifier0 = new PureFunctionIdentifier((AbstractCompiler) null, simpleDefinitionFinder0);
        Node node0 = new Node(30);
        pureFunctionIdentifier0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test66() throws Throwable {
        SimpleDefinitionFinder simpleDefinitionFinder0 = new SimpleDefinitionFinder((AbstractCompiler) null);
        PureFunctionIdentifier pureFunctionIdentifier0 = new PureFunctionIdentifier((AbstractCompiler) null, simpleDefinitionFinder0);
        Node node0 = new Node(103, 103, 103);
        pureFunctionIdentifier0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test77() throws Throwable {
        SimpleDefinitionFinder simpleDefinitionFinder0 = new SimpleDefinitionFinder((AbstractCompiler) null);
        Node node0 = new Node(105);
        Node node1 = new Node(38, node0, node0, node0);
        node0.addChildToFront(node1);
        PureFunctionIdentifier pureFunctionIdentifier0 = new PureFunctionIdentifier((AbstractCompiler) null, simpleDefinitionFinder0);
        Node node2 = Node.newNumber((double) 13);
        pureFunctionIdentifier0.process(node2, node1);
    }

    @Test(timeout = 4000)
    public void test88() throws Throwable {
        SimpleDefinitionFinder simpleDefinitionFinder0 = new SimpleDefinitionFinder((AbstractCompiler) null);
        Node node0 = new Node(105);
        Node node1 = new Node(13, node0, node0, node0);
        PureFunctionIdentifier pureFunctionIdentifier0 = new PureFunctionIdentifier((AbstractCompiler) null, simpleDefinitionFinder0);
        pureFunctionIdentifier0.process(node1, node1);
    }

    @Test(timeout = 4000)
    public void test99() throws Throwable {
        SimpleDefinitionFinder simpleDefinitionFinder0 = new SimpleDefinitionFinder((AbstractCompiler) null);
        PureFunctionIdentifier pureFunctionIdentifier0 = new PureFunctionIdentifier((AbstractCompiler) null, simpleDefinitionFinder0);
        Node node0 = new Node(105);
        Node node1 = new Node(38, node0, node0, node0);
        Node node2 = Node.newString(29, "");
        node0.addChildToFront(node2);
        node0.addChildToFront(node1);
        pureFunctionIdentifier0.process(node1, node0);
    }
}
