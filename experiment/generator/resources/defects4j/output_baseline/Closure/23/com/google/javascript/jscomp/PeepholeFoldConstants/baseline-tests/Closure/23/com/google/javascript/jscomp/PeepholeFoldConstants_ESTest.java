/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 03 22:56:05 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.PeepholeFoldConstants;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class PeepholeFoldConstants_ESTest extends PeepholeFoldConstants_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber((-2.147483648E9));
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(26);
        peepholeFoldConstants0.optimizeSubtree(node0);
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        Node node0 = Node.newString(27, "Hik{_ waJs");
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        peepholeFoldConstants0.optimizeSubtree(node0);
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(28);
        peepholeFoldConstants0.optimizeSubtree(node0);
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(47);
        Node node1 = new Node(29, node0, node0, node0, node0);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newString("com.gogle.jvascript.jscomp.DefaultPassConfg%HJtSwapPassFactory");
        Node node1 = new Node(32, node0, node0, node0, node0, 2, 1);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        Node node0 = new Node(85);
        Node node1 = new Node(122, node0, node0, node0, 45, 2);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString("a");
        Node node1 = Node.newString("a");
        Node node2 = new Node(13, node0, node1, node0, node1, 29, (-2647));
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test0088() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(161);
        Node node1 = Node.newString(12, "~");
        Node node2 = new Node(9, node0, node0, node1, 47, 29);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test0089() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(161);
        Node node1 = Node.newString(12, "~");
        Node node2 = new Node(9, node0, node0, node1, 47, 29);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test00910() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(560, 560, 560);
        Node node1 = new Node(1, (-2807), 49);
        Node node2 = new Node(10, node0, node1, node1, 306654258, 2060);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test00911() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(560, 560, 560);
        Node node1 = new Node(1, (-2807), 49);
        Node node2 = new Node(10, node0, node1, node1, 306654258, 2060);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getCharno();
    }

    @Test(timeout = 4000)
    public void test01012() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(543);
        Node node1 = new Node(543, 543, 543);
        Node node2 = new Node(11, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01013() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(543);
        Node node1 = new Node(543, 543, 543);
        Node node2 = new Node(11, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test01114() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newString("JSC_NVALID_GETEL_INDEXERROR");
        Node node1 = Node.newString("JSC_NVALID_GETEL_INDEXERROR", 1, 16);
        Node node2 = new Node(12, node0, node0, node1);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01215() throws Throwable {
        Node node0 = new Node(750, 750, 750);
        Node node1 = new Node(1, 12, 12);
        Node node2 = new Node(14, node1, node0, node0, 41, 45);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isHook();
    }

    @Test(timeout = 4000)
    public void test01316() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString("UoN*");
        Node node1 = Node.newString("UoN*");
        Node node2 = new Node(15, node1, node0, node1, node0, 16, 36);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01417() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(62);
        Node node1 = new Node(40, 51, 52);
        Node node2 = new Node(16, node0, node1, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isNoSideEffectsCall();
    }

    @Test(timeout = 4000)
    public void test01518() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(82);
        Node node1 = new Node(16, 0, 46);
        Node node2 = new Node(17, node1, node1, node0, 39, 16);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test01619() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(82, 82, 82);
        Node node1 = new Node(16, 0, 46);
        Node node2 = new Node(18, node1, node1, node0, 39, 16);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getType();
    }

    @Test(timeout = 4000)
    public void test01720() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(550);
        Node node1 = new Node(550, 550, 550);
        Node node2 = new Node(19, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test01821() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(514);
        Node node1 = new Node(47);
        Node node2 = new Node(20, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test01922() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node((-299), (-299), (-299));
        Node node1 = Node.newString("Fractional bitwise perand: {0}", 4095, 31);
        Node node2 = new Node(21, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test02023() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(106, 106, 106);
        Node node1 = new Node(16, 0, 46);
        Node node2 = new Node(22, node1, node1, node0, 39, 16);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02024() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(106, 106, 106);
        Node node1 = new Node(16, 0, 46);
        Node node2 = new Node(22, node1, node1, node0, 39, 16);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getLineno();
    }

    @Test(timeout = 4000)
    public void test02125() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(550, 77, 77);
        Node node1 = new Node(1529, 2, 2);
        Node node2 = new Node(23, node0, node1, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02126() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(550, 77, 77);
        Node node1 = new Node(1529, 2, 2);
        Node node2 = new Node(23, node0, node1, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getType();
    }

    @Test(timeout = 4000)
    public void test02227() throws Throwable {
        Node node0 = new Node(8192, (-2174), 8192);
        Node node1 = new Node(1, 28, 37);
        Node node2 = new Node(24, node0, node0, node1, (-520), 44);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test02228() throws Throwable {
        Node node0 = new Node(8192, (-2174), 8192);
        Node node1 = new Node(1, 28, 37);
        Node node2 = new Node(24, node0, node0, node1, (-520), 44);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02329() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString(141, "'7]}g6DuY_M@g");
        Node node1 = Node.newString(12, "'7]}g6DuY_M@g");
        Node node2 = new Node(25, node0, node0, node1, 47, 29);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02330() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString(141, "'7]}g6DuY_M@g");
        Node node1 = Node.newString(12, "'7]}g6DuY_M@g");
        Node node2 = new Node(25, node0, node0, node1, 47, 29);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test02431() throws Throwable {
        Node node0 = new Node((-1072), (-1072), (-1072));
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node1 = new Node(39);
        Node node2 = new Node(31, node0, node0, node1, 31, 47);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02532() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(159);
        Node node1 = new Node(29, 16, 16);
        Node node2 = new Node(33, node0, node0, node1, 47, 29);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getType();
    }

    @Test(timeout = 4000)
    public void test02633() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(550);
        Node node1 = new Node(550, 550, 550);
        Node node2 = new Node(34, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isNoSideEffectsCall();
    }

    @Test(timeout = 4000)
    public void test02734() throws Throwable {
        Node node0 = new Node(1845);
        Node node1 = new Node(1845, 2, 32);
        Node node2 = new Node(35, node0, node0, node1, 36, 39);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getType();
    }

    @Test(timeout = 4000)
    public void test02835() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(101);
        Node node1 = new Node(31, 43, 54);
        Node node2 = new Node(36, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02936() throws Throwable {
        Node node0 = new Node(62);
        Node node1 = new Node(4095, 41, 36);
        Node node2 = new Node(37, node0, node0, node1, 31, 4095);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isContinue();
    }

    @Test(timeout = 4000)
    public void test03037() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(507, 507, 507);
        Node node1 = new Node(52, 52, 39);
        Node node2 = new Node(38, node0, node0, node1, node1, 54, 1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isContinue();
    }

    @Test(timeout = 4000)
    public void test03138() throws Throwable {
        Node node0 = new Node(798, 798, 798);
        Node node1 = new Node(1, 12, 12);
        Node node2 = new Node(39, node1, node0, node0, 41, 45);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03239() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(1395);
        Node node1 = new Node(51, 52, 39);
        Node node2 = new Node(40, node0, node0, node1, node1, 54, 1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isEmpty();
    }

    @Test(timeout = 4000)
    public void test03340() throws Throwable {
        Node node0 = new Node(528);
        Node node1 = new Node(16);
        Node node2 = new Node(41, node1, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03441() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(538, 538, 538);
        Node node1 = new Node(15, 8, 36);
        Node node2 = new Node(42, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03542() throws Throwable {
        Node node0 = new Node(1861, 1861, 1861);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node1 = new Node(37, 49, 36);
        Node node2 = new Node(43, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getCharno();
    }

    @Test(timeout = 4000)
    public void test03643() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node((-29));
        Node node1 = new Node(52);
        Node node2 = new Node(44, node0, node1, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03744() throws Throwable {
        Node node0 = Node.newString("JSC_NVALID_GETEL_INDEXERROR");
        Node node1 = Node.newString("JSC_NVALID_GETEL_INDEXERROR", 1, 16);
        Node node2 = new Node(45, node1, node0, node0, 43, 8);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03845() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newString("UoN*");
        Node node1 = new Node(63, 1, 52);
        Node node2 = new Node(46, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isCatch();
    }

    @Test(timeout = 4000)
    public void test03946() throws Throwable {
        Node node0 = new Node(1863);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node1 = new Node(37, 49, 36);
        Node node2 = new Node(47, node0, node0, node1, 31, 1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isDo();
    }

    @Test(timeout = 4000)
    public void test04047() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newString("");
        Node node1 = new Node(8, 2, 31);
        Node node2 = new Node(48, node1, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04148() throws Throwable {
        Node node0 = new Node(1843, 1843, 1843);
        Node node1 = new Node(1843, 2, 32);
        Node node2 = new Node(49, node0, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isCase();
    }

    @Test(timeout = 4000)
    public void test04249() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(531);
        Node node1 = new Node(42, 52, 39);
        Node node2 = new Node(50, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test04350() throws Throwable {
        Node node0 = new Node(1861);
        Node node1 = new Node(1861, 2, 32);
        Node node2 = new Node(51, node1, node0, node0, (-1774), 41);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.wasEmptyNode();
    }

    @Test(timeout = 4000)
    public void test04451() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString("JSC_NVALID_GETEL_INDEXERROR");
        Node node1 = Node.newString(54, "JSC_NVALID_GETEL_INDEXERROR");
        Node node2 = new Node(52, node0, node1, node1, 35, 48);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isInstanceOf();
    }

    @Test(timeout = 4000)
    public void test04552() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(543);
        Node node1 = new Node(543, 543, 543);
        Node node2 = new Node(53, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isTrue();
    }

    @Test(timeout = 4000)
    public void test04653() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node((-180));
        Node node1 = new Node(38, 41, 35);
        Node node2 = new Node(54, node0, node1, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04754() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(550);
        Node node1 = new Node(550, 550, 550);
        Node node2 = new Node(55, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isBreak();
    }

    @Test(timeout = 4000)
    public void test04855() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(103);
        Node node1 = new Node(42, 4095, 45);
        Node node2 = new Node(56, node1, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isLocalResultCall();
    }

    @Test(timeout = 4000)
    public void test04956() throws Throwable {
        Node node0 = new Node((-725), (-725), (-725));
        Node node1 = new Node((-725));
        Node node2 = new Node(57, node0, node1, node1, 37, 49);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isCase();
    }

    @Test(timeout = 4000)
    public void test05057() throws Throwable {
        Node node0 = new Node(798, 798, 798);
        Node node1 = new Node(1, 12, 12);
        Node node2 = new Node(58, node1, node0, node0, 41, 45);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isHook();
    }

    @Test(timeout = 4000)
    public void test05158() throws Throwable {
        Node node0 = new Node(760, 760, 760);
        Node node1 = new Node(1, 12, 12);
        Node node2 = new Node(59, node1, node0, node0, 41, 45);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isWith();
    }

    @Test(timeout = 4000)
    public void test05259() throws Throwable {
        Node node0 = new Node(798, 798, 798);
        Node node1 = new Node(1, 12, 12);
        Node node2 = new Node(60, node1, node0, node0, 41, 45);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isWhile();
    }

    @Test(timeout = 4000)
    public void test05360() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node((-1793));
        Node node1 = new Node(61, 52, 39);
        Node node2 = new Node(61, node0, node0, node1, node1, 54, 1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isGetElem();
    }

    @Test(timeout = 4000)
    public void test05461() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(550, 550, 550);
        Node node1 = new Node(550, 550, 550);
        Node node2 = new Node(62, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getSideEffectFlags();
    }

    @Test(timeout = 4000)
    public void test05562() throws Throwable {
        Node node0 = new Node((-725), (-725), (-725));
        Node node1 = new Node((-725));
        Node node2 = new Node(63, node0, node1, node1, 37, 49);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test05663() throws Throwable {
        Node node0 = new Node(35);
        Node node1 = new Node(38, (-2608), 12);
        Node node2 = new Node(64, node1, node0, node0, 48, 1387);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isWith();
    }

    @Test(timeout = 4000)
    public void test05764() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(579);
        Node node1 = new Node(579, 579, 579);
        Node node2 = new Node(65, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isSetterDef();
    }

    @Test(timeout = 4000)
    public void test05865() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(531);
        Node node1 = new Node(8, 1440, 39);
        Node node2 = new Node(66, node0, node1, node1, 35, 30);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isNumber();
    }

    @Test(timeout = 4000)
    public void test05966() throws Throwable {
        Node node0 = new Node(525, 525, 525);
        Node node1 = new Node(525);
        Node node2 = new Node(67, node0, node1, node1, 37, 49);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06067() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node((-3077), 68, 85);
        Node node1 = new Node(54, 37, 48);
        Node node2 = new Node(68, node1, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06168() throws Throwable {
        Node node0 = new Node((-746));
        Node node1 = new Node((-746));
        Node node2 = new Node(69, node0, node1, node1, 37, 49);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isTrue();
    }

    @Test(timeout = 4000)
    public void test06269() throws Throwable {
        Node node0 = new Node(66);
        Node node1 = Node.newNumber((double) 66);
        Node node2 = new Node(70, node1, node0, node0, 70, 44);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isFor();
    }

    @Test(timeout = 4000)
    public void test06370() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node((-299));
        Node node1 = new Node(36, 30, 39);
        Node node2 = new Node(71, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isLabel();
    }

    @Test(timeout = 4000)
    public void test06471() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(62);
        Node node1 = new Node(43, 35, 85);
        Node node2 = new Node(72, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isOnlyModifiesThisCall();
    }

    @Test(timeout = 4000)
    public void test06572() throws Throwable {
        Node node0 = new Node(750, 750, 750);
        Node node1 = new Node(1, 12, 12);
        Node node2 = new Node(73, node1, node0, node0, 41, 45);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isNew();
    }

    @Test(timeout = 4000)
    public void test06673() throws Throwable {
        Node node0 = new Node(778);
        Node node1 = Node.newString("Object", 2, 42);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node2 = new Node(74, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isSetterDef();
    }

    @Test(timeout = 4000)
    public void test06774() throws Throwable {
        Node node0 = new Node(1896, 1896, 1896);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node1 = new Node(37, 49, 36);
        Node node2 = new Node(75, node0, node0, node1, 31, 30);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isCatch();
    }

    @Test(timeout = 4000)
    public void test06875() throws Throwable {
        Node node0 = new Node(1863);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node1 = new Node(37, 49, 36);
        Node node2 = new Node(76, node0, node0, node1, 31, 30);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06976() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newString("HRU'Ma");
        Node node1 = new Node(47, 15, 29);
        Node node2 = new Node(77, node0, node1, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07077() throws Throwable {
        Node node0 = new Node(1845);
        Node node1 = new Node(4095, 4095, 54);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node2 = new Node(78, node0, node1, node1, 38, 15);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07178() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(538, 538, 538);
        Node node1 = new Node(97, 52, 39);
        Node node2 = new Node(79, node1, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isQuotedString();
    }

    @Test(timeout = 4000)
    public void test07279() throws Throwable {
        Node node0 = new Node(776, 776, 776);
        Node node1 = new Node(1, 12, 12);
        Node node2 = new Node(80, node1, node0, node0, 41, 45);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isIn();
    }

    @Test(timeout = 4000)
    public void test07380() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(538, 538, 538);
        Node node1 = new Node(81, 52, 39);
        Node node2 = new Node(81, node0, node0, node1, node1, 54, 1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07481() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(2216);
        Node node1 = new Node(12, 54, (-1379));
        Node node2 = new Node(82, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isGetterDef();
    }

    @Test(timeout = 4000)
    public void test07582() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node((-1766));
        Node node1 = new Node(83, 52, 39);
        Node node2 = new Node(83, node0, node0, node1, node1, 54, 1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07683() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(538);
        Node node1 = new Node(84, 52, 39);
        Node node2 = new Node(84, node0, node0, node1, node1, 54, 1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isNot();
    }

    @Test(timeout = 4000)
    public void test07784() throws Throwable {
        Node node0 = new Node(93);
        Node node1 = new Node(4095, 41, 36);
        Node node2 = new Node(85, node0, node0, node1, 31, 4095);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07885() throws Throwable {
        Node node0 = new Node(82);
        Node node1 = new Node(4095, 41, 36);
        Node node2 = new Node(86, node0, node0, node1, 31, 4095);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getLineno();
    }

    @Test(timeout = 4000)
    public void test07986() throws Throwable {
        Node node0 = new Node(534, 534, 534);
        Node node1 = new Node(16, 42, 47);
        Node node2 = new Node(87, node0, node1, node1, 45, 36);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getLineno();
    }

    @Test(timeout = 4000)
    public void test08087() throws Throwable {
        Node node0 = new Node(534, 534, 534);
        Node node1 = new Node(16, 42, 47);
        Node node2 = new Node(88, node0, node1, node1, 45, 36);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test08188() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node((-1793));
        Node node1 = new Node(89, 52, 39);
        Node node2 = new Node(89, node0, node0, node1, node1, 54, 1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getCharno();
    }

    @Test(timeout = 4000)
    public void test08289() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(538, 538, 538);
        Node node1 = new Node(91, 52, 39);
        Node node2 = new Node(91, node0, node0, node1, node1, 54, 1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test08390() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(550);
        Node node1 = new Node(0, 51, 92);
        Node node2 = new Node(92, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test08491() throws Throwable {
        Node node0 = new Node(99);
        Node node1 = new Node(4095, 41, 36);
        Node node2 = new Node(93, node0, node0, node1, 31, 4095);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getCharno();
    }

    @Test(timeout = 4000)
    public void test08592() throws Throwable {
        Node node0 = new Node(82);
        Node node1 = new Node(4095, 41, 36);
        Node node2 = new Node(94, node0, node0, node1, 31, 4095);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test08693() throws Throwable {
        Node node0 = new Node(816, 816, 816);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node1 = new Node(31, 4095, 41);
        Node node2 = new Node(95, node0, node0, node1, 40, 1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test08794() throws Throwable {
        Node node0 = new Node(780, 780, 780);
        Node node1 = new Node(15, 96, (-14));
        Node node2 = new Node(96, node1, node0, node0, 31, 1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08895() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(538, 538, 538);
        Node node1 = new Node(97, 52, 39);
        Node node2 = new Node(97, node0, node0, node1, node1, 54, 1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getLineno();
    }

    @Test(timeout = 4000)
    public void test08996() throws Throwable {
        Node node0 = new Node((-754));
        Node node1 = new Node((-754));
        Node node2 = new Node(98, node0, node1, node1, 37, 49);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isDelProp();
    }

    @Test(timeout = 4000)
    public void test09097() throws Throwable {
        Node node0 = new Node(1863, 1863, 1863);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node1 = new Node(37, 49, 36);
        Node node2 = new Node(99, node0, node0, node1, 31, 1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test09198() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(30, 30, 30);
        Node node1 = new Node(45, 30, 32);
        Node node2 = new Node(100, node1, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test09199() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(30, 30, 30);
        Node node1 = new Node(45, 30, 32);
        Node node2 = new Node(100, node1, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test092100() throws Throwable {
        Node node0 = new Node(66);
        Node node1 = Node.newNumber((double) 66);
        Node node2 = new Node(101, node1, node0, node0, 101, 44);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test093101() throws Throwable {
        Node node0 = new Node(1863);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node1 = new Node(37, 49, 36);
        Node node2 = new Node(4095, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isVarArgs();
    }

    @Test(timeout = 4000)
    public void test094102() throws Throwable {
        Node node0 = new Node(543, 543, 543);
        Node node1 = new Node(122, node0, node0, node0, 45, 2);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        node2.getLineno();
    }

    @Test(timeout = 4000)
    public void test095103() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node((-274), (-274), (-274));
        Node node1 = new Node(9, 8, 12);
        Node node2 = new Node(21, node1, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getType();
    }

    @Test(timeout = 4000)
    public void test096104() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(52, (-274), 30);
        Node node1 = new Node(21, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test096105() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(52, (-274), 30);
        Node node1 = new Node(21, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        node2.getChildCount();
    }

    @Test(timeout = 4000)
    public void test097106() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node((-180));
        Node node1 = new Node(38, 41, 35);
        Node node2 = new Node(29, node1, node0, node0, 2, 43);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test098107() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(71, 71, 71);
        Node node1 = new Node(39, node0, node0, node0, node0);
        Node node2 = new Node(29, node1, node1, node1);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test099108() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(85);
        Node node1 = new Node(19, node0, node0, node0);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test100109() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(98, 98, 98);
        Node node1 = new Node(22, node0, node0, node0, 39, 16);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test101110() throws Throwable {
        Node node0 = new Node(100, 534, 100);
        Node node1 = new Node(29, node0, node0, node0, (-2101), 49);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test102111() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(101);
        Node node1 = new Node(22, node0, node0, node0, 39, 16);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test103112() throws Throwable {
        Node node0 = new Node(32, 44, 4);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        node1.isOnlyModifiesThisCall();
    }

    @Test(timeout = 4000)
    public void test104113() throws Throwable {
        Node node0 = new Node(827, 827, 827);
        Node node1 = new Node(32, node0, node0, node0, 50, 52);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        node2.isTypeOf();
    }

    @Test(timeout = 4000)
    public void test105114() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(39);
        Node node1 = new Node(32, node0, node0, node0, 54, 4);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test106115() throws Throwable {
        Node node0 = new Node(43);
        Node node1 = new Node(32, node0, node0, node0, 50, 52);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test107116() throws Throwable {
        Node node0 = new Node((-155));
        Node node1 = new Node(29, node0, node0, node0, 2, 43);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test107117() throws Throwable {
        Node node0 = new Node((-155));
        Node node1 = new Node(29, node0, node0, node0, 2, 43);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        node2.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test108118() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Compiler compiler0 = new Compiler();
        peepholeFoldConstants0.beginTraversal(compiler0);
        Node node0 = Node.newString("J");
        Node node1 = new Node(29, node0, node0, node0, node0, 46, 35);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test109119() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(123);
        Node node1 = new Node(16, 0, 46);
        Node node2 = new Node(52, node1, node1, node0, 39, 16);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test110120() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString("HRU'Ma");
        Node node1 = new Node(47, 15, 29);
        Node node2 = new Node(52, node0, node1, node1, 35, 48);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test111121() throws Throwable {
        Node node0 = new Node(62);
        Node node1 = new Node(4095, 41, 36);
        Node node2 = new Node(86, node0, node0, node1, 31, 4095);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isAssign();
    }

    @Test(timeout = 4000)
    public void test112122() throws Throwable {
        Node node0 = new Node(82);
        Node node1 = new Node(4095, 41, 36);
        Node node2 = new Node(86, node0, node0, node1, 31, 4095);
        node1.addChildToFront(node2);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getType();
    }

    @Test(timeout = 4000)
    public void test113123() throws Throwable {
        Node node0 = new Node(9973);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node1 = new Node(1);
        Node node2 = new Node(50);
        Node node3 = new Node(90, node0, node2, node1, 54, 1084);
        Node node4 = peepholeFoldConstants0.optimizeSubtree(node3);
        node4.hasChildren();
    }

    @Test(timeout = 4000)
    public void test114124() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node((-274));
        Node node1 = Node.newString("EHO~Cqbxkjp''xTl", 49, 1);
        Node node2 = new Node(21, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getType();
    }

    @Test(timeout = 4000)
    public void test115125() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString("a");
        Node node1 = Node.newString("a");
        Node node2 = new Node(21, node1, node0, node0);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test116126() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node((-299), (-299), (-299));
        Node node1 = Node.newString("Fractional bitwise perand: {0}", 4095, 31);
        node0.setType(47);
        Node node2 = new Node(21, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test117127() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(531);
        Node node1 = new Node(43, 52, 39);
        Node node2 = new Node(16, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test118128() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(62);
        Node node1 = new Node(29, node0);
        Node node2 = new Node(40, 51, 52);
        Node node3 = new Node(16, node1, node2, node2);
        Node node4 = peepholeFoldConstants0.optimizeSubtree(node3);
        node4.isString();
    }

    @Test(timeout = 4000)
    public void test119129() throws Throwable {
        Node node0 = new Node(778);
        Node node1 = new Node(39, 38, 37);
        Node node2 = new Node(16, node1, node0, node0, node0, 45, 47);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test120130() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(509, 81, 509);
        Node node1 = new Node(41, node0, 81, 37);
        Node node2 = Node.newString("", 48, 0);
        Node node3 = new Node(16, node1, node2, node2);
        Node node4 = peepholeFoldConstants0.optimizeSubtree(node3);
        node4.isFor();
    }

    @Test(timeout = 4000)
    public void test121131() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(28, 55, 28);
        Node node1 = new Node(42, 52, 39);
        Node node2 = new Node(16, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test122132() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(531, 531, 531);
        Node node1 = new Node(44, 52, 39);
        Node node2 = new Node(16, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isWith();
    }

    @Test(timeout = 4000)
    public void test123133() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(540, 540, 540);
        Node node1 = new Node(47, 52, 39);
        Node node2 = new Node(16, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getSourceFileName();
    }

    @Test(timeout = 4000)
    public void test124134() throws Throwable {
        Node node0 = new Node(803, 803, 803);
        Node node1 = new Node(40, 15, (-1));
        Node node2 = new Node(16, node1, node0, node0, 31, 1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isQuotedString();
    }

    @Test(timeout = 4000)
    public void test125135() throws Throwable {
        Node node0 = Node.newString("JSC_NVALID_GETEL_INDEXERROR");
        Node node1 = Node.newString("JSC_NVALID_GETEL_INDEXERROR", 1, 16);
        Node node2 = new Node(45, node1, node0, node0, 43, 8);
        node1.setString("com.google.common.base.Predicates$OrPredicate");
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test126136() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(30);
        Node node1 = Node.newString("Fractional bitwise perand: {0}", 573, 43);
        Node node2 = new Node(35, node1, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node0);
        node3.isCatch();
    }

    @Test(timeout = 4000)
    public void test127137() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = new Node(30);
        Node node1 = new Node(1, node0, node0, node0, 43, 16);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node0);
    }

    @Test(timeout = 4000)
    public void test128138() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(30, 30, 30);
        Node node1 = new Node(35, node0, node0, node0, node0);
        node0.addChildrenToBack(node1);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node0);
        node2.isGetElem();
    }

    @Test(timeout = 4000)
    public void test129139() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = new Node(159);
        Node node1 = new Node(29, 16, 16);
        node1.setType(40);
        Node node2 = new Node(33, node0, node0, node1, 47, 29);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }
}
