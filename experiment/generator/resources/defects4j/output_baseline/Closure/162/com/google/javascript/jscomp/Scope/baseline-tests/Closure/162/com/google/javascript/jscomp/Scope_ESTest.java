/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 04 07:49:02 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerInput;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.DefaultPassConfig;
import com.google.javascript.jscomp.LinkedFlowScope;
import com.google.javascript.jscomp.ReferenceCollectingCallback;
import com.google.javascript.jscomp.Scope;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.StaticSlot;
import java.util.Iterator;
import java.util.List;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Scope_ESTest extends Scope_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        scope_Arguments0.getSourceFile();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        scope_Arguments0.isLocal();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        scope_Arguments0.isGlobal();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        scope_Arguments0.getJSDocInfo();
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        scope_Arguments0.getJSDocInfo();
        scope_Arguments0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        String string0 = scope_Arguments0.getName();
        scope_Arguments0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test046() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        String string0 = scope_Arguments0.getName();
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test047() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        String string0 = scope_Arguments0.getName();
    }

    @Test(timeout = 4000)
    public void test058() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        Scope.Var scope_Var0 = scope_Arguments0.getSymbol();
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test059() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        Scope.Var scope_Var0 = scope_Arguments0.getSymbol();
        scope_Var0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test0610() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        Stack<JSType> stack0 = new Stack<JSType>();
        Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
        Scope.Var scope_Var0 = scope0.declare("Scope.Var ", node0, (JSType) null, (CompilerInput) null, false);
        Compiler compiler0 = new Compiler();
        ReferenceCollectingCallback.Behavior referenceCollectingCallback_Behavior0 = ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR;
        ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, referenceCollectingCallback_Behavior0);
        referenceCollectingCallback0.getReferences(scope_Var0);
        scope_Var0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test0611() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        Stack<JSType> stack0 = new Stack<JSType>();
        Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
        Scope.Var scope_Var0 = scope0.declare("Scope.Var ", node0, (JSType) null, (CompilerInput) null, false);
        Compiler compiler0 = new Compiler();
        ReferenceCollectingCallback.Behavior referenceCollectingCallback_Behavior0 = ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR;
        ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, referenceCollectingCallback_Behavior0);
        referenceCollectingCallback0.getReferences(scope_Var0);
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test0712() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        scope_Arguments0.getNameNode();
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test0713() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        scope_Arguments0.getNameNode();
        scope_Arguments0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test0814() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        scope_Arguments0.getScope();
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test0815() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        scope_Arguments0.getScope();
        scope_Arguments0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test0916() throws Throwable {
        Node node0 = new Node(11, 11, 11);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        scope_Arguments0.getInput();
        scope_Arguments0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test0917() throws Throwable {
        Node node0 = new Node(11, 11, 11);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        scope_Arguments0.getInput();
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test1018() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        scope_Arguments0.getType();
        scope_Arguments0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test1019() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        scope_Arguments0.getType();
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test1120() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        scope_Arguments0.getNode();
        scope_Arguments0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test1121() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        scope_Arguments0.getNode();
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test1222() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SyntheticAst syntheticAst0 = new SyntheticAst("Cn%KNk7lZ$*8n@\"6");
        CompilerInput compilerInput0 = new CompilerInput(syntheticAst0, "Cn%KNk7lZ$*8n@\"6", true);
        Scope.Var scope_Var0 = scope0.declare("Cn%KNk7lZ$*8n@\"6", (Node) null, (JSType) null, compilerInput0);
        scope_Var0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test1223() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SyntheticAst syntheticAst0 = new SyntheticAst("Cn%KNk7lZ$*8n@\"6");
        CompilerInput compilerInput0 = new CompilerInput(syntheticAst0, "Cn%KNk7lZ$*8n@\"6", true);
        Scope.Var scope_Var0 = scope0.declare("Cn%KNk7lZ$*8n@\"6", (Node) null, (JSType) null, compilerInput0);
        scope_Var0.setType((JSType) null);
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test1224() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SyntheticAst syntheticAst0 = new SyntheticAst("Cn%KNk7lZ$*8n@\"6");
        CompilerInput compilerInput0 = new CompilerInput(syntheticAst0, "Cn%KNk7lZ$*8n@\"6", true);
        Scope.Var scope_Var0 = scope0.declare("Cn%KNk7lZ$*8n@\"6", (Node) null, (JSType) null, compilerInput0);
        scope_Var0.setType((JSType) null);
        scope_Var0.getInputName();
    }

    @Test(timeout = 4000)
    public void test1325() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        boolean boolean0 = scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test1426() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        scope_Arguments0.isBleedingFunction();
    }

    @Test(timeout = 4000)
    public void test1527() throws Throwable {
        Node node0 = new Node((-20));
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        String string0 = scope_Arguments0.toString();
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test1528() throws Throwable {
        Node node0 = new Node((-20));
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        String string0 = scope_Arguments0.toString();
    }

    @Test(timeout = 4000)
    public void test1629() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        Compiler compiler0 = new Compiler();
        ReferenceCollectingCallback.Behavior referenceCollectingCallback_Behavior0 = ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR;
        ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, referenceCollectingCallback_Behavior0);
        referenceCollectingCallback0.getReferences((Scope.Var) scope_Arguments0);
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test1730() throws Throwable {
        Compiler compiler0 = new Compiler();
        DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig((CompilerOptions) null);
        Node node0 = compiler0.parseTestCode("[native code]\n");
        defaultPassConfig0.regenerateGlobalTypedScope(compiler0, node0);
    }

    @Test(timeout = 4000)
    public void test1831() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Iterable<Scope.Var> iterable0 = scope0.getAllSymbols();
    }

    @Test(timeout = 4000)
    public void test1932() throws Throwable {
        Node node0 = new Node((-60));
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Iterator<Scope.Var> iterator0 = scope0.getDeclarativelyUnboundVarsWithoutTypes();
    }

    @Test(timeout = 4000)
    public void test2033() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        boolean boolean0 = scope0.isBottom();
    }

    @Test(timeout = 4000)
    public void test2134() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        scope0.getReferences((Scope.Var) scope_Arguments0);
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test2235() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        StaticSlot<JSType> staticSlot0 = scope0.getSlot((String) null);
    }

    @Test(timeout = 4000)
    public void test2336() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        StaticScope<JSType> staticScope0 = scope0.getScope((Scope.Var) scope_Arguments0);
    }

    @Test(timeout = 4000)
    public void test2337() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        StaticScope<JSType> staticScope0 = scope0.getScope((Scope.Var) scope_Arguments0);
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test2438() throws Throwable {
        Node node0 = new Node((-20));
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        boolean boolean0 = scope_Arguments0.equals(scope_Arguments0);
    }

    @Test(timeout = 4000)
    public void test2439() throws Throwable {
        Node node0 = new Node((-20));
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        boolean boolean0 = scope_Arguments0.equals(scope_Arguments0);
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test2540() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        int int0 = scope0.getDepth();
    }

    @Test(timeout = 4000)
    public void test2641() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        int int0 = scope0.getVarCount();
    }

    @Test(timeout = 4000)
    public void test2742() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        LinkedFlowScope linkedFlowScope0 = LinkedFlowScope.createEntryLattice(scope0);
        JSType jSType0 = linkedFlowScope0.getTypeOfThis();
    }

    @Test(timeout = 4000)
    public void test2843() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        StaticSlot<JSType> staticSlot0 = scope0.getOwnSlot((String) null);
    }

    @Test(timeout = 4000)
    public void test2944() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Node node0 = Node.newString("Cn%KNk7lZ$*8n@\"6");
        Scope.Var scope_Var0 = scope0.declare("Cn%KNk7lZ$*8n@\"6", node0, (JSType) null, (CompilerInput) null);
        Scope.Var scope_Var1 = scope_Var0.getDeclaration();
        scope_Var1.isDefine();
    }

    @Test(timeout = 4000)
    public void test2945() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Node node0 = Node.newString("Cn%KNk7lZ$*8n@\"6");
        Scope.Var scope_Var0 = scope0.declare("Cn%KNk7lZ$*8n@\"6", node0, (JSType) null, (CompilerInput) null);
        Scope.Var scope_Var1 = scope_Var0.getDeclaration();
    }

    @Test(timeout = 4000)
    public void test3046() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        Scope.Var scope_Var0 = scope_Arguments0.getDeclaration();
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test3047() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        Scope.Var scope_Var0 = scope_Arguments0.getDeclaration();
    }

    @Test(timeout = 4000)
    public void test3148() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        boolean boolean0 = scope_Arguments0.isExtern();
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test3149() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        boolean boolean0 = scope_Arguments0.isExtern();
    }

    @Test(timeout = 4000)
    public void test3250() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SyntheticAst syntheticAst0 = new SyntheticAst("Cn%KNk7lZ$*8n@\"6");
        CompilerInput compilerInput0 = new CompilerInput(syntheticAst0, "Cn%KNk7lZ$*8n@\"6", false);
        Scope.Var scope_Var0 = scope0.declare("Cn%KNk7lZ$*8n@\"6", (Node) null, (JSType) null, compilerInput0);
        boolean boolean0 = scope_Var0.isExtern();
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test3251() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SyntheticAst syntheticAst0 = new SyntheticAst("Cn%KNk7lZ$*8n@\"6");
        CompilerInput compilerInput0 = new CompilerInput(syntheticAst0, "Cn%KNk7lZ$*8n@\"6", false);
        Scope.Var scope_Var0 = scope0.declare("Cn%KNk7lZ$*8n@\"6", (Node) null, (JSType) null, compilerInput0);
        boolean boolean0 = scope_Var0.isExtern();
    }

    @Test(timeout = 4000)
    public void test3352() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SyntheticAst syntheticAst0 = new SyntheticAst("Cn%KNk7lZ$*8n@\"6");
        CompilerInput compilerInput0 = new CompilerInput(syntheticAst0, "Cn%KNk7lZ$*8n@\"6", true);
        Scope.Var scope_Var0 = scope0.declare("Cn%KNk7lZ$*8n@\"6", (Node) null, (JSType) null, compilerInput0);
        boolean boolean0 = scope_Var0.isExtern();
    }

    @Test(timeout = 4000)
    public void test3353() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SyntheticAst syntheticAst0 = new SyntheticAst("Cn%KNk7lZ$*8n@\"6");
        CompilerInput compilerInput0 = new CompilerInput(syntheticAst0, "Cn%KNk7lZ$*8n@\"6", true);
        Scope.Var scope_Var0 = scope0.declare("Cn%KNk7lZ$*8n@\"6", (Node) null, (JSType) null, compilerInput0);
        boolean boolean0 = scope_Var0.isExtern();
        scope_Var0.getInputName();
    }

    @Test(timeout = 4000)
    public void test3354() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SyntheticAst syntheticAst0 = new SyntheticAst("Cn%KNk7lZ$*8n@\"6");
        CompilerInput compilerInput0 = new CompilerInput(syntheticAst0, "Cn%KNk7lZ$*8n@\"6", true);
        Scope.Var scope_Var0 = scope0.declare("Cn%KNk7lZ$*8n@\"6", (Node) null, (JSType) null, compilerInput0);
        boolean boolean0 = scope_Var0.isExtern();
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test3455() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        boolean boolean0 = scope_Arguments0.isConst();
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test3456() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        boolean boolean0 = scope_Arguments0.isConst();
    }

    @Test(timeout = 4000)
    public void test3557() throws Throwable {
        Node node0 = new Node(11, 11, 11);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Var scope_Var0 = scope0.declare("Not declared as a type name", node0, (JSType) null, (CompilerInput) null);
        boolean boolean0 = scope_Var0.isConst();
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test3558() throws Throwable {
        Node node0 = new Node(11, 11, 11);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Var scope_Var0 = scope0.declare("Not declared as a type name", node0, (JSType) null, (CompilerInput) null);
        boolean boolean0 = scope_Var0.isConst();
    }

    @Test(timeout = 4000)
    public void test3659() throws Throwable {
        Node node0 = new Node((-1), (-1), (-1));
        Node node1 = new Node(118, node0, node0, node0);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Var scope_Var0 = scope0.declare("Not declared as a type name", node0, (JSType) null, (CompilerInput) null);
        Node node2 = scope_Var0.getInitialValue();
    }

    @Test(timeout = 4000)
    public void test3660() throws Throwable {
        Node node0 = new Node((-1), (-1), (-1));
        Node node1 = new Node(118, node0, node0, node0);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Var scope_Var0 = scope0.declare("Not declared as a type name", node0, (JSType) null, (CompilerInput) null);
        Node node2 = scope_Var0.getInitialValue();
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test3761() throws Throwable {
        Node node0 = new Node(11, 11, 11);
        Node node1 = new Node(105, node0, node0, node0);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Var scope_Var0 = scope0.declare("Not declared as a type name", node0, (JSType) null, (CompilerInput) null);
        Node node2 = scope_Var0.getInitialValue();
    }

    @Test(timeout = 4000)
    public void test3762() throws Throwable {
        Node node0 = new Node(11, 11, 11);
        Node node1 = new Node(105, node0, node0, node0);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Var scope_Var0 = scope0.declare("Not declared as a type name", node0, (JSType) null, (CompilerInput) null);
        Node node2 = scope_Var0.getInitialValue();
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test3763() throws Throwable {
        Node node0 = new Node(11, 11, 11);
        Node node1 = new Node(105, node0, node0, node0);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Var scope_Var0 = scope0.declare("Not declared as a type name", node0, (JSType) null, (CompilerInput) null);
        Node node2 = scope_Var0.getInitialValue();
        node2.hasOneChild();
    }

    @Test(timeout = 4000)
    public void test3864() throws Throwable {
        Node node0 = new Node(11, 11, 1245);
        Node node1 = new Node(86, node0, node0, node0);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Var scope_Var0 = scope0.declare("Not declared as a type name", node0, (JSType) null, (CompilerInput) null);
        Node node2 = scope_Var0.getInitialValue();
    }

    @Test(timeout = 4000)
    public void test3865() throws Throwable {
        Node node0 = new Node(11, 11, 1245);
        Node node1 = new Node(86, node0, node0, node0);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Var scope_Var0 = scope0.declare("Not declared as a type name", node0, (JSType) null, (CompilerInput) null);
        Node node2 = scope_Var0.getInitialValue();
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test3866() throws Throwable {
        Node node0 = new Node(11, 11, 1245);
        Node node1 = new Node(86, node0, node0, node0);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Var scope_Var0 = scope0.declare("Not declared as a type name", node0, (JSType) null, (CompilerInput) null);
        Node node2 = scope_Var0.getInitialValue();
        node2.hasOneChild();
    }

    @Test(timeout = 4000)
    public void test3967() throws Throwable {
        Node node0 = new Node((-15), (-15), (-15));
        Node node1 = new Node(36, node0, node0, (-2), 2);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Var scope_Var0 = scope0.declare("Not declared as a type name", node0, (JSType) null, (CompilerInput) null);
        Node node2 = scope_Var0.getInitialValue();
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test3968() throws Throwable {
        Node node0 = new Node((-15), (-15), (-15));
        Node node1 = new Node(36, node0, node0, (-2), 2);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Var scope_Var0 = scope0.declare("Not declared as a type name", node0, (JSType) null, (CompilerInput) null);
        Node node2 = scope_Var0.getInitialValue();
    }

    @Test(timeout = 4000)
    public void test4069() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        scope_Arguments0.resolveType(simpleErrorReporter0);
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test4170() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SyntheticAst syntheticAst0 = new SyntheticAst("Cn%KNk7lZ$*8n@\"6");
        CompilerInput compilerInput0 = new CompilerInput(syntheticAst0, "Cn%KNk7lZ$*8n@\"6", false);
        Scope.Var scope_Var0 = scope0.declare("Cn%KNk7lZ$*8n@\"6", (Node) null, (JSType) null, compilerInput0);
        String string0 = scope_Var0.getInputName();
    }

    @Test(timeout = 4000)
    public void test4171() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SyntheticAst syntheticAst0 = new SyntheticAst("Cn%KNk7lZ$*8n@\"6");
        CompilerInput compilerInput0 = new CompilerInput(syntheticAst0, "Cn%KNk7lZ$*8n@\"6", false);
        Scope.Var scope_Var0 = scope0.declare("Cn%KNk7lZ$*8n@\"6", (Node) null, (JSType) null, compilerInput0);
        String string0 = scope_Var0.getInputName();
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test4272() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        String string0 = scope_Arguments0.getInputName();
    }

    @Test(timeout = 4000)
    public void test4273() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        String string0 = scope_Arguments0.getInputName();
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test4374() throws Throwable {
        Node node0 = new Node(11, 11, 11);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        boolean boolean0 = scope_Arguments0.isNoShadow();
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test4375() throws Throwable {
        Node node0 = new Node(11, 11, 11);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        boolean boolean0 = scope_Arguments0.isNoShadow();
    }

    @Test(timeout = 4000)
    public void test4476() throws Throwable {
        Node node0 = Node.newString(0, "Not declared as a type name");
        Scope scope0 = new Scope(node0, (ObjectType) null);
        node0.addSuppression("Unknown class name");
        Scope.Var scope_Var0 = scope0.declare("Not declared as a constructor", node0, (JSType) null, (CompilerInput) null);
        boolean boolean0 = scope_Var0.isNoShadow();
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test4477() throws Throwable {
        Node node0 = Node.newString(0, "Not declared as a type name");
        Scope scope0 = new Scope(node0, (ObjectType) null);
        node0.addSuppression("Unknown class name");
        Scope.Var scope_Var0 = scope0.declare("Not declared as a constructor", node0, (JSType) null, (CompilerInput) null);
        boolean boolean0 = scope_Var0.isNoShadow();
    }

    @Test(timeout = 4000)
    public void test4578() throws Throwable {
        Node node0 = new Node((-42));
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        Scope.Var scope_Var0 = scope0.declare("Not declared as a type name", node0, (JSType) null, (CompilerInput) null);
        boolean boolean0 = scope_Var0.equals(scope_Arguments0);
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test4579() throws Throwable {
        Node node0 = new Node((-42));
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        Scope.Var scope_Var0 = scope0.declare("Not declared as a type name", node0, (JSType) null, (CompilerInput) null);
        boolean boolean0 = scope_Var0.equals(scope_Arguments0);
    }

    @Test(timeout = 4000)
    public void test4680() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        Stack<JSType> stack0 = new Stack<JSType>();
        Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
        Scope.Var scope_Var0 = scope0.declare("Scope.Var ", node0, (JSType) null, (CompilerInput) null, false);
        boolean boolean0 = scope_Var0.equals((Object) null);
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test4681() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        Stack<JSType> stack0 = new Stack<JSType>();
        Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
        Scope.Var scope_Var0 = scope0.declare("Scope.Var ", node0, (JSType) null, (CompilerInput) null, false);
        boolean boolean0 = scope_Var0.equals((Object) null);
    }

    @Test(timeout = 4000)
    public void test4782() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SyntheticAst syntheticAst0 = new SyntheticAst("Cn%KNk7lZ$*8n@\"6");
        CompilerInput compilerInput0 = new CompilerInput(syntheticAst0, "Cn%KNk7lZ$*8n@\"6", true);
        Scope.Var scope_Var0 = scope0.declare("Cn%KNk7lZ$*8n@\"6", (Node) null, (JSType) null, compilerInput0);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        boolean boolean0 = scope_Var0.equals(scope_Arguments0);
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test4783() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SyntheticAst syntheticAst0 = new SyntheticAst("Cn%KNk7lZ$*8n@\"6");
        CompilerInput compilerInput0 = new CompilerInput(syntheticAst0, "Cn%KNk7lZ$*8n@\"6", true);
        Scope.Var scope_Var0 = scope0.declare("Cn%KNk7lZ$*8n@\"6", (Node) null, (JSType) null, compilerInput0);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        boolean boolean0 = scope_Var0.equals(scope_Arguments0);
    }

    @Test(timeout = 4000)
    public void test4784() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        SyntheticAst syntheticAst0 = new SyntheticAst("Cn%KNk7lZ$*8n@\"6");
        CompilerInput compilerInput0 = new CompilerInput(syntheticAst0, "Cn%KNk7lZ$*8n@\"6", true);
        Scope.Var scope_Var0 = scope0.declare("Cn%KNk7lZ$*8n@\"6", (Node) null, (JSType) null, compilerInput0);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        boolean boolean0 = scope_Var0.equals(scope_Arguments0);
        scope_Var0.getInputName();
    }

    @Test(timeout = 4000)
    public void test4885() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        boolean boolean0 = scope_Arguments0.equals((Object) null);
        scope_Arguments0.isDefine();
    }

    @Test(timeout = 4000)
    public void test4886() throws Throwable {
        Scope.Arguments scope_Arguments0 = new Scope.Arguments((Scope) null);
        boolean boolean0 = scope_Arguments0.equals((Object) null);
    }

    @Test(timeout = 4000)
    public void test4987() throws Throwable {
        Node node0 = new Node((-20));
        Node node1 = new Node((-60), node0);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope scope1 = new Scope(scope0, node1);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope1);
        Scope.Arguments scope_Arguments1 = new Scope.Arguments(scope0);
        boolean boolean0 = scope_Arguments1.equals(scope_Arguments0);
        scope_Arguments1.isDefine();
    }

    @Test(timeout = 4000)
    public void test4988() throws Throwable {
        Node node0 = new Node((-20));
        Node node1 = new Node((-60), node0);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope scope1 = new Scope(scope0, node1);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope1);
        Scope.Arguments scope_Arguments1 = new Scope.Arguments(scope0);
        boolean boolean0 = scope_Arguments1.equals(scope_Arguments0);
    }

    @Test(timeout = 4000)
    public void test5089() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Scope scope1 = null;
        scope1 = new Scope(scope0, (Node) null);
    }

    @Test(timeout = 4000)
    public void test5190() throws Throwable {
        Node node0 = new Node((-60));
        Node node1 = new Node((-60), node0);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope scope1 = new Scope(scope0, node1);
        Scope scope2 = scope1.getGlobalScope();
        scope2.isLocal();
    }

    @Test(timeout = 4000)
    public void test5291() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        scope0.declare((String) null, (Node) null, (JSType) null, (CompilerInput) null);
    }

    @Test(timeout = 4000)
    public void test5392() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        scope0.declare("", (Node) null, (JSType) null, (CompilerInput) null);
    }

    @Test(timeout = 4000)
    public void test5493() throws Throwable {
        Node node0 = new Node(0);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        scope0.declare("Unknown class name", node0, (JSType) null, (CompilerInput) null);
        scope0.declare("Unknown class name", node0, (JSType) null, (CompilerInput) null);
    }

    @Test(timeout = 4000)
    public void test5594() throws Throwable {
        Node node0 = new Node((-15), (-15), (-15));
        Node node1 = new Node(48, node0, node0, node0);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope scope1 = new Scope(scope0, node1);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope1);
        scope0.undeclare(scope_Arguments0);
    }

    @Test(timeout = 4000)
    public void test5695() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Scope.Var scope_Var0 = scope0.declare("HJ8Yd\"_IoRofb/Mb", (Node) null, (JSType) null, (CompilerInput) null);
        scope0.undeclare(scope_Var0);
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test5796() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Scope.Arguments scope_Arguments0 = new Scope.Arguments(scope0);
        scope0.undeclare(scope_Arguments0);
    }

    @Test(timeout = 4000)
    public void test5897() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        scope0.declare("`A", (Node) null, (JSType) null, (CompilerInput) null);
        Scope.Var scope_Var0 = scope0.getVar("`A");
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test5898() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        scope0.declare("`A", (Node) null, (JSType) null, (CompilerInput) null);
        Scope.Var scope_Var0 = scope0.getVar("`A");
    }

    @Test(timeout = 4000)
    public void test5999() throws Throwable {
        Node node0 = new Node((-60));
        Node node1 = new Node((-60), node0);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Scope scope1 = new Scope(scope0, node1);
        Scope.Var scope_Var0 = scope1.getVar("Not declared as a constructor");
    }

    @Test(timeout = 4000)
    public void test60100() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        scope0.getArgumentsVar();
        Scope.Var scope_Var0 = scope0.getArgumentsVar();
    }

    @Test(timeout = 4000)
    public void test60101() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        scope0.getArgumentsVar();
        Scope.Var scope_Var0 = scope0.getArgumentsVar();
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test61102() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Scope.Var scope_Var0 = scope0.declare("HJ8Yd\"_IoRofb/Mb", (Node) null, (JSType) null, (CompilerInput) null);
        scope_Var0.isDefine();
    }

    @Test(timeout = 4000)
    public void test61103() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Scope.Var scope_Var0 = scope0.declare("HJ8Yd\"_IoRofb/Mb", (Node) null, (JSType) null, (CompilerInput) null);
        boolean boolean0 = scope0.isDeclared("HJ8Yd\"_IoRofb/Mb", false);
    }

    @Test(timeout = 4000)
    public void test62104() throws Throwable {
        Node node0 = new Node((-20));
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Scope scope1 = new Scope(scope0, node0);
        boolean boolean0 = scope1.isDeclared("Not declared as a type name", false);
    }

    @Test(timeout = 4000)
    public void test63105() throws Throwable {
        Node node0 = new Node((-20));
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Scope scope1 = new Scope(scope0, node0);
        boolean boolean0 = scope1.isDeclared("Not declared as a type name", true);
    }

    @Test(timeout = 4000)
    public void test64106() throws Throwable {
        Node node0 = new Node((-20));
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        Scope scope1 = new Scope(scope0, node0);
        boolean boolean0 = scope1.isLocal();
    }

    @Test(timeout = 4000)
    public void test65107() throws Throwable {
        Scope scope0 = new Scope((Node) null, (ObjectType) null);
        boolean boolean0 = scope0.isLocal();
    }
}
