/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 04 06:27:12 GMT 2023
 */
package com.google.javascript.jscomp.parsing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.parsing.Config;
import com.google.javascript.jscomp.parsing.JsDocInfoParser;
import com.google.javascript.jscomp.parsing.JsDocToken;
import com.google.javascript.jscomp.parsing.JsDocTokenStream;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.head.ErrorReporter;
import com.google.javascript.rhino.head.Token;
import com.google.javascript.rhino.head.ast.Comment;
import com.google.javascript.rhino.head.ast.ErrorCollector;
import com.google.javascript.rhino.head.tools.ToolErrorReporter;
import java.nio.charset.Charset;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Set;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class JsDocInfoParser_ESTest extends JsDocInfoParser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("coyr");
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("coyr");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("coyr");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        JsDocToken jsDocToken0 = JsDocToken.EOC;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        boolean boolean0 = jsDocInfoParser0.parse();
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test002() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("coyr");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("coyr");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        JsDocToken jsDocToken0 = JsDocToken.EOC;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test013() throws Throwable {
        Node node0 = Node.newString(")~>");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(")~>");
        HashSet<String> hashSet0 = new HashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
        boolean boolean0 = jsDocInfoParser0.hasParsedJSDocInfo();
    }

    @Test(timeout = 4000)
    public void test024() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(I;2");
    }

    @Test(timeout = 4000)
    public void test035() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        Node node0 = Node.newString("nq<=v=.'vcD3EgF");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("nq<=v=.'vcD3EgF", 4095, 46);
        Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
        Comment comment0 = new Comment(49, 4095, token_CommentType0, "nq<=v=.'vcD3EgF");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.getFileOverviewJSDocInfo();
    }

    @Test(timeout = 4000)
    public void test046() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("Q9bugwgCe+\n");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Node node0 = Node.newString("Q9bugwgCe+\n");
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
        Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
        jsDocInfoParser0.setFileLevelJsDocBuilder(node_FileLevelJsDocBuilder0);
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("msg.jsdoc.interface.constructor");
    }

    @Test(timeout = 4000)
    public void test058() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("msg.jsdoc.interface.constructor");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("msg.jsdoc.interface.constructor", 15, 55);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.setFileOverviewJSDocInfo((JSDocInfo) null);
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test059() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("msg.jsdoc.interface.constructor");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("msg.jsdoc.interface.constructor", 15, 55);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.setFileOverviewJSDocInfo((JSDocInfo) null);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test0510() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("msg.jsdoc.interface.constructor");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("msg.jsdoc.interface.constructor", 15, 55);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.setFileOverviewJSDocInfo((JSDocInfo) null);
        node0.isString();
    }

    @Test(timeout = 4000)
    public void test0611() throws Throwable {
        Charset charset0 = Charset.defaultCharset();
        Set<String> set0 = charset0.aliases();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(set0, set0, true, config_LanguageMode0, true);
        Node node0 = Node.newString("@*");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("@*", 54, 31);
        Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
        Comment comment0 = new Comment(47, 16, token_CommentType0, "@*");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test0712() throws Throwable {
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("(I;2", 53, 42);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test0813() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Node node0 = JsDocInfoParser.parseTypeString("'9wg.\n");
    }

    @Test(timeout = 4000)
    public void test0814() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Node node0 = JsDocInfoParser.parseTypeString("'9wg.\n");
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("'9wg.\n", 1);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test0815() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Node node0 = JsDocInfoParser.parseTypeString("'9wg.\n");
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("'9wg.\n", 1);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
    }

    @Test(timeout = 4000)
    public void test0816() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Node node0 = JsDocInfoParser.parseTypeString("'9wg.\n");
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("'9wg.\n", 1);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test0817() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Node node0 = JsDocInfoParser.parseTypeString("'9wg.\n");
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("'9wg.\n", 1);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test0918() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("Q9bugwgCe+\n");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Node node0 = JsDocInfoParser.parseTypeString("Q9bugwgCe+\n");
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        node0.setSourceFileForTesting("Q9bugwgCe+\n");
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1019() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(")enN3\"hcA}gLz~UF1", 52, 15);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
    }

    @Test(timeout = 4000)
    public void test1120() throws Throwable {
        Locale locale0 = Locale.GERMAN;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);
        Node node0 = Node.newString(".java");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("@lXv@");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1221() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*(|shST:z OIyID!N-");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Node node0 = Node.newString("*(|shST:z OIyID!N-");
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1322() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        Node node0 = Node.newString("Rr\"}!Ot+6+}S:");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("Rr\"}!Ot+6+}S:", 1, 2);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment((-412283329), 2, token_CommentType0, "STRING_TYPE");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LC;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        node1.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test1323() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        Node node0 = Node.newString("Rr\"}!Ot+6+}S:");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("Rr\"}!Ot+6+}S:", 1, 2);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment((-412283329), 2, token_CommentType0, "STRING_TYPE");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LC;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    }

    @Test(timeout = 4000)
    public void test1324() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        Node node0 = Node.newString("Rr\"}!Ot+6+}S:");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("Rr\"}!Ot+6+}S:", 1, 2);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment((-412283329), 2, token_CommentType0, "STRING_TYPE");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LC;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        node1.getLength();
    }

    @Test(timeout = 4000)
    public void test1425() throws Throwable {
        Node node0 = Node.newString("1bxZ");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("!1.-J", 30, 52);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment(55, 31, token_CommentType0, "!1.-J");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1526() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("tTcoyr");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(",\n", 37, 42);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1627() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = Node.newString("cbQoE,!MA9");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(":u'O,PdUdnsL,<*", 8, 54);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1728() throws Throwable {
        Node node0 = Node.newString("~>");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("~>");
        HashSet<String> hashSet0 = new HashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1829() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = Node.newString("[B1)");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("[B1)", 12, 8);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1930() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("{=rf");
        HashSet<String> hashSet0 = new HashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2031() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("Ko%");
    }

    @Test(timeout = 4000)
    public void test2032() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("Ko%");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("Ko%", 15, 55);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LT;
        jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        jsDocInfoParser0.parse();
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test2033() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("Ko%");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("Ko%", 15, 55);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LT;
        jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        jsDocInfoParser0.parse();
        node0.isString();
    }

    @Test(timeout = 4000)
    public void test2034() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("Ko%");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("Ko%", 15, 55);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LT;
        jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        jsDocInfoParser0.parse();
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test2135() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("?", 47, 37);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2236() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("|ujoSxU");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2337() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = Node.newString("*]%,");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*]%,", 2, 43);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2438() throws Throwable {
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        HashSet<String> hashSet0 = new HashSet<String>();
        Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("}");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2539() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = Node.newString("$");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(")enN3\"hc}gLz~UF1", 52, 15);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2640() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("*");
    }

    @Test(timeout = 4000)
    public void test2641() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("*");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*", 2, 43);
        JsDocToken jsDocToken0 = JsDocToken.ELLIPSIS;
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        jsDocInfoParser0.parse();
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test2642() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("*");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*", 2, 43);
        JsDocToken jsDocToken0 = JsDocToken.ELLIPSIS;
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        jsDocInfoParser0.parse();
        node0.getChildCount();
    }

    @Test(timeout = 4000)
    public void test2743() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("=)!Wf}404", 52, 15);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2844() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = Node.newString("*aB1u1/");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*aB1u1/", 46);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2945() throws Throwable {
        Node node0 = Node.newString("coyr");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("coyr");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        JsDocToken jsDocToken0 = JsDocToken.EOC;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test3046() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Node node0 = JsDocInfoParser.parseTypeString("; !S^D( 5{SwmW ");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("; !S^D( 5{SwmW ");
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test3147() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("NY|");
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        Set<String> set0 = jSDocInfo0.getModifies();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LC;
        Node node0 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    }

    @Test(timeout = 4000)
    public void test3248() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        Node node0 = Node.newString("7tbE%");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("7tbE%", 38);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment(49, 4095, token_CommentType0, "7tbE%");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LC;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        node1.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test3249() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        Node node0 = Node.newString("7tbE%");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("7tbE%", 38);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment(49, 4095, token_CommentType0, "7tbE%");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LC;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    }

    @Test(timeout = 4000)
    public void test3250() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        Node node0 = Node.newString("7tbE%");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("7tbE%", 38);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment(49, 4095, token_CommentType0, "7tbE%");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LC;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        node1.getLength();
    }

    @Test(timeout = 4000)
    public void test3351() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("e$_FW0T^ .<Lc");
    }

    @Test(timeout = 4000)
    public void test3452() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("z-u.<=Lc");
    }

    @Test(timeout = 4000)
    public void test3453() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("z-u.<=Lc");
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test3454() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("z-u.<=Lc");
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test3555() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?,LmixF\"@%6O@m.");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3556() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?,LmixF\"@%6O@m.");
    }

    @Test(timeout = 4000)
    public void test3657() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("? =u");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3658() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("? =u");
    }

    @Test(timeout = 4000)
    public void test3759() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?]#:");
    }

    @Test(timeout = 4000)
    public void test3760() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?]#:");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3861() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?}N-&xJ,\"j^e'$ei=bX");
    }

    @Test(timeout = 4000)
    public void test3862() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?}N-&xJ,\"j^e'$ei=bX");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3963() throws Throwable {
        Node node0 = Node.newString(")~>");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(")~>");
        HashSet<String> hashSet0 = new HashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        node1.getType();
    }

    @Test(timeout = 4000)
    public void test4064() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("IRSOgvs$");
    }

    @Test(timeout = 4000)
    public void test4065() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("IRSOgvs$");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("|kV)WPX@", (-649), 43);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment((-2466), 147, token_CommentType0, "|kV)WPX@");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        node1.getType();
    }

    @Test(timeout = 4000)
    public void test4066() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("IRSOgvs$");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("|kV)WPX@", (-649), 43);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment((-2466), 147, token_CommentType0, "|kV)WPX@");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    }

    @Test(timeout = 4000)
    public void test4067() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("IRSOgvs$");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("|kV)WPX@", (-649), 43);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment((-2466), 147, token_CommentType0, "|kV)WPX@");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test4168() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?>.9!3");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4169() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?>.9!3");
    }

    @Test(timeout = 4000)
    public void test4270() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString(" sN%-|Q?u6");
    }

    @Test(timeout = 4000)
    public void test4271() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString(" sN%-|Q?u6");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4272() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString(" sN%-|Q?u6");
        node0.getChildCount();
    }

    @Test(timeout = 4000)
    public void test4273() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString(" sN%-|Q?u6");
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test4374() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{=rf");
    }

    @Test(timeout = 4000)
    public void test4475() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("function");
    }

    @Test(timeout = 4000)
    public void test4576() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("null");
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test4577() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("null");
    }

    @Test(timeout = 4000)
    public void test4578() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("null");
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test4679() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("undefined");
    }

    @Test(timeout = 4000)
    public void test4680() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("undefined");
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test4681() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("undefined");
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test4782() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("|*|SZ6C).\"6G7Xa");
        node0.getChildCount();
    }

    @Test(timeout = 4000)
    public void test4783() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("|*|SZ6C).\"6G7Xa");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4784() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("|*|SZ6C).\"6G7Xa");
    }

    @Test(timeout = 4000)
    public void test4885() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("<N|X_I20p ,");
    }

    @Test(timeout = 4000)
    public void test4986() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(Ljava/lang/String;)Ljava/lang/StringBuffer;");
    }

    @Test(timeout = 4000)
    public void test4987() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(Ljava/lang/String;)Ljava/lang/StringBuffer;");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4988() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(Ljava/lang/String;)Ljava/lang/StringBuffer;");
        node0.getChildCount();
    }

    @Test(timeout = 4000)
    public void test5089() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[ativebcode, asiJq=");
    }

    @Test(timeout = 4000)
    public void test5190() throws Throwable {
        Node node0 = Node.newString("1bxV");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("!1.J", 30, 52);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment(55, 31, token_CommentType0, "!1.J");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.ELLIPSIS;
        jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        JsDocToken jsDocToken1 = JsDocToken.LB;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken1);
    }

    @Test(timeout = 4000)
    public void test5291() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[");
    }

    @Test(timeout = 4000)
    public void test5392() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[iX]T[Ntig&[{];[eRL");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test5393() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[iX]T[Ntig&[{];[eRL");
    }

    @Test(timeout = 4000)
    public void test5394() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[iX]T[Ntig&[{];[eRL");
        node0.hasChildren();
    }

    @Test(timeout = 4000)
    public void test5495() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{N}");
    }

    @Test(timeout = 4000)
    public void test5496() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{N}");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test5497() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{N}");
        node0.hasChildren();
    }

    @Test(timeout = 4000)
    public void test5598() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{O,Q/iEUCWI`$JO");
    }

    @Test(timeout = 4000)
    public void test5699() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{OH6w:Z");
    }

    @Test(timeout = 4000)
    public void test57100() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{OyW:");
    }

    @Test(timeout = 4000)
    public void test58101() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?");
    }

    @Test(timeout = 4000)
    public void test59102() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("%<p8zIb;*/Rm}{vW");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Node node0 = JsDocInfoParser.parseTypeString("fu{nction");
    }

    @Test(timeout = 4000)
    public void test59103() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("%<p8zIb;*/Rm}{vW");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Node node0 = JsDocInfoParser.parseTypeString("fu{nction");
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
        jsDocInfoParser0.parse();
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test59104() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("%<p8zIb;*/Rm}{vW");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Node node0 = JsDocInfoParser.parseTypeString("fu{nction");
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
        jsDocInfoParser0.parse();
        node0.isString();
    }

    @Test(timeout = 4000)
    public void test59105() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("%<p8zIb;*/Rm}{vW");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Node node0 = JsDocInfoParser.parseTypeString("fu{nction");
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
        jsDocInfoParser0.parse();
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test60106() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = Node.newString("*aB1u1/");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*aB1u1/", 46);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.EOL;
        jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }
}
