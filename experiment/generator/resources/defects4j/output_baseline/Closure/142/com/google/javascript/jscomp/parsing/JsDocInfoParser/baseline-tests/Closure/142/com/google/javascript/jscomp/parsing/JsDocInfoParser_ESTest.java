/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 19 22:50:42 GMT 2023
 */
package com.google.javascript.jscomp.parsing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.mozilla.rhino.ErrorReporter;
import com.google.javascript.jscomp.mozilla.rhino.ast.ErrorCollector;
import com.google.javascript.jscomp.mozilla.rhino.tools.ToolErrorReporter;
import com.google.javascript.jscomp.parsing.Config;
import com.google.javascript.jscomp.parsing.JsDocInfoParser;
import com.google.javascript.jscomp.parsing.JsDocTokenStream;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class JsDocInfoParser_ESTest extends JsDocInfoParser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("!,&*/4y1j*'>T()");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "!,&*/4y1j*'>T()", config0, (ErrorReporter) null);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("=V8yK\"&0RFN%]z");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "=V8yK\"&0RFN%]z", config0, (ErrorReporter) null);
        boolean boolean0 = jsDocInfoParser0.hasParsedJSDocInfo();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("function (");
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("=V8yK\"0RFN%F]z");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "=V8yK\"0RFN%F]z", config0, (ErrorReporter) null);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.getFileOverviewJSDocInfo();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*Y@pv4<=M2C");
        Locale locale0 = Locale.TAIWAN;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        Config config0 = new Config((JSTypeRegistry) null, set0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "*Y@pv4<=M2C", config0, (ErrorReporter) null);
        jsDocInfoParser0.setFileLevelJsDocBuilder((Node.FileLevelJsDocBuilder) null);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("=V8yK\"0RFN%F]z");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "=V8yK\"0RFN%F]z", config0, (ErrorReporter) null);
        jsDocInfoParser0.setFileOverviewJSDocInfo((JSDocInfo) null);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("@*}p=$BV$i6eF");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "@*}p=$BV$i6eF", config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(e8%bz_,9lPF");
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("!,&*/4y1j*'>T()");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "!,&*/4y1j*'>T()", config0, (ErrorReporter) null);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.retrieveAndResetParsedJSDocInfo();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("@[d-TK1\n");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "@[d-TK1\n", config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(".<");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, ".<", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(",^XhGZ0g~*");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, ",^XhGZ0g~*", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(":!gKmi7n]RSo0u</");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, ":!gKmi7n]RSo0u</", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(">!!K)os@ XD$?$l\"#)");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, ">!!K)os@ XD$?$l\"#)", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("[JVqvaConstructfrc ");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "[JVqvaConstructfrc ", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("{jtb<maUx_3>%");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "{jtb<maUx_3>%", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("(L,VC!F");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "(L,VC!F", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("?o+6m\"KHvS");
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "?o+6m\"KHvS", config0, (ErrorReporter) null);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("|c+F#6epY-0''knu78");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "|c+F#6epY-0''knu78", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("];ejT0&zo~}");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "];ejT0&zo~}", config0, (ErrorReporter) null);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("}i_s-.{*+lkNC^");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "}i_s-.{*+lkNC^", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(")c)TF#69pYJ-D''kn78");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, ")c)TF#69pYJ-D''kn78", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("...");
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "...", config0, (ErrorReporter) null);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("=V8yK\"0RF[?F]z");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "=V8yK\"0RF[?F]z", config0, (ErrorReporter) null);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*Y@pv4<=M2C");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "*Y@pv4<=M2C", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("Node cannot be refined. \n");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "Node cannot be refined. \n", config0, (ErrorReporter) null);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("$&.<NE>");
    }

    @Test(timeout = 4000)
    public void test2627() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("$&.<NE>");
        node0.hasChildren();
    }

    @Test(timeout = 4000)
    public void test2728() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("0&|A|#TTyq2");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test2729() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("0&|A|#TTyq2");
    }

    @Test(timeout = 4000)
    public void test2730() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("0&|A|#TTyq2");
        node0.getChildCount();
    }

    @Test(timeout = 4000)
    public void test2831() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("s%T.<");
    }

    @Test(timeout = 4000)
    public void test2832() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("s%T.<");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test2933() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?VFt;*Hp>:Ng{");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test2934() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?VFt;*Hp>:Ng{");
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test2935() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?VFt;*Hp>:Ng{");
    }

    @Test(timeout = 4000)
    public void test3036() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("!");
    }

    @Test(timeout = 4000)
    public void test3137() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("x?5,mc@y@C");
    }

    @Test(timeout = 4000)
    public void test3138() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("x?5,mc@y@C");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3239() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("NL6e~7sR!");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3240() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("NL6e~7sR!");
    }

    @Test(timeout = 4000)
    public void test3341() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*Y@pv4<=2C");
    }

    @Test(timeout = 4000)
    public void test3342() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*Y@pv4<=2C");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3443() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[s,+\n");
    }

    @Test(timeout = 4000)
    public void test3544() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{Eg:n9;5q3 ");
    }

    @Test(timeout = 4000)
    public void test3645() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("null");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3646() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("null");
    }

    @Test(timeout = 4000)
    public void test3747() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("undefined");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3748() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("undefined");
    }

    @Test(timeout = 4000)
    public void test3849() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("s%T.<n[w");
    }

    @Test(timeout = 4000)
    public void test3950() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("function");
    }

    @Test(timeout = 4000)
    public void test4051() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("ed`;\"5ha4Hp13I|");
    }

    @Test(timeout = 4000)
    public void test4152() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(Lorg/mozilla/javascript/Context;)Lorg/mozilla/javascript/RegExpProxy;");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4153() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(Lorg/mozilla/javascript/Context;)Lorg/mozilla/javascript/RegExpProxy;");
    }

    @Test(timeout = 4000)
    public void test4154() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(Lorg/mozilla/javascript/Context;)Lorg/mozilla/javascript/RegExpProxy;");
        node0.hasChildren();
    }

    @Test(timeout = 4000)
    public void test4255() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[\n");
    }

    @Test(timeout = 4000)
    public void test4356() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[EJavaConsNr]cttfrc ");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4357() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[EJavaConsNr]cttfrc ");
    }

    @Test(timeout = 4000)
    public void test4358() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[EJavaConsNr]cttfrc ");
        node0.getChildCount();
    }

    @Test(timeout = 4000)
    public void test4459() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{'q^eM2rJVlr:@,y9AE");
    }

    @Test(timeout = 4000)
    public void test4560() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{wKbM&}p{$]G>05T2e");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4561() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{wKbM&}p{$]G>05T2e");
        node0.hasOneChild();
    }

    @Test(timeout = 4000)
    public void test4562() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{wKbM&}p{$]G>05T2e");
    }

    @Test(timeout = 4000)
    public void test4663() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{QP,dNQ3V>VP*Hf");
    }

    @Test(timeout = 4000)
    public void test4764() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{");
    }
}
