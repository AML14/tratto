/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 09:19:34 GMT 2023
 */
package org.apache.commons.compress.archivers.sevenz;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.apache.commons.compress.archivers.ArchiveEntry;
import org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry;
import org.apache.commons.compress.archivers.sevenz.SevenZMethod;
import org.apache.commons.compress.archivers.sevenz.SevenZOutputFile;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class SevenZOutputFile_ESTest extends SevenZOutputFile_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
        SevenZArchiveEntry sevenZArchiveEntry0 = sevenZOutputFile0.createArchiveEntry(mockFile0, "");
        sevenZArchiveEntry0.getHasWindowsAttributes();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        MockFile mockFile0 = new MockFile("CY]", "CY]");
        SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
        sevenZOutputFile0.write((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
        sevenZOutputFile0.write(0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        MockFile mockFile0 = new MockFile("ir", "rw");
        SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "rw");
        sevenZOutputFile0.putArchiveEntry(tarArchiveEntry0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
        sevenZOutputFile0.createArchiveEntry((File) null, "");
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        MockFile mockFile0 = new MockFile("", "");
        SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
        sevenZOutputFile0.close();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        SevenZOutputFile sevenZOutputFile0 = null;
        sevenZOutputFile0 = new SevenZOutputFile((File) null);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        File file0 = MockFile.createTempFile("Broken or unsupported archive: no Header", "GROUP_EXEC");
        MockFile mockFile0 = new MockFile(file0, "GROUP_EXEC");
        SevenZOutputFile sevenZOutputFile0 = null;
        sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
        byte[] byteArray0 = new byte[6];
        sevenZOutputFile0.write(byteArray0, 0, 2048);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        MockFile mockFile0 = new MockFile("org.apache.commons.compress.archivers.sevenz.Coders$LZMADecoder", "q=2");
        SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
        byte[] byteArray0 = new byte[9];
        sevenZOutputFile0.write(byteArray0, (int) (byte) 61, (int) (byte) (-41));
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        File file0 = MockFile.createTempFile("I`;", "FATAL: UTF-8 encoding not supported.");
        SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(file0);
        SevenZArchiveEntry sevenZArchiveEntry0 = sevenZOutputFile0.createArchiveEntry(file0, "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1");
        sevenZArchiveEntry0.getHasWindowsAttributes();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        MockFile mockFile0 = new MockFile(":4l]<dXp<75<ps`y", "");
        SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
        sevenZOutputFile0.close();
        sevenZOutputFile0.finish();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        MockFile mockFile0 = new MockFile("XDuAy@Z^kD:[0", "CWU");
        SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
        byte[] byteArray0 = new byte[2];
        sevenZOutputFile0.write(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
        sevenZOutputFile0.closeArchiveEntry();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        MockFile mockFile0 = new MockFile("", "}Ht~ ;Vp;bS+s");
        SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
        byte[] byteArray0 = new byte[0];
        sevenZOutputFile0.write(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        MockFile mockFile0 = new MockFile(", dateTimeCreated=");
        SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
        sevenZOutputFile0.finish();
        sevenZOutputFile0.close();
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        MockFile mockFile0 = new MockFile("XDuAy@Z^kD:[0", "CWU");
        SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
        SevenZMethod sevenZMethod0 = SevenZMethod.LZMA;
        sevenZOutputFile0.setContentCompression(sevenZMethod0);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        MockFile mockFile0 = new MockFile("", "}Ht~ ;Vp;bS+s");
        SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
        sevenZOutputFile0.putArchiveEntry((ArchiveEntry) null);
    }
}
