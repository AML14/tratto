/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 07:31:09 GMT 2023
 */
package org.apache.commons.compress.archivers.cpio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import org.apache.commons.compress.archivers.ArchiveEntry;
import org.apache.commons.compress.archivers.ar.ArArchiveEntry;
import org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;
import org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class CpioArchiveOutputStream_ESTest extends CpioArchiveOutputStream_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        MockPrintStream mockPrintStream0 = new MockPrintStream("}U*Q$D");
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(mockPrintStream0);
        CpioArchiveEntry cpioArchiveEntry0 = new CpioArchiveEntry("}U*Q$D");
        cpioArchiveEntry0.setTime((-1906L));
        cpioArchiveOutputStream0.putArchiveEntry(cpioArchiveEntry0);
        cpioArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream((OutputStream) null);
        byte[] byteArray0 = new byte[4];
        cpioArchiveOutputStream0.write(byteArray0, (int) (byte) 0, (int) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        MockPrintStream mockPrintStream0 = new MockPrintStream("4l]<dXp<75<ps`yF");
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(mockPrintStream0);
        MockFile mockFile0 = new MockFile("", "4l]<dXp<75<ps`yF");
        mockFile0.mkdirs();
        CpioArchiveEntry cpioArchiveEntry0 = (CpioArchiveEntry) cpioArchiveOutputStream0.createArchiveEntry(mockFile0, "57A=bIz*i\"|3<sq");
        cpioArchiveEntry0.getHeaderPadCount();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        MockPrintStream mockPrintStream0 = new MockPrintStream("4l]<dXp<75<ps`yF");
        mockPrintStream0.append((CharSequence) "4l]<dXp<75<ps`yF");
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(mockPrintStream0);
        MockFile mockFile0 = new MockFile("4l]<dXp<75<ps`yF");
        ArchiveEntry archiveEntry0 = cpioArchiveOutputStream0.createArchiveEntry(mockFile0, "");
        archiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream((OutputStream) null);
        cpioArchiveOutputStream0.write((byte[]) null, 26, 26);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0, false);
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(mockPrintStream0);
        cpioArchiveOutputStream0.close();
        byte[] byteArray0 = new byte[0];
        cpioArchiveOutputStream0.write(byteArray0, 3858, 2438);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("6hqo$Jh4!6\u0004", true);
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        MockPrintStream mockPrintStream0 = new MockPrintStream(dataOutputStream0);
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(mockPrintStream0);
        cpioArchiveOutputStream0.putArchiveEntry((ArchiveEntry) null);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream((OutputStream) null);
        ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("", 29127L);
        cpioArchiveOutputStream0.putArchiveEntry(arArchiveEntry0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream((OutputStream) null);
        cpioArchiveOutputStream0.finish();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        MockPrintStream mockPrintStream0 = new MockPrintStream("#p<`9]?z~");
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(mockPrintStream0);
        cpioArchiveOutputStream0.closeArchiveEntry();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream((OutputStream) null);
        cpioArchiveOutputStream0.close();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        MockPrintStream mockPrintStream0 = new MockPrintStream("#p<`9]?z~");
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(mockPrintStream0);
        CpioArchiveEntry cpioArchiveEntry0 = new CpioArchiveEntry("#p<`9]?z~");
        cpioArchiveOutputStream0.putArchiveEntry(cpioArchiveEntry0);
        cpioArchiveOutputStream0.close();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        MockPrintStream mockPrintStream0 = new MockPrintStream("}U*Q$D");
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(mockPrintStream0);
        CpioArchiveEntry cpioArchiveEntry0 = new CpioArchiveEntry("}U*Q$D");
        cpioArchiveEntry0.setSize(29127L);
        cpioArchiveOutputStream0.putArchiveEntry(cpioArchiveEntry0);
        byte[] byteArray0 = new byte[5];
        cpioArchiveOutputStream0.write(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(16384);
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(byteArrayOutputStream0);
        CpioArchiveEntry cpioArchiveEntry0 = new CpioArchiveEntry("FH$Zv6");
        cpioArchiveOutputStream0.putArchiveEntry(cpioArchiveEntry0);
        byteArrayOutputStream0.writeTo(cpioArchiveOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(16384);
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(byteArrayOutputStream0);
        cpioArchiveOutputStream0.finish();
        byteArrayOutputStream0.writeTo(cpioArchiveOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        MockPrintStream mockPrintStream0 = new MockPrintStream("#p<`9]?z~");
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(mockPrintStream0);
        CpioArchiveEntry cpioArchiveEntry0 = new CpioArchiveEntry("#p<`9]?z~");
        cpioArchiveOutputStream0.putArchiveEntry(cpioArchiveEntry0);
        cpioArchiveOutputStream0.closeArchiveEntry();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("N!=MR-2Hz", true);
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(mockFileOutputStream0, (short) 1);
        cpioArchiveOutputStream0.close();
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0, false);
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(mockPrintStream0);
        cpioArchiveOutputStream0.close();
        cpioArchiveOutputStream0.close();
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        MockPrintStream mockPrintStream0 = new MockPrintStream("}U*Q$D");
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(mockPrintStream0);
        CpioArchiveEntry cpioArchiveEntry0 = new CpioArchiveEntry("}U*Q$D");
        cpioArchiveOutputStream0.putArchiveEntry(cpioArchiveEntry0);
        cpioArchiveOutputStream0.finish();
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(24576);
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(byteArrayOutputStream0, (short) 4);
        byteArrayOutputStream0.writeTo(cpioArchiveOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(24609);
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(byteArrayOutputStream0, (short) 4);
        byte[] byteArray0 = new byte[3];
        cpioArchiveOutputStream0.write(byteArray0, 24608, 1);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        byte[] byteArray0 = new byte[4];
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(">QDkwC/'");
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(mockFileOutputStream0);
        cpioArchiveOutputStream0.write(byteArray0, 6, (-746));
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(bufferedOutputStream0, (short) 2);
        byte[] byteArray0 = new byte[8];
        cpioArchiveOutputStream0.write(byteArray0, (int) (byte) (-2), (int) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        MockPrintStream mockPrintStream0 = new MockPrintStream("}U*Q$D");
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(mockPrintStream0);
        CpioArchiveEntry cpioArchiveEntry0 = new CpioArchiveEntry("}U*Q$D");
        cpioArchiveEntry0.setSize(4L);
        cpioArchiveOutputStream0.putArchiveEntry(cpioArchiveEntry0);
        cpioArchiveOutputStream0.closeArchiveEntry();
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(24576);
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(byteArrayOutputStream0, (short) 4);
        File file0 = MockFile.createTempFile("org.apache.commons.compress.archivers.zip.UnicodePathExtraField", "org.apache.commons.compress.archivers.zip.UnicodePathExtraField");
        ArchiveEntry archiveEntry0 = cpioArchiveOutputStream0.createArchiveEntry(file0, "");
        cpioArchiveOutputStream0.putArchiveEntry(archiveEntry0);
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        CpioArchiveOutputStream cpioArchiveOutputStream0 = null;
        cpioArchiveOutputStream0 = new CpioArchiveOutputStream(byteArrayOutputStream0, (short) (-893));
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        CpioArchiveOutputStream cpioArchiveOutputStream0 = null;
        cpioArchiveOutputStream0 = new CpioArchiveOutputStream(byteArrayOutputStream0, (short) 7);
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(255);
        CpioArchiveOutputStream cpioArchiveOutputStream0 = null;
        cpioArchiveOutputStream0 = new CpioArchiveOutputStream(byteArrayOutputStream0, (short) 6);
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        CpioArchiveOutputStream cpioArchiveOutputStream0 = null;
        cpioArchiveOutputStream0 = new CpioArchiveOutputStream(byteArrayOutputStream0, (short) 5);
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("org.apache.commons.compress.archivers.cpio.CpioArchiveEntry", false);
        CpioArchiveOutputStream cpioArchiveOutputStream0 = null;
        cpioArchiveOutputStream0 = new CpioArchiveOutputStream(mockFileOutputStream0, (short) 3);
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(byteArrayOutputStream0, (short) 2);
        cpioArchiveOutputStream0.finish();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test3031() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(byteArrayOutputStream0, (short) 2);
        cpioArchiveOutputStream0.finish();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test3132() throws Throwable {
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream((OutputStream) null);
        cpioArchiveOutputStream0.createArchiveEntry((File) null, "070702");
    }

    @Test(timeout = 4000)
    public void test3233() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(24609);
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(byteArrayOutputStream0, (short) 4);
        cpioArchiveOutputStream0.finish();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test3234() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(24609);
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(byteArrayOutputStream0, (short) 4);
        cpioArchiveOutputStream0.finish();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test3335() throws Throwable {
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("l~NBve2S~3U=0MB", false);
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(mockFileOutputStream0, (short) 8);
        cpioArchiveOutputStream0.finish();
    }

    @Test(timeout = 4000)
    public void test3436() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        CpioArchiveOutputStream cpioArchiveOutputStream0 = new CpioArchiveOutputStream(byteArrayOutputStream0);
        CpioArchiveEntry cpioArchiveEntry0 = new CpioArchiveEntry("WHnZv6");
        cpioArchiveOutputStream0.putArchiveEntry(cpioArchiveEntry0);
        cpioArchiveOutputStream0.putArchiveEntry(cpioArchiveEntry0);
    }
}
