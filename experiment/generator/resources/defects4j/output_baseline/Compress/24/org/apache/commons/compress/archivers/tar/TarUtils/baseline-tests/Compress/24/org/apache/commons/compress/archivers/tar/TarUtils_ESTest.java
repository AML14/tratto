/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 09:48:54 GMT 2023
 */
package org.apache.commons.compress.archivers.tar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.compress.archivers.tar.TarUtils;
import org.apache.commons.compress.archivers.zip.ZipEncoding;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class TarUtils_ESTest extends TarUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        byte[] byteArray0 = new byte[1];
        byteArray0[0] = (byte) (-15);
        boolean boolean0 = TarUtils.verifyCheckSum(byteArray0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        byte[] byteArray0 = new byte[1];
        TarUtils.formatLongOctalOrBinaryBytes((-1259L), byteArray0, 68, (-1715));
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        byte[] byteArray0 = new byte[3];
        TarUtils.formatLongOctalOrBinaryBytes((-1L), byteArray0, (byte) 0, 1);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        byte[] byteArray0 = new byte[3];
        TarUtils.formatLongOctalOrBinaryBytes(0L, byteArray0, 1407, 0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        byte[] byteArray0 = new byte[9];
        TarUtils.formatOctalBytes((-782L), byteArray0, (byte) 0, (byte) 3);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        byte[] byteArray0 = new byte[7];
        TarUtils.formatOctalBytes(3142L, byteArray0, (byte) 13, (byte) 3);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byteArray0[8] = (byte) (-86);
        TarUtils.parseOctal(byteArray0, 8, 5396);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        byte[] byteArray0 = new byte[5];
        TarUtils.formatLongOctalBytes(0L, byteArray0, (byte) 32, (byte) 3);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        byte[] byteArray0 = new byte[1];
        ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
        int int0 = TarUtils.formatNameBytes("AEp]<", byteArray0, (int) (byte) 0, (int) (byte) 0, zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        byte[] byteArray0 = new byte[3];
        int int0 = TarUtils.formatNameBytes("org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding", byteArray0, (int) (byte) 0, 0);
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        byte[] byteArray0 = new byte[1];
        int int0 = TarUtils.formatNameBytes(" is too large for ", byteArray0, (int) (byte) 1, 0);
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        byte[] byteArray0 = new byte[7];
        int int0 = TarUtils.formatNameBytes("Jx0DNRLj<alwcB8)!l", byteArray0, 0, (int) (byte) (-7));
    }

    @Test(timeout = 4000)
    public void test1214() throws Throwable {
        byte[] byteArray0 = new byte[4];
        byteArray0[2] = (byte) 29;
        long long0 = TarUtils.computeCheckSum(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1315() throws Throwable {
        TarUtils.verifyCheckSum((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test1416() throws Throwable {
        TarUtils.parseOctalOrBinary((byte[]) null, (-1010), 2270);
    }

    @Test(timeout = 4000)
    public void test1517() throws Throwable {
        TarUtils.parseOctal((byte[]) null, 25, 25);
    }

    @Test(timeout = 4000)
    public void test1618() throws Throwable {
        ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
        TarUtils.parseName((byte[]) null, (-4302), 253, zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test1719() throws Throwable {
        byte[] byteArray0 = new byte[4];
        ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
        TarUtils.parseName(byteArray0, (int) (byte) 0, 7, zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test1820() throws Throwable {
        TarUtils.parseBoolean((byte[]) null, (-49));
    }

    @Test(timeout = 4000)
    public void test1921() throws Throwable {
        byte[] byteArray0 = new byte[8];
        TarUtils.parseBoolean(byteArray0, 55);
    }

    @Test(timeout = 4000)
    public void test2022() throws Throwable {
        TarUtils.formatOctalBytes(0L, (byte[]) null, 3293, 3293);
    }

    @Test(timeout = 4000)
    public void test2123() throws Throwable {
        byte[] byteArray0 = new byte[3];
        ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
        TarUtils.formatNameBytes((String) null, byteArray0, 403, (int) (byte) (-69), zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test2224() throws Throwable {
        byte[] byteArray0 = new byte[0];
        TarUtils.formatNameBytes("", byteArray0, 1846, 566);
    }

    @Test(timeout = 4000)
    public void test2325() throws Throwable {
        TarUtils.formatLongOctalOrBinaryBytes(8589934591L, (byte[]) null, 128, 6);
    }

    @Test(timeout = 4000)
    public void test2426() throws Throwable {
        TarUtils.formatLongOctalBytes(0L, (byte[]) null, 9, 2);
    }

    @Test(timeout = 4000)
    public void test2527() throws Throwable {
        byte[] byteArray0 = new byte[5];
        TarUtils.formatLongOctalBytes((-217L), byteArray0, 170, 0);
    }

    @Test(timeout = 4000)
    public void test2628() throws Throwable {
        TarUtils.formatCheckSumOctalBytes(0L, (byte[]) null, 789, 789);
    }

    @Test(timeout = 4000)
    public void test2729() throws Throwable {
        byte[] byteArray0 = new byte[1];
        TarUtils.formatCheckSumOctalBytes((-5965L), byteArray0, (byte) 0, 787);
    }

    @Test(timeout = 4000)
    public void test2830() throws Throwable {
        TarUtils.computeCheckSum((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test2931() throws Throwable {
        byte[] byteArray0 = new byte[5];
        TarUtils.formatUnsignedOctalString((-570L), byteArray0, (byte) (-63), (byte) 0);
    }

    @Test(timeout = 4000)
    public void test3032() throws Throwable {
        byte[] byteArray0 = new byte[0];
        TarUtils.formatUnsignedOctalString(0L, byteArray0, 4572, 913);
    }

    @Test(timeout = 4000)
    public void test3133() throws Throwable {
        byte[] byteArray0 = new byte[0];
        ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
        String string0 = TarUtils.parseName(byteArray0, (-1173), (-1173), zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test3234() throws Throwable {
        byte[] byteArray0 = new byte[3];
        TarUtils.parseOctal(byteArray0, (byte) 0, 0);
    }

    @Test(timeout = 4000)
    public void test3335() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[0] = (byte) 97;
        boolean boolean0 = TarUtils.verifyCheckSum(byteArray0);
    }

    @Test(timeout = 4000)
    public void test3436() throws Throwable {
        byte[] byteArray0 = new byte[8];
        boolean boolean0 = TarUtils.verifyCheckSum(byteArray0);
    }

    @Test(timeout = 4000)
    public void test3537() throws Throwable {
        byte[] byteArray0 = new byte[8];
        long long0 = TarUtils.computeCheckSum(byteArray0);
    }

    @Test(timeout = 4000)
    public void test3638() throws Throwable {
        byte[] byteArray0 = new byte[7];
        TarUtils.formatLongOctalOrBinaryBytes((-1510L), byteArray0, (byte) 125, 3);
    }

    @Test(timeout = 4000)
    public void test3739() throws Throwable {
        byte[] byteArray0 = new byte[3];
        TarUtils.formatLongOctalOrBinaryBytes((-4136L), byteArray0, 109, (byte) (-15));
    }

    @Test(timeout = 4000)
    public void test3840() throws Throwable {
        byte[] byteArray0 = new byte[5];
        TarUtils.formatLongOctalOrBinaryBytes((-2429L), byteArray0, 0, 81);
    }

    @Test(timeout = 4000)
    public void test3941() throws Throwable {
        byte[] byteArray0 = new byte[3];
        ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
        TarUtils.formatNameBytes("", byteArray0, (int) (byte) 0, (int) (byte) 113, zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test4042() throws Throwable {
        byte[] byteArray0 = new byte[4];
        byteArray0[2] = (byte) 3;
        ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
        String string0 = TarUtils.parseName(byteArray0, 0, (int) (byte) 3, zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test4143() throws Throwable {
        byte[] byteArray0 = new byte[7];
        TarUtils.parseName(byteArray0, (-3843), 1663);
    }

    @Test(timeout = 4000)
    public void test4244() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[1] = (byte) 1;
        boolean boolean0 = TarUtils.parseBoolean(byteArray0, (byte) 1);
    }

    @Test(timeout = 4000)
    public void test4345() throws Throwable {
        byte[] byteArray0 = new byte[5];
        boolean boolean0 = TarUtils.parseBoolean(byteArray0, 0);
    }

    @Test(timeout = 4000)
    public void test4446() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[0] = (byte) (-108);
        TarUtils.parseOctalOrBinary(byteArray0, (byte) 0, 63);
    }

    @Test(timeout = 4000)
    public void test4547() throws Throwable {
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) (-71);
        long long0 = TarUtils.parseOctalOrBinary(byteArray0, 1, (byte) (-71));
    }

    @Test(timeout = 4000)
    public void test4648() throws Throwable {
        byte[] byteArray0 = new byte[9];
        TarUtils.formatUnsignedOctalString(540L, byteArray0, 0, 9);
        TarUtils.parseOctal(byteArray0, 0, (byte) 2);
    }

    @Test(timeout = 4000)
    public void test4749() throws Throwable {
        byte[] byteArray0 = new byte[4];
        long long0 = TarUtils.parseOctal(byteArray0, (byte) 0, (byte) 67);
    }

    @Test(timeout = 4000)
    public void test4850() throws Throwable {
        byte[] byteArray0 = new byte[1];
        TarUtils.parseOctalOrBinary(byteArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test4951() throws Throwable {
        byte[] byteArray0 = new byte[1];
        ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
        int int0 = TarUtils.formatNameBytes("dv@VnX%", byteArray0, 0, (-668), zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test5053() throws Throwable {
        byte[] byteArray0 = new byte[0];
        String string0 = TarUtils.parseName(byteArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test5154() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 116;
        TarUtils.parseOctal(byteArray0, 0, (byte) 2);
    }

    @Test(timeout = 4000)
    public void test5255() throws Throwable {
        byte[] byteArray0 = new byte[0];
        TarUtils.formatCheckSumOctalBytes((-1260L), byteArray0, 55, (-3132));
    }

    @Test(timeout = 4000)
    public void test5356() throws Throwable {
        byte[] byteArray0 = new byte[7];
        TarUtils.formatNameBytes((String) null, byteArray0, (int) (byte) 0, (int) (byte) (-128));
    }
}
