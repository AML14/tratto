/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 12:15:07 GMT 2023
 */
package org.apache.commons.compress.archivers.tar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.nio.ByteBuffer;
import java.time.ZoneId;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipEncoding;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class TarArchiveEntry_ESTest extends TarArchiveEntry_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test0001() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
        tarArchiveEntry0.isGNULongNameEntry();
    }

    @Test(timeout = 4000)
    public void test0002() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
    }

    @Test(timeout = 4000)
    public void test0003() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test0004() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test0015() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        tarArchiveEntry0.isBlockDevice();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test0016() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        tarArchiveEntry0.isBlockDevice();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test0017() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        tarArchiveEntry0.isBlockDevice();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test0018() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        tarArchiveEntry0.isBlockDevice();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test0019() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        tarArchiveEntry0.isBlockDevice();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test00210() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        boolean boolean0 = tarArchiveEntry0.isCharacterDevice();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test00211() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        boolean boolean0 = tarArchiveEntry0.isCharacterDevice();
    }

    @Test(timeout = 4000)
    public void test00212() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        boolean boolean0 = tarArchiveEntry0.isCharacterDevice();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test00213() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        boolean boolean0 = tarArchiveEntry0.isCharacterDevice();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test00214() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        boolean boolean0 = tarArchiveEntry0.isCharacterDevice();
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test00215() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        boolean boolean0 = tarArchiveEntry0.isCharacterDevice();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test00216() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        boolean boolean0 = tarArchiveEntry0.isCharacterDevice();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test00217() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        boolean boolean0 = tarArchiveEntry0.isCharacterDevice();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test00318() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000", (byte) 82);
        tarArchiveEntry0.isLink();
        tarArchiveEntry0.isGNULongLinkEntry();
    }

    @Test(timeout = 4000)
    public void test00319() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000", (byte) 82);
        tarArchiveEntry0.isLink();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test00320() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000", (byte) 82);
        tarArchiveEntry0.isLink();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test00321() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000", (byte) 82);
        tarArchiveEntry0.isLink();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test00322() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000", (byte) 82);
        tarArchiveEntry0.isLink();
        tarArchiveEntry0.isBlockDevice();
    }

    @Test(timeout = 4000)
    public void test00423() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "");
        boolean boolean0 = tarArchiveEntry0.isSymbolicLink();
    }

    @Test(timeout = 4000)
    public void test00424() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "");
        boolean boolean0 = tarArchiveEntry0.isSymbolicLink();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test00425() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "");
        boolean boolean0 = tarArchiveEntry0.isSymbolicLink();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test00426() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "");
        boolean boolean0 = tarArchiveEntry0.isSymbolicLink();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test00427() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "");
        boolean boolean0 = tarArchiveEntry0.isSymbolicLink();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test00428() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "");
        boolean boolean0 = tarArchiveEntry0.isSymbolicLink();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test00529() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Z$$4i|&L\"`qI8p");
        boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();
    }

    @Test(timeout = 4000)
    public void test00530() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Z$$4i|&L\"`qI8p");
        boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test00531() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Z$$4i|&L\"`qI8p");
        boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test00532() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Z$$4i|&L\"`qI8p");
        boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test00533() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Z$$4i|&L\"`qI8p");
        boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test00634() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        boolean boolean0 = tarArchiveEntry0.isPaxHeader();
        tarArchiveEntry0.isGNULongNameEntry();
    }

    @Test(timeout = 4000)
    public void test00635() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        boolean boolean0 = tarArchiveEntry0.isPaxHeader();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test00636() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        boolean boolean0 = tarArchiveEntry0.isPaxHeader();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test00637() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        boolean boolean0 = tarArchiveEntry0.isPaxHeader();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test00638() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        boolean boolean0 = tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test00639() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        boolean boolean0 = tarArchiveEntry0.isPaxHeader();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test00740() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000", (byte) 82, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test00741() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000", (byte) 82, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
    }

    @Test(timeout = 4000)
    public void test00742() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000", (byte) 82, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test00743() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000", (byte) 82, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.isFIFO();
    }

    @Test(timeout = 4000)
    public void test00744() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000", (byte) 82, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.isCharacterDevice();
    }

    @Test(timeout = 4000)
    public void test00745() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000", (byte) 82, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test00746() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000", (byte) 82, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.isBlockDevice();
    }

    @Test(timeout = 4000)
    public void test00747() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000", (byte) 82, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test00748() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000", (byte) 82, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.isOldGNUSparse();
    }

    @Test(timeout = 4000)
    public void test00749() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000", (byte) 82, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test00750() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000", (byte) 82, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test00851() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Length ");
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test00852() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Length ");
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test00853() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Length ");
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test00854() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Length ");
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test00855() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Length ");
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test00856() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Length ");
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
    }

    @Test(timeout = 4000)
    public void test00857() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Length ");
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test00958() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMinor(0);
        tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test00959() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMinor(0);
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test00960() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMinor(0);
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test00961() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMinor(0);
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test00962() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMinor(0);
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test00963() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMinor(0);
        tarArchiveEntry0.isFIFO();
    }

    @Test(timeout = 4000)
    public void test00964() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMinor(0);
        tarArchiveEntry0.isSymbolicLink();
    }

    @Test(timeout = 4000)
    public void test00965() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMinor(0);
        tarArchiveEntry0.isGlobalPaxHeader();
    }

    @Test(timeout = 4000)
    public void test00966() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMinor(0);
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test00967() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMinor(0);
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test00968() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMinor(0);
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test01069() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", false);
        tarArchiveEntry0.setSize(0L);
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test01070() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", false);
        tarArchiveEntry0.setSize(0L);
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test01071() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", false);
        tarArchiveEntry0.setSize(0L);
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test01072() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", false);
        tarArchiveEntry0.setSize(0L);
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test01073() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", false);
        tarArchiveEntry0.setSize(0L);
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test01074() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", false);
        tarArchiveEntry0.setSize(0L);
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test01075() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", false);
        tarArchiveEntry0.setSize(0L);
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test01176() throws Throwable {
        MockFile mockFile0 = new MockFile((File) null, "GNU.sparse.realsize");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "GNU.sparse.realsize");
        HashMap<String, String> hashMap0 = new HashMap<String, String>();
        tarArchiveEntry0.fillStarSparseData(hashMap0);
        boolean boolean0 = tarArchiveEntry0.isStarSparse();
        tarArchiveEntry0.isSparse();
    }

    @Test(timeout = 4000)
    public void test01177() throws Throwable {
        MockFile mockFile0 = new MockFile((File) null, "GNU.sparse.realsize");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "GNU.sparse.realsize");
        HashMap<String, String> hashMap0 = new HashMap<String, String>();
        tarArchiveEntry0.fillStarSparseData(hashMap0);
        boolean boolean0 = tarArchiveEntry0.isStarSparse();
    }

    @Test(timeout = 4000)
    public void test01278() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, ", ");
        boolean boolean0 = tarArchiveEntry0.isDescendent(tarArchiveEntry1);
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test01279() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, ", ");
        boolean boolean0 = tarArchiveEntry0.isDescendent(tarArchiveEntry1);
    }

    @Test(timeout = 4000)
    public void test01280() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, ", ");
        boolean boolean0 = tarArchiveEntry0.isDescendent(tarArchiveEntry1);
        tarArchiveEntry1.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test01281() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, ", ");
        boolean boolean0 = tarArchiveEntry0.isDescendent(tarArchiveEntry1);
        tarArchiveEntry1.getGroupId();
    }

    @Test(timeout = 4000)
    public void test01282() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, ", ");
        boolean boolean0 = tarArchiveEntry0.isDescendent(tarArchiveEntry1);
        tarArchiveEntry1.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test01383() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(":'^od||M },BT6w");
        tarArchiveEntry0.setUserName(":'^od||M },BT6w");
        tarArchiveEntry0.getUserName();
        tarArchiveEntry0.getUserName();
    }

    @Test(timeout = 4000)
    public void test01484() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(", ", (byte) (-28), true);
        tarArchiveEntry0.setIds(32, (byte) (-28));
        int int0 = tarArchiveEntry0.getUserId();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test01485() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(", ", (byte) (-28), true);
        tarArchiveEntry0.setIds(32, (byte) (-28));
        int int0 = tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test01586() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("`711./t<5S", (byte) (-28), true);
        tarArchiveEntry0.setIds((-2431), (byte) (-28));
        int int0 = tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test01687() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        tarArchiveEntry0.setSize(2104L);
        long long0 = tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test01788() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 4);
        String string0 = tarArchiveEntry0.getName();
        tarArchiveEntry0.isCharacterDevice();
    }

    @Test(timeout = 4000)
    public void test01789() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 4);
        String string0 = tarArchiveEntry0.getName();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test01790() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 4);
        String string0 = tarArchiveEntry0.getName();
        tarArchiveEntry0.isGNULongLinkEntry();
    }

    @Test(timeout = 4000)
    public void test01791() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 4);
        String string0 = tarArchiveEntry0.getName();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test01792() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 4);
        String string0 = tarArchiveEntry0.getName();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test01793() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 4);
        String string0 = tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test01794() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 4);
        String string0 = tarArchiveEntry0.getName();
        tarArchiveEntry0.isFIFO();
    }

    @Test(timeout = 4000)
    public void test01795() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 4);
        String string0 = tarArchiveEntry0.getName();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test01796() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 4);
        String string0 = tarArchiveEntry0.getName();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test01897() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k");
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test01898() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k");
        tarArchiveEntry0.setMode(0);
        int int0 = tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test01999() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.setMode((-3501));
        int int0 = tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test020100() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k");
        tarArchiveEntry0.setIds(33188, 0);
        long long0 = tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test021101() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.setIds((-3501), 4098);
        long long0 = tarArchiveEntry0.getLongUserId();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test021102() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.setIds((-3501), 4098);
        long long0 = tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test022103() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S");
        tarArchiveEntry0.setGroupId(508);
        long long0 = tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test023104() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("p$");
        tarArchiveEntry0.setIds(1, (-2506));
        long long0 = tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test024105() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar\u0000", (byte) (-41));
        tarArchiveEntry0.getLinkName();
    }

    @Test(timeout = 4000)
    public void test024106() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar\u0000", (byte) (-41));
        tarArchiveEntry0.setLinkName("ustar\u0000");
        String string0 = tarArchiveEntry0.getLinkName();
    }

    @Test(timeout = 4000)
    public void test025107() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        tarArchiveEntry0.setNames("uh=IXCm.X*%", " exceeds maximum signed long");
        tarArchiveEntry0.getGroupName();
        tarArchiveEntry0.getGroupName();
    }

    @Test(timeout = 4000)
    public void test026108() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.setIds((-3501), 4098);
        int int0 = tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test027109() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Cs#");
        tarArchiveEntry0.setGroupId((-1850L));
        int int0 = tarArchiveEntry0.getGroupId();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test027110() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Cs#");
        tarArchiveEntry0.setGroupId((-1850L));
        int int0 = tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test028111() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test028112() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test028113() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test028114() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test028115() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test028116() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test029117() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test029118() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test029119() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test029120() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test029121() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test030122() throws Throwable {
        MockFile mockFile0 = new MockFile("XJG&E");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "XJG&E");
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test030123() throws Throwable {
        MockFile mockFile0 = new MockFile("XJG&E");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "XJG&E");
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test030124() throws Throwable {
        MockFile mockFile0 = new MockFile("XJG&E");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "XJG&E");
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test030125() throws Throwable {
        MockFile mockFile0 = new MockFile("XJG&E");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "XJG&E");
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test030126() throws Throwable {
        MockFile mockFile0 = new MockFile("XJG&E");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "XJG&E");
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test031127() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        tarArchiveEntry0.setDevMinor(9561);
        int int0 = tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test032128() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("");
        tarArchiveEntry0.setDevMajor(180);
        int int0 = tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test033129() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, ", ");
        boolean boolean0 = tarArchiveEntry0.equals(tarArchiveEntry1);
        tarArchiveEntry1.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test033130() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, ", ");
        boolean boolean0 = tarArchiveEntry0.equals(tarArchiveEntry1);
        tarArchiveEntry1.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test033131() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, ", ");
        boolean boolean0 = tarArchiveEntry0.equals(tarArchiveEntry1);
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test033132() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, ", ");
        boolean boolean0 = tarArchiveEntry0.equals(tarArchiveEntry1);
    }

    @Test(timeout = 4000)
    public void test033133() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, ", ");
        boolean boolean0 = tarArchiveEntry0.equals(tarArchiveEntry1);
        tarArchiveEntry1.getUserId();
    }

    @Test(timeout = 4000)
    public void test033134() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, ", ");
        boolean boolean0 = tarArchiveEntry0.equals(tarArchiveEntry1);
        tarArchiveEntry1.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test034135() throws Throwable {
        MockFile mockFile0 = new MockFile("", "");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);
        byte[] byteArray0 = new byte[9];
        ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((byte) 54);
        ZipEncoding zipEncoding0 = mock(ZipEncoding.class, new ViolatedAssumptionAnswer());
        doReturn(byteBuffer0).when(zipEncoding0).encode(anyString());
        tarArchiveEntry0.writeEntryHeader(byteArray0, zipEncoding0, false);
    }

    @Test(timeout = 4000)
    public void test035136() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        ZipEncoding zipEncoding0 = mock(ZipEncoding.class, new ViolatedAssumptionAnswer());
        doReturn((ByteBuffer) null).when(zipEncoding0).encode(anyString());
        tarArchiveEntry0.writeEntryHeader((byte[]) null, zipEncoding0, true);
    }

    @Test(timeout = 4000)
    public void test036137() throws Throwable {
        String string0 = "4(7z< exM*tBz6;Us";
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("4(7z< exM*tBz6;Us", true);
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) (-31);
        byteArray0[1] = (byte) 21;
        byte byte0 = (byte) 75;
        byteArray0[2] = (byte) 75;
        byteArray0[3] = (byte) 0;
        tarArchiveEntry0.setUserId((int) (byte) (-31));
        byteArray0[4] = (byte) 0;
        byteArray0[5] = (byte) 51;
        HashMap<String, String> hashMap0 = new HashMap<String, String>();
        tarArchiveEntry0.fillStarSparseData(hashMap0);
        byteArray0[6] = (byte) (-92);
        ByteBuffer byteBuffer0 = ByteBuffer.allocate(1000);
        ZipEncoding zipEncoding0 = mock(ZipEncoding.class, new ViolatedAssumptionAnswer());
        doReturn(byteBuffer0, (ByteBuffer) null).when(zipEncoding0).encode(anyString());
        tarArchiveEntry0.writeEntryHeader(byteArray0, zipEncoding0, true);
    }

    @Test(timeout = 4000)
    public void test037138() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("@&<5ZiR]4;W", (byte) 103);
        tarArchiveEntry0.writeEntryHeader((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test038139() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        tarArchiveEntry0.setName((String) null);
    }

    @Test(timeout = 4000)
    public void test039140() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Z;R", (byte) (-47), false);
        tarArchiveEntry0.setModTime((Date) null);
    }

    @Test(timeout = 4000)
    public void test040141() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-95));
        byte[] byteArray0 = new byte[3];
        ZipEncoding zipEncoding0 = mock(ZipEncoding.class, new ViolatedAssumptionAnswer());
        tarArchiveEntry0.parseTarHeader(byteArray0, zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test041142() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        tarArchiveEntry0.parseTarHeader((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test042143() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.isDescendent((TarArchiveEntry) null);
    }

    @Test(timeout = 4000)
    public void test043144() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", false);
        tarArchiveEntry0.fillStarSparseData((Map<String, String>) null);
    }

    @Test(timeout = 4000)
    public void test044145() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("g9fN-2");
        tarArchiveEntry0.fillGNUSparse1xData((Map<String, String>) null);
    }

    @Test(timeout = 4000)
    public void test045146() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 112, false);
        HashMap<String, String> hashMap0 = new HashMap<String, String>();
        tarArchiveEntry0.fillGNUSparse0xData(hashMap0);
    }

    @Test(timeout = 4000)
    public void test046147() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 90, true);
        tarArchiveEntry0.fillGNUSparse0xData((Map<String, String>) null);
    }

    @Test(timeout = 4000)
    public void test047148() throws Throwable {
        byte[] byteArray0 = new byte[2];
        TarArchiveEntry tarArchiveEntry0 = null;
        tarArchiveEntry0 = new TarArchiveEntry(byteArray0, (ZipEncoding) null);
    }

    @Test(timeout = 4000)
    public void test048149() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = null;
        tarArchiveEntry0 = new TarArchiveEntry((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test049150() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = null;
        tarArchiveEntry0 = new TarArchiveEntry((String) null, false);
    }

    @Test(timeout = 4000)
    public void test050151() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = null;
        tarArchiveEntry0 = new TarArchiveEntry((String) null, (byte) 37, true);
    }

    @Test(timeout = 4000)
    public void test051152() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = null;
        tarArchiveEntry0 = new TarArchiveEntry((String) null, (byte) (-53));
    }

    @Test(timeout = 4000)
    public void test052153() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = null;
        tarArchiveEntry0 = new TarArchiveEntry((String) null);
    }

    @Test(timeout = 4000)
    public void test053154() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = null;
        tarArchiveEntry0 = new TarArchiveEntry((File) null, "");
    }

    @Test(timeout = 4000)
    public void test054155() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = null;
        tarArchiveEntry0 = new TarArchiveEntry((File) null);
    }

    @Test(timeout = 4000)
    public void test055156() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Z$$4i|&L\"`qI8p");
        boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test055157() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Z$$4i|&L\"`qI8p");
        boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();
    }

    @Test(timeout = 4000)
    public void test055158() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Z$$4i|&L\"`qI8p");
        boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test055159() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Z$$4i|&L\"`qI8p");
        boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test055160() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Z$$4i|&L\"`qI8p");
        boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test055161() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Z$$4i|&L\"`qI8p");
        boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test056162() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test056163() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();
    }

    @Test(timeout = 4000)
    public void test056164() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test056165() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test056166() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test056167() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test056168() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test057169() throws Throwable {
        MockFile mockFile0 = new MockFile("~;YwP'q|e8v# {(3", "v0?>bzMh%/");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "]");
        boolean boolean0 = tarArchiveEntry0.isGNUSparse();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test057170() throws Throwable {
        MockFile mockFile0 = new MockFile("~;YwP'q|e8v# {(3", "v0?>bzMh%/");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "]");
        boolean boolean0 = tarArchiveEntry0.isGNUSparse();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test057171() throws Throwable {
        MockFile mockFile0 = new MockFile("~;YwP'q|e8v# {(3", "v0?>bzMh%/");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "]");
        boolean boolean0 = tarArchiveEntry0.isGNUSparse();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test057172() throws Throwable {
        MockFile mockFile0 = new MockFile("~;YwP'q|e8v# {(3", "v0?>bzMh%/");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "]");
        boolean boolean0 = tarArchiveEntry0.isGNUSparse();
    }

    @Test(timeout = 4000)
    public void test057173() throws Throwable {
        MockFile mockFile0 = new MockFile("~;YwP'q|e8v# {(3", "v0?>bzMh%/");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "]");
        boolean boolean0 = tarArchiveEntry0.isGNUSparse();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test057174() throws Throwable {
        MockFile mockFile0 = new MockFile("~;YwP'q|e8v# {(3", "v0?>bzMh%/");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "]");
        boolean boolean0 = tarArchiveEntry0.isGNUSparse();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test058175() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("EgTf$", true);
        tarArchiveEntry0.isPaxGNUSparse();
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test058176() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("EgTf$", true);
        tarArchiveEntry0.isPaxGNUSparse();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test058177() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("EgTf$", true);
        tarArchiveEntry0.isPaxGNUSparse();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test058178() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("EgTf$", true);
        tarArchiveEntry0.isPaxGNUSparse();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test058179() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("EgTf$", true);
        tarArchiveEntry0.isPaxGNUSparse();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test058180() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("EgTf$", true);
        tarArchiveEntry0.isPaxGNUSparse();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test058181() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("EgTf$", true);
        tarArchiveEntry0.isPaxGNUSparse();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test058182() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("EgTf$", true);
        tarArchiveEntry0.isPaxGNUSparse();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test058183() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("EgTf$", true);
        tarArchiveEntry0.isPaxGNUSparse();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test059184() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        Date date0 = tarArchiveEntry0.getModTime();
        date0.toString();
    }

    @Test(timeout = 4000)
    public void test059185() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        Date date0 = tarArchiveEntry0.getModTime();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test059186() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        Date date0 = tarArchiveEntry0.getModTime();
        tarArchiveEntry0.isGNULongNameEntry();
    }

    @Test(timeout = 4000)
    public void test059187() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        Date date0 = tarArchiveEntry0.getModTime();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test059188() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        Date date0 = tarArchiveEntry0.getModTime();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test059189() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        Date date0 = tarArchiveEntry0.getModTime();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test059190() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        Date date0 = tarArchiveEntry0.getModTime();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test060191() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        tarArchiveEntry0.setUserId(1L);
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test061192() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("cu(%MZ>C");
        byte[] byteArray0 = new byte[5];
        tarArchiveEntry0.parseTarHeader(byteArray0);
    }

    @Test(timeout = 4000)
    public void test062193() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        tarArchiveEntry0.isStarSparse();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test062194() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        tarArchiveEntry0.isStarSparse();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test062195() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        tarArchiveEntry0.isStarSparse();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test062196() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        tarArchiveEntry0.isStarSparse();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test062197() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        tarArchiveEntry0.isStarSparse();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test062198() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        tarArchiveEntry0.isStarSparse();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test063199() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("");
        tarArchiveEntry0.setGroupName("0\u0000");
        tarArchiveEntry0.getGroupName();
    }

    @Test(timeout = 4000)
    public void test064200() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("r&5L", (byte) 2, true);
        ZipEncoding zipEncoding0 = mock(ZipEncoding.class, new ViolatedAssumptionAnswer());
        tarArchiveEntry0.parseTarHeader((byte[]) null, zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test065201() throws Throwable {
        File file0 = MockFile.createTempFile("f.22n?U7cyST-", "f.22n?U7cyST-");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test065202() throws Throwable {
        File file0 = MockFile.createTempFile("f.22n?U7cyST-", "f.22n?U7cyST-");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test065203() throws Throwable {
        File file0 = MockFile.createTempFile("f.22n?U7cyST-", "f.22n?U7cyST-");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test065204() throws Throwable {
        File file0 = MockFile.createTempFile("f.22n?U7cyST-", "f.22n?U7cyST-");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test065205() throws Throwable {
        File file0 = MockFile.createTempFile("f.22n?U7cyST-", "f.22n?U7cyST-");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test066206() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.isGNULongLinkEntry();
    }

    @Test(timeout = 4000)
    public void test066207() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test066208() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.isGlobalPaxHeader();
    }

    @Test(timeout = 4000)
    public void test066209() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test066210() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.isFIFO();
    }

    @Test(timeout = 4000)
    public void test066211() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test066212() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.isSparse();
    }

    @Test(timeout = 4000)
    public void test066213() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test067214() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        tarArchiveEntry0.isSparse();
    }

    @Test(timeout = 4000)
    public void test067215() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        HashMap<String, String> hashMap0 = new HashMap<String, String>();
        tarArchiveEntry0.fillStarSparseData(hashMap0);
        tarArchiveEntry0.isSparse();
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test068216() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
        tarArchiveEntry0.isGNULongNameEntry();
    }

    @Test(timeout = 4000)
    public void test068217() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test068218() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
        tarArchiveEntry0.isCharacterDevice();
    }

    @Test(timeout = 4000)
    public void test068219() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test068220() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
        tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test068221() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test068222() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
        tarArchiveEntry0.isSparse();
    }

    @Test(timeout = 4000)
    public void test068223() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
        tarArchiveEntry0.isGNULongLinkEntry();
    }

    @Test(timeout = 4000)
    public void test068224() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
    }

    @Test(timeout = 4000)
    public void test068225() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test068226() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test068227() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test068228() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFIFO();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test069229() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isBlockDevice();
        tarArchiveEntry0.isSymbolicLink();
    }

    @Test(timeout = 4000)
    public void test069230() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isBlockDevice();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test069231() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isBlockDevice();
        tarArchiveEntry0.isGlobalPaxHeader();
    }

    @Test(timeout = 4000)
    public void test069232() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isBlockDevice();
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test069233() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isBlockDevice();
    }

    @Test(timeout = 4000)
    public void test069234() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isBlockDevice();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test069235() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isBlockDevice();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test069236() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isBlockDevice();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test069237() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isBlockDevice();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test070238() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isCharacterDevice();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test070239() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isCharacterDevice();
        tarArchiveEntry0.isGlobalPaxHeader();
    }

    @Test(timeout = 4000)
    public void test070240() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isCharacterDevice();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test070241() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isCharacterDevice();
        tarArchiveEntry0.isBlockDevice();
    }

    @Test(timeout = 4000)
    public void test070242() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isCharacterDevice();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test070243() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isCharacterDevice();
    }

    @Test(timeout = 4000)
    public void test070244() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isCharacterDevice();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test070245() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isCharacterDevice();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test071246() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("+ c\"3u", (byte) 49, false);
        boolean boolean0 = tarArchiveEntry0.isLink();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test071247() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("+ c\"3u", (byte) 49, false);
        boolean boolean0 = tarArchiveEntry0.isLink();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test071248() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("+ c\"3u", (byte) 49, false);
        boolean boolean0 = tarArchiveEntry0.isLink();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test071249() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("+ c\"3u", (byte) 49, false);
        boolean boolean0 = tarArchiveEntry0.isLink();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test071250() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("+ c\"3u", (byte) 49, false);
        boolean boolean0 = tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test072251() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        boolean boolean0 = tarArchiveEntry0.isLink();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test072252() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        boolean boolean0 = tarArchiveEntry0.isLink();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test072253() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        boolean boolean0 = tarArchiveEntry0.isLink();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test072254() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        boolean boolean0 = tarArchiveEntry0.isLink();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test072255() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        boolean boolean0 = tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test072256() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        boolean boolean0 = tarArchiveEntry0.isLink();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test073257() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSymbolicLink();
        tarArchiveEntry0.isCharacterDevice();
    }

    @Test(timeout = 4000)
    public void test073258() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSymbolicLink();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test073259() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSymbolicLink();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test073260() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSymbolicLink();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test073261() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSymbolicLink();
    }

    @Test(timeout = 4000)
    public void test073262() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSymbolicLink();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test073263() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSymbolicLink();
        tarArchiveEntry0.isGNULongNameEntry();
    }

    @Test(timeout = 4000)
    public void test073264() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSymbolicLink();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test074265() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000/");
        boolean boolean0 = tarArchiveEntry0.isFile();
        tarArchiveEntry0.isBlockDevice();
    }

    @Test(timeout = 4000)
    public void test074266() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000/");
        boolean boolean0 = tarArchiveEntry0.isFile();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test074267() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000/");
        boolean boolean0 = tarArchiveEntry0.isFile();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test074268() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000/");
        boolean boolean0 = tarArchiveEntry0.isFile();
    }

    @Test(timeout = 4000)
    public void test074269() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000/");
        boolean boolean0 = tarArchiveEntry0.isFile();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test074270() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000/");
        boolean boolean0 = tarArchiveEntry0.isFile();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test074271() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000/");
        boolean boolean0 = tarArchiveEntry0.isFile();
        tarArchiveEntry0.isFIFO();
    }

    @Test(timeout = 4000)
    public void test074272() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000/");
        boolean boolean0 = tarArchiveEntry0.isFile();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test075273() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", true);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test075274() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", true);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test075275() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", true);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test075276() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", true);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test075277() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", true);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test075278() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", true);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test075279() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", true);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test076280() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) 0, false);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test076281() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) 0, false);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.isGNULongNameEntry();
    }

    @Test(timeout = 4000)
    public void test076282() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) 0, false);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test076283() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) 0, false);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test076284() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) 0, false);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test076285() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) 0, false);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test076286() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) 0, false);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.isOldGNUSparse();
    }

    @Test(timeout = 4000)
    public void test076287() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) 0, false);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.isBlockDevice();
    }

    @Test(timeout = 4000)
    public void test076288() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) 0, false);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test076289() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) 0, false);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.isSymbolicLink();
    }

    @Test(timeout = 4000)
    public void test076290() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) 0, false);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.isGlobalPaxHeader();
    }

    @Test(timeout = 4000)
    public void test076291() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) 0, false);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test076292() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) 0, false);
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test077293() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test077294() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test077295() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test077296() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test077297() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        tarArchiveEntry0.isFile();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test078298() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFile();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test078299() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFile();
        tarArchiveEntry0.isGNULongLinkEntry();
    }

    @Test(timeout = 4000)
    public void test078300() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFile();
    }

    @Test(timeout = 4000)
    public void test078301() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFile();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test078302() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFile();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test078303() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFile();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test078304() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFile();
        tarArchiveEntry0.isGNUSparse();
    }

    @Test(timeout = 4000)
    public void test078305() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFile();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test078306() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFile();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test078307() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isFile();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test079308() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test079309() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test079310() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test079311() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.isOldGNUSparse();
    }

    @Test(timeout = 4000)
    public void test079312() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test079313() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test079314() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test079315() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test080316() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//");
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.isFIFO();
    }

    @Test(timeout = 4000)
    public void test080317() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//");
        boolean boolean0 = tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test080318() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//");
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test080319() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//");
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.isFile();
    }

    @Test(timeout = 4000)
    public void test080320() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//");
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test080321() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//");
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test080322() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//");
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test080323() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//");
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test080324() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//");
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test080325() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//");
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.isBlockDevice();
    }

    @Test(timeout = 4000)
    public void test081326() throws Throwable {
        MockFile mockFile0 = new MockFile("", "");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);
        tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.isBlockDevice();
    }

    @Test(timeout = 4000)
    public void test081327() throws Throwable {
        MockFile mockFile0 = new MockFile("", "");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);
        tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test081328() throws Throwable {
        MockFile mockFile0 = new MockFile("", "");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);
        tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test081329() throws Throwable {
        MockFile mockFile0 = new MockFile("", "");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);
        tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.isFIFO();
    }

    @Test(timeout = 4000)
    public void test081330() throws Throwable {
        MockFile mockFile0 = new MockFile("", "");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);
        tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test081331() throws Throwable {
        MockFile mockFile0 = new MockFile("", "");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);
        tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test081332() throws Throwable {
        MockFile mockFile0 = new MockFile("", "");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);
        tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test082333() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test082334() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.isGlobalPaxHeader();
    }

    @Test(timeout = 4000)
    public void test082335() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test082336() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test082337() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test082338() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.isGNULongNameEntry();
    }

    @Test(timeout = 4000)
    public void test082339() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.isSymbolicLink();
    }

    @Test(timeout = 4000)
    public void test082340() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.isCharacterDevice();
    }

    @Test(timeout = 4000)
    public void test082341() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.isBlockDevice();
    }

    @Test(timeout = 4000)
    public void test082342() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test082343() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        boolean boolean0 = tarArchiveEntry0.isDirectory();
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test083344() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test083345() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test083346() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();
        tarArchiveEntry0.isBlockDevice();
    }

    @Test(timeout = 4000)
    public void test083347() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test083348() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();
    }

    @Test(timeout = 4000)
    public void test083349() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();
        tarArchiveEntry0.isGNULongNameEntry();
    }

    @Test(timeout = 4000)
    public void test083350() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();
        tarArchiveEntry0.isSparse();
    }

    @Test(timeout = 4000)
    public void test083351() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test083352() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test083353() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();
        tarArchiveEntry0.isFIFO();
    }

    @Test(timeout = 4000)
    public void test084354() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isPaxHeader();
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test084355() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isPaxHeader();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test084356() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isPaxHeader();
        tarArchiveEntry0.isGNUSparse();
    }

    @Test(timeout = 4000)
    public void test084357() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isPaxHeader();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test084358() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test084359() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        boolean boolean0 = tarArchiveEntry0.isPaxHeader();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test085360() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test085361() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test085362() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test085363() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test085364() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test085365() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test085366() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
    }

    @Test(timeout = 4000)
    public void test085367() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test086368() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 75, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test086369() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 75, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test086370() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 75, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test086371() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 75, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test086372() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 75, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
    }

    @Test(timeout = 4000)
    public void test086373() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 75, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test086374() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 75, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test086375() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) 75, true);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test087376() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("org.apache.commons.compress.archivers.tar.TarArchiveEntry", (byte) 108);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
    }

    @Test(timeout = 4000)
    public void test087377() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("org.apache.commons.compress.archivers.tar.TarArchiveEntry", (byte) 108);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.isCharacterDevice();
    }

    @Test(timeout = 4000)
    public void test087378() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("org.apache.commons.compress.archivers.tar.TarArchiveEntry", (byte) 108);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test087379() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("org.apache.commons.compress.archivers.tar.TarArchiveEntry", (byte) 108);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test087380() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("org.apache.commons.compress.archivers.tar.TarArchiveEntry", (byte) 108);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test087381() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("org.apache.commons.compress.archivers.tar.TarArchiveEntry", (byte) 108);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test087382() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("org.apache.commons.compress.archivers.tar.TarArchiveEntry", (byte) 108);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test087383() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("org.apache.commons.compress.archivers.tar.TarArchiveEntry", (byte) 108);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test087384() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("org.apache.commons.compress.archivers.tar.TarArchiveEntry", (byte) 108);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.isSymbolicLink();
    }

    @Test(timeout = 4000)
    public void test087385() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("org.apache.commons.compress.archivers.tar.TarArchiveEntry", (byte) 108);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.isGNULongNameEntry();
    }

    @Test(timeout = 4000)
    public void test087386() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("org.apache.commons.compress.archivers.tar.TarArchiveEntry", (byte) 108);
        boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test088387() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("bXJ`I2+'9,vz!Fg?*", true);
        tarArchiveEntry0.setDevMinor((-2151));
    }

    @Test(timeout = 4000)
    public void test089388() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("}/", false);
        tarArchiveEntry0.setDevMajor((-28));
    }

    @Test(timeout = 4000)
    public void test090389() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMajor(0);
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test090390() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMajor(0);
        tarArchiveEntry0.isCharacterDevice();
    }

    @Test(timeout = 4000)
    public void test090391() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMajor(0);
        tarArchiveEntry0.isFIFO();
    }

    @Test(timeout = 4000)
    public void test090392() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMajor(0);
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test090393() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMajor(0);
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test090394() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMajor(0);
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test090395() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMajor(0);
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test090396() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMajor(0);
        tarArchiveEntry0.isGNULongLinkEntry();
    }

    @Test(timeout = 4000)
    public void test090397() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.setDevMajor(0);
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test091398() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("H*>9Vyg1xA)'kdQ+", (byte) 23);
        tarArchiveEntry0.setSize((-2657L));
    }

    @Test(timeout = 4000)
    public void test092399() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        tarArchiveEntry0.equals((Object) "");
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test092400() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        tarArchiveEntry0.equals((Object) "");
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test092401() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        tarArchiveEntry0.equals((Object) "");
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test092402() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        tarArchiveEntry0.equals((Object) "");
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test092403() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        tarArchiveEntry0.equals((Object) "");
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test092404() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        tarArchiveEntry0.equals((Object) "");
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test092405() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        tarArchiveEntry0.equals((Object) "");
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test092406() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        tarArchiveEntry0.equals((Object) "");
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test093407() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        tarArchiveEntry0.equals((Object) null);
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test093408() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        tarArchiveEntry0.equals((Object) null);
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test093409() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        tarArchiveEntry0.equals((Object) null);
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test093410() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        tarArchiveEntry0.equals((Object) null);
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test093411() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        tarArchiveEntry0.equals((Object) null);
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test093412() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        tarArchiveEntry0.equals((Object) null);
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test093413() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        tarArchiveEntry0.equals((Object) null);
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test093414() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        tarArchiveEntry0.equals((Object) null);
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test094415() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isGNUSparse();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test094416() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isGNUSparse();
    }

    @Test(timeout = 4000)
    public void test094417() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isGNUSparse();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test094418() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isGNUSparse();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test094419() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isGNUSparse();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test094420() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("\u0000\u0000//", (byte) 83);
        boolean boolean0 = tarArchiveEntry0.isGNUSparse();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test095421() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test095422() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test095423() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test095424() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        tarArchiveEntry0.getFile();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test096425() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        tarArchiveEntry0.setModTime((-2697L));
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test096426() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        tarArchiveEntry0.setModTime((-2697L));
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test096427() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        tarArchiveEntry0.setModTime((-2697L));
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test096428() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        tarArchiveEntry0.setModTime((-2697L));
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test096429() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        tarArchiveEntry0.setModTime((-2697L));
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test096430() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        tarArchiveEntry0.setModTime((-2697L));
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test096431() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        tarArchiveEntry0.setModTime((-2697L));
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test097432() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("bXJ`I2+'9,vz!Fg?*", true);
        long long0 = tarArchiveEntry0.getLongUserId();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test097433() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("bXJ`I2+'9,vz!Fg?*", true);
        long long0 = tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test097434() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("bXJ`I2+'9,vz!Fg?*", true);
        long long0 = tarArchiveEntry0.getLongUserId();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test097435() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("bXJ`I2+'9,vz!Fg?*", true);
        long long0 = tarArchiveEntry0.getLongUserId();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test097436() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("bXJ`I2+'9,vz!Fg?*", true);
        long long0 = tarArchiveEntry0.getLongUserId();
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test097437() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("bXJ`I2+'9,vz!Fg?*", true);
        long long0 = tarArchiveEntry0.getLongUserId();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test097438() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("bXJ`I2+'9,vz!Fg?*", true);
        long long0 = tarArchiveEntry0.getLongUserId();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test097439() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("bXJ`I2+'9,vz!Fg?*", true);
        long long0 = tarArchiveEntry0.getLongUserId();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test098440() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("SCHILY.realsize");
        Map<String, String> map0 = ZoneId.SHORT_IDS;
        tarArchiveEntry0.fillGNUSparse1xData(map0);
    }

    @Test(timeout = 4000)
    public void test099441() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        String string0 = tarArchiveEntry0.getGroupName();
        tarArchiveEntry0.isGNULongNameEntry();
    }

    @Test(timeout = 4000)
    public void test099442() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        String string0 = tarArchiveEntry0.getGroupName();
    }

    @Test(timeout = 4000)
    public void test099443() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        String string0 = tarArchiveEntry0.getGroupName();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test099444() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        String string0 = tarArchiveEntry0.getGroupName();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test099445() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        String string0 = tarArchiveEntry0.getGroupName();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test099446() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("ustar ", (byte) 76, false);
        String string0 = tarArchiveEntry0.getGroupName();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test100447() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        int int0 = tarArchiveEntry0.getUserId();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test100448() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        int int0 = tarArchiveEntry0.getUserId();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test100449() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        int int0 = tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test100450() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        int int0 = tarArchiveEntry0.getUserId();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test100451() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("TmT");
        int int0 = tarArchiveEntry0.getUserId();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test101452() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("");
        tarArchiveEntry0.equals((Object) tarArchiveEntry0);
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test101453() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("");
        tarArchiveEntry0.equals((Object) tarArchiveEntry0);
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test101454() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("");
        tarArchiveEntry0.equals((Object) tarArchiveEntry0);
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test101455() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("");
        tarArchiveEntry0.equals((Object) tarArchiveEntry0);
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test101456() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("");
        tarArchiveEntry0.equals((Object) tarArchiveEntry0);
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test101457() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("");
        tarArchiveEntry0.equals((Object) tarArchiveEntry0);
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test101458() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("");
        tarArchiveEntry0.equals((Object) tarArchiveEntry0);
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test102459() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        int int0 = tarArchiveEntry0.getDevMinor();
        tarArchiveEntry0.isCharacterDevice();
    }

    @Test(timeout = 4000)
    public void test102460() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        int int0 = tarArchiveEntry0.getDevMinor();
        tarArchiveEntry0.isBlockDevice();
    }

    @Test(timeout = 4000)
    public void test102461() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        int int0 = tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test102462() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        int int0 = tarArchiveEntry0.getDevMinor();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test102463() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        int int0 = tarArchiveEntry0.getDevMinor();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test102464() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        int int0 = tarArchiveEntry0.getDevMinor();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test102465() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        int int0 = tarArchiveEntry0.getDevMinor();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test102466() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        int int0 = tarArchiveEntry0.getDevMinor();
        tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test102467() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        int int0 = tarArchiveEntry0.getDevMinor();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test102468() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        int int0 = tarArchiveEntry0.getDevMinor();
        tarArchiveEntry0.isGNUSparse();
    }

    @Test(timeout = 4000)
    public void test103469() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        tarArchiveEntry0.equals(tarArchiveEntry0);
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test103470() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        tarArchiveEntry0.equals(tarArchiveEntry0);
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test103471() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        tarArchiveEntry0.equals(tarArchiveEntry0);
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test103472() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        tarArchiveEntry0.equals(tarArchiveEntry0);
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test103473() throws Throwable {
        File file0 = MockFile.createTempFile(" byte binary number", " byte binary number");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        tarArchiveEntry0.equals(tarArchiveEntry0);
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test104474() throws Throwable {
        ZipEncoding zipEncoding0 = mock(ZipEncoding.class, new ViolatedAssumptionAnswer());
        TarArchiveEntry tarArchiveEntry0 = null;
        tarArchiveEntry0 = new TarArchiveEntry((byte[]) null, zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test105475() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        Date date0 = tarArchiveEntry0.getLastModifiedDate();
        tarArchiveEntry0.setModTime(date0);
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test105476() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        Date date0 = tarArchiveEntry0.getLastModifiedDate();
        tarArchiveEntry0.setModTime(date0);
        tarArchiveEntry0.isGNULongLinkEntry();
    }

    @Test(timeout = 4000)
    public void test105477() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        Date date0 = tarArchiveEntry0.getLastModifiedDate();
        tarArchiveEntry0.setModTime(date0);
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test105478() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        Date date0 = tarArchiveEntry0.getLastModifiedDate();
        tarArchiveEntry0.setModTime(date0);
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test105479() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        Date date0 = tarArchiveEntry0.getLastModifiedDate();
        tarArchiveEntry0.setModTime(date0);
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test105480() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        Date date0 = tarArchiveEntry0.getLastModifiedDate();
        tarArchiveEntry0.setModTime(date0);
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test105481() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        Date date0 = tarArchiveEntry0.getLastModifiedDate();
        tarArchiveEntry0.setModTime(date0);
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test105482() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        Date date0 = tarArchiveEntry0.getLastModifiedDate();
        tarArchiveEntry0.setModTime(date0);
        date0.toString();
    }

    @Test(timeout = 4000)
    public void test105483() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        Date date0 = tarArchiveEntry0.getLastModifiedDate();
        tarArchiveEntry0.setModTime(date0);
        tarArchiveEntry0.isGlobalPaxHeader();
    }

    @Test(timeout = 4000)
    public void test105484() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("US-ASCII", (byte) 124);
        Date date0 = tarArchiveEntry0.getLastModifiedDate();
        tarArchiveEntry0.setModTime(date0);
        tarArchiveEntry0.isFIFO();
    }

    @Test(timeout = 4000)
    public void test106485() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        String string0 = tarArchiveEntry0.getLinkName();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test106486() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        String string0 = tarArchiveEntry0.getLinkName();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test106487() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        String string0 = tarArchiveEntry0.getLinkName();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test106488() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        String string0 = tarArchiveEntry0.getLinkName();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test106489() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        String string0 = tarArchiveEntry0.getLinkName();
        tarArchiveEntry0.isGNULongNameEntry();
    }

    @Test(timeout = 4000)
    public void test106490() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        String string0 = tarArchiveEntry0.getLinkName();
        tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test106491() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        String string0 = tarArchiveEntry0.getLinkName();
        tarArchiveEntry0.isFIFO();
    }

    @Test(timeout = 4000)
    public void test106492() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        String string0 = tarArchiveEntry0.getLinkName();
        tarArchiveEntry0.isSymbolicLink();
    }

    @Test(timeout = 4000)
    public void test106493() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        String string0 = tarArchiveEntry0.getLinkName();
    }

    @Test(timeout = 4000)
    public void test106494() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        String string0 = tarArchiveEntry0.getLinkName();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test106495() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        String string0 = tarArchiveEntry0.getLinkName();
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test106496() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        String string0 = tarArchiveEntry0.getLinkName();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test107497() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        long long0 = tarArchiveEntry0.getRealSize();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test107498() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        long long0 = tarArchiveEntry0.getRealSize();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test107499() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        long long0 = tarArchiveEntry0.getRealSize();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test107500() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        long long0 = tarArchiveEntry0.getRealSize();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test107501() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        long long0 = tarArchiveEntry0.getRealSize();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test107502() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        long long0 = tarArchiveEntry0.getRealSize();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test107503() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        long long0 = tarArchiveEntry0.getRealSize();
    }

    @Test(timeout = 4000)
    public void test107504() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        long long0 = tarArchiveEntry0.getRealSize();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test107505() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        long long0 = tarArchiveEntry0.getRealSize();
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test108506() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        tarArchiveEntry0.isExtended();
        tarArchiveEntry0.isGNULongLinkEntry();
    }

    @Test(timeout = 4000)
    public void test108507() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        tarArchiveEntry0.isExtended();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test108508() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        tarArchiveEntry0.isExtended();
        tarArchiveEntry0.isFIFO();
    }

    @Test(timeout = 4000)
    public void test108509() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        tarArchiveEntry0.isExtended();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test108510() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        tarArchiveEntry0.isExtended();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test108511() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        tarArchiveEntry0.isExtended();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test108512() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        tarArchiveEntry0.isExtended();
        tarArchiveEntry0.isGNULongNameEntry();
    }

    @Test(timeout = 4000)
    public void test108513() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        tarArchiveEntry0.isExtended();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test108514() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        tarArchiveEntry0.isExtended();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test108515() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        tarArchiveEntry0.isExtended();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test108516() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        tarArchiveEntry0.isExtended();
        tarArchiveEntry0.isGNUSparse();
    }

    @Test(timeout = 4000)
    public void test108517() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        tarArchiveEntry0.isExtended();
        tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test108518() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        tarArchiveEntry0.isExtended();
        tarArchiveEntry0.isCharacterDevice();
    }

    @Test(timeout = 4000)
    public void test109519() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        long long0 = tarArchiveEntry0.getLongGroupId();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test109520() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        long long0 = tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test109521() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        long long0 = tarArchiveEntry0.getLongGroupId();
        tarArchiveEntry0.isSymbolicLink();
    }

    @Test(timeout = 4000)
    public void test109522() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        long long0 = tarArchiveEntry0.getLongGroupId();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test109523() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        long long0 = tarArchiveEntry0.getLongGroupId();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test109524() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        long long0 = tarArchiveEntry0.getLongGroupId();
        tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test109525() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        long long0 = tarArchiveEntry0.getLongGroupId();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test109526() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        long long0 = tarArchiveEntry0.getLongGroupId();
        tarArchiveEntry0.isSparse();
    }

    @Test(timeout = 4000)
    public void test110527() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        int int0 = tarArchiveEntry0.getGroupId();
        tarArchiveEntry0.isFIFO();
    }

    @Test(timeout = 4000)
    public void test110528() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        int int0 = tarArchiveEntry0.getGroupId();
        tarArchiveEntry0.isGlobalPaxHeader();
    }

    @Test(timeout = 4000)
    public void test110529() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        int int0 = tarArchiveEntry0.getGroupId();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test110530() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        int int0 = tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test110531() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        int int0 = tarArchiveEntry0.getGroupId();
        tarArchiveEntry0.isBlockDevice();
    }

    @Test(timeout = 4000)
    public void test110532() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        int int0 = tarArchiveEntry0.getGroupId();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test110533() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("!S", (byte) (-19), false);
        int int0 = tarArchiveEntry0.getGroupId();
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test111534() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.isDescendent(tarArchiveEntry0);
        tarArchiveEntry0.isCharacterDevice();
    }

    @Test(timeout = 4000)
    public void test111535() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.isDescendent(tarArchiveEntry0);
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test111536() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.isDescendent(tarArchiveEntry0);
        tarArchiveEntry0.isBlockDevice();
    }

    @Test(timeout = 4000)
    public void test111537() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.isDescendent(tarArchiveEntry0);
        tarArchiveEntry0.isSymbolicLink();
    }

    @Test(timeout = 4000)
    public void test111538() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.isDescendent(tarArchiveEntry0);
        tarArchiveEntry0.isGlobalPaxHeader();
    }

    @Test(timeout = 4000)
    public void test111539() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.isDescendent(tarArchiveEntry0);
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test111540() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.isDescendent(tarArchiveEntry0);
        tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test111541() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.isDescendent(tarArchiveEntry0);
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test112542() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.hashCode();
        tarArchiveEntry0.isGNULongLinkEntry();
    }

    @Test(timeout = 4000)
    public void test112543() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.hashCode();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test112544() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.hashCode();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test112545() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.hashCode();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test112546() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.hashCode();
        tarArchiveEntry0.isBlockDevice();
    }

    @Test(timeout = 4000)
    public void test112547() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.hashCode();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test112548() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.hashCode();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test112549() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.hashCode();
        tarArchiveEntry0.isGNULongNameEntry();
    }

    @Test(timeout = 4000)
    public void test112550() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.hashCode();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test112551() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte) (-126));
        tarArchiveEntry0.hashCode();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test113552() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.isCheckSumOK();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test113553() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.isCheckSumOK();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test113554() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.isCheckSumOK();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test113555() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.isCheckSumOK();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test113556() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.isCheckSumOK();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test113557() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.isCheckSumOK();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test113558() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.isCheckSumOK();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test113559() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        tarArchiveEntry0.isCheckSumOK();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test114560() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("EgTf$", true);
        byte[] byteArray0 = new byte[8];
        tarArchiveEntry0.writeEntryHeader(byteArray0);
    }

    @Test(timeout = 4000)
    public void test115561() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "");
        int int0 = tarArchiveEntry0.getDevMajor();
        tarArchiveEntry0.isBlockDevice();
    }

    @Test(timeout = 4000)
    public void test115562() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "");
        int int0 = tarArchiveEntry0.getDevMajor();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test115563() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "");
        int int0 = tarArchiveEntry0.getDevMajor();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test115564() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "");
        int int0 = tarArchiveEntry0.getDevMajor();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test115565() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "");
        int int0 = tarArchiveEntry0.getDevMajor();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test115566() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "");
        int int0 = tarArchiveEntry0.getDevMajor();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test115567() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "");
        int int0 = tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test116568() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        MockFile.createTempFile(" exceeds maximum signed long", ", /", (File) mockFile0);
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test116569() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        MockFile.createTempFile(" exceeds maximum signed long", ", /", (File) mockFile0);
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test116570() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        MockFile.createTempFile(" exceeds maximum signed long", ", /", (File) mockFile0);
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test116571() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "Minor device number is out of range: ");
        MockFile.createTempFile(" exceeds maximum signed long", ", /", (File) mockFile0);
        tarArchiveEntry0.getDirectoryEntries();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test117572() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "");
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test117573() throws Throwable {
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "");
        tarArchiveEntry0.setName("");
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test118574() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        String string0 = tarArchiveEntry0.getName();
        tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test118575() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        String string0 = tarArchiveEntry0.getName();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test118576() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        String string0 = tarArchiveEntry0.getName();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test118577() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        String string0 = tarArchiveEntry0.getName();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test118578() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        String string0 = tarArchiveEntry0.getName();
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test118579() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        String string0 = tarArchiveEntry0.getName();
        tarArchiveEntry0.isOldGNUSparse();
    }

    @Test(timeout = 4000)
    public void test118580() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        String string0 = tarArchiveEntry0.getName();
        tarArchiveEntry0.isGNULongLinkEntry();
    }

    @Test(timeout = 4000)
    public void test118581() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        String string0 = tarArchiveEntry0.getName();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test118582() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        String string0 = tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test119583() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSparse();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test119584() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSparse();
        tarArchiveEntry0.isCharacterDevice();
    }

    @Test(timeout = 4000)
    public void test119585() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSparse();
        tarArchiveEntry0.isGNULongNameEntry();
    }

    @Test(timeout = 4000)
    public void test119586() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSparse();
        tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test119587() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSparse();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test119588() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSparse();
        tarArchiveEntry0.getLongGroupId();
    }

    @Test(timeout = 4000)
    public void test119589() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSparse();
        tarArchiveEntry0.isBlockDevice();
    }

    @Test(timeout = 4000)
    public void test119590() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSparse();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test119591() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSparse();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test119592() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("/AJeNewn|eBElUQ!=", (byte) (-120));
        boolean boolean0 = tarArchiveEntry0.isSparse();
    }

    @Test(timeout = 4000)
    public void test120593() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        int int0 = tarArchiveEntry0.getMode();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test120594() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        int int0 = tarArchiveEntry0.getMode();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test120595() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        int int0 = tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test120596() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        int int0 = tarArchiveEntry0.getMode();
        tarArchiveEntry0.getDevMinor();
    }

    @Test(timeout = 4000)
    public void test120597() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        int int0 = tarArchiveEntry0.getMode();
        tarArchiveEntry0.isLink();
    }

    @Test(timeout = 4000)
    public void test120598() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        int int0 = tarArchiveEntry0.getMode();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test120599() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        int int0 = tarArchiveEntry0.getMode();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test120600() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        int int0 = tarArchiveEntry0.getMode();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test120601() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        int int0 = tarArchiveEntry0.getMode();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test121602() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(", ", (byte) (-28), true);
        long long0 = tarArchiveEntry0.getSize();
        tarArchiveEntry0.isCharacterDevice();
    }

    @Test(timeout = 4000)
    public void test121603() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(", ", (byte) (-28), true);
        long long0 = tarArchiveEntry0.getSize();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test121604() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(", ", (byte) (-28), true);
        long long0 = tarArchiveEntry0.getSize();
        tarArchiveEntry0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test121605() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(", ", (byte) (-28), true);
        long long0 = tarArchiveEntry0.getSize();
        tarArchiveEntry0.getGroupId();
    }

    @Test(timeout = 4000)
    public void test121606() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(", ", (byte) (-28), true);
        long long0 = tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test121607() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(", ", (byte) (-28), true);
        long long0 = tarArchiveEntry0.getSize();
        tarArchiveEntry0.getLongUserId();
    }

    @Test(timeout = 4000)
    public void test121608() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(", ", (byte) (-28), true);
        long long0 = tarArchiveEntry0.getSize();
        tarArchiveEntry0.isPaxHeader();
    }

    @Test(timeout = 4000)
    public void test121609() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(", ", (byte) (-28), true);
        long long0 = tarArchiveEntry0.getSize();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test121610() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(", ", (byte) (-28), true);
        long long0 = tarArchiveEntry0.getSize();
        tarArchiveEntry0.isSymbolicLink();
    }

    @Test(timeout = 4000)
    public void test121611() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(", ", (byte) (-28), true);
        long long0 = tarArchiveEntry0.getSize();
        tarArchiveEntry0.isGNUSparse();
    }

    @Test(timeout = 4000)
    public void test121612() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(", ", (byte) (-28), true);
        long long0 = tarArchiveEntry0.getSize();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test122613() throws Throwable {
        byte[] byteArray0 = new byte[3];
        TarArchiveEntry tarArchiveEntry0 = null;
        tarArchiveEntry0 = new TarArchiveEntry(byteArray0);
    }

    @Test(timeout = 4000)
    public void test123614() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        String string0 = tarArchiveEntry0.getUserName();
        tarArchiveEntry0.getName();
    }

    @Test(timeout = 4000)
    public void test123615() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        String string0 = tarArchiveEntry0.getUserName();
        tarArchiveEntry0.getDevMajor();
    }

    @Test(timeout = 4000)
    public void test123616() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        String string0 = tarArchiveEntry0.getUserName();
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test123617() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        String string0 = tarArchiveEntry0.getUserName();
        tarArchiveEntry0.getUserId();
    }

    @Test(timeout = 4000)
    public void test123618() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        String string0 = tarArchiveEntry0.getUserName();
        tarArchiveEntry0.getSize();
    }

    @Test(timeout = 4000)
    public void test123619() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        String string0 = tarArchiveEntry0.getUserName();
    }

    @Test(timeout = 4000)
    public void test123620() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("6+\"|M&Us47]k", true);
        String string0 = tarArchiveEntry0.getUserName();
        tarArchiveEntry0.isDirectory();
    }
}
