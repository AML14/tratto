/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 10:03:10 GMT 2023
 */
package org.apache.commons.compress.archivers.tar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.compress.archivers.tar.TarUtils;
import org.apache.commons.compress.archivers.zip.ZipEncoding;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class TarUtils_ESTest extends TarUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        byte[] byteArray0 = new byte[1];
        byteArray0[0] = (byte) (-15);
        TarUtils.verifyCheckSum(byteArray0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        byte[] byteArray0 = new byte[5];
        TarUtils.formatLongOctalOrBinaryBytes((-1L), byteArray0, (byte) 14, (byte) 9);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        TarUtils.formatLongOctalOrBinaryBytes(8589934591L, (byte[]) null, 1, 1);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        byte[] byteArray0 = new byte[3];
        TarUtils.formatLongOctalOrBinaryBytes(0L, byteArray0, 1407, 0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        byte[] byteArray0 = new byte[17];
        byteArray0[0] = (byte) 38;
        byteArray0[1] = (byte) (-111);
        TarUtils.parseOctalOrBinary(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byteArray0[8] = (byte) (-86);
        TarUtils.parseOctal(byteArray0, 8, 5396);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        byte[] byteArray0 = new byte[5];
        TarUtils.formatLongOctalBytes(0L, byteArray0, (byte) 32, (byte) 3);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        byte[] byteArray0 = new byte[17];
        byteArray0[0] = (byte) 61;
        TarUtils.parseName(byteArray0, 0, 10);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        byte[] byteArray0 = new byte[22];
        TarUtils.formatOctalBytes(0L, byteArray0, (byte) 20, (byte) 0);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        byte[] byteArray0 = new byte[1];
        ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
        TarUtils.formatNameBytes("AEp]<", byteArray0, (int) (byte) 0, (int) (byte) 0, zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        byte[] byteArray0 = new byte[14];
        ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
        TarUtils.formatNameBytes("{NUL}", byteArray0, (int) (byte) 1, (int) (byte) 1, zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        byte[] byteArray0 = new byte[3];
        TarUtils.formatNameBytes("org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding", byteArray0, (int) (byte) 0, 0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        byte[] byteArray0 = new byte[1];
        TarUtils.formatNameBytes(" is too large for ", byteArray0, (int) (byte) 1, 0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        byte[] byteArray0 = new byte[7];
        TarUtils.formatNameBytes("Jx0DNRLj<alwcB8)!l", byteArray0, 0, (int) (byte) (-7));
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        byte[] byteArray0 = new byte[14];
        byteArray0[0] = (byte) 43;
        TarUtils.computeCheckSum(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        TarUtils.verifyCheckSum((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        TarUtils.parseOctalOrBinary((byte[]) null, (-1010), 2270);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        TarUtils.parseOctal((byte[]) null, (-2971), 9);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
        TarUtils.parseName((byte[]) null, (-4302), 253, zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        byte[] byteArray0 = new byte[4];
        ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
        TarUtils.parseName(byteArray0, (int) (byte) 0, 7, zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        byte[] byteArray0 = new byte[7];
        TarUtils.parseName(byteArray0, (-3843), 1663);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        TarUtils.parseBoolean((byte[]) null, (-49));
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        byte[] byteArray0 = new byte[8];
        TarUtils.parseBoolean(byteArray0, 55);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        TarUtils.formatOctalBytes(0L, (byte[]) null, 3293, 3293);
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        byte[] byteArray0 = new byte[7];
        TarUtils.formatOctalBytes(929L, byteArray0, 225, (-3730));
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        byte[] byteArray0 = new byte[3];
        TarUtils.formatNameBytes("\"jpGIED/po-SHzQnU", byteArray0, 0, (int) (byte) 106, (ZipEncoding) null);
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        byte[] byteArray0 = new byte[0];
        TarUtils.formatNameBytes("", byteArray0, 1846, 566);
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        TarUtils.formatLongOctalOrBinaryBytes(818L, (byte[]) null, 8730, 8730);
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        TarUtils.formatLongOctalBytes(0L, (byte[]) null, 9, 2);
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        byte[] byteArray0 = new byte[5];
        TarUtils.formatLongOctalBytes((-20L), byteArray0, (byte) 1, (byte) 3);
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        TarUtils.formatCheckSumOctalBytes(0L, (byte[]) null, 789, 789);
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        byte[] byteArray0 = new byte[1];
        TarUtils.formatCheckSumOctalBytes((-1L), byteArray0, 168, 6);
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        TarUtils.computeCheckSum((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        byte[] byteArray0 = new byte[5];
        TarUtils.formatUnsignedOctalString((-570L), byteArray0, (byte) (-63), (byte) 0);
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        byte[] byteArray0 = new byte[0];
        TarUtils.formatUnsignedOctalString(0L, byteArray0, 4572, 913);
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        byte[] byteArray0 = new byte[0];
        ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
        TarUtils.parseName(byteArray0, (-1173), (-1173), zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byteArray0[2] = (byte) 24;
        TarUtils.parseOctal(byteArray0, (byte) 2, (byte) 2);
    }

    @Test(timeout = 4000)
    public void test3737() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 116;
        TarUtils.parseOctal(byteArray0, 0, (byte) 9);
    }

    @Test(timeout = 4000)
    public void test3838() throws Throwable {
        byte[] byteArray0 = new byte[1];
        byteArray0[0] = (byte) 33;
        boolean boolean0 = TarUtils.verifyCheckSum(byteArray0);
    }

    @Test(timeout = 4000)
    public void test3939() throws Throwable {
        byte[] byteArray0 = new byte[1];
        boolean boolean0 = TarUtils.verifyCheckSum(byteArray0);
    }

    @Test(timeout = 4000)
    public void test4040() throws Throwable {
        byte[] byteArray0 = new byte[14];
        long long0 = TarUtils.computeCheckSum(byteArray0);
    }

    @Test(timeout = 4000)
    public void test4141() throws Throwable {
        byte[] byteArray0 = new byte[9];
        TarUtils.formatLongOctalOrBinaryBytes((-939L), byteArray0, 799, (-786));
    }

    @Test(timeout = 4000)
    public void test4242() throws Throwable {
        byte[] byteArray0 = new byte[9];
        TarUtils.formatLongOctalOrBinaryBytes((-4136L), byteArray0, 0, (byte) (-63));
    }

    @Test(timeout = 4000)
    public void test4343() throws Throwable {
        byte[] byteArray0 = new byte[9];
        TarUtils.formatLongOctalOrBinaryBytes(2305843009213693949L, byteArray0, (byte) (-86), 228);
    }

    @Test(timeout = 4000)
    public void test4444() throws Throwable {
        byte[] byteArray0 = new byte[2];
        TarUtils.formatLongOctalOrBinaryBytes((-808L), byteArray0, (byte) 45, 8);
    }

    @Test(timeout = 4000)
    public void test4545() throws Throwable {
        byte[] byteArray0 = new byte[14];
        ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
        TarUtils.formatNameBytes("{NUL}", byteArray0, (int) (byte) 1, 162, zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test4646() throws Throwable {
        byte[] byteArray0 = new byte[14];
        byteArray0[1] = (byte) 1;
        boolean boolean0 = TarUtils.parseBoolean(byteArray0, (byte) 1);
    }

    @Test(timeout = 4000)
    public void test4747() throws Throwable {
        byte[] byteArray0 = new byte[14];
        boolean boolean0 = TarUtils.parseBoolean(byteArray0, (byte) 1);
    }

    @Test(timeout = 4000)
    public void test4848() throws Throwable {
        byte[] byteArray0 = new byte[3];
        byteArray0[1] = (byte) (-71);
        long long0 = TarUtils.parseOctalOrBinary(byteArray0, 1, (byte) (-71));
    }

    @Test(timeout = 4000)
    public void test4949() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) (-1);
        long long0 = TarUtils.parseOctalOrBinary(byteArray0, 0, (byte) (-1));
    }

    @Test(timeout = 4000)
    public void test5050() throws Throwable {
        byte[] byteArray0 = new byte[3];
        byteArray0[1] = (byte) (-7);
        TarUtils.parseOctalOrBinary(byteArray0, 1, (byte) 113);
    }

    @Test(timeout = 4000)
    public void test5151() throws Throwable {
        byte[] byteArray0 = new byte[9];
        TarUtils.formatUnsignedOctalString(540L, byteArray0, 0, 9);
        long long0 = TarUtils.parseOctal(byteArray0, 0, (byte) 2);
    }

    @Test(timeout = 4000)
    public void test5253() throws Throwable {
        byte[] byteArray0 = new byte[9];
        long long0 = TarUtils.parseOctal(byteArray0, 8, 5396);
    }

    @Test(timeout = 4000)
    public void test5354() throws Throwable {
        TarUtils.parseOctal((byte[]) null, (-2971), (-2971));
    }

    @Test(timeout = 4000)
    public void test5455() throws Throwable {
        byte[] byteArray0 = new byte[4];
        byteArray0[2] = (byte) 3;
        ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
        String string0 = TarUtils.parseName(byteArray0, 0, (int) (byte) 3, zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test5556() throws Throwable {
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 3;
        ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
        String string0 = TarUtils.parseName(byteArray0, 0, (int) (byte) 3, zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test5657() throws Throwable {
        byte[] byteArray0 = new byte[14];
        ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
        int int0 = TarUtils.formatNameBytes("{NUL}", byteArray0, (int) (byte) 1, (-668), zipEncoding0);
    }

    @Test(timeout = 4000)
    public void test5758() throws Throwable {
        byte[] byteArray0 = new byte[0];
        String string0 = TarUtils.parseName(byteArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test5859() throws Throwable {
        byte[] byteArray0 = new byte[4];
        TarUtils.formatOctalBytes(0L, byteArray0, (byte) 3, (byte) 48);
    }

    @Test(timeout = 4000)
    public void test5960() throws Throwable {
        byte[] byteArray0 = new byte[0];
        TarUtils.formatCheckSumOctalBytes((-1260L), byteArray0, 55, (-3132));
    }

    @Test(timeout = 4000)
    public void test6061() throws Throwable {
        byte[] byteArray0 = new byte[7];
        TarUtils.formatNameBytes((String) null, byteArray0, (int) (byte) 0, (int) (byte) (-128));
    }
}
