/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 17 01:58:22 GMT 2023
 */
package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PipedOutputStream;
import java.io.StringWriter;
import java.io.Writer;
import java.util.LinkedList;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.joda.time.Chronology;
import org.joda.time.DateTimeZone;
import org.joda.time.Days;
import org.joda.time.Duration;
import org.joda.time.Hours;
import org.joda.time.LocalTime;
import org.joda.time.Minutes;
import org.joda.time.Months;
import org.joda.time.MutablePeriod;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import org.joda.time.ReadablePartial;
import org.joda.time.ReadablePeriod;
import org.joda.time.Seconds;
import org.joda.time.Weeks;
import org.joda.time.Years;
import org.joda.time.chrono.ISOChronology;
import org.joda.time.chrono.IslamicChronology;
import org.joda.time.chrono.LenientChronology;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodFormatterBuilder;
import org.joda.time.format.PeriodParser;
import org.joda.time.format.PeriodPrinter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class PeriodFormatterBuilder_ESTest extends PeriodFormatterBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendDays();
        periodFormatterBuilder1.appendSecondsWithMillis();
        PeriodFormatterBuilder.Composite periodFormatterBuilder_Composite0 = (PeriodFormatterBuilder.Composite) periodFormatterBuilder1.toParser();
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("", "cf", (String[]) null, periodFormatterBuilder_Composite0, periodFormatterBuilder_Composite0, false, false);
        periodFormatterBuilder_Separator0.calculatePrintedLength((ReadablePeriod) null, (Locale) null);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = new PeriodFormatterBuilder.Literal("No field to apply suffix to");
        Locale locale0 = Locale.CHINA;
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("", "", (String[]) null, periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0, true, false);
        int int0 = periodFormatterBuilder_Separator0.countFieldsToPrint((ReadablePeriod) null, (-2106185883), locale0);
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("NoLimit", "\"bI NI~");
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix0 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_PluralAffix0);
        int int0 = periodFormatterBuilder_CompositeAffix0.scan("Qm+Z)Id=A6qLRQ^", (-4));
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("lFW$BxB)A)a^.Zj", "<.v~X|=7,*o~S");
        int int0 = periodFormatterBuilder_PluralAffix0.scan("hn_&`<9_#", (-60));
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("Builder has created neither a printer nor a parser", "Builder has created neither a printer nor a parser");
        int int0 = periodFormatterBuilder_PluralAffix0.parse("", 0);
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("");
        StringWriter stringWriter0 = new StringWriter(16);
        periodFormatterBuilder_SimpleAffix0.printTo((Writer) stringWriter0, 7);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("");
        int int0 = periodFormatterBuilder_SimpleAffix0.scan("No printer or parser supplied", 0);
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        StringWriter stringWriter0 = new StringWriter();
        StringBuffer stringBuffer0 = stringWriter0.getBuffer();
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix(")`CW}\"`XV+fY@nl)");
        periodFormatterBuilder_SimpleAffix0.printTo(stringBuffer0, 27);
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test0088() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("org.joda.time.format.PeriodFormatterBuilder$FieldFormatter");
        int int0 = periodFormatterBuilder_SimpleAffix0.calculatePrintedLength(0);
    }

    @Test(timeout = 4000)
    public void test0099() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("", "");
        StringWriter stringWriter0 = new StringWriter(1963);
        periodFormatterBuilder_PluralAffix0.printTo((Writer) stringWriter0, 1963);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test01010() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("3jR9", "XQ nmA/VK");
        int int0 = periodFormatterBuilder_PluralAffix0.scan("XQ nmA/VK", 0);
    }

    @Test(timeout = 4000)
    public void test01111() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix(" < ", "?S`W$#|N7ti]&+P");
        StringWriter stringWriter0 = new StringWriter();
        periodFormatterBuilder_PluralAffix0.printTo((Writer) stringWriter0, 0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test01212() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("", " > ");
        int int0 = periodFormatterBuilder_PluralAffix0.calculatePrintedLength((-2709));
    }

    @Test(timeout = 4000)
    public void test01313() throws Throwable {
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        StringWriter stringWriter0 = new StringWriter();
        StringBuffer stringBuffer0 = stringWriter0.getBuffer();
        MutablePeriod mutablePeriod0 = MutablePeriod.parse("p");
        Locale locale0 = Locale.FRENCH;
        periodFormatterBuilder_Literal0.printTo(stringBuffer0, (ReadablePeriod) mutablePeriod0, locale0);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test01414() throws Throwable {
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = new PeriodFormatterBuilder.Literal("org.joda.time.format.PeriodFormatterBuilder$FieldFormatter");
        StringWriter stringWriter0 = new StringWriter();
        Weeks weeks0 = Weeks.MIN_VALUE;
        Locale locale0 = Locale.CHINA;
        periodFormatterBuilder_Literal0.printTo((Writer) stringWriter0, (ReadablePeriod) weeks0, locale0);
        weeks0.getWeeks();
    }

    @Test(timeout = 4000)
    public void test01515() throws Throwable {
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        Minutes minutes0 = Minutes.THREE;
        PeriodType periodType0 = minutes0.getPeriodType();
        MutablePeriod mutablePeriod0 = new MutablePeriod(1000L, periodType0);
        Locale locale0 = Locale.ROOT;
        int int0 = periodFormatterBuilder_Literal0.parseInto(mutablePeriod0, "org.joda.time.LocalDateTime", (-5075), locale0);
    }

    @Test(timeout = 4000)
    public void test01616() throws Throwable {
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        Locale locale0 = new Locale("No field to apply suffix to");
        int int0 = periodFormatterBuilder_Literal0.countFieldsToPrint((ReadablePeriod) null, 65, locale0);
    }

    @Test(timeout = 4000)
    public void test01717() throws Throwable {
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = new PeriodFormatterBuilder.Literal(" for ");
        PeriodType periodType0 = PeriodType.yearWeekDay();
        Period period0 = new Period(168L, periodType0);
        Locale locale0 = Locale.CANADA_FRENCH;
        int int0 = periodFormatterBuilder_Literal0.calculatePrintedLength(period0, locale0);
    }

    @Test(timeout = 4000)
    public void test01818() throws Throwable {
        PeriodFormatterBuilder.FieldFormatter[] periodFormatterBuilder_FieldFormatterArray0 = new PeriodFormatterBuilder.FieldFormatter[0];
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter((-3366), (-3366), (-3366), false, (-3366), periodFormatterBuilder_FieldFormatterArray0, periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        periodFormatterBuilder_FieldFormatter0.isZero((ReadablePeriod) null);
    }

    @Test(timeout = 4000)
    public void test01919() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("org.joda.time.format.PeriodFormatterBuilder$FieldFormatter");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter(45, 968, 1068, false, 3138, (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        PeriodType periodType0 = PeriodType.yearWeekDay();
        boolean boolean0 = periodFormatterBuilder_FieldFormatter0.isSupported(periodType0, 0);
    }

    @Test(timeout = 4000)
    public void test02020() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("", "");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter(409, (-2438), 0, true, 0, (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_PluralAffix0);
        Seconds seconds0 = Seconds.TWO;
        long long0 = periodFormatterBuilder_FieldFormatter0.getFieldValue(seconds0);
    }

    @Test(timeout = 4000)
    public void test02121() throws Throwable {
        MockFileWriter mockFileWriter0 = new MockFileWriter("org.joda.time.format.PeriodFormatterBuilder$PluralAffix", false);
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        PeriodFormatterBuilder.Composite periodFormatterBuilder_Composite0 = new PeriodFormatterBuilder.Composite(linkedList0);
        Weeks weeks0 = Weeks.MAX_VALUE;
        Locale locale0 = Locale.GERMANY;
        periodFormatterBuilder_Composite0.printTo((Writer) mockFileWriter0, (ReadablePeriod) weeks0, locale0);
    }

    @Test(timeout = 4000)
    public void test02222() throws Throwable {
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        PeriodFormatterBuilder.Composite periodFormatterBuilder_Composite0 = new PeriodFormatterBuilder.Composite(linkedList0);
        PeriodType periodType0 = PeriodType.hours();
        IslamicChronology islamicChronology0 = IslamicChronology.getInstance((DateTimeZone) null);
        MutablePeriod mutablePeriod0 = new MutablePeriod((long) 1011, periodType0, (Chronology) islamicChronology0);
        Locale locale0 = Locale.CANADA_FRENCH;
        periodFormatterBuilder_Composite0.parseInto(mutablePeriod0, "<h5I", 1, locale0);
    }

    @Test(timeout = 4000)
    public void test02323() throws Throwable {
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        PeriodFormatterBuilder.Composite periodFormatterBuilder_Composite0 = new PeriodFormatterBuilder.Composite(linkedList0);
        Years years0 = Years.THREE;
        Locale locale0 = Locale.TAIWAN;
        periodFormatterBuilder_Composite0.calculatePrintedLength(years0, locale0);
    }

    @Test(timeout = 4000)
    public void test02424() throws Throwable {
        String[] stringArray0 = new String[8];
        stringArray0[0] = "r!~cfS9[epK a} Ry?";
        stringArray0[1] = "r!~cfS9[epK a} Ry?";
        stringArray0[2] = "Prefix not followed by field";
        stringArray0[3] = "Field must not be null";
        stringArray0[4] = "r!~cfS9[epK a} Ry?";
        stringArray0[5] = "Prefix not followed by field";
        stringArray0[6] = "OBI8Y^dqsK|/,yy";
        stringArray0[7] = "r!~cfS9[epK a} Ry?";
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("r!~cfS9[epK a} Ry?", "Prefix not followed by field", stringArray0, periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0, true, false);
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator1 = periodFormatterBuilder_Separator0.finish(periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Prefix not followed by field");
        periodFormatterBuilder_Separator1.printTo((Writer) mockPrintWriter0, (ReadablePeriod) null, (Locale) null);
    }

    @Test(timeout = 4000)
    public void test02525() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("WL 00Q\"Q8gl1S!s?ig", "WL 00Q\"Q8gl1S!s?ig");
        StringBuffer stringBuffer0 = new StringBuffer(6);
        periodFormatterBuilder_PluralAffix0.printTo(stringBuffer0, 0);
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test02626() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("");
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix0 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        StringBuffer stringBuffer0 = new StringBuffer("America/Anchorage");
        periodFormatterBuilder_CompositeAffix0.printTo(stringBuffer0, (-3384));
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test02727() throws Throwable {
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        PeriodFormatterBuilder.Composite periodFormatterBuilder_Composite0 = new PeriodFormatterBuilder.Composite(linkedList0);
        StringBuffer stringBuffer0 = new StringBuffer();
        Seconds seconds0 = Seconds.MAX_VALUE;
        Hours hours0 = seconds0.toStandardHours();
        Locale locale0 = Locale.CANADA_FRENCH;
        periodFormatterBuilder_Composite0.printTo(stringBuffer0, (ReadablePeriod) hours0, locale0);
    }

    @Test(timeout = 4000)
    public void test02828() throws Throwable {
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        PeriodFormatterBuilder.Composite periodFormatterBuilder_Composite0 = new PeriodFormatterBuilder.Composite(linkedList0);
        Minutes minutes0 = Minutes.TWO;
        Locale locale0 = Locale.KOREAN;
        periodFormatterBuilder_Composite0.countFieldsToPrint(minutes0, (-2330), locale0);
    }

    @Test(timeout = 4000)
    public void test02929() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendMonths();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder0.appendSuffix("");
    }

    @Test(timeout = 4000)
    public void test03030() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeparator("org.joda.time.format.PeriodFormatterBuilder$FieldFormatter");
    }

    @Test(timeout = 4000)
    public void test03131() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendPrefix("", ".");
        periodFormatterBuilder1.appendSeparatorIfFieldsBefore("~S~Lez\" *");
    }

    @Test(timeout = 4000)
    public void test03232() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSeparatorIfFieldsAfter((String) null);
    }

    @Test(timeout = 4000)
    public void test03333() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendMillis();
        String[] stringArray0 = new String[19];
        periodFormatterBuilder1.appendSeparator("X4nac", "Cannot convert period to duration as ", stringArray0);
    }

    @Test(timeout = 4000)
    public void test03434() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        String[] stringArray0 = new String[4];
        periodFormatterBuilder0.appendSeparator((String) null, (String) null, stringArray0);
    }

    @Test(timeout = 4000)
    public void test03535() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendPrefix("");
        periodFormatterBuilder1.appendSeparator("");
    }

    @Test(timeout = 4000)
    public void test03636() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendPrefix("F#2p;A};");
        periodFormatterBuilder1.appendLiteral(")");
    }

    @Test(timeout = 4000)
    public void test03737() throws Throwable {
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = new PeriodFormatterBuilder.Literal("");
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendPrefix(" as this period contains years and years vary in length", "");
        PeriodFormatter periodFormatter0 = new PeriodFormatter(periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0);
        periodFormatterBuilder1.append(periodFormatter0);
    }

    @Test(timeout = 4000)
    public void test03838() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        PeriodFormatterBuilder.Composite periodFormatterBuilder_Composite0 = new PeriodFormatterBuilder.Composite(linkedList0);
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.append((PeriodPrinter) periodFormatterBuilder_Composite0, (PeriodParser) periodFormatterBuilder_Composite0);
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder0.appendSeparator("2:ZtbPCiDeu^5AK{", "");
    }

    @Test(timeout = 4000)
    public void test03939() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.append((PeriodPrinter) null, (PeriodParser) periodFormatterBuilder_Literal0);
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder0.appendSeparatorIfFieldsBefore("49qAspOEBX");
    }

    @Test(timeout = 4000)
    public void test04040() throws Throwable {
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        PeriodFormatterBuilder.Composite periodFormatterBuilder_Composite0 = new PeriodFormatterBuilder.Composite(linkedList0);
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("org.joda.time.LocalDate", "org.joda.time.LocalDate", (String[]) null, periodFormatterBuilder_Composite0, periodFormatterBuilder_Composite0, true, true);
        MutablePeriod mutablePeriod0 = new MutablePeriod(1169L, (PeriodType) null);
        periodFormatterBuilder_Separator0.parseInto(mutablePeriod0, " =@", (-950), (Locale) null);
    }

    @Test(timeout = 4000)
    public void test04141() throws Throwable {
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        MutablePeriod mutablePeriod0 = new MutablePeriod(0, 0, 0, 0);
        String[] stringArray0 = new String[1];
        stringArray0[0] = "org.joda.time.format.PeriodFormatterBuilder$Literal";
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("org.joda.time.format.PeriodFormatterBuilder$Literal", "Builder has created neither a printer nor a parser", stringArray0, periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0, true, true);
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator1 = periodFormatterBuilder_Separator0.finish(periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0);
        Locale locale0 = Locale.US;
        int int0 = periodFormatterBuilder_Separator1.parseInto(mutablePeriod0, "5l", (-105861870), locale0);
    }

    @Test(timeout = 4000)
    public void test04242() throws Throwable {
        String[] stringArray0 = new String[6];
        stringArray0[0] = "";
        stringArray0[1] = "";
        stringArray0[2] = "aF%";
        stringArray0[3] = "";
        stringArray0[4] = "";
        stringArray0[5] = "";
        PeriodFormatterBuilder.FieldFormatter[] periodFormatterBuilder_FieldFormatterArray0 = new PeriodFormatterBuilder.FieldFormatter[0];
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("eM:%nj}/JEr", (String) null);
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter(623191204, 623191204, 623191204, false, 623191204, periodFormatterBuilder_FieldFormatterArray0, periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_PluralAffix0);
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("", "aF%", stringArray0, periodFormatterBuilder_FieldFormatter0, periodFormatterBuilder_FieldFormatter0, false, false);
        StringBuffer stringBuffer0 = new StringBuffer();
        Months months0 = Months.months(4747);
        Locale locale0 = Locale.GERMANY;
        periodFormatterBuilder_Separator0.printTo(stringBuffer0, (ReadablePeriod) months0, locale0);
    }

    @Test(timeout = 4000)
    public void test04343() throws Throwable {
        PeriodFormatterBuilder.FieldFormatter[] periodFormatterBuilder_FieldFormatterArray0 = new PeriodFormatterBuilder.FieldFormatter[3];
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("WL 00Q\"Q8gl1S!s?ig", "WL 00Q\"Q8gl1S!s?ig");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter(0, 45, (-231), true, (-231), periodFormatterBuilder_FieldFormatterArray0, periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_PluralAffix0);
        periodFormatterBuilder_FieldFormatterArray0[0] = periodFormatterBuilder_FieldFormatter0;
        StringBuffer stringBuffer0 = new StringBuffer(6);
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("0:6qMH{Y|@0C@S3y", "tZoM^uy~haJl2WFx", (String[]) null, periodFormatterBuilder_FieldFormatterArray0[0], periodFormatterBuilder_FieldFormatterArray0[0], true, true);
        Locale locale0 = Locale.GERMANY;
        MutablePeriod mutablePeriod0 = new MutablePeriod(0, 91, 355, 0, 6, (-1104), (-2993), 1600);
        periodFormatterBuilder_Separator0.printTo(stringBuffer0, (ReadablePeriod) mutablePeriod0, locale0);
    }

    @Test(timeout = 4000)
    public void test04444() throws Throwable {
        String[] stringArray0 = new String[6];
        stringArray0[0] = "%c2upsu3jr9*/nj";
        stringArray0[1] = "tZoM^uy~haJl2WFx";
        stringArray0[2] = "tZoM^uy~haJl2WFx";
        stringArray0[3] = "%c2upsu3jr9*/nj";
        stringArray0[4] = "tZoM^uy~haJl2WFx";
        stringArray0[5] = "%c2upsu3jr9*/nj";
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = new PeriodFormatterBuilder.Literal("");
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("tZoM^uy~haJl2WFx", "%c2upsu3jr9*/nj", stringArray0, periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0, false, false);
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator1 = periodFormatterBuilder_Separator0.finish(periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0);
        Days days0 = Days.THREE;
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        int int0 = periodFormatterBuilder_Separator1.calculatePrintedLength(days0, locale0);
    }

    @Test(timeout = 4000)
    public void test04545() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter((-26), 0, 0, true, 0, (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        Hours hours0 = Hours.SIX;
        Locale locale0 = Locale.JAPAN;
        String[] stringArray0 = new String[8];
        stringArray0[0] = "iaX\"{";
        stringArray0[1] = "iaX\"{";
        stringArray0[2] = "iaX\"{";
        stringArray0[3] = "";
        stringArray0[4] = "";
        stringArray0[5] = "";
        stringArray0[6] = "Literal must not be null";
        stringArray0[7] = "iaX\"{";
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("Literal must not be null", "iaX\"{", stringArray0, periodFormatterBuilder_FieldFormatter0, periodFormatterBuilder_FieldFormatter0, false, true);
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator1 = periodFormatterBuilder_Separator0.finish(periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0);
        int int0 = periodFormatterBuilder_Separator1.calculatePrintedLength(hours0, locale0);
    }

    @Test(timeout = 4000)
    public void test04646() throws Throwable {
        String[] stringArray0 = new String[6];
        stringArray0[0] = "";
        stringArray0[1] = "0![#K";
        stringArray0[2] = "Both printing and parsing not supported";
        stringArray0[3] = "";
        stringArray0[4] = "Both printing and parsing not supported";
        stringArray0[5] = "";
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("", "Both printing and parsing not supported", stringArray0, periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0, true, true);
        Period period0 = Period.hours(2892);
        Locale locale0 = Locale.JAPANESE;
        int int0 = periodFormatterBuilder_Separator0.countFieldsToPrint(period0, 0, locale0);
    }

    @Test(timeout = 4000)
    public void test04747() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeconds();
        String[] stringArray0 = new String[0];
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSeparator("ps$", "ps$", stringArray0);
    }

    @Test(timeout = 4000)
    public void test04848() throws Throwable {
        String[] stringArray0 = new String[1];
        LinkedList<PeriodFormatterBuilder.Separator> linkedList0 = new LinkedList<PeriodFormatterBuilder.Separator>();
        LinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);
        PeriodFormatterBuilder.Composite periodFormatterBuilder_Composite0 = new PeriodFormatterBuilder.Composite(linkedList1);
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = null;
        periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator((String) null, (String) null, stringArray0, (PeriodPrinter) null, periodFormatterBuilder_Composite0, false, false);
    }

    @Test(timeout = 4000)
    public void test04949() throws Throwable {
        MutablePeriod.parse("org.joda.time.format.PeriodFormatterBuilder$Literal");
    }

    @Test(timeout = 4000)
    public void test05050() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter(46, 46, 46, true, 12825000, (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        Minutes minutes0 = Minutes.MAX_VALUE;
        PeriodType periodType0 = minutes0.getPeriodType();
        MutablePeriod mutablePeriod0 = new MutablePeriod(periodType0);
        periodFormatterBuilder_FieldFormatter0.setFieldValue(mutablePeriod0, 46, 10);
    }

    @Test(timeout = 4000)
    public void test05151() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("y?l!oHH", "No formatter supplied");
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix0 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_PluralAffix0);
        PeriodFormatterBuilder.FieldFormatter[] periodFormatterBuilder_FieldFormatterArray0 = new PeriodFormatterBuilder.FieldFormatter[0];
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter((-4058), 0, 0, false, (-4058), periodFormatterBuilder_FieldFormatterArray0, periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_CompositeAffix0);
        MutablePeriod mutablePeriod0 = new MutablePeriod();
        periodFormatterBuilder_FieldFormatter0.setFieldValue(mutablePeriod0, 0, 2384);
    }

    @Test(timeout = 4000)
    public void test05252() throws Throwable {
        PeriodFormatterBuilder.FieldFormatter[] periodFormatterBuilder_FieldFormatterArray0 = new PeriodFormatterBuilder.FieldFormatter[0];
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("America/Anchorage");
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix0 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("America/Anchorage", "[)4Y169-;dj@");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter((-3294), 850, 2894, true, (-3294), periodFormatterBuilder_FieldFormatterArray0, periodFormatterBuilder_CompositeAffix0, periodFormatterBuilder_PluralAffix0);
        Hours hours0 = Hours.MIN_VALUE;
        Locale locale0 = Locale.CANADA;
        int int0 = periodFormatterBuilder_FieldFormatter0.calculatePrintedLength(hours0, locale0);
    }

    @Test(timeout = 4000)
    public void test05353() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("PST", "PST");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter(0, 0, 0, true, 8, (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_PluralAffix0);
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "PST");
        Minutes minutes0 = Minutes.THREE;
        Locale locale0 = Locale.ITALIAN;
        periodFormatterBuilder_FieldFormatter0.printTo(stringBuffer0, (ReadablePeriod) minutes0, locale0);
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test05354() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("PST", "PST");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter(0, 0, 0, true, 8, (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_PluralAffix0);
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "PST");
        Minutes minutes0 = Minutes.THREE;
        Locale locale0 = Locale.ITALIAN;
        periodFormatterBuilder_FieldFormatter0.printTo(stringBuffer0, (ReadablePeriod) minutes0, locale0);
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test05455() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("@# Z'shUP7A4ykh'Q", "@# Z'shUP7A4ykh'Q");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter(1829, 1829, 10, false, 7, (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_PluralAffix0);
        PeriodType periodType0 = PeriodType.hours();
        DateTimeZone dateTimeZone0 = DateTimeZone.forTimeZone((TimeZone) null);
        ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);
        LenientChronology lenientChronology0 = LenientChronology.getInstance(iSOChronology0);
        MutablePeriod mutablePeriod0 = new MutablePeriod(1829, 10, periodType0, lenientChronology0);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        int int0 = periodFormatterBuilder_FieldFormatter0.calculatePrintedLength(mutablePeriod0, locale0);
    }

    @Test(timeout = 4000)
    public void test05556() throws Throwable {
        Period.parse("P;$");
    }

    @Test(timeout = 4000)
    public void test05657() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter((-26), 0, 0, true, 0, (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_SimpleAffix0, (PeriodFormatterBuilder.PeriodFieldAffix) null);
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        Hours hours0 = Hours.SIX;
        Duration duration0 = hours0.toStandardDuration();
        Period period0 = duration0.toPeriod();
        Locale locale0 = Locale.JAPAN;
        periodFormatterBuilder_FieldFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0, locale0);
        charArrayWriter0.size();
    }

    @Test(timeout = 4000)
    public void test05658() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter((-26), 0, 0, true, 0, (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_SimpleAffix0, (PeriodFormatterBuilder.PeriodFieldAffix) null);
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        Hours hours0 = Hours.SIX;
        Duration duration0 = hours0.toStandardDuration();
        Period period0 = duration0.toPeriod();
        Locale locale0 = Locale.JAPAN;
        periodFormatterBuilder_FieldFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0, locale0);
        charArrayWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test05759() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter(1369, 0, 0, true, 0, (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        Hours hours0 = Hours.SIX;
        Duration duration0 = hours0.toStandardDuration();
        Period period0 = duration0.toPeriod();
        Locale locale0 = Locale.JAPAN;
        periodFormatterBuilder_FieldFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0, locale0);
        charArrayWriter0.size();
    }

    @Test(timeout = 4000)
    public void test05860() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("C");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter((-26), 1, 1, true, 1, (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        Hours hours0 = Hours.SIX;
        Duration duration0 = hours0.toStandardDuration();
        Period period0 = duration0.toPeriod();
        Locale locale0 = Locale.JAPAN;
        periodFormatterBuilder_FieldFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0, locale0);
        charArrayWriter0.size();
    }

    @Test(timeout = 4000)
    public void test05861() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("C");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter((-26), 1, 1, true, 1, (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        Hours hours0 = Hours.SIX;
        Duration duration0 = hours0.toStandardDuration();
        Period period0 = duration0.toPeriod();
        Locale locale0 = Locale.JAPAN;
        periodFormatterBuilder_FieldFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0, locale0);
        charArrayWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test05962() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter((-26), 0, 0, true, 0, (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        Hours hours0 = Hours.SIX;
        Duration duration0 = hours0.toStandardDuration();
        Period period0 = duration0.toPeriod();
        Locale locale0 = new Locale("", " is not precise in the period ");
        int int0 = periodFormatterBuilder_FieldFormatter0.countFieldsToPrint(period0, 1819, locale0);
    }

    @Test(timeout = 4000)
    public void test06063() throws Throwable {
        PeriodFormatterBuilder.FieldFormatter[] periodFormatterBuilder_FieldFormatterArray0 = new PeriodFormatterBuilder.FieldFormatter[3];
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("WL 00Q\"Q8gl1S!s?ig", "WL 00Q\"Q8gl1S!s?ig");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter(0, 45, (-231), true, (-231), periodFormatterBuilder_FieldFormatterArray0, periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_PluralAffix0);
        periodFormatterBuilder_FieldFormatterArray0[0] = periodFormatterBuilder_FieldFormatter0;
        MockDate mockDate0 = new MockDate(91, 0, (-13));
        LocalTime localTime0 = LocalTime.fromDateFields(mockDate0);
        Seconds seconds0 = Seconds.secondsBetween((ReadablePartial) localTime0, (ReadablePartial) localTime0);
        Locale locale0 = Locale.GERMANY;
        int int0 = periodFormatterBuilder_FieldFormatterArray0[0].countFieldsToPrint(seconds0, (-3340), locale0);
    }

    @Test(timeout = 4000)
    public void test06164() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("org.joda.time.format.PeriodFormatterBuilder$FieldFormatter");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter(45, 968, 1068, false, 3138, (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter1 = new PeriodFormatterBuilder.FieldFormatter(periodFormatterBuilder_FieldFormatter0, periodFormatterBuilder_SimpleAffix0);
        periodFormatterBuilder_FieldFormatter1.equals((Object) periodFormatterBuilder_FieldFormatter0);
    }

    @Test(timeout = 4000)
    public void test06265() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("");
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix0 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        int int0 = periodFormatterBuilder_CompositeAffix0.parse("", 1117);
    }

    @Test(timeout = 4000)
    public void test06366() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("$1<0k(~JhI! ", "uC");
        int int0 = periodFormatterBuilder_PluralAffix0.scan("uC", 909);
    }

    @Test(timeout = 4000)
    public void test06467() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("%c3jr9u8ipj*/nj", " for ");
        int int0 = periodFormatterBuilder_PluralAffix0.parse(" for ", 0);
    }

    @Test(timeout = 4000)
    public void test06568() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("$1<0k(~JhI! ", "uC");
        int int0 = periodFormatterBuilder_PluralAffix0.parse("No printer supplied", (-910));
    }

    @Test(timeout = 4000)
    public void test06669() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("y?l!oHH", "No formatter supplied");
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix0 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_PluralAffix0);
        int int0 = periodFormatterBuilder_CompositeAffix0.parse("No formatter supplied", 0);
    }

    @Test(timeout = 4000)
    public void test06770() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("org.joda.time.format.PeriodFormatterBuilder$Separator", "U");
        int int0 = periodFormatterBuilder_PluralAffix0.calculatePrintedLength(29);
    }

    @Test(timeout = 4000)
    public void test06871() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("LMODo<b;fS'", "LMODo<b;fS'");
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("LMODo<b;fS'");
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix0 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_SimpleAffix0);
        int int0 = periodFormatterBuilder_CompositeAffix0.scan("LMODo<b;fS'", (-2291));
    }

    @Test(timeout = 4000)
    public void test06972() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("LMODo<b;fS'", "org.joda.time.format.PeriodFormatterBuilder");
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("org.joda.time.format.PeriodFormatterBuilder");
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix0 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_SimpleAffix0);
        int int0 = periodFormatterBuilder_CompositeAffix0.scan("LMODo<b;fS'", (-2291));
    }

    @Test(timeout = 4000)
    public void test07073() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("Cannot have two adjacent separators");
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix0 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        int int0 = periodFormatterBuilder_CompositeAffix0.scan(":J", 43);
    }

    @Test(timeout = 4000)
    public void test07174() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("p");
        int int0 = periodFormatterBuilder_SimpleAffix0.parse("p", 0);
    }

    @Test(timeout = 4000)
    public void test07275() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSeparatorIfFieldsAfter("N4| mL+}:>t~[b2+");
        periodFormatterBuilder0.toParser();
        PeriodParser periodParser0 = periodFormatterBuilder0.toParser();
    }

    @Test(timeout = 4000)
    public void test07376() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendMillis();
        periodFormatterBuilder1.appendSeparatorIfFieldsBefore("U");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        periodFormatter0.isParser();
    }

    @Test(timeout = 4000)
    public void test07477() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendPrefix("org/joda/time/tz/data");
        periodFormatterBuilder0.appendSeparator("%Ds:9=pzD", "4(Z~N<LUBT9sA");
    }

    @Test(timeout = 4000)
    public void test07578() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendHours();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSeparator("840PJ5:}KX7'Wr,EPHC", "840PJ5:}KX7'Wr,EPHC");
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        PeriodFormatter periodFormatter0 = new PeriodFormatter(periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0);
        periodFormatterBuilder2.append(periodFormatter0);
        PeriodFormatterBuilder periodFormatterBuilder3 = periodFormatterBuilder1.appendSeparatorIfFieldsAfter("Qm+Z)Id=A6qLRQ^");
    }

    @Test(timeout = 4000)
    public void test07679() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeparatorIfFieldsBefore("LMODo<b;fS'");
    }

    @Test(timeout = 4000)
    public void test07780() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSeparator("yk{$k&Ob4Ww ", (String) null);
    }

    @Test(timeout = 4000)
    public void test07881() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        String[] stringArray0 = new String[2];
        stringArray0[0] = "iv|j!27lXl";
        stringArray0[1] = "iv|j!27lXl";
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("", "iv|j!27lXl", stringArray0, periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0, true, false);
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("pw$");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter((-29), 86400000, 86400000, true, 86400000, (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        periodFormatterBuilder0.append((PeriodPrinter) periodFormatterBuilder_Separator0, (PeriodParser) periodFormatterBuilder_FieldFormatter0);
        periodFormatterBuilder0.appendSuffix("4/", "[mJ*#^");
    }

    @Test(timeout = 4000)
    public void test07982() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSuffix("] |a", (String) null);
    }

    @Test(timeout = 4000)
    public void test08083() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSuffix((String) null, "Builder has created neither a printer nor a parser");
    }

    @Test(timeout = 4000)
    public void test08184() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSuffix((String) null);
    }

    @Test(timeout = 4000)
    public void test08285() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSuffix("");
    }

    @Test(timeout = 4000)
    public void test08386() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendPrefix("org/joda/time/tz/data");
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder0.appendPrefix("Asia/Yerevan", "");
    }

    @Test(timeout = 4000)
    public void test08487() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendPrefix("Y%<uO}'}=q7F6QTt/C", (String) null);
    }

    @Test(timeout = 4000)
    public void test08588() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendPrefix((String) null, "Cannot have two adjacent separators");
    }

    @Test(timeout = 4000)
    public void test08689() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendPrefix((String) null);
    }

    @Test(timeout = 4000)
    public void test08790() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendPrefix("mJ^bQ? uQ");
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        PeriodFormatterBuilder.Composite periodFormatterBuilder_Composite0 = new PeriodFormatterBuilder.Composite(linkedList0);
        periodFormatterBuilder1.append((PeriodPrinter) periodFormatterBuilder_Composite0, (PeriodParser) periodFormatterBuilder_Composite0);
    }

    @Test(timeout = 4000)
    public void test08891() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendLiteral((String) null);
    }

    @Test(timeout = 4000)
    public void test08992() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendLiteral("mJ^bQ? uQ");
    }

    @Test(timeout = 4000)
    public void test09093() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.append((PeriodFormatter) null);
    }

    @Test(timeout = 4000)
    public void test09194() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.clear();
    }

    @Test(timeout = 4000)
    public void test09295() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = new PeriodFormatterBuilder.Literal("~z<$p");
        periodFormatterBuilder0.append((PeriodPrinter) null, (PeriodParser) periodFormatterBuilder_Literal0);
        PeriodPrinter periodPrinter0 = periodFormatterBuilder0.toPrinter();
    }

    @Test(timeout = 4000)
    public void test09396() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("org.joda.time.format.PeriodFormatterBuilder");
        StringBuffer stringBuffer0 = new StringBuffer(43);
        periodFormatterBuilder_SimpleAffix0.printTo(stringBuffer0, (-2291));
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test09497() throws Throwable {
        String[] stringArray0 = new String[3];
        stringArray0[0] = "";
        stringArray0[1] = "s3+V''gb6";
        stringArray0[2] = "m";
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("m", "PKz", stringArray0, periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0, false, true);
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator1 = periodFormatterBuilder_Separator0.finish(periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0);
        StringBuffer stringBuffer0 = new StringBuffer("Cannot convert period to duration as ");
        Seconds seconds0 = Seconds.seconds((-18));
        Locale locale0 = Locale.TAIWAN;
        periodFormatterBuilder_Separator1.printTo(stringBuffer0, (ReadablePeriod) seconds0, locale0);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test09598() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter((-26), 0, 0, true, 0, (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        Hours hours0 = Hours.SIX;
        Locale locale0 = Locale.JAPAN;
        String[] stringArray0 = new String[8];
        stringArray0[0] = "iaX\"{";
        stringArray0[1] = "iaX\"{";
        stringArray0[2] = "iaX\"{";
        stringArray0[3] = "";
        stringArray0[4] = "";
        stringArray0[5] = "";
        stringArray0[6] = "Literal must not be null";
        stringArray0[7] = "iaX\"{";
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = new PeriodFormatterBuilder.Literal("iaX\"{");
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("iaX\"{", "", stringArray0, periodFormatterBuilder_FieldFormatter0, periodFormatterBuilder_Literal0, true, true);
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator1 = periodFormatterBuilder_Separator0.finish(periodFormatterBuilder_Literal0, periodFormatterBuilder_FieldFormatter0);
        int int0 = periodFormatterBuilder_Separator1.calculatePrintedLength(hours0, locale0);
    }

    @Test(timeout = 4000)
    public void test09699() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendMillis3Digit();
    }

    @Test(timeout = 4000)
    public void test097100() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithOptionalMillis();
    }

    @Test(timeout = 4000)
    public void test098101() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSeparator((String) null);
    }

    @Test(timeout = 4000)
    public void test099102() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.minimumPrintedDigits(702);
    }

    @Test(timeout = 4000)
    public void test100103() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendWeeks();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder0.appendSuffix("o],", "o],");
    }

    @Test(timeout = 4000)
    public void test101104() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendMonths();
        String[] stringArray0 = new String[2];
        stringArray0[0] = "";
        stringArray0[1] = "";
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeparator("", "", stringArray0);
        periodFormatterBuilder1.appendSeparator("l\u0002&}j>4?g+\"<,", "org.joda.time.base.AbstractPartial", stringArray0);
    }

    @Test(timeout = 4000)
    public void test102105() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSeparatorIfFieldsBefore((String) null);
    }

    @Test(timeout = 4000)
    public void test103106() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendDays();
        PeriodFormatterBuilder.Composite periodFormatterBuilder_Composite0 = (PeriodFormatterBuilder.Composite) periodFormatterBuilder0.toParser();
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("", "cf", (String[]) null, periodFormatterBuilder_Composite0, periodFormatterBuilder_Composite0, false, false);
        periodFormatterBuilder_Separator0.calculatePrintedLength((ReadablePeriod) null, (Locale) null);
    }

    @Test(timeout = 4000)
    public void test104107() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendMinutes();
    }

    @Test(timeout = 4000)
    public void test105108() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroNever();
    }

    @Test(timeout = 4000)
    public void test106109() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.maximumParsedDigits(0);
    }

    @Test(timeout = 4000)
    public void test107110() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodPrinter periodPrinter0 = periodFormatterBuilder0.toPrinter();
    }

    @Test(timeout = 4000)
    public void test108111() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroRarelyFirst();
    }

    @Test(timeout = 4000)
    public void test109112() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendYears();
    }

    @Test(timeout = 4000)
    public void test110113() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroIfSupported();
    }

    @Test(timeout = 4000)
    public void test111114() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeconds();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSeparatorIfFieldsBefore("c!58'_:^z+=");
        periodFormatterBuilder2.appendSuffix(" ;u");
    }

    @Test(timeout = 4000)
    public void test112115() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.rejectSignedValues(true);
    }

    @Test(timeout = 4000)
    public void test113116() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroAlways();
    }

    @Test(timeout = 4000)
    public void test114117() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroRarelyLast();
    }

    @Test(timeout = 4000)
    public void test115118() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendHours();
        periodFormatterBuilder1.appendSeparator("840PJ5:}KX7'Wr,EPHC", "840PJ5:}KX7'Wr,EPHC");
        periodFormatterBuilder1.appendSeparatorIfFieldsAfter("Qm+Z)Id=A6qLRQ^");
    }

    @Test(timeout = 4000)
    public void test116119() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("Literal must not be null", "Literal must not be null");
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix0 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_PluralAffix0);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
        periodFormatterBuilder_CompositeAffix0.printTo((Writer) mockPrintWriter0, (-478));
    }

    @Test(timeout = 4000)
    public void test117120() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("~z<$p");
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix0 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        int int0 = periodFormatterBuilder_CompositeAffix0.calculatePrintedLength(0);
    }
}
