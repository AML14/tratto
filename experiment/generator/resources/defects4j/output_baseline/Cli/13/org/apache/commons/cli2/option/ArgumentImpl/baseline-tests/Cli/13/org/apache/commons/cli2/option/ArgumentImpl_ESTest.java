/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 14 23:05:07 GMT 2023
 */
package org.apache.commons.cli2.option;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.NumberFormat;
import java.time.ZoneId;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.cli2.DisplaySetting;
import org.apache.commons.cli2.Option;
import org.apache.commons.cli2.WriteableCommandLine;
import org.apache.commons.cli2.commandline.WriteableCommandLineImpl;
import org.apache.commons.cli2.option.ArgumentImpl;
import org.apache.commons.cli2.option.GroupImpl;
import org.apache.commons.cli2.option.SourceDestArgument;
import org.apache.commons.cli2.option.Switch;
import org.apache.commons.cli2.validation.DateValidator;
import org.apache.commons.cli2.validation.FileValidator;
import org.apache.commons.cli2.validation.NumberValidator;
import org.apache.commons.cli2.validation.UrlValidator;
import org.apache.commons.cli2.validation.Validator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class ArgumentImpl_ESTest extends ArgumentImpl_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("orj.apache.commons.cli2.va,idation.FileValidator", "orj.apache.commons.cli2.va,idation.FileValidator", 2, 2, '3', '3', (Validator) null, "orj.apache.commons.cli2.va,idation.FileValidator", linkedList0, 2);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);
        argumentImpl0.defaults(writeableCommandLineImpl0);
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("orj.apache.commons.cli2.va,idation.FileValidator", "orj.apache.commons.cli2.va,idation.FileValidator", 2, 2, '3', '3', (Validator) null, "orj.apache.commons.cli2.va,idation.FileValidator", linkedList0, 2);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);
        argumentImpl0.defaults(writeableCommandLineImpl0);
        argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test002() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("orj.apache.commons.cli2.va,idation.FileValidator", "orj.apache.commons.cli2.va,idation.FileValidator", 2, 2, '3', '3', (Validator) null, "orj.apache.commons.cli2.va,idation.FileValidator", linkedList0, 2);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);
        argumentImpl0.defaults(writeableCommandLineImpl0);
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test003() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("orj.apache.commons.cli2.va,idation.FileValidator", "orj.apache.commons.cli2.va,idation.FileValidator", 2, 2, '3', '3', (Validator) null, "orj.apache.commons.cli2.va,idation.FileValidator", linkedList0, 2);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);
        argumentImpl0.defaults(writeableCommandLineImpl0);
        argumentImpl0.getMinimum();
    }

    @Test(timeout = 4000)
    public void test004() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("orj.apache.commons.cli2.va,idation.FileValidator", "orj.apache.commons.cli2.va,idation.FileValidator", 2, 2, '3', '3', (Validator) null, "orj.apache.commons.cli2.va,idation.FileValidator", linkedList0, 2);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);
        argumentImpl0.defaults(writeableCommandLineImpl0);
        argumentImpl0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test005() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("orj.apache.commons.cli2.va,idation.FileValidator", "orj.apache.commons.cli2.va,idation.FileValidator", 2, 2, '3', '3', (Validator) null, "orj.apache.commons.cli2.va,idation.FileValidator", linkedList0, 2);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);
        argumentImpl0.defaults(writeableCommandLineImpl0);
        argumentImpl0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test006() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("orj.apache.commons.cli2.va,idation.FileValidator", "orj.apache.commons.cli2.va,idation.FileValidator", 2, 2, '3', '3', (Validator) null, "orj.apache.commons.cli2.va,idation.FileValidator", linkedList0, 2);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);
        argumentImpl0.defaults(writeableCommandLineImpl0);
        argumentImpl0.getMaximum();
    }

    @Test(timeout = 4000)
    public void test017() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "", 0, 0, 'A', ';', dateValidator0, "", (List) null, (-3157));
        char char0 = argumentImpl0.getInitialSeparator();
        argumentImpl0.getMaximum();
    }

    @Test(timeout = 4000)
    public void test018() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "", 0, 0, 'A', ';', dateValidator0, "", (List) null, (-3157));
        char char0 = argumentImpl0.getInitialSeparator();
        argumentImpl0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test019() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "", 0, 0, 'A', ';', dateValidator0, "", (List) null, (-3157));
        char char0 = argumentImpl0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test0110() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "", 0, 0, 'A', ';', dateValidator0, "", (List) null, (-3157));
        char char0 = argumentImpl0.getInitialSeparator();
        argumentImpl0.getMinimum();
    }

    @Test(timeout = 4000)
    public void test0111() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "", 0, 0, 'A', ';', dateValidator0, "", (List) null, (-3157));
        char char0 = argumentImpl0.getInitialSeparator();
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0112() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "", 0, 0, 'A', ';', dateValidator0, "", (List) null, (-3157));
        char char0 = argumentImpl0.getInitialSeparator();
        argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test0113() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "", 0, 0, 'A', ';', dateValidator0, "", (List) null, (-3157));
        char char0 = argumentImpl0.getInitialSeparator();
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test0214() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("+", "org.apache.commons.cli2.validation.UrlValidator", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, "org.apache.commons.cli2.validation.UrlValidator", (List) null, Integer.MAX_VALUE);
        argumentImpl0.getMinimum();
    }

    @Test(timeout = 4000)
    public void test0215() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("+", "org.apache.commons.cli2.validation.UrlValidator", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, "org.apache.commons.cli2.validation.UrlValidator", (List) null, Integer.MAX_VALUE);
        argumentImpl0.getMaximum();
    }

    @Test(timeout = 4000)
    public void test0216() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("+", "org.apache.commons.cli2.validation.UrlValidator", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, "org.apache.commons.cli2.validation.UrlValidator", (List) null, Integer.MAX_VALUE);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);
        boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, "@'r--d,B;");
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test0217() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("+", "org.apache.commons.cli2.validation.UrlValidator", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, "org.apache.commons.cli2.validation.UrlValidator", (List) null, Integer.MAX_VALUE);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);
        boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, "@'r--d,B;");
        argumentImpl0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test0218() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("+", "org.apache.commons.cli2.validation.UrlValidator", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, "org.apache.commons.cli2.validation.UrlValidator", (List) null, Integer.MAX_VALUE);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);
        boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, "@'r--d,B;");
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0219() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("+", "org.apache.commons.cli2.validation.UrlValidator", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, "org.apache.commons.cli2.validation.UrlValidator", (List) null, Integer.MAX_VALUE);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);
        boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, "@'r--d,B;");
        argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test0220() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("+", "org.apache.commons.cli2.validation.UrlValidator", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, "org.apache.commons.cli2.validation.UrlValidator", (List) null, Integer.MAX_VALUE);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);
        boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, "@'r--d,B;");
    }

    @Test(timeout = 4000)
    public void test0221() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("+", "org.apache.commons.cli2.validation.UrlValidator", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, "org.apache.commons.cli2.validation.UrlValidator", (List) null, Integer.MAX_VALUE);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);
        boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, "@'r--d,B;");
        sourceDestArgument0.getMinimum();
    }

    @Test(timeout = 4000)
    public void test0222() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("+", "org.apache.commons.cli2.validation.UrlValidator", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, "org.apache.commons.cli2.validation.UrlValidator", (List) null, Integer.MAX_VALUE);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);
        boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, "@'r--d,B;");
        sourceDestArgument0.getMaximum();
    }

    @Test(timeout = 4000)
    public void test0223() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("+", "org.apache.commons.cli2.validation.UrlValidator", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, "org.apache.commons.cli2.validation.UrlValidator", (List) null, Integer.MAX_VALUE);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);
        boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, "@'r--d,B;");
        sourceDestArgument0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test0224() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("+", "org.apache.commons.cli2.validation.UrlValidator", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, "org.apache.commons.cli2.validation.UrlValidator", (List) null, Integer.MAX_VALUE);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);
        boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, "@'r--d,B;");
        argumentImpl0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test0325() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "Command.preferredName.too.short", 247, 247, 'Y', '6', dateValidator0, "", (List) null, 91);
        argumentImpl0.getMinimum();
    }

    @Test(timeout = 4000)
    public void test0326() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "Command.preferredName.too.short", 247, 247, 'Y', '6', dateValidator0, "", (List) null, 91);
        argumentImpl0.getMaximum();
    }

    @Test(timeout = 4000)
    public void test0327() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "Command.preferredName.too.short", 247, 247, 'Y', '6', dateValidator0, "", (List) null, 91);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'Y', '\u0000', "-", (List) null);
        char char0 = sourceDestArgument0.getSubsequentSeparator();
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0328() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "Command.preferredName.too.short", 247, 247, 'Y', '6', dateValidator0, "", (List) null, 91);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'Y', '\u0000', "-", (List) null);
        char char0 = sourceDestArgument0.getSubsequentSeparator();
        sourceDestArgument0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test0329() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "Command.preferredName.too.short", 247, 247, 'Y', '6', dateValidator0, "", (List) null, 91);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'Y', '\u0000', "-", (List) null);
        char char0 = sourceDestArgument0.getSubsequentSeparator();
        sourceDestArgument0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test0330() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "Command.preferredName.too.short", 247, 247, 'Y', '6', dateValidator0, "", (List) null, 91);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'Y', '\u0000', "-", (List) null);
        char char0 = sourceDestArgument0.getSubsequentSeparator();
        argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test0331() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "Command.preferredName.too.short", 247, 247, 'Y', '6', dateValidator0, "", (List) null, 91);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'Y', '\u0000', "-", (List) null);
        char char0 = sourceDestArgument0.getSubsequentSeparator();
        sourceDestArgument0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test0332() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "Command.preferredName.too.short", 247, 247, 'Y', '6', dateValidator0, "", (List) null, 91);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'Y', '\u0000', "-", (List) null);
        char char0 = sourceDestArgument0.getSubsequentSeparator();
        argumentImpl0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test0333() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "Command.preferredName.too.short", 247, 247, 'Y', '6', dateValidator0, "", (List) null, 91);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'Y', '\u0000', "-", (List) null);
        char char0 = sourceDestArgument0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test0434() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<DisplaySetting> linkedList0 = new LinkedList<DisplaySetting>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("-", "-", (-1145), (-1145), 'Z', 'Q', numberValidator0, "-", linkedList0, 'Z');
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        sourceDestArgument0.helpLines((-1145), linkedHashSet0, (Comparator) null);
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test0435() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<DisplaySetting> linkedList0 = new LinkedList<DisplaySetting>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("-", "-", (-1145), (-1145), 'Z', 'Q', numberValidator0, "-", linkedList0, 'Z');
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        sourceDestArgument0.helpLines((-1145), linkedHashSet0, (Comparator) null);
        argumentImpl0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test0436() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<DisplaySetting> linkedList0 = new LinkedList<DisplaySetting>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("-", "-", (-1145), (-1145), 'Z', 'Q', numberValidator0, "-", linkedList0, 'Z');
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        sourceDestArgument0.helpLines((-1145), linkedHashSet0, (Comparator) null);
        sourceDestArgument0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test0437() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<DisplaySetting> linkedList0 = new LinkedList<DisplaySetting>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("-", "-", (-1145), (-1145), 'Z', 'Q', numberValidator0, "-", linkedList0, 'Z');
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        sourceDestArgument0.helpLines((-1145), linkedHashSet0, (Comparator) null);
        argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test0438() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<DisplaySetting> linkedList0 = new LinkedList<DisplaySetting>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("-", "-", (-1145), (-1145), 'Z', 'Q', numberValidator0, "-", linkedList0, 'Z');
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        sourceDestArgument0.helpLines((-1145), linkedHashSet0, (Comparator) null);
        sourceDestArgument0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test0439() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<DisplaySetting> linkedList0 = new LinkedList<DisplaySetting>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("-", "-", (-1145), (-1145), 'Z', 'Q', numberValidator0, "-", linkedList0, 'Z');
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        sourceDestArgument0.helpLines((-1145), linkedHashSet0, (Comparator) null);
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0540() throws Throwable {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("VO;h9!Ubi*B", "DISPLAY_GROUP_EXPANDED", (-1442), (-1442), 'N', '(', (Validator) null, "UB", linkedList0, (-1442));
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);
        argumentImpl0.validate((WriteableCommandLine) writeableCommandLineImpl0);
    }

    @Test(timeout = 4000)
    public void test0641() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "Command.preferredName.too.short", 247, 247, 'Y', '6', dateValidator0, "", (List) null, 91);
        String string0 = argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test0642() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "Command.preferredName.too.short", 247, 247, 'Y', '6', dateValidator0, "", (List) null, 91);
        String string0 = argumentImpl0.getConsumeRemaining();
        argumentImpl0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test0643() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "Command.preferredName.too.short", 247, 247, 'Y', '6', dateValidator0, "", (List) null, 91);
        String string0 = argumentImpl0.getConsumeRemaining();
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0644() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "Command.preferredName.too.short", 247, 247, 'Y', '6', dateValidator0, "", (List) null, 91);
        String string0 = argumentImpl0.getConsumeRemaining();
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test0645() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateTimeInstance();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "Command.preferredName.too.short", 247, 247, 'Y', '6', dateValidator0, "", (List) null, 91);
        String string0 = argumentImpl0.getConsumeRemaining();
        argumentImpl0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test0746() throws Throwable {
        UrlValidator urlValidator0 = new UrlValidator();
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Set<String> set0 = locale0.getUnicodeLocaleKeys();
        Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("NumberValidator.number.OutOfRange", "qM3", 679, 679, 'T', 'U', urlValidator0, "`a`KsY!8?_uN:{94>", list0, 679);
        argumentImpl0.getValidator();
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0747() throws Throwable {
        UrlValidator urlValidator0 = new UrlValidator();
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Set<String> set0 = locale0.getUnicodeLocaleKeys();
        Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("NumberValidator.number.OutOfRange", "qM3", 679, 679, 'T', 'U', urlValidator0, "`a`KsY!8?_uN:{94>", list0, 679);
        argumentImpl0.getValidator();
        argumentImpl0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test0748() throws Throwable {
        UrlValidator urlValidator0 = new UrlValidator();
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Set<String> set0 = locale0.getUnicodeLocaleKeys();
        Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("NumberValidator.number.OutOfRange", "qM3", 679, 679, 'T', 'U', urlValidator0, "`a`KsY!8?_uN:{94>", list0, 679);
        argumentImpl0.getValidator();
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test0749() throws Throwable {
        UrlValidator urlValidator0 = new UrlValidator();
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Set<String> set0 = locale0.getUnicodeLocaleKeys();
        Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("NumberValidator.number.OutOfRange", "qM3", 679, 679, 'T', 'U', urlValidator0, "`a`KsY!8?_uN:{94>", list0, 679);
        argumentImpl0.getValidator();
        argumentImpl0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test0750() throws Throwable {
        UrlValidator urlValidator0 = new UrlValidator();
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Set<String> set0 = locale0.getUnicodeLocaleKeys();
        Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("NumberValidator.number.OutOfRange", "qM3", 679, 679, 'T', 'U', urlValidator0, "`a`KsY!8?_uN:{94>", list0, 679);
        argumentImpl0.getValidator();
        argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test0851() throws Throwable {
        NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
        NumberValidator numberValidator0 = new NumberValidator(numberFormat0);
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ArgumentImpl argumentImpl0 = null;
        argumentImpl0 = new ArgumentImpl("\"d^(k#", "\"d^(k#", 0, (-2219), 'Z', 'Z', numberValidator0, "Vh=", linkedList0, 0);
    }

    @Test(timeout = 4000)
    public void test0952() throws Throwable {
        DateValidator dateValidator0 = DateValidator.getDateInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("arg", "arg", (-2449), (-1), 's', 'e', dateValidator0, "DateValidator.date.OutOfRange", linkedList0, (-2449));
        Object object0 = new Object();
        linkedList0.addFirst(object0);
        SourceDestArgument sourceDestArgument0 = null;
        sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'e', 's', "--", linkedList0);
    }

    @Test(timeout = 4000)
    public void test1053() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        linkedList0.add((Object) "f{LO[+G`'|");
        ArgumentImpl argumentImpl0 = null;
        argumentImpl0 = new ArgumentImpl((String) null, (String) null, 1405, 1405, '%', '>', fileValidator0, (String) null, linkedList0, 1405);
    }

    @Test(timeout = 4000)
    public void test1154() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingFileInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        Object object0 = new Object();
        linkedList0.add(object0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("--", "}O", (-2148), 761, '_', '\u0000', fileValidator0, "Switch.no.disabledPrefix", linkedList0, 0);
        argumentImpl0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test1155() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingFileInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        Object object0 = new Object();
        linkedList0.add(object0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("--", "}O", (-2148), 761, '_', '\u0000', fileValidator0, "Switch.no.disabledPrefix", linkedList0, 0);
        argumentImpl0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test1156() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingFileInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        Object object0 = new Object();
        linkedList0.add(object0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("--", "}O", (-2148), 761, '_', '\u0000', fileValidator0, "Switch.no.disabledPrefix", linkedList0, 0);
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test1157() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingFileInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        Object object0 = new Object();
        linkedList0.add(object0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("--", "}O", (-2148), 761, '_', '\u0000', fileValidator0, "Switch.no.disabledPrefix", linkedList0, 0);
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test1158() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingFileInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        Object object0 = new Object();
        linkedList0.add(object0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("--", "}O", (-2148), 761, '_', '\u0000', fileValidator0, "Switch.no.disabledPrefix", linkedList0, 0);
        argumentImpl0.getMaximum();
    }

    @Test(timeout = 4000)
    public void test1159() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingFileInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        Object object0 = new Object();
        linkedList0.add(object0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("--", "}O", (-2148), 761, '_', '\u0000', fileValidator0, "Switch.no.disabledPrefix", linkedList0, 0);
        argumentImpl0.isRequired();
    }

    @Test(timeout = 4000)
    public void test1160() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingFileInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        Object object0 = new Object();
        linkedList0.add(object0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("--", "}O", (-2148), 761, '_', '\u0000', fileValidator0, "Switch.no.disabledPrefix", linkedList0, 0);
        argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test1261() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "G", 2, 2, 'Y', '^', (Validator) null, "orj.apache.commons.cli2.va,idation.FileValidator", linkedList0, 2);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);
        LinkedList<String> linkedList1 = new LinkedList<String>();
        linkedList1.add("orj.apache.commons.cli2.va,idation.FileValidator");
        linkedList1.add("DL+5~ M!IKE`?o");
        ListIterator<String> listIterator0 = linkedList1.listIterator();
        argumentImpl0.process(writeableCommandLineImpl0, listIterator0);
        listIterator0.hasNext();
    }

    @Test(timeout = 4000)
    public void test1262() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "G", 2, 2, 'Y', '^', (Validator) null, "orj.apache.commons.cli2.va,idation.FileValidator", linkedList0, 2);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);
        LinkedList<String> linkedList1 = new LinkedList<String>();
        linkedList1.add("orj.apache.commons.cli2.va,idation.FileValidator");
        linkedList1.add("DL+5~ M!IKE`?o");
        ListIterator<String> listIterator0 = linkedList1.listIterator();
        argumentImpl0.process(writeableCommandLineImpl0, listIterator0);
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test1363() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "G", 2, 2, 'Y', '^', (Validator) null, "orj.apache.commons.cli2.va,idation.FileValidator", linkedList0, 2);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);
        LinkedList<String> linkedList1 = new LinkedList<String>();
        linkedList1.add("mb#J+u");
        linkedList1.add("orj.apache.commons.cli2.va,idation.FileValidator");
        linkedList1.add("DL+5~ M!IKE`?o");
        linkedList1.add("'f5mwy]/<yZu");
        ListIterator<String> listIterator0 = linkedList1.listIterator();
        argumentImpl0.process(writeableCommandLineImpl0, listIterator0);
        listIterator0.hasPrevious();
    }

    @Test(timeout = 4000)
    public void test1364() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "G", 2, 2, 'Y', '^', (Validator) null, "orj.apache.commons.cli2.va,idation.FileValidator", linkedList0, 2);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);
        LinkedList<String> linkedList1 = new LinkedList<String>();
        linkedList1.add("mb#J+u");
        linkedList1.add("orj.apache.commons.cli2.va,idation.FileValidator");
        linkedList1.add("DL+5~ M!IKE`?o");
        linkedList1.add("'f5mwy]/<yZu");
        ListIterator<String> listIterator0 = linkedList1.listIterator();
        argumentImpl0.process(writeableCommandLineImpl0, listIterator0);
        linkedList1.contains("mb#J+u");
    }

    @Test(timeout = 4000)
    public void test1465() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "Argument.too.few.defaults", 5974, 5974, '3', '-', (Validator) null, "Argument.too.few.defaults", linkedList0, 0);
        List list0 = argumentImpl0.getDefaultValues();
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, '_', '9', "org.apache.commons.cli2.resource.ResourceHelper", list0);
        GroupImpl groupImpl0 = new GroupImpl(list0, "w'(5:(qN@dI+t#", "--", (-1303), 3);
        Boolean boolean0 = Boolean.FALSE;
        Switch switch0 = new Switch("org.apache.commons.cli2.validation.FileValidator", "Argument.too.few.defaults", "org.apache.commons.cli2.resource.ResourceHelper", set0, "\b", true, sourceDestArgument0, groupImpl0, 0, boolean0);
        LinkedList<Object> linkedList1 = new LinkedList<Object>();
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(switch0, linkedList1);
        LinkedList<String> linkedList2 = new LinkedList<String>();
        linkedList2.add("org.apache.commons.cli2.validation.FileValidator");
        ListIterator<String> listIterator0 = linkedList2.listIterator();
        sourceDestArgument0.process(writeableCommandLineImpl0, listIterator0);
        argumentImpl0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test1466() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "Argument.too.few.defaults", 5974, 5974, '3', '-', (Validator) null, "Argument.too.few.defaults", linkedList0, 0);
        List list0 = argumentImpl0.getDefaultValues();
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, '_', '9', "org.apache.commons.cli2.resource.ResourceHelper", list0);
        GroupImpl groupImpl0 = new GroupImpl(list0, "w'(5:(qN@dI+t#", "--", (-1303), 3);
        Boolean boolean0 = Boolean.FALSE;
        Switch switch0 = new Switch("org.apache.commons.cli2.validation.FileValidator", "Argument.too.few.defaults", "org.apache.commons.cli2.resource.ResourceHelper", set0, "\b", true, sourceDestArgument0, groupImpl0, 0, boolean0);
        LinkedList<Object> linkedList1 = new LinkedList<Object>();
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(switch0, linkedList1);
        LinkedList<String> linkedList2 = new LinkedList<String>();
        linkedList2.add("org.apache.commons.cli2.validation.FileValidator");
        ListIterator<String> listIterator0 = linkedList2.listIterator();
        sourceDestArgument0.process(writeableCommandLineImpl0, listIterator0);
        sourceDestArgument0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test1467() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "Argument.too.few.defaults", 5974, 5974, '3', '-', (Validator) null, "Argument.too.few.defaults", linkedList0, 0);
        List list0 = argumentImpl0.getDefaultValues();
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, '_', '9', "org.apache.commons.cli2.resource.ResourceHelper", list0);
        GroupImpl groupImpl0 = new GroupImpl(list0, "w'(5:(qN@dI+t#", "--", (-1303), 3);
        Boolean boolean0 = Boolean.FALSE;
        Switch switch0 = new Switch("org.apache.commons.cli2.validation.FileValidator", "Argument.too.few.defaults", "org.apache.commons.cli2.resource.ResourceHelper", set0, "\b", true, sourceDestArgument0, groupImpl0, 0, boolean0);
        LinkedList<Object> linkedList1 = new LinkedList<Object>();
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(switch0, linkedList1);
        LinkedList<String> linkedList2 = new LinkedList<String>();
        linkedList2.add("org.apache.commons.cli2.validation.FileValidator");
        ListIterator<String> listIterator0 = linkedList2.listIterator();
        sourceDestArgument0.process(writeableCommandLineImpl0, listIterator0);
        listIterator0.hasPrevious();
    }

    @Test(timeout = 4000)
    public void test1468() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "Argument.too.few.defaults", 5974, 5974, '3', '-', (Validator) null, "Argument.too.few.defaults", linkedList0, 0);
        List list0 = argumentImpl0.getDefaultValues();
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, '_', '9', "org.apache.commons.cli2.resource.ResourceHelper", list0);
        GroupImpl groupImpl0 = new GroupImpl(list0, "w'(5:(qN@dI+t#", "--", (-1303), 3);
        Boolean boolean0 = Boolean.FALSE;
        Switch switch0 = new Switch("org.apache.commons.cli2.validation.FileValidator", "Argument.too.few.defaults", "org.apache.commons.cli2.resource.ResourceHelper", set0, "\b", true, sourceDestArgument0, groupImpl0, 0, boolean0);
        LinkedList<Object> linkedList1 = new LinkedList<Object>();
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(switch0, linkedList1);
        LinkedList<String> linkedList2 = new LinkedList<String>();
        linkedList2.add("org.apache.commons.cli2.validation.FileValidator");
        ListIterator<String> listIterator0 = linkedList2.listIterator();
        sourceDestArgument0.process(writeableCommandLineImpl0, listIterator0);
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test1469() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "Argument.too.few.defaults", 5974, 5974, '3', '-', (Validator) null, "Argument.too.few.defaults", linkedList0, 0);
        List list0 = argumentImpl0.getDefaultValues();
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, '_', '9', "org.apache.commons.cli2.resource.ResourceHelper", list0);
        GroupImpl groupImpl0 = new GroupImpl(list0, "w'(5:(qN@dI+t#", "--", (-1303), 3);
        Boolean boolean0 = Boolean.FALSE;
        Switch switch0 = new Switch("org.apache.commons.cli2.validation.FileValidator", "Argument.too.few.defaults", "org.apache.commons.cli2.resource.ResourceHelper", set0, "\b", true, sourceDestArgument0, groupImpl0, 0, boolean0);
        LinkedList<Object> linkedList1 = new LinkedList<Object>();
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(switch0, linkedList1);
        LinkedList<String> linkedList2 = new LinkedList<String>();
        linkedList2.add("org.apache.commons.cli2.validation.FileValidator");
        ListIterator<String> listIterator0 = linkedList2.listIterator();
        sourceDestArgument0.process(writeableCommandLineImpl0, listIterator0);
        sourceDestArgument0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test1470() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "Argument.too.few.defaults", 5974, 5974, '3', '-', (Validator) null, "Argument.too.few.defaults", linkedList0, 0);
        List list0 = argumentImpl0.getDefaultValues();
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, '_', '9', "org.apache.commons.cli2.resource.ResourceHelper", list0);
        GroupImpl groupImpl0 = new GroupImpl(list0, "w'(5:(qN@dI+t#", "--", (-1303), 3);
        Boolean boolean0 = Boolean.FALSE;
        Switch switch0 = new Switch("org.apache.commons.cli2.validation.FileValidator", "Argument.too.few.defaults", "org.apache.commons.cli2.resource.ResourceHelper", set0, "\b", true, sourceDestArgument0, groupImpl0, 0, boolean0);
        LinkedList<Object> linkedList1 = new LinkedList<Object>();
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(switch0, linkedList1);
        LinkedList<String> linkedList2 = new LinkedList<String>();
        linkedList2.add("org.apache.commons.cli2.validation.FileValidator");
        ListIterator<String> listIterator0 = linkedList2.listIterator();
        sourceDestArgument0.process(writeableCommandLineImpl0, listIterator0);
        sourceDestArgument0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test1471() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "Argument.too.few.defaults", 5974, 5974, '3', '-', (Validator) null, "Argument.too.few.defaults", linkedList0, 0);
        List list0 = argumentImpl0.getDefaultValues();
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, '_', '9', "org.apache.commons.cli2.resource.ResourceHelper", list0);
        GroupImpl groupImpl0 = new GroupImpl(list0, "w'(5:(qN@dI+t#", "--", (-1303), 3);
        Boolean boolean0 = Boolean.FALSE;
        Switch switch0 = new Switch("org.apache.commons.cli2.validation.FileValidator", "Argument.too.few.defaults", "org.apache.commons.cli2.resource.ResourceHelper", set0, "\b", true, sourceDestArgument0, groupImpl0, 0, boolean0);
        LinkedList<Object> linkedList1 = new LinkedList<Object>();
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(switch0, linkedList1);
        LinkedList<String> linkedList2 = new LinkedList<String>();
        linkedList2.add("org.apache.commons.cli2.validation.FileValidator");
        ListIterator<String> listIterator0 = linkedList2.listIterator();
        sourceDestArgument0.process(writeableCommandLineImpl0, listIterator0);
        sourceDestArgument0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test1572() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "org.apache.commons.cli2.validation.FileValidator", '0', '0', '0', '3', (Validator) null, "org.apache.commons.cli2.validation.FileValidator", linkedList0, '0');
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);
        LinkedList<String> linkedList1 = new LinkedList<String>();
        linkedList1.add("org.apache.commons.cli2.validation.FileValidator");
        ListIterator<String> listIterator0 = linkedList1.listIterator();
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        sourceDestArgument0.processValues(writeableCommandLineImpl0, listIterator0, argumentImpl0);
        listIterator0.hasNext();
    }

    @Test(timeout = 4000)
    public void test1573() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "org.apache.commons.cli2.validation.FileValidator", '0', '0', '0', '3', (Validator) null, "org.apache.commons.cli2.validation.FileValidator", linkedList0, '0');
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);
        LinkedList<String> linkedList1 = new LinkedList<String>();
        linkedList1.add("org.apache.commons.cli2.validation.FileValidator");
        ListIterator<String> listIterator0 = linkedList1.listIterator();
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        sourceDestArgument0.processValues(writeableCommandLineImpl0, listIterator0, argumentImpl0);
        listIterator0.hasPrevious();
    }

    @Test(timeout = 4000)
    public void test1674() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "orj.apache.commons.cli2.va,idation.FileValidator", 2, 2, '3', '3', (Validator) null, "orj.apache.commons.cli2.va,idation.FileValidator", linkedList0, 2);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);
        LinkedList<String> linkedList1 = new LinkedList<String>();
        linkedList1.add("--");
        linkedList1.add("1C4WEiu]J3zT");
        ListIterator<String> listIterator0 = linkedList1.listIterator();
        argumentImpl0.process(writeableCommandLineImpl0, listIterator0);
    }

    @Test(timeout = 4000)
    public void test1775() throws Throwable {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("", "]J}30hW3fB5Mo2>}jzY", 1038, 1038, 'w', 'w', (Validator) null, "]J}30hW3fB5Mo2>}jzY", linkedList0, 1038);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, '8', '\u0000', "", linkedList0);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList0);
        argumentImpl0.validate((WriteableCommandLine) writeableCommandLineImpl0, (Option) sourceDestArgument0);
    }

    @Test(timeout = 4000)
    public void test1876() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("%&C<hpXS-e/ExQLDe0=", "%&C<hpXS-e/ExQLDe0=", 0, 0, 'E', 'E', (Validator) null, "%&C<hpXS-e/ExQLDe0=", list0, 93);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, list0);
        argumentImpl0.validate((WriteableCommandLine) writeableCommandLineImpl0);
        argumentImpl0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test1877() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("%&C<hpXS-e/ExQLDe0=", "%&C<hpXS-e/ExQLDe0=", 0, 0, 'E', 'E', (Validator) null, "%&C<hpXS-e/ExQLDe0=", list0, 93);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, list0);
        argumentImpl0.validate((WriteableCommandLine) writeableCommandLineImpl0);
        argumentImpl0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test1878() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("%&C<hpXS-e/ExQLDe0=", "%&C<hpXS-e/ExQLDe0=", 0, 0, 'E', 'E', (Validator) null, "%&C<hpXS-e/ExQLDe0=", list0, 93);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, list0);
        argumentImpl0.validate((WriteableCommandLine) writeableCommandLineImpl0);
        argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test1879() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("%&C<hpXS-e/ExQLDe0=", "%&C<hpXS-e/ExQLDe0=", 0, 0, 'E', 'E', (Validator) null, "%&C<hpXS-e/ExQLDe0=", list0, 93);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, list0);
        argumentImpl0.validate((WriteableCommandLine) writeableCommandLineImpl0);
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test1880() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("%&C<hpXS-e/ExQLDe0=", "%&C<hpXS-e/ExQLDe0=", 0, 0, 'E', 'E', (Validator) null, "%&C<hpXS-e/ExQLDe0=", list0, 93);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, list0);
        argumentImpl0.validate((WriteableCommandLine) writeableCommandLineImpl0);
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test1981() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("F+UGzQGr]f3", "F+UGzQGr]f3", 0, 0, 'j', 'i', fileValidator0, "F+UGzQGr]f3", linkedList0, 0);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList0);
        sourceDestArgument0.validate((WriteableCommandLine) writeableCommandLineImpl0);
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test1982() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("F+UGzQGr]f3", "F+UGzQGr]f3", 0, 0, 'j', 'i', fileValidator0, "F+UGzQGr]f3", linkedList0, 0);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList0);
        sourceDestArgument0.validate((WriteableCommandLine) writeableCommandLineImpl0);
        argumentImpl0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test1983() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("F+UGzQGr]f3", "F+UGzQGr]f3", 0, 0, 'j', 'i', fileValidator0, "F+UGzQGr]f3", linkedList0, 0);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList0);
        sourceDestArgument0.validate((WriteableCommandLine) writeableCommandLineImpl0);
        sourceDestArgument0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test1984() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("F+UGzQGr]f3", "F+UGzQGr]f3", 0, 0, 'j', 'i', fileValidator0, "F+UGzQGr]f3", linkedList0, 0);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList0);
        sourceDestArgument0.validate((WriteableCommandLine) writeableCommandLineImpl0);
        sourceDestArgument0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test1985() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("F+UGzQGr]f3", "F+UGzQGr]f3", 0, 0, 'j', 'i', fileValidator0, "F+UGzQGr]f3", linkedList0, 0);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList0);
        sourceDestArgument0.validate((WriteableCommandLine) writeableCommandLineImpl0);
        argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test1986() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("F+UGzQGr]f3", "F+UGzQGr]f3", 0, 0, 'j', 'i', fileValidator0, "F+UGzQGr]f3", linkedList0, 0);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList0);
        sourceDestArgument0.validate((WriteableCommandLine) writeableCommandLineImpl0);
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test2087() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("\"a!U<\"#|o*(7LY", "", Integer.MAX_VALUE, Integer.MAX_VALUE, '9', '-', (Validator) null, "", list0, 41);
        String string0 = argumentImpl0.toString();
    }

    @Test(timeout = 4000)
    public void test2088() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("\"a!U<\"#|o*(7LY", "", Integer.MAX_VALUE, Integer.MAX_VALUE, '9', '-', (Validator) null, "", list0, 41);
        String string0 = argumentImpl0.toString();
        argumentImpl0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test2089() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("\"a!U<\"#|o*(7LY", "", Integer.MAX_VALUE, Integer.MAX_VALUE, '9', '-', (Validator) null, "", list0, 41);
        String string0 = argumentImpl0.toString();
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test2090() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("\"a!U<\"#|o*(7LY", "", Integer.MAX_VALUE, Integer.MAX_VALUE, '9', '-', (Validator) null, "", list0, 41);
        String string0 = argumentImpl0.toString();
        argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test2091() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        Set<String> set0 = ZoneId.getAvailableZoneIds();
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
        ArgumentImpl argumentImpl0 = new ArgumentImpl("\"a!U<\"#|o*(7LY", "", Integer.MAX_VALUE, Integer.MAX_VALUE, '9', '-', (Validator) null, "", list0, 41);
        String string0 = argumentImpl0.toString();
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test2192() throws Throwable {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("VO;h9!Ubi*B", "DISPLAY_GROUP_EXPANDED", (-1442), (-1442), 'N', '(', (Validator) null, "UB", linkedList0, (-1442));
        String string0 = argumentImpl0.toString();
        argumentImpl0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test2193() throws Throwable {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("VO;h9!Ubi*B", "DISPLAY_GROUP_EXPANDED", (-1442), (-1442), 'N', '(', (Validator) null, "UB", linkedList0, (-1442));
        String string0 = argumentImpl0.toString();
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test2194() throws Throwable {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("VO;h9!Ubi*B", "DISPLAY_GROUP_EXPANDED", (-1442), (-1442), 'N', '(', (Validator) null, "UB", linkedList0, (-1442));
        String string0 = argumentImpl0.toString();
    }

    @Test(timeout = 4000)
    public void test2195() throws Throwable {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("VO;h9!Ubi*B", "DISPLAY_GROUP_EXPANDED", (-1442), (-1442), 'N', '(', (Validator) null, "UB", linkedList0, (-1442));
        String string0 = argumentImpl0.toString();
        argumentImpl0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test2196() throws Throwable {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("VO;h9!Ubi*B", "DISPLAY_GROUP_EXPANDED", (-1442), (-1442), 'N', '(', (Validator) null, "UB", linkedList0, (-1442));
        String string0 = argumentImpl0.toString();
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test2197() throws Throwable {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("VO;h9!Ubi*B", "DISPLAY_GROUP_EXPANDED", (-1442), (-1442), 'N', '(', (Validator) null, "UB", linkedList0, (-1442));
        String string0 = argumentImpl0.toString();
        argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test2298() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "org.apache.commons.cli2.validation.FileValidator", '3', 5974, '3', '9', (Validator) null, "org.apache.commons.cli2.validation.FileValidator", linkedList0, '3');
        argumentImpl0.toString();
        argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test2299() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "org.apache.commons.cli2.validation.FileValidator", '3', 5974, '3', '9', (Validator) null, "org.apache.commons.cli2.validation.FileValidator", linkedList0, '3');
        argumentImpl0.toString();
        argumentImpl0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test22100() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "org.apache.commons.cli2.validation.FileValidator", '3', 5974, '3', '9', (Validator) null, "org.apache.commons.cli2.validation.FileValidator", linkedList0, '3');
        argumentImpl0.toString();
        argumentImpl0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test22101() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "org.apache.commons.cli2.validation.FileValidator", '3', 5974, '3', '9', (Validator) null, "org.apache.commons.cli2.validation.FileValidator", linkedList0, '3');
        argumentImpl0.toString();
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test23102() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingInstance();
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("F+UGzGr]f3", "F+UGzGr]f3", 0, 85, 'i', 'i', fileValidator0, "DISPLAY_PROPERTY_OPTION", linkedList0, (-1543));
        StringBuffer stringBuffer0 = new StringBuffer(0);
        LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
        argumentImpl0.appendUsage(stringBuffer0, linkedHashSet0, (Comparator) null);
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test23103() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingInstance();
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("F+UGzGr]f3", "F+UGzGr]f3", 0, 85, 'i', 'i', fileValidator0, "DISPLAY_PROPERTY_OPTION", linkedList0, (-1543));
        StringBuffer stringBuffer0 = new StringBuffer(0);
        LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
        argumentImpl0.appendUsage(stringBuffer0, linkedHashSet0, (Comparator) null);
        argumentImpl0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test24104() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "org.apache.commons.cli2.validation.FileValidator", 5941, 5941, '9', '#', (Validator) null, "$GMuQluqoa[9", linkedList0, 5941);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        String string0 = sourceDestArgument0.stripBoundaryQuotes("\"a\"");
        argumentImpl0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test24105() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "org.apache.commons.cli2.validation.FileValidator", 5941, 5941, '9', '#', (Validator) null, "$GMuQluqoa[9", linkedList0, 5941);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        String string0 = sourceDestArgument0.stripBoundaryQuotes("\"a\"");
        argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test24106() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "org.apache.commons.cli2.validation.FileValidator", 5941, 5941, '9', '#', (Validator) null, "$GMuQluqoa[9", linkedList0, 5941);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        String string0 = sourceDestArgument0.stripBoundaryQuotes("\"a\"");
    }

    @Test(timeout = 4000)
    public void test24107() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "org.apache.commons.cli2.validation.FileValidator", 5941, 5941, '9', '#', (Validator) null, "$GMuQluqoa[9", linkedList0, 5941);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        String string0 = sourceDestArgument0.stripBoundaryQuotes("\"a\"");
        sourceDestArgument0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test24108() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "org.apache.commons.cli2.validation.FileValidator", 5941, 5941, '9', '#', (Validator) null, "$GMuQluqoa[9", linkedList0, 5941);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        String string0 = sourceDestArgument0.stripBoundaryQuotes("\"a\"");
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test24109() throws Throwable {
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("org.apache.commons.cli2.validation.FileValidator", "org.apache.commons.cli2.validation.FileValidator", 5941, 5941, '9', '#', (Validator) null, "$GMuQluqoa[9", linkedList0, 5941);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        String string0 = sourceDestArgument0.stripBoundaryQuotes("\"a\"");
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test25110() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("F+UGzGr]f3", "F+UGzGr]f3", 0, 0, 'j', 'i', fileValidator0, "F+UGzGr]f3", linkedList0, 0);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        String string0 = sourceDestArgument0.stripBoundaryQuotes("\"}O");
        argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test25111() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("F+UGzGr]f3", "F+UGzGr]f3", 0, 0, 'j', 'i', fileValidator0, "F+UGzGr]f3", linkedList0, 0);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        String string0 = sourceDestArgument0.stripBoundaryQuotes("\"}O");
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test25112() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("F+UGzGr]f3", "F+UGzGr]f3", 0, 0, 'j', 'i', fileValidator0, "F+UGzGr]f3", linkedList0, 0);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        String string0 = sourceDestArgument0.stripBoundaryQuotes("\"}O");
    }

    @Test(timeout = 4000)
    public void test25113() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("F+UGzGr]f3", "F+UGzGr]f3", 0, 0, 'j', 'i', fileValidator0, "F+UGzGr]f3", linkedList0, 0);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        String string0 = sourceDestArgument0.stripBoundaryQuotes("\"}O");
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test25114() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("F+UGzGr]f3", "F+UGzGr]f3", 0, 0, 'j', 'i', fileValidator0, "F+UGzGr]f3", linkedList0, 0);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        String string0 = sourceDestArgument0.stripBoundaryQuotes("\"}O");
        sourceDestArgument0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test25115() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("F+UGzGr]f3", "F+UGzGr]f3", 0, 0, 'j', 'i', fileValidator0, "F+UGzGr]f3", linkedList0, 0);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        String string0 = sourceDestArgument0.stripBoundaryQuotes("\"}O");
        argumentImpl0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test25116() throws Throwable {
        FileValidator fileValidator0 = FileValidator.getExistingInstance();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("F+UGzGr]f3", "F+UGzGr]f3", 0, 0, 'j', 'i', fileValidator0, "F+UGzGr]f3", linkedList0, 0);
        SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
        String string0 = sourceDestArgument0.stripBoundaryQuotes("\"}O");
        sourceDestArgument0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test26117() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("a!U<\"#|o*(7LY", "a!U<\"#|o*(7LY", 0, 0, '5', '5', numberValidator0, "", linkedList0, 0);
        boolean boolean0 = argumentImpl0.isRequired();
        argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test26118() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("a!U<\"#|o*(7LY", "a!U<\"#|o*(7LY", 0, 0, '5', '5', numberValidator0, "", linkedList0, 0);
        boolean boolean0 = argumentImpl0.isRequired();
        argumentImpl0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test26119() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("a!U<\"#|o*(7LY", "a!U<\"#|o*(7LY", 0, 0, '5', '5', numberValidator0, "", linkedList0, 0);
        boolean boolean0 = argumentImpl0.isRequired();
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test26120() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("a!U<\"#|o*(7LY", "a!U<\"#|o*(7LY", 0, 0, '5', '5', numberValidator0, "", linkedList0, 0);
        boolean boolean0 = argumentImpl0.isRequired();
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test26121() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("a!U<\"#|o*(7LY", "a!U<\"#|o*(7LY", 0, 0, '5', '5', numberValidator0, "", linkedList0, 0);
        boolean boolean0 = argumentImpl0.isRequired();
        argumentImpl0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test26122() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("a!U<\"#|o*(7LY", "a!U<\"#|o*(7LY", 0, 0, '5', '5', numberValidator0, "", linkedList0, 0);
        boolean boolean0 = argumentImpl0.isRequired();
    }

    @Test(timeout = 4000)
    public void test27123() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("\"}O", "", 19, 19, 'P', 'b', numberValidator0, "", linkedList0, 19);
        boolean boolean0 = argumentImpl0.isRequired();
        argumentImpl0.getConsumeRemaining();
    }

    @Test(timeout = 4000)
    public void test27124() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("\"}O", "", 19, 19, 'P', 'b', numberValidator0, "", linkedList0, 19);
        boolean boolean0 = argumentImpl0.isRequired();
        argumentImpl0.getSubsequentSeparator();
    }

    @Test(timeout = 4000)
    public void test27125() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("\"}O", "", 19, 19, 'P', 'b', numberValidator0, "", linkedList0, 19);
        boolean boolean0 = argumentImpl0.isRequired();
        argumentImpl0.getDescription();
    }

    @Test(timeout = 4000)
    public void test27126() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("\"}O", "", 19, 19, 'P', 'b', numberValidator0, "", linkedList0, 19);
        boolean boolean0 = argumentImpl0.isRequired();
        argumentImpl0.getInitialSeparator();
    }

    @Test(timeout = 4000)
    public void test27127() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("\"}O", "", 19, 19, 'P', 'b', numberValidator0, "", linkedList0, 19);
        boolean boolean0 = argumentImpl0.isRequired();
        argumentImpl0.getPreferredName();
    }

    @Test(timeout = 4000)
    public void test27128() throws Throwable {
        NumberValidator numberValidator0 = NumberValidator.getPercentInstance();
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        ArgumentImpl argumentImpl0 = new ArgumentImpl("\"}O", "", 19, 19, 'P', 'b', numberValidator0, "", linkedList0, 19);
        boolean boolean0 = argumentImpl0.isRequired();
    }
}
