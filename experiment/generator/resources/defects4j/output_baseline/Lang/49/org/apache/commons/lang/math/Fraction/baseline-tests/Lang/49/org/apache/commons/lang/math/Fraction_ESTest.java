/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 03:51:25 GMT 2023
 */
package org.apache.commons.lang.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.math.Fraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class Fraction_ESTest extends Fraction_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(869, 869);
        Fraction fraction1 = Fraction.getFraction(869, 1283);
        int int0 = fraction0.compareTo(fraction1);
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test0001() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(869, 869);
        Fraction fraction1 = Fraction.getFraction(869, 1283);
        int int0 = fraction0.compareTo(fraction1);
    }

    @Test(timeout = 4000)
    public void test0002() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(869, 869);
        Fraction fraction1 = Fraction.getFraction(869, 1283);
        int int0 = fraction0.compareTo(fraction1);
        fraction0.intValue();
    }

    @Test(timeout = 4000)
    public void test0013() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = Fraction.ONE_FIFTH;
        boolean boolean0 = fraction1.equals(fraction0);
    }

    @Test(timeout = 4000)
    public void test0014() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = Fraction.ONE_FIFTH;
        boolean boolean0 = fraction1.equals(fraction0);
        fraction0.equals((Object) fraction1);
    }

    @Test(timeout = 4000)
    public void test0015() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = Fraction.ONE_FIFTH;
        boolean boolean0 = fraction1.equals(fraction0);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test0016() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = Fraction.ONE_FIFTH;
        boolean boolean0 = fraction1.equals(fraction0);
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test0027() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = fraction0.ONE_THIRD.invert();
        boolean boolean0 = fraction1.equals(fraction0);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test0028() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = fraction0.ONE_THIRD.invert();
        boolean boolean0 = fraction1.equals(fraction0);
    }

    @Test(timeout = 4000)
    public void test0029() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = fraction0.ONE_THIRD.invert();
        boolean boolean0 = fraction1.equals(fraction0);
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test00210() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = fraction0.ONE_THIRD.invert();
        boolean boolean0 = fraction1.equals(fraction0);
        fraction0.equals((Object) fraction1);
    }

    @Test(timeout = 4000)
    public void test00311() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(Integer.MAX_VALUE, Integer.MAX_VALUE);
        Fraction fraction1 = fraction0.pow(Integer.MAX_VALUE);
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test00312() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(Integer.MAX_VALUE, Integer.MAX_VALUE);
        Fraction fraction1 = fraction0.pow(Integer.MAX_VALUE);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test00313() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(Integer.MAX_VALUE, Integer.MAX_VALUE);
        Fraction fraction1 = fraction0.pow(Integer.MAX_VALUE);
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test00314() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(Integer.MAX_VALUE, Integer.MAX_VALUE);
        Fraction fraction1 = fraction0.pow(Integer.MAX_VALUE);
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test00415() throws Throwable {
        Fraction.getFraction("/;cJnC");
    }

    @Test(timeout = 4000)
    public void test00516() throws Throwable {
        Fraction.getFraction(" bOeg1/`gL<|%d");
    }

    @Test(timeout = 4000)
    public void test00617() throws Throwable {
        Fraction.getFraction(".t]<n_;@6|p>,'\"p`6^");
    }

    @Test(timeout = 4000)
    public void test00718() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(1145, (-1));
        Fraction fraction1 = fraction0.reduce();
    }

    @Test(timeout = 4000)
    public void test00719() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(1145, (-1));
        Fraction fraction1 = fraction0.reduce();
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test00720() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(1145, (-1));
        Fraction fraction1 = fraction0.reduce();
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test00821() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-78.0502075079038));
        Fraction fraction1 = fraction0.pow(1);
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test00822() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-78.0502075079038));
        Fraction fraction1 = fraction0.pow(1);
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test00923() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        Fraction fraction1 = fraction0.ZERO.pow(599);
        fraction1.intValue();
    }

    @Test(timeout = 4000)
    public void test01024() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction((-1), (-3569));
        Fraction fraction1 = fraction0.pow((-1));
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test01025() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction((-1), (-3569));
        Fraction fraction1 = fraction0.pow((-1));
        fraction1.intValue();
    }

    @Test(timeout = 4000)
    public void test01026() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction((-1), (-3569));
        Fraction fraction1 = fraction0.pow((-1));
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test01127() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-2461.523167961));
        Fraction fraction1 = fraction0.negate();
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test01128() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-2461.523167961));
        Fraction fraction1 = fraction0.negate();
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test01229() throws Throwable {
        Fraction fraction0 = Fraction.TWO_FIFTHS;
        Fraction fraction1 = fraction0.TWO_FIFTHS.negate();
        fraction1.negate();
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test01330() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(947.9);
        Fraction fraction1 = fraction0.negate();
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test01331() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(947.9);
        Fraction fraction1 = fraction0.negate();
        fraction0.byteValue();
    }

    @Test(timeout = 4000)
    public void test01432() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = Fraction.TWO_FIFTHS;
        Fraction fraction2 = fraction0.THREE_FIFTHS.add(fraction1);
        Fraction fraction3 = fraction2.negate();
        fraction3.getDenominator();
    }

    @Test(timeout = 4000)
    public void test01433() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = Fraction.TWO_FIFTHS;
        Fraction fraction2 = fraction0.THREE_FIFTHS.add(fraction1);
        Fraction fraction3 = fraction2.negate();
        fraction2.intValue();
    }

    @Test(timeout = 4000)
    public void test01434() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = Fraction.TWO_FIFTHS;
        Fraction fraction2 = fraction0.THREE_FIFTHS.add(fraction1);
        Fraction fraction3 = fraction2.negate();
        fraction3.longValue();
    }

    @Test(timeout = 4000)
    public void test01535() throws Throwable {
        Fraction fraction0 = Fraction.THREE_FIFTHS;
        Fraction fraction1 = Fraction.getFraction((-2254.0));
        Fraction fraction2 = fraction0.FOUR_FIFTHS.multiplyBy(fraction1);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test01536() throws Throwable {
        Fraction fraction0 = Fraction.THREE_FIFTHS;
        Fraction fraction1 = Fraction.getFraction((-2254.0));
        Fraction fraction2 = fraction0.FOUR_FIFTHS.multiplyBy(fraction1);
        fraction2.floatValue();
    }

    @Test(timeout = 4000)
    public void test01637() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = fraction0.ONE_FIFTH.negate();
        Fraction fraction2 = fraction0.multiplyBy(fraction1);
        fraction2.floatValue();
    }

    @Test(timeout = 4000)
    public void test01638() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = fraction0.ONE_FIFTH.negate();
        Fraction fraction2 = fraction0.multiplyBy(fraction1);
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test01739() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-1.0));
        Fraction fraction1 = fraction0.ONE_THIRD.invert();
        Fraction fraction2 = fraction1.subtract(fraction0);
        Fraction fraction3 = fraction0.ONE_THIRD.multiplyBy(fraction2);
        fraction2.floatValue();
    }

    @Test(timeout = 4000)
    public void test01740() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-1.0));
        Fraction fraction1 = fraction0.ONE_THIRD.invert();
        Fraction fraction2 = fraction1.subtract(fraction0);
        Fraction fraction3 = fraction0.ONE_THIRD.multiplyBy(fraction2);
        fraction3.doubleValue();
    }

    @Test(timeout = 4000)
    public void test01841() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = fraction0.TWO_QUARTERS.divideBy(fraction0);
        long long0 = fraction1.longValue();
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test01842() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = fraction0.TWO_QUARTERS.divideBy(fraction0);
        long long0 = fraction1.longValue();
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test01843() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = fraction0.TWO_QUARTERS.divideBy(fraction0);
        long long0 = fraction1.longValue();
    }

    @Test(timeout = 4000)
    public void test01944() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-1.0));
        long long0 = fraction0.longValue();
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test01945() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-1.0));
        long long0 = fraction0.longValue();
    }

    @Test(timeout = 4000)
    public void test02046() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-2440.08978));
        Fraction fraction1 = fraction0.TWO_THIRDS.divideBy(fraction0);
        Fraction fraction2 = fraction1.invert();
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test02047() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-2440.08978));
        Fraction fraction1 = fraction0.TWO_THIRDS.divideBy(fraction0);
        Fraction fraction2 = fraction1.invert();
        fraction2.getDenominator();
    }

    @Test(timeout = 4000)
    public void test02048() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-2440.08978));
        Fraction fraction1 = fraction0.TWO_THIRDS.divideBy(fraction0);
        Fraction fraction2 = fraction1.invert();
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test02149() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        int int0 = fraction0.intValue();
    }

    @Test(timeout = 4000)
    public void test02250() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(285, 285);
        int int0 = fraction0.intValue();
    }

    @Test(timeout = 4000)
    public void test02251() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(285, 285);
        int int0 = fraction0.intValue();
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test02352() throws Throwable {
        Fraction fraction0 = Fraction.getFraction("-1");
        int int0 = fraction0.getProperWhole();
    }

    @Test(timeout = 4000)
    public void test02353() throws Throwable {
        Fraction fraction0 = Fraction.getFraction("-1");
        int int0 = fraction0.getProperWhole();
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test02454() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        int int0 = fraction0.getProperNumerator();
    }

    @Test(timeout = 4000)
    public void test02555() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        int int0 = fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test02656() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction((-2590), 25);
        int int0 = fraction0.getNumerator();
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test02657() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction((-2590), 25);
        int int0 = fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test02758() throws Throwable {
        Fraction fraction0 = Fraction.getFraction("0");
        Fraction fraction1 = fraction0.reduce();
    }

    @Test(timeout = 4000)
    public void test02759() throws Throwable {
        Fraction fraction0 = Fraction.getFraction("0");
        Fraction fraction1 = fraction0.reduce();
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test02760() throws Throwable {
        Fraction fraction0 = Fraction.getFraction("0");
        Fraction fraction1 = fraction0.reduce();
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test02861() throws Throwable {
        Fraction fraction0 = Fraction.getFraction("-103 3/5");
        fraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test02962() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-114), 4, 4);
        fraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test03063() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(0, 0, 2268);
        fraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test03064() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(0, 0, 2268);
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test03165() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(2024, 0, 31);
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test03166() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(2024, 0, 31);
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test03267() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(0, 25);
        fraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test03268() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(0, 25);
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test03369() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        float float0 = fraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test03470() throws Throwable {
        Fraction fraction0 = Fraction.TWO_THIRDS;
        Fraction fraction1 = fraction0.negate();
        float float0 = fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test03571() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        double double0 = fraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test03672() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = fraction0.THREE_FIFTHS.negate();
        double double0 = fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test03773() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(869, 869);
        Fraction fraction1 = Fraction.getFraction(869, 869, 1283);
        Fraction fraction2 = fraction0.subtract(fraction1);
        Fraction fraction3 = fraction1.divideBy(fraction2);
        fraction3.doubleValue();
    }

    @Test(timeout = 4000)
    public void test03774() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(869, 869);
        Fraction fraction1 = Fraction.getFraction(869, 869, 1283);
        Fraction fraction2 = fraction0.subtract(fraction1);
        Fraction fraction3 = fraction1.divideBy(fraction2);
        fraction3.getNumerator();
    }

    @Test(timeout = 4000)
    public void test03775() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(869, 869);
        Fraction fraction1 = Fraction.getFraction(869, 869, 1283);
        Fraction fraction2 = fraction0.subtract(fraction1);
        Fraction fraction3 = fraction1.divideBy(fraction2);
        fraction2.doubleValue();
    }

    @Test(timeout = 4000)
    public void test03876() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = fraction0.TWO_QUARTERS.invert();
        Fraction fraction2 = fraction0.subtract(fraction1);
        Fraction fraction3 = fraction0.add(fraction2);
        fraction3.getDenominator();
    }

    @Test(timeout = 4000)
    public void test03877() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = fraction0.TWO_QUARTERS.invert();
        Fraction fraction2 = fraction0.subtract(fraction1);
        Fraction fraction3 = fraction0.add(fraction2);
        fraction3.getNumerator();
    }

    @Test(timeout = 4000)
    public void test03978() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = Fraction.getFraction(3481.7902348955795);
        Fraction fraction2 = fraction0.add(fraction1);
        fraction2.doubleValue();
    }

    @Test(timeout = 4000)
    public void test04079() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        Fraction fraction1 = fraction0.ZERO.abs();
        fraction1.shortValue();
    }

    @Test(timeout = 4000)
    public void test04180() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = fraction0.abs();
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test04281() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction((-1100), (-2));
        Fraction fraction1 = fraction0.multiplyBy(fraction0);
        Fraction fraction2 = fraction1.abs();
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test04282() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction((-1100), (-2));
        Fraction fraction1 = fraction0.multiplyBy(fraction0);
        Fraction fraction2 = fraction1.abs();
    }

    @Test(timeout = 4000)
    public void test04283() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction((-1100), (-2));
        Fraction fraction1 = fraction0.multiplyBy(fraction0);
        Fraction fraction2 = fraction1.abs();
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test04384() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(225.75775);
        Fraction fraction1 = fraction0.invert();
        fraction0.subtract(fraction1);
    }

    @Test(timeout = 4000)
    public void test04485() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        fraction0.compareTo((Object) null);
    }

    @Test(timeout = 4000)
    public void test04586() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        fraction0.compareTo("q&bBD1O}");
    }

    @Test(timeout = 4000)
    public void test04687() throws Throwable {
        Fraction fraction0 = Fraction.ONE_FIFTH;
        fraction0.add((Fraction) null);
    }

    @Test(timeout = 4000)
    public void test04788() throws Throwable {
        Fraction fraction0 = Fraction.THREE_FIFTHS;
        Fraction fraction1 = fraction0.ZERO.multiplyBy(fraction0);
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test04889() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        Fraction fraction1 = fraction0.THREE_QUARTERS.pow(4);
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test04990() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(4039, 4039);
        fraction0.ZERO.invert();
    }

    @Test(timeout = 4000)
    public void test05091() throws Throwable {
        Fraction fraction0 = Fraction.THREE_FIFTHS;
        int int0 = fraction0.getProperWhole();
    }

    @Test(timeout = 4000)
    public void test05192() throws Throwable {
        Fraction fraction0 = Fraction.TWO_THIRDS;
        int int0 = fraction0.getProperNumerator();
    }

    @Test(timeout = 4000)
    public void test05293() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        int int0 = fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test05394() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        Fraction fraction1 = Fraction.ONE_QUARTER;
        Fraction fraction2 = fraction0.divideBy(fraction1);
        String string0 = fraction2.toProperString();
    }

    @Test(timeout = 4000)
    public void test05395() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        Fraction fraction1 = Fraction.ONE_QUARTER;
        Fraction fraction2 = fraction0.divideBy(fraction1);
        String string0 = fraction2.toProperString();
        fraction2.getDenominator();
    }

    @Test(timeout = 4000)
    public void test05396() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        Fraction fraction1 = Fraction.ONE_QUARTER;
        Fraction fraction2 = fraction0.divideBy(fraction1);
        String string0 = fraction2.toProperString();
        fraction1.getProperNumerator();
    }

    @Test(timeout = 4000)
    public void test05397() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        Fraction fraction1 = Fraction.ONE_QUARTER;
        Fraction fraction2 = fraction0.divideBy(fraction1);
        String string0 = fraction2.toProperString();
        fraction1.getProperWhole();
    }

    @Test(timeout = 4000)
    public void test05498() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-1.0));
        String string0 = fraction0.toProperString();
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test05499() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-1.0));
        String string0 = fraction0.toProperString();
    }

    @Test(timeout = 4000)
    public void test055101() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(869, 869);
        String string0 = fraction0.toProperString();
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test055102() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(869, 869);
        String string0 = fraction0.toProperString();
    }

    @Test(timeout = 4000)
    public void test056104() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        int int0 = fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test056105() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        int int0 = fraction0.getDenominator();
        fraction0.FOUR_FIFTHS.toProperString();
        Fraction fraction1 = Fraction.TWO_THIRDS;
        Fraction fraction2 = fraction0.FOUR_FIFTHS.subtract(fraction1);
        Fraction fraction3 = Fraction.getReducedFraction((-1), (-3569));
        fraction3.floatValue();
    }

    @Test(timeout = 4000)
    public void test056106() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        int int0 = fraction0.getDenominator();
        fraction0.FOUR_FIFTHS.toProperString();
        Fraction fraction1 = Fraction.TWO_THIRDS;
        Fraction fraction2 = fraction0.FOUR_FIFTHS.subtract(fraction1);
        Fraction fraction3 = Fraction.getReducedFraction((-1), (-3569));
        Fraction fraction4 = Fraction.ONE_QUARTER;
        fraction2.ZERO.toProperString();
        fraction2.floatValue();
    }

    @Test(timeout = 4000)
    public void test056107() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        int int0 = fraction0.getDenominator();
        fraction0.FOUR_FIFTHS.toProperString();
        Fraction fraction1 = Fraction.TWO_THIRDS;
        Fraction fraction2 = fraction0.FOUR_FIFTHS.subtract(fraction1);
        Fraction fraction3 = Fraction.getReducedFraction((-1), (-3569));
        Fraction fraction4 = Fraction.ONE_QUARTER;
        fraction2.ZERO.toProperString();
        fraction2.getDenominator();
    }

    @Test(timeout = 4000)
    public void test057108() throws Throwable {
        Fraction fraction0 = Fraction.THREE_FIFTHS;
        Fraction fraction1 = Fraction.ONE_FIFTH;
        String string0 = fraction1.ZERO.toString();
    }

    @Test(timeout = 4000)
    public void test058109() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        fraction0.ZERO.toString();
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test058110() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        fraction0.ZERO.toString();
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test059111() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        Fraction fraction1 = Fraction.ONE_QUARTER;
        int int0 = fraction0.compareTo(fraction1);
    }

    @Test(timeout = 4000)
    public void test060112() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = Fraction.TWO_QUARTERS;
        int int0 = fraction1.compareTo(fraction0);
    }

    @Test(timeout = 4000)
    public void test061113() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = Fraction.ONE;
        int int0 = fraction0.compareTo(fraction1);
    }

    @Test(timeout = 4000)
    public void test062114() throws Throwable {
        Fraction fraction0 = Fraction.ONE_THIRD;
        int int0 = fraction0.compareTo(fraction0);
    }

    @Test(timeout = 4000)
    public void test063115() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(869, 869);
        Fraction fraction1 = Fraction.getFraction(869, 869, 1283);
        int int0 = fraction0.compareTo(fraction1);
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test063116() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(869, 869);
        Fraction fraction1 = Fraction.getFraction(869, 869, 1283);
        int int0 = fraction0.compareTo(fraction1);
        fraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test063117() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(869, 869);
        Fraction fraction1 = Fraction.getFraction(869, 869, 1283);
        int int0 = fraction0.compareTo(fraction1);
    }

    @Test(timeout = 4000)
    public void test064118() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        fraction0.getDenominator();
        String string0 = fraction0.FOUR_FIFTHS.toProperString();
    }

    @Test(timeout = 4000)
    public void test064119() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        fraction0.getDenominator();
        String string0 = fraction0.FOUR_FIFTHS.toProperString();
        Fraction fraction1 = Fraction.TWO_THIRDS;
        Fraction fraction2 = fraction0.FOUR_FIFTHS.subtract(fraction1);
        fraction2.floatValue();
    }

    @Test(timeout = 4000)
    public void test064120() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        fraction0.getDenominator();
        String string0 = fraction0.FOUR_FIFTHS.toProperString();
        Fraction fraction1 = Fraction.TWO_THIRDS;
        Fraction fraction2 = fraction0.FOUR_FIFTHS.subtract(fraction1);
        Fraction fraction3 = Fraction.getReducedFraction((-1), (-3569));
        fraction3.doubleValue();
    }

    @Test(timeout = 4000)
    public void test064121() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        fraction0.getDenominator();
        String string0 = fraction0.FOUR_FIFTHS.toProperString();
        Fraction fraction1 = Fraction.TWO_THIRDS;
        Fraction fraction2 = fraction0.FOUR_FIFTHS.subtract(fraction1);
        Fraction fraction3 = Fraction.getReducedFraction((-1), (-3569));
        Fraction fraction4 = Fraction.ONE_QUARTER;
        fraction1.hashCode();
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test065122() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(0.0);
        Fraction fraction1 = fraction0.negate();
        boolean boolean0 = fraction0.equals(fraction1);
    }

    @Test(timeout = 4000)
    public void test065123() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(0.0);
        Fraction fraction1 = fraction0.negate();
        boolean boolean0 = fraction0.equals(fraction1);
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test065124() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(0.0);
        Fraction fraction1 = fraction0.negate();
        boolean boolean0 = fraction0.equals(fraction1);
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test066125() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = Fraction.ONE_FIFTH;
        boolean boolean0 = fraction0.equals(fraction1);
        fraction1.equals((Object) fraction0);
    }

    @Test(timeout = 4000)
    public void test066126() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = Fraction.ONE_FIFTH;
        boolean boolean0 = fraction0.equals(fraction1);
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test066127() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = Fraction.ONE_FIFTH;
        boolean boolean0 = fraction0.equals(fraction1);
    }

    @Test(timeout = 4000)
    public void test066128() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = Fraction.ONE_FIFTH;
        boolean boolean0 = fraction0.equals(fraction1);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test067129() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        boolean boolean0 = fraction0.equals("YoWv<");
    }

    @Test(timeout = 4000)
    public void test068130() throws Throwable {
        Fraction fraction0 = Fraction.TWO_THIRDS;
        boolean boolean0 = fraction0.equals(fraction0);
    }

    @Test(timeout = 4000)
    public void test069131() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(869, 869);
        Fraction fraction1 = Fraction.getFraction(869, 869, 1283);
        boolean boolean0 = fraction0.equals(fraction1);
        fraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test069132() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(869, 869);
        Fraction fraction1 = Fraction.getFraction(869, 869, 1283);
        boolean boolean0 = fraction0.equals(fraction1);
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test069133() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(869, 869);
        Fraction fraction1 = Fraction.getFraction(869, 869, 1283);
        boolean boolean0 = fraction0.equals(fraction1);
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test069134() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(869, 869);
        Fraction fraction1 = Fraction.getFraction(869, 869, 1283);
        boolean boolean0 = fraction0.equals(fraction1);
    }

    @Test(timeout = 4000)
    public void test070135() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = Fraction.ZERO;
        fraction0.divideBy(fraction1);
    }

    @Test(timeout = 4000)
    public void test071136() throws Throwable {
        Fraction fraction0 = Fraction.ONE_THIRD;
        fraction0.divideBy((Fraction) null);
    }

    @Test(timeout = 4000)
    public void test072137() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        Fraction fraction1 = fraction0.ONE.multiplyBy(fraction0);
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test073138() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        Fraction fraction1 = fraction0.divideBy(fraction0);
        fraction0.getProperWhole();
    }

    @Test(timeout = 4000)
    public void test073139() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        Fraction fraction1 = fraction0.divideBy(fraction0);
        int int0 = fraction1.getProperWhole();
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test073140() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        Fraction fraction1 = fraction0.divideBy(fraction0);
        int int0 = fraction1.getProperWhole();
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test073141() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        Fraction fraction1 = fraction0.divideBy(fraction0);
        int int0 = fraction1.getProperWhole();
    }

    @Test(timeout = 4000)
    public void test074142() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(947.9);
        fraction0.THREE_FIFTHS.multiplyBy((Fraction) null);
    }

    @Test(timeout = 4000)
    public void test075143() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = Fraction.getFraction((-2983.168584589799));
        Fraction fraction2 = fraction0.divideBy(fraction1);
        fraction1.add(fraction2);
    }

    @Test(timeout = 4000)
    public void test076144() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = Fraction.getReducedFraction(0, (-2590));
        Fraction fraction2 = fraction0.ONE_THIRD.add(fraction1);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test076145() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = Fraction.getReducedFraction(0, (-2590));
        Fraction fraction2 = fraction0.ONE_THIRD.add(fraction1);
        fraction2.doubleValue();
    }

    @Test(timeout = 4000)
    public void test077146() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        Fraction fraction1 = fraction0.add(fraction0);
    }

    @Test(timeout = 4000)
    public void test078147() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-3.042271021842216));
        Fraction fraction1 = fraction0.ZERO.subtract(fraction0);
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test078148() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-3.042271021842216));
        Fraction fraction1 = fraction0.ZERO.subtract(fraction0);
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test079149() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        fraction0.subtract((Fraction) null);
    }

    @Test(timeout = 4000)
    public void test080150() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(2.147483647E9);
        fraction0.ONE.add(fraction0);
    }

    @Test(timeout = 4000)
    public void test081151() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-222751), (-4526));
        Fraction fraction1 = Fraction.getFraction(903031, (-4526));
        fraction1.multiplyBy(fraction0);
    }

    @Test(timeout = 4000)
    public void test082152() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        fraction0.TWO_THIRDS.pow(Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test083153() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        fraction0.pow(407);
    }

    @Test(timeout = 4000)
    public void test084154() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        Fraction fraction1 = fraction0.TWO_THIRDS.pow(0);
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test085155() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.THREE_FIFTHS.abs();
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test086156() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = fraction0.THREE_FIFTHS.add(fraction0);
        Fraction fraction2 = fraction0.subtract(fraction1);
        Fraction fraction3 = fraction2.abs();
        fraction2.getNumerator();
    }

    @Test(timeout = 4000)
    public void test086157() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = fraction0.THREE_FIFTHS.add(fraction0);
        Fraction fraction2 = fraction0.subtract(fraction1);
        Fraction fraction3 = fraction2.abs();
        fraction3.floatValue();
    }

    @Test(timeout = 4000)
    public void test087158() throws Throwable {
        Fraction fraction0 = Fraction.FOUR_FIFTHS;
        Fraction fraction1 = fraction0.THREE_FIFTHS.reduce();
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test088159() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(1416, 1416);
        Fraction fraction1 = fraction0.reduce();
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test088160() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(1416, 1416);
        Fraction fraction1 = fraction0.reduce();
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test089161() throws Throwable {
        Fraction fraction0 = Fraction.getFraction("3");
        fraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test089162() throws Throwable {
        Fraction fraction0 = Fraction.getFraction("3");
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test090163() throws Throwable {
        Fraction fraction0 = Fraction.getFraction("4/5");
        fraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test090164() throws Throwable {
        Fraction fraction0 = Fraction.getFraction("4/5");
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test091165() throws Throwable {
        Fraction.getFraction("U\"(.s>>e#=*>");
    }

    @Test(timeout = 4000)
    public void test092166() throws Throwable {
        Fraction.getFraction((String) null);
    }

    @Test(timeout = 4000)
    public void test093167() throws Throwable {
        Fraction.getFraction(1.7976931348623157E308);
    }

    @Test(timeout = 4000)
    public void test094168() throws Throwable {
        Fraction.getReducedFraction(Integer.MIN_VALUE, (-1658));
    }

    @Test(timeout = 4000)
    public void test095169() throws Throwable {
        Fraction.getReducedFraction((-2275), Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test096170() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);
        fraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test096171() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test097172() throws Throwable {
        Fraction.getReducedFraction((-1717986917), 0);
    }

    @Test(timeout = 4000)
    public void test098173() throws Throwable {
        Fraction.getFraction(134217728, 65, 5254);
    }

    @Test(timeout = 4000)
    public void test099174() throws Throwable {
        Fraction.getFraction((-2263), 2146066167, 1514);
    }

    @Test(timeout = 4000)
    public void test100175() throws Throwable {
        Fraction.getFraction((-2), (-2), 982);
    }

    @Test(timeout = 4000)
    public void test101176() throws Throwable {
        Fraction.getFraction((-2590), 2268, (-1));
    }

    @Test(timeout = 4000)
    public void test102177() throws Throwable {
        Fraction.getFraction(2819, 2819, 0);
    }

    @Test(timeout = 4000)
    public void test103178() throws Throwable {
        Fraction.getFraction(144, Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test104179() throws Throwable {
        Fraction.getFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test105180() throws Throwable {
        Fraction.getFraction(1161, 0);
    }

    @Test(timeout = 4000)
    public void test106181() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = fraction0.subtract(fraction0);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test106182() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        Fraction fraction1 = fraction0.subtract(fraction0);
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test107183() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        double double0 = fraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test108184() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-3.042271021842216));
        int int0 = fraction0.intValue();
    }

    @Test(timeout = 4000)
    public void test108185() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-3.042271021842216));
        int int0 = fraction0.intValue();
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test108186() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-3.042271021842216));
        int int0 = fraction0.intValue();
        fraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test109187() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        float float0 = fraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test110188() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        long long0 = fraction0.longValue();
    }

    @Test(timeout = 4000)
    public void test111189() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction((-2590), 17);
        String string0 = fraction0.toProperString();
    }

    @Test(timeout = 4000)
    public void test111190() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction((-2590), 17);
        String string0 = fraction0.toProperString();
        fraction0.getDenominator();
    }
}
