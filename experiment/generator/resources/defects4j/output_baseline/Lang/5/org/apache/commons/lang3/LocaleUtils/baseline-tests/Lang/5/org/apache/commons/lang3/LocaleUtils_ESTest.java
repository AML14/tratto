/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 00:53:06 GMT 2023
 */
package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.lang3.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        LocaleUtils.toLocale("xp#&U");
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        List<Locale> list0 = LocaleUtils.countriesByLanguage("");
        list0.size();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        List<Locale> list0 = LocaleUtils.availableLocaleList();
        list0.size();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        List<Locale> list0 = LocaleUtils.countriesByLanguage((String) null);
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        List<Locale> list0 = LocaleUtils.languagesByCountry("TH");
        list0.size();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        List<Locale> list0 = LocaleUtils.languagesByCountry((String) null);
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Locale locale0 = Locale.ITALIAN;
        List<Locale> list0 = LocaleUtils.localeLookupList(locale0, locale0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Locale locale0 = Locale.US;
        Locale locale1 = new Locale("en-US", "en-US", "en-US");
        List<Locale> list0 = LocaleUtils.localeLookupList(locale1, locale0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        Locale locale0 = Locale.US;
        Locale locale1 = new Locale("en-US", "en-US", "en-US");
        List<Locale> list0 = LocaleUtils.localeLookupList(locale1, locale0);
        list0.contains(locale0);
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        Locale locale0 = Locale.US;
        List<Locale> list0 = LocaleUtils.localeLookupList((Locale) null, locale0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        LocaleUtils.toLocale("vd`(pOev[");
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        LocaleUtils.toLocale("lpLG");
    }

    @Test(timeout = 4000)
    public void test1213() throws Throwable {
        LocaleUtils.toLocale("t06ct");
    }

    @Test(timeout = 4000)
    public void test1314() throws Throwable {
        Locale locale0 = LocaleUtils.toLocale("en");
        locale0.getVariant();
    }

    @Test(timeout = 4000)
    public void test1415() throws Throwable {
        LocaleUtils.toLocale("");
    }

    @Test(timeout = 4000)
    public void test1516() throws Throwable {
        Locale locale0 = LocaleUtils.toLocale((String) null);
    }

    @Test(timeout = 4000)
    public void test1617() throws Throwable {
        LocaleUtils.toLocale("|EQaw]eQB1e;oJf>2G,");
    }

    @Test(timeout = 4000)
    public void test1718() throws Throwable {
        LocaleUtils.SyncAvoid localeUtils_SyncAvoid0 = new LocaleUtils.SyncAvoid();
    }

    @Test(timeout = 4000)
    public void test1819() throws Throwable {
        Locale locale0 = Locale.GERMANY;
        boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
    }

    @Test(timeout = 4000)
    public void test1920() throws Throwable {
        Set<Locale> set0 = LocaleUtils.availableLocaleSet();
        set0.size();
    }

    @Test(timeout = 4000)
    public void test2021() throws Throwable {
        Locale locale0 = Locale.GERMANY;
        List<Locale> list0 = LocaleUtils.localeLookupList(locale0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test2122() throws Throwable {
        LocaleUtils localeUtils0 = new LocaleUtils();
    }
}
