/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 03:47:11 GMT 2023
 */
package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("");
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        StringBuffer stringBuffer0 = new StringBuffer();
        StrBuilder strBuilder1 = strBuilder0.appendln(stringBuffer0);
        Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
        strBuilder0.toString();
        StrTokenizer.getCSVInstance();
        strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
        strBuilder_StrBuilderTokenizer0.reset("");
        strBuilder_StrBuilderTokenizer0.getContent();
        int int0 = 32;
        strBuilder0.lastIndexOf('k', 32);
        float float0 = 3071.121F;
        StrBuilder strBuilder2 = strBuilder0.appendln(3071.121F);
        strBuilder2.toStringBuffer();
        strBuilder1.substring((-1), 32);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((-552));
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        strBuilder_StrBuilderReader0.mark((-552));
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
        char[] charArray0 = new char[8];
        charArray0[0] = 'f';
        charArray0[1] = 'f';
        charArray0[2] = '{';
        charArray0[3] = 'L';
        charArray0[4] = 'O';
        charArray0[5] = '[';
        charArray0[6] = '+';
        charArray0[7] = 'G';
        strBuilder_StrBuilderWriter0.write(charArray0);
        strBuilder_StrBuilderWriter0.write(4);
        strBuilder_StrBuilderWriter0.flush();
        StrBuilder strBuilder1 = strBuilder0.deleteAll('N');
        strBuilder_StrBuilderReader0.close();
        strBuilder1.replaceAll((String) null, "!E|@^;:4aA79");
        strBuilder1.insert(0, "0VrUXQ*z");
        strBuilder1.lastIndexOf("0VrUXQ*z", 101);
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        strBuilder0.midString(0, 0);
        strBuilder0.size = 0;
        StrBuilder strBuilder1 = strBuilder0.appendln('[');
        StrBuilder strBuilder2 = strBuilder1.insert(0, ']');
        strBuilder2.appendln(strBuilder0, 0, 0);
        StrBuilder strBuilder3 = strBuilder2.ensureCapacity(4);
        strBuilder3.setNewLineText("");
        strBuilder1.asReader();
        strBuilder0.appendln((StringBuffer) null);
        strBuilder0.hashCode();
        StrBuilder strBuilder4 = strBuilder1.appendln((Object) strBuilder0);
        StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
        strBuilder4.lastIndexOf(strMatcher0, 685);
        StrBuilder strBuilder5 = strBuilder4.append('q');
        strBuilder5.asTokenizer();
        strBuilder1.replaceFirst((String) null, "");
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("R/6*Sy");
        strBuilder0.setNewLineText("E/rUkv\"*AV\"z./;IRE7");
        strBuilder0.append(108);
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((String) null);
        char[] charArray0 = new char[3];
        StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
        StrMatcher.charSetMatcher(charArray0);
        StrMatcher.charSetMatcher(charArray0);
        StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_NoMatcher0);
        StrBuilder strBuilder2 = strBuilder1.append(1.0);
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        strBuilder1.appendAll((Collection) linkedList0);
        charArray0[0] = 'U';
        charArray0[1] = 'b';
        strBuilder1.appendAll((Collection) linkedList0);
        charArray0[2] = 'i';
        StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
        strBuilder0.indexOf((StrMatcher) strMatcher_CharSetMatcher0, (-579));
        StrBuilder strBuilder3 = strBuilder0.setNullText((String) null);
        strBuilder0.indexOf((StrMatcher) null, 514);
        strBuilder3.asTokenizer();
        StrBuilder strBuilder4 = strBuilder3.append((long) (-1));
        strBuilder4.asWriter();
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
        strBuilder_StrBuilderWriter0.flush();
        strBuilder2.appendSeparator('i', (-1));
        strBuilder_StrBuilderWriter0.write(charArray0, (-1), 1196);
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(834);
        String string0 = "IP";
        strBuilder0.setNullText("IP");
        StrMatcher strMatcher0 = StrMatcher.charSetMatcher("Zur`0X0?1G`1b ^\"");
        strBuilder0.contains(strMatcher0);
        strBuilder0.appendFixedWidthPadRight(834, 1754, 'a');
        int int0 = 2432;
        StrBuilder strBuilder1 = strBuilder0.insert(32, 2432);
        StringBuffer stringBuffer0 = new StringBuffer();
        strBuilder1.append(stringBuffer0, (-2840), (-2840));
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        StrBuilder strBuilder1 = strBuilder0.insert(0, true);
        StrBuilder strBuilder2 = strBuilder1.appendln(strBuilder0);
        StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
        strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, 0);
        StrBuilder strBuilder3 = strBuilder0.setLength(1959);
        strBuilder0.contains((StrMatcher) null);
        strBuilder0.asTokenizer();
        StrBuilder strBuilder4 = strBuilder0.appendln((double) 0);
        strBuilder2.equalsIgnoreCase(strBuilder4);
        strBuilder4.substring(0);
        strBuilder1.midString(1, 1);
        strBuilder3.asReader();
        strBuilder3.toString();
        strBuilder0.midString(114, 2859);
        strBuilder2.indexOf((StrMatcher) strMatcher_NoMatcher0);
        strBuilder3.insert(989, false);
        strBuilder4.deleteCharAt(114);
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        String string0 = "Invalid startIndex: ";
        StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
        String string1 = "end < start";
        Object[] objectArray0 = new Object[7];
        strBuilder0.charAt((-894));
    }

    @Test(timeout = 4000)
    public void test0088() throws Throwable {
        String string0 = "Invalid startIndex: ";
        StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
        int int0 = 102;
        strBuilder0.insert(102, (Object) "Invalid startIndex: ");
    }

    @Test(timeout = 4000)
    public void test0099() throws Throwable {
        int int0 = 0;
        StrBuilder strBuilder0 = new StrBuilder(0);
        int int1 = 359;
        String string0 = "$4|MKf2*BS>:o";
        strBuilder0.replace(359, 1331, "$4|MKf2*BS>:o");
    }

    @Test(timeout = 4000)
    public void test01010() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        Object object0 = new Object();
        StrBuilder strBuilder1 = strBuilder0.appendln(object0);
        StrMatcher strMatcher0 = StrMatcher.trimMatcher();
        StrMatcher strMatcher1 = StrMatcher.quoteMatcher();
        char[] charArray0 = new char[1];
        charArray0[0] = '0';
        StrMatcher.charSetMatcher(charArray0);
        strBuilder0.appendNull();
        strBuilder1.lastIndexOf(strMatcher1);
        strBuilder1.replaceFirst(strMatcher0, "");
        strBuilder0.getNewLineText();
        strBuilder0.appendSeparator((String) null, 31);
        strBuilder1.validateRange((-481), 3133);
    }

    @Test(timeout = 4000)
    public void test01111() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
        StrBuilder strBuilder1 = strBuilder0.insert(0, 0.0);
        strBuilder0.asTokenizer();
        StrBuilder strBuilder2 = strBuilder1.deleteAll('!');
        StrBuilder strBuilder3 = strBuilder2.appendln((long) 0);
        Object[] objectArray0 = new Object[3];
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
        strBuilder_StrBuilderTokenizer0.next();
        objectArray0[0] = (Object) "0.0Invalid";
        objectArray0[1] = (Object) "Invalid offset: ";
        objectArray0[2] = (Object) strBuilder1;
        strBuilder2.appendAll(objectArray0);
        StrBuilder strBuilder4 = strBuilder1.insert(0, 0);
        strBuilder4.validateIndex(0);
        strBuilder0.append(true);
        StrBuilder strBuilder5 = strBuilder0.replaceAll('!', 'H');
        strBuilder0.capacity();
        strBuilder5.substring(130);
        StrBuilder strBuilder6 = strBuilder2.insert(130, 1264L);
        StrMatcher strMatcher0 = StrMatcher.splitMatcher();
        strBuilder6.replaceFirst(strMatcher0, "M\"gm}o=");
        strBuilder6.indexOf('!');
        strBuilder1.appendAll((Iterator) strBuilder_StrBuilderTokenizer0);
        strBuilder3.append(true);
        strBuilder6.insert(0, 0L);
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
        char[] charArray0 = new char[3];
        charArray0[0] = 'H';
        charArray0[1] = 'k';
        charArray0[2] = 'H';
        strBuilder_StrBuilderWriter0.write(charArray0, 130, 385);
    }

    @Test(timeout = 4000)
    public void test01212() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StringBuffer stringBuffer0 = new StringBuffer();
        strBuilder0.appendln(stringBuffer0, (-1435), 627);
    }

    @Test(timeout = 4000)
    public void test01313() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((-2289));
        char[] charArray0 = new char[1];
        charArray0[0] = 'U';
        StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
        strBuilder0.indexOf(strMatcher0, (-2289));
        strBuilder0.lastIndexOf('U', 0);
        strBuilder0.append((StringBuffer) null, 39, (-2289));
    }

    @Test(timeout = 4000)
    public void test01414() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        strBuilder0.insert(5255, 0L);
    }

    @Test(timeout = 4000)
    public void test01515() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((-4755));
        strBuilder0.getNullText();
    }

    @Test(timeout = 4000)
    public void test01616() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(5);
        strBuilder0.appendFixedWidthPadLeft((-3054), 5, '@');
    }

    @Test(timeout = 4000)
    public void test01717() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("end < start");
        strBuilder0.appendln(2231.297820044);
        strBuilder0.append("end < start", 0, 0);
    }

    @Test(timeout = 4000)
    public void test01818() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("");
        strBuilder0.appendln(";r:Wjx#u!$'pC;co+,~", 2358, 102);
    }

    @Test(timeout = 4000)
    public void test01919() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(102);
        StrBuilder strBuilder1 = strBuilder0.replaceAll('\"', '}');
        strBuilder1.insert(114, (char[]) null);
    }

    @Test(timeout = 4000)
    public void test02020() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(834);
        strBuilder0.setNullText("");
        StrMatcher strMatcher0 = StrMatcher.charSetMatcher("Zur`0X0?1G`1b ^\"");
        strBuilder0.contains(strMatcher0);
        strBuilder0.appendFixedWidthPadRight(834, 1754, 'a');
        StrBuilder strBuilder1 = strBuilder0.insert(834, "O{Foni=+j>qdQ");
        strBuilder0.insert(32, 2432);
        strBuilder1.lastIndexOf("", 2432);
    }

    @Test(timeout = 4000)
    public void test02121() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
        StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_NoMatcher0);
        strBuilder1.insert(0, (-1177.988));
        strBuilder0.append(102);
    }

    @Test(timeout = 4000)
    public void test02222() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(2510);
        strBuilder0.indexOf("", 2510);
    }

    @Test(timeout = 4000)
    public void test02323() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("m7C:={b?9kU0J;pg");
        StrBuilder strBuilder1 = strBuilder0.append('^');
        StrBuilder strBuilder2 = strBuilder0.append(2059);
        strBuilder2.midString(360, 360);
        strBuilder0.isEmpty();
        strBuilder0.asWriter();
        StrBuilder strBuilder3 = strBuilder1.appendln((double) 2059);
        strBuilder3.toString();
        strBuilder1.appendSeparator('$');
    }

    @Test(timeout = 4000)
    public void test02424() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("");
        Integer integer0 = new Integer((-2195));
        StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) integer0, (-2195), '_');
        strBuilder1.appendln(true);
    }

    @Test(timeout = 4000)
    public void test02525() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.ArrayUtils");
        strBuilder0.deleteFirst("org.apache.commons.lang.ArrayUtils");
        strBuilder0.contains('{');
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        strBuilder_StrBuilderTokenizer0.next();
    }

    @Test(timeout = 4000)
    public void test02626() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("@.k");
        strBuilder0.append(true);
        StringBuffer stringBuffer0 = new StringBuffer(1346);
        strBuilder0.appendln(stringBuffer0);
        strBuilder0.contains('7');
        strBuilder0.asReader();
        strBuilder0.getNullText();
    }

    @Test(timeout = 4000)
    public void test02727() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(456);
        char[] charArray0 = new char[0];
        strBuilder0.insert((-846), charArray0, (-846), 1404);
    }

    @Test(timeout = 4000)
    public void test02828() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(31);
        StringBuffer stringBuffer0 = new StringBuffer(31);
        strBuilder0.appendln(stringBuffer0, Integer.MAX_VALUE, Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test02929() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((-36));
        StrBuilder strBuilder1 = strBuilder0.append('[');
        strBuilder1.appendNewLine();
        char[] charArray0 = new char[5];
        charArray0[0] = '[';
        charArray0[1] = 'B';
        charArray0[2] = '[';
        charArray0[3] = '[';
        charArray0[4] = '[';
        strBuilder0.buffer = charArray0;
        strBuilder0.insert((-2793), (long) (-2793));
    }

    @Test(timeout = 4000)
    public void test03030() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(3);
        char[] charArray0 = new char[3];
        charArray0[0] = '8';
        charArray0[1] = 'F';
        charArray0[2] = 'T';
        strBuilder0.insert(3, charArray0);
    }

    @Test(timeout = 4000)
    public void test03131() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        strBuilder0.asTokenizer();
        StrBuilder strBuilder1 = strBuilder0.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
        strBuilder1.asWriter();
        strBuilder0.asTokenizer();
        strBuilder0.indexOf("abVox2Zob+^G", 3);
        strBuilder0.asReader();
        strBuilder1.insert((-1), 0.0);
    }

    @Test(timeout = 4000)
    public void test03232() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(4769);
        strBuilder0.toString();
        StrBuilder strBuilder1 = strBuilder0.appendSeparator('r');
        strBuilder1.appendln(4769);
        strBuilder0.equalsIgnoreCase(strBuilder1);
    }

    @Test(timeout = 4000)
    public void test03333() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(325);
        char[] charArray0 = new char[4];
        charArray0[0] = 'G';
        charArray0[1] = '\\';
        charArray0[2] = 'x';
        charArray0[3] = '&';
        strBuilder0.appendln(charArray0, (-4647), (-4647));
    }

    @Test(timeout = 4000)
    public void test03434() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("F@o!8");
        StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) null);
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
        strBuilder0.lastIndexOf(strMatcher0);
        char[] charArray0 = new char[8];
        charArray0[0] = '\\';
        charArray0[1] = '1';
        charArray0[2] = ';';
        charArray0[3] = '<';
        charArray0[4] = 'T';
        charArray0[5] = '_';
        charArray0[6] = 'H';
        charArray0[7] = ';';
        strBuilder1.append(charArray0, (-1), (-1));
    }

    @Test(timeout = 4000)
    public void test03535() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(1147);
        StrMatcher strMatcher0 = StrMatcher.trimMatcher();
        StrMatcher.charSetMatcher("VEvev5~fcs[");
        StrMatcher.stringMatcher("Invalid startIndex: ");
        strBuilder0.deleteAll(strMatcher0);
        StrBuilder strBuilder1 = strBuilder0.setNewLineText("VEvev5~fcs[");
        char[] charArray0 = new char[4];
        charArray0[0] = '#';
        charArray0[1] = '4';
        charArray0[2] = '8';
        charArray0[3] = 'Z';
        strBuilder1.appendln(charArray0, 1147, 1147);
    }

    @Test(timeout = 4000)
    public void test03636() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        StrBuilder strBuilder1 = strBuilder0.append("");
        StrBuilder strBuilder2 = new StrBuilder(0);
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
        StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
        strBuilder1.replaceFirst(strMatcher0, "");
        strBuilder0.append(true);
        strBuilder0.insert(0, "nOfir>3qi9T!m");
        StrBuilder strBuilder3 = strBuilder0.appendNewLine();
        strBuilder0.contains("nOfir>3qi9T!m");
        strBuilder3.appendln(true);
    }

    @Test(timeout = 4000)
    public void test03737() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        strBuilder0.toStringBuffer();
        StrMatcher strMatcher0 = StrMatcher.trimMatcher();
        char[] charArray0 = new char[6];
        charArray0[0] = 'G';
        charArray0[1] = 'v';
        charArray0[2] = 'F';
        charArray0[3] = ')';
        charArray0[4] = 'z';
        charArray0[5] = 'K';
        StrMatcher.charSetMatcher(charArray0);
        strBuilder0.replaceFirst(strMatcher0, "qJAKF$}f4^#)k}");
    }

    @Test(timeout = 4000)
    public void test03838() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(1);
        StrBuilder strBuilder1 = strBuilder0.appendln((long) 1);
        strBuilder1.replaceFirst("^}(QHCFk ]cM", "^}(QHCFk ]cM");
        StrBuilder strBuilder2 = strBuilder1.append(1);
        strBuilder2.equals((Object) "b-rZ@n:cnT*bzu`");
        StrBuilder strBuilder3 = strBuilder1.replaceAll("end < start", "end < start");
        char[] charArray0 = new char[9];
        charArray0[0] = 't';
        charArray0[1] = '@';
        charArray0[2] = 'P';
        charArray0[3] = '~';
        charArray0[4] = '*';
        charArray0[5] = '!';
        charArray0[6] = 'K';
        charArray0[7] = '/';
        charArray0[8] = 't';
        strBuilder3.append(charArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test03939() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((-480));
        strBuilder0.appendSeparator((String) null);
        strBuilder0.replaceAll('!', '!');
    }

    @Test(timeout = 4000)
    public void test04040() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        char[] charArray0 = new char[3];
        charArray0[0] = 'r';
        charArray0[1] = '8';
        charArray0[2] = 'a';
        strBuilder0.appendln(charArray0);
    }

    @Test(timeout = 4000)
    public void test04141() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        strBuilder_StrBuilderTokenizer0.hasPrevious();
        StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
        strBuilder0.appendAll((Iterator) strTokenizer0);
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
        String string0 = "25@0OSZLwh0BL7?S5";
        int int0 = (-3530);
        strBuilder_StrBuilderWriter0.write("25@0OSZLwh0BL7?S5", (-3530), (-3530));
    }

    @Test(timeout = 4000)
    public void test04242() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(false);
        strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "nX%?OQrc\"CY\"1z(nX*");
        strBuilder_StrBuilderWriter0.write(539);
        strBuilder0.appendFixedWidthPadLeft(48, 1972, 'R');
    }

    @Test(timeout = 4000)
    public void test04343() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        StrBuilder strBuilder1 = strBuilder0.insert(0, 'd');
        String string0 = "";
        strBuilder1.appendSeparator('d');
        int int0 = (-1396);
        strBuilder0.insert((-1396), (float) (-1396));
    }

    @Test(timeout = 4000)
    public void test04444() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        strBuilder_StrBuilderReader0.reset();
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
        strBuilder0.indexOf(strMatcher0, 0);
        strBuilder0.lastIndexOf('m');
        strBuilder0.trim();
        StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "2P.nU#v77@y", 0, 'H');
        strBuilder1.reverse();
    }

    @Test(timeout = 4000)
    public void test04545() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder strBuilder1 = strBuilder0.append(4090.064F);
        StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
        strBuilder1.contains(strMatcher0);
        StrBuilder strBuilder2 = strBuilder0.reverse();
        StringBuffer stringBuffer0 = new StringBuffer(0);
        strBuilder2.append(stringBuffer0, 3904, 1713);
    }

    @Test(timeout = 4000)
    public void test04646() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("aQGev(0");
        StrBuilder strBuilder1 = strBuilder0.setLength(0);
        strBuilder1.append(false);
        strBuilder1.appendFixedWidthPadLeft(0, 0, '$');
        strBuilder0.appendln((float) 0);
        strBuilder0.getNullText();
        strBuilder0.appendFixedWidthPadRight((Object) "aQGev(0", 0, '&');
    }

    @Test(timeout = 4000)
    public void test04747() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
        strBuilder1.setLength(779);
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        strBuilder_StrBuilderTokenizer0.getContent();
        char[] charArray0 = new char[7];
        charArray0[0] = 'J';
        charArray0[1] = 'r';
        charArray0[2] = 'p';
        charArray0[3] = 'x';
        charArray0[4] = 'c';
        charArray0[5] = '.';
        charArray0[6] = 'v';
        strBuilder0.insert(115, charArray0);
    }

    @Test(timeout = 4000)
    public void test04848() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("F8rnT");
        strBuilder0.insert(34, false);
    }

    @Test(timeout = 4000)
    public void test04949() throws Throwable {
        StrMatcher.stringMatcher("0sr$z5YcO{Qh!-");
        StrMatcher.stringMatcher("0sr$z5YcO{Qh!-");
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder strBuilder1 = new StrBuilder("evj=I");
        strBuilder0.appendln((Object) strBuilder1);
        StrMatcher.stringMatcher("");
        strBuilder0.trim();
    }

    @Test(timeout = 4000)
    public void test05050() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
        StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("Invalid offset: ");
        strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0);
        strBuilder0.indexOf('g', 0);
        StringBuffer stringBuffer0 = new StringBuffer("Invalid offset: ");
        StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
        stringBuffer0.insert(0, 0);
        strBuilder0.append(0);
        char[] charArray0 = new char[1];
        charArray0[0] = 'g';
        strBuilder1.getChars(charArray0);
        strBuilder0.insert(0, charArray0, 1547, 0);
    }

    @Test(timeout = 4000)
    public void test05151() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((-1411));
        char[] charArray0 = new char[2];
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        Object object0 = strBuilder_StrBuilderTokenizer0.clone();
        strBuilder0.appendFixedWidthPadLeft(object0, (-1411), 'I');
        charArray0[0] = '^';
        charArray0[1] = 'k';
        StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
        strBuilder0.lastIndexOf(strMatcher0);
        strBuilder0.insert((-1), 'B');
    }

    @Test(timeout = 4000)
    public void test05252() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("[-'7ZJ8:PDo");
        strBuilder0.contains((StrMatcher) null);
        strBuilder0.clear();
    }

    @Test(timeout = 4000)
    public void test05353() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        StrBuilder strBuilder1 = new StrBuilder("}Fks{,-}\"j");
        strBuilder0.append(strBuilder1, 0, 0);
        char[] charArray0 = strBuilder0.toCharArray(0, 0);
        strBuilder0.getNewLineText();
        StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
        StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
        strBuilder2.appendPadding(101, 'M');
        strBuilder0.contains((String) null);
        strBuilder0.clear();
        strBuilder1.append("}Fks{,-}\"j");
    }

    @Test(timeout = 4000)
    public void test05454() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("hfA.sSygE5K RmG>j@");
        strBuilder0.getNullText();
        Reader reader0 = strBuilder0.asReader();
        StrBuilder strBuilder1 = strBuilder0.appendln(1);
        Object[] objectArray0 = new Object[9];
        objectArray0[0] = (Object) strBuilder0;
        objectArray0[1] = (Object) null;
        objectArray0[2] = (Object) null;
        objectArray0[3] = (Object) null;
        objectArray0[4] = (Object) strBuilder1;
        objectArray0[5] = (Object) strBuilder0;
        objectArray0[6] = (Object) strBuilder1;
        objectArray0[7] = (Object) reader0;
        objectArray0[8] = (Object) strBuilder1;
        strBuilder1.appendWithSeparators(objectArray0, "");
        strBuilder0.append(strBuilder1);
    }

    @Test(timeout = 4000)
    public void test05555() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder strBuilder1 = new StrBuilder((-1976));
        strBuilder0.appendSeparator("length must be valid");
    }

    @Test(timeout = 4000)
    public void test05656() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("!cw?O'");
        StrMatcher strMatcher0 = StrMatcher.tabMatcher();
        StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "!cw?O'");
        strBuilder1.append(stringBuffer0, 5, 0);
        StrBuilder strBuilder2 = strBuilder0.deleteAll('2');
        strBuilder2.asReader();
        strBuilder0.appendSeparator(",@T \r *13=", 0);
        strBuilder0.insert(0, 0L);
        strBuilder1.minimizeCapacity();
    }

    @Test(timeout = 4000)
    public void test05757() throws Throwable {
        String string0 = "";
        StrBuilder strBuilder0 = new StrBuilder("");
        StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
        char[] charArray0 = new char[3];
        charArray0[0] = 'Z';
        strBuilder0.append(0L);
        charArray0[1] = '=';
        charArray0[2] = '{';
        strMatcher_NoMatcher0.isMatch(charArray0, 0);
        strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0, 0);
        StrBuilder strBuilder1 = strBuilder0.trim();
        strBuilder0.setLength(44);
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        strBuilder_StrBuilderReader0.close();
        strBuilder1.insert((-4608), false);
    }

    @Test(timeout = 4000)
    public void test05858() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder strBuilder1 = strBuilder0.appendln(0.0F);
        strBuilder1.setNullText("~lK+A\"=1tR");
        StrBuilder strBuilder2 = strBuilder0.setNewLineText("Invalid offset: ");
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
        strBuilder_StrBuilderReader0.reset();
        strBuilder_StrBuilderReader0.ready();
        strBuilder2.lastIndexOf('-', 0);
        StrBuilder strBuilder3 = strBuilder2.appendSeparator("~mx");
        strBuilder0.append("");
        strBuilder3.appendPadding(0, '8');
        strBuilder2.appendln((long) (-1));
        strBuilder1.indexOf('8', (-1));
    }

    @Test(timeout = 4000)
    public void test05959() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        StrBuilder strBuilder1 = new StrBuilder("hOe");
        strBuilder0.appendln((Object) strBuilder1);
        StrBuilder strBuilder2 = strBuilder0.appendln((Object) null);
        int int0 = 117;
        strBuilder0.delete(0, 0);
        strBuilder2.insert(117, 1092);
    }

    @Test(timeout = 4000)
    public void test06060() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        char char0 = 'C';
        String string0 = "";
        StrBuilder strBuilder1 = strBuilder0.replaceFirst("file.encoding", "");
        int int0 = (-3153);
        StringBuffer stringBuffer0 = new StringBuffer("");
        strBuilder1.appendln(stringBuffer0);
        strBuilder1.asWriter();
        int int1 = 3;
        strBuilder1.insert((-3153), (char[]) null, (-125), 3);
    }

    @Test(timeout = 4000)
    public void test06161() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, '?');
        int int0 = 97;
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(true);
        StrBuilder strBuilder2 = strBuilder0.appendAll((Iterator) strTokenizer0);
        strBuilder0.appendFixedWidthPadRight(1600, 97, '0');
        char[] charArray0 = new char[1];
        charArray0[0] = '?';
        strBuilder2.appendln(charArray0);
        strBuilder2.reverse();
        StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
        StrBuilder strBuilder3 = strBuilder1.deleteFirst((StrMatcher) strMatcher_NoMatcher0);
        String string0 = "SJx|R!R5YnYXU%";
        strBuilder3.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "SJx|R!R5YnYXU%");
        StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight(97, 0, '?');
        strBuilder4.insert((-739), 725.932F);
    }

    @Test(timeout = 4000)
    public void test06262() throws Throwable {
        String string0 = "";
        StrBuilder strBuilder0 = new StrBuilder("");
        StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
        char[] charArray0 = new char[3];
        charArray0[0] = 'Z';
        strBuilder0.append(0L);
        charArray0[1] = '=';
        charArray0[2] = '{';
        strMatcher_NoMatcher0.isMatch(charArray0, 0);
        strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0, 0);
        StrBuilder strBuilder1 = strBuilder0.trim();
        strBuilder0.indexOf('\'', (-4608));
        strBuilder0.setLength(44);
        StrBuilder strBuilder2 = strBuilder0.deleteAll((StrMatcher) strMatcher_NoMatcher0);
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
        strBuilder_StrBuilderReader0.close();
        strBuilder1.insert((-4608), false);
    }

    @Test(timeout = 4000)
    public void test06363() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
        char[] charArray0 = new char[9];
        charArray0[0] = 'R';
        charArray0[1] = '+';
        charArray0[2] = 'r';
        charArray0[3] = ')';
        charArray0[4] = 'A';
        charArray0[5] = 'w';
        charArray0[6] = 'X';
        charArray0[7] = '|';
        charArray0[8] = 'D';
        StrMatcher.charSetMatcher(charArray0);
        strBuilder0.lastIndexOf(strMatcher0);
        strBuilder0.append("N+yvh}", 97, 921);
    }

    @Test(timeout = 4000)
    public void test06464() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(44);
        char[] charArray0 = new char[8];
        charArray0[0] = 'J';
        char char0 = 'y';
        charArray0[1] = 'y';
        charArray0[2] = 't';
        charArray0[3] = '=';
        charArray0[4] = ',';
        charArray0[5] = '`';
        charArray0[6] = 'g';
        charArray0[7] = '|';
        strBuilder0.append(charArray0, 102, 0);
    }

    @Test(timeout = 4000)
    public void test06565() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        StrBuilder strBuilder1 = new StrBuilder("hOe");
        strBuilder0.appendln((Object) strBuilder1);
        StrBuilder strBuilder2 = strBuilder0.appendln((Object) null);
        strBuilder0.delete(0, 0);
        strBuilder2.insert(5, 1092);
        String string0 = "";
        strBuilder2.insert(117, "");
    }

    @Test(timeout = 4000)
    public void test06666() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder strBuilder1 = new StrBuilder((-1976));
        strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, (-1976), ')');
        strBuilder0.appendSeparator("length must be valid");
    }

    @Test(timeout = 4000)
    public void test06767() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder strBuilder1 = new StrBuilder(0);
        StrBuilder strBuilder2 = strBuilder1.append("StrTokenizer");
        StrBuilder strBuilder3 = strBuilder0.appendln(strBuilder1);
        strBuilder0.toString();
        Object[] objectArray0 = new Object[5];
        objectArray0[0] = (Object) "StrTokenizer";
        objectArray0[1] = (Object) strBuilder3;
        StringBuffer stringBuffer0 = new StringBuffer("");
        strBuilder2.append(stringBuffer0, 0, 0);
        objectArray0[2] = (Object) strBuilder0;
        objectArray0[3] = (Object) "StrTokenizer\n";
        objectArray0[4] = (Object) strBuilder1;
        strBuilder2.appendWithSeparators(objectArray0, "length must be valid");
        strBuilder3.append(strBuilder2, (-148), 57);
    }

    @Test(timeout = 4000)
    public void test06868() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
        strBuilder0.appendFixedWidthPadRight(object0, (-1066), 'r');
        strBuilder0.insert(0, (Object) "");
    }

    @Test(timeout = 4000)
    public void test06969() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        char char0 = '_';
        strBuilder_StrBuilderTokenizer0.setQuoteChar('_');
        int int0 = 4333;
        strBuilder0.append("sZfnd<-{", 0, 4333);
    }

    @Test(timeout = 4000)
    public void test07070() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((String) null);
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        strBuilder_StrBuilderTokenizer0.getContent();
        StrBuilder strBuilder1 = new StrBuilder(0);
        strBuilder0.appendln(strBuilder1);
    }

    @Test(timeout = 4000)
    public void test07171() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((String) null);
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        strBuilder0.leftString(46);
        strBuilder0.rightString(46);
        StrBuilder strBuilder1 = strBuilder0.appendln("w}?TDcHSVa_C\u0000]");
        strBuilder1.hashCode();
        strBuilder1.indexOf("xs{*:,");
    }

    @Test(timeout = 4000)
    public void test07272() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('i');
        StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
        Object[] objectArray0 = new Object[7];
        objectArray0[0] = (Object) "";
        objectArray0[1] = (Object) strBuilder_StrBuilderTokenizer0;
        objectArray0[2] = (Object) strBuilder0;
        objectArray0[3] = (Object) strBuilder1;
        objectArray0[4] = (Object) strTokenizer0;
        objectArray0[5] = (Object) "";
        objectArray0[6] = (Object) strBuilder0;
        strBuilder0.appendAll(objectArray0);
    }

    @Test(timeout = 4000)
    public void test07373() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(31);
        strBuilder0.substring(2749);
    }

    @Test(timeout = 4000)
    public void test07474() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        String string0 = null;
        StrBuilder strBuilder1 = strBuilder0.appendSeparator((String) null, 0);
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
        strBuilder_StrBuilderWriter0.append((CharSequence) null, 238, 0);
    }

    @Test(timeout = 4000)
    public void test07575() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((-727));
        int int0 = (-45);
        char char0 = 'o';
        StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-45), 5899, 'o');
        char[] charArray0 = new char[2];
        charArray0[0] = 'k';
        charArray0[1] = 'o';
        strBuilder1.getChars((-727), (-1745), charArray0, 0);
    }

    @Test(timeout = 4000)
    public void test07676() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        String string0 = null;
        StrBuilder strBuilder1 = new StrBuilder((String) null);
        StrBuilder strBuilder2 = strBuilder1.appendSeparator('e', (-1751));
        char[] charArray0 = new char[6];
        charArray0[0] = 'e';
        charArray0[1] = '{';
        charArray0[2] = 'e';
        charArray0[3] = 'e';
        charArray0[4] = 'e';
        charArray0[5] = 'e';
        strBuilder2.getChars(1364, (-1751), charArray0, (-1751));
    }

    @Test(timeout = 4000)
    public void test07777() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(5);
        StrBuilder strBuilder1 = new StrBuilder();
        char[] charArray0 = new char[2];
        strBuilder1.toStringBuffer();
        charArray0[1] = 'c';
        StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
        strBuilder1.appendAll((Iterator) strTokenizer0);
        strBuilder0.append(strBuilder1);
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        strBuilder_StrBuilderReader0.read(charArray0, 5, (-2594));
    }

    @Test(timeout = 4000)
    public void test07878() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("user.region");
        strBuilder0.clear();
        strBuilder0.capacity();
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        strBuilder_StrBuilderReader0.mark(43);
        strBuilder0.append((Object) "user.region");
        strBuilder0.append("java.util.prefs.PreferencesFactory", 43, 43);
    }

    @Test(timeout = 4000)
    public void test07979() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((String) null);
        Object[] objectArray0 = new Object[7];
        objectArray0[0] = (Object) strBuilder0;
        objectArray0[1] = (Object) strBuilder0;
        objectArray0[2] = (Object) null;
        objectArray0[3] = (Object) strBuilder0;
        objectArray0[4] = (Object) null;
        StrBuilder strBuilder1 = strBuilder0.append(731);
        objectArray0[5] = (Object) strBuilder0;
        objectArray0[6] = (Object) strBuilder0;
        strBuilder0.appendWithSeparators(objectArray0, (String) null);
        strBuilder0.capacity();
        StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        strBuilder2.validateRange(117, 731);
        strBuilder2.insert(253, (char[]) null);
        strBuilder2.insert(117, 'L');
        strBuilder0.rightString(731);
        strBuilder1.append(false);
    }

    @Test(timeout = 4000)
    public void test08080() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        strBuilder0.deleteFirst("E^|YbFb@Ba:A[Q");
        strBuilder0.toStringBuffer();
    }

    @Test(timeout = 4000)
    public void test08181() throws Throwable {
        int int0 = 5;
        StrBuilder strBuilder0 = new StrBuilder(5);
        StrBuilder strBuilder1 = new StrBuilder();
        char[] charArray0 = new char[2];
        strBuilder1.toStringBuffer();
        charArray0[0] = 'n';
        char char0 = 'c';
        charArray0[1] = 'c';
        StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
        strBuilder1.appendAll((Iterator) strTokenizer0);
        StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
        int int1 = (-1871);
        int int2 = 0;
        StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((-1871), 0, 'n');
        String string0 = "4.1";
        strBuilder3.deleteFirst("4.1");
        int int3 = (-13);
        strBuilder3.getChars(0, (-2013), charArray0, (-13));
    }

    @Test(timeout = 4000)
    public void test08282() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("M&Us");
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        strBuilder_StrBuilderReader0.read();
    }

    @Test(timeout = 4000)
    public void test08383() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("");
        StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(48, 0, 'q');
        StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
        strBuilder0.indexOf(strMatcher0, 0);
        strBuilder1.minimizeCapacity();
        strBuilder0.deleteFirst("");
        strBuilder0.append(strBuilder1);
    }

    @Test(timeout = 4000)
    public void test08484() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        strBuilder0.endsWith("'-!4W[0we($ST");
        Object[] objectArray0 = new Object[9];
        objectArray0[0] = (Object) "'-!4W[0we($ST";
        objectArray0[1] = (Object) strBuilder0;
        objectArray0[2] = (Object) strBuilder0;
        objectArray0[3] = (Object) strBuilder0;
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        Object object0 = strBuilder_StrBuilderTokenizer0.clone();
        objectArray0[4] = object0;
        objectArray0[5] = (Object) strBuilder0;
        objectArray0[6] = (Object) strBuilder0;
        objectArray0[7] = (Object) "'-!4W[0we($ST";
        objectArray0[8] = (Object) strBuilder0;
        strBuilder0.appendWithSeparators(objectArray0, "");
    }

    @Test(timeout = 4000)
    public void test08585() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("java.specification.name");
        StringBuffer stringBuffer0 = new StringBuffer(0);
        strBuilder0.append(stringBuffer0, 0, 0);
        int int0 = 1420;
        StrBuilder strBuilder1 = strBuilder0.setLength(1420);
        StrBuilder strBuilder2 = strBuilder1.insert(1420, (Object) "java.specification.name");
        strBuilder2.minimizeCapacity();
        String string0 = "";
        strBuilder2.endsWith("");
        StrMatcher strMatcher0 = StrMatcher.tabMatcher();
        strBuilder1.lastIndexOf(strMatcher0, 0);
        strBuilder0.insert((-1415), false);
    }

    @Test(timeout = 4000)
    public void test08686() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
        char[] charArray0 = new char[3];
        charArray0[0] = '4';
        charArray0[1] = 'f';
        charArray0[2] = '}';
        strMatcher0.isMatch(charArray0, 3724, 3724, 3724);
        strBuilder0.append((StrBuilder) null, 0, 0);
        StrMatcher.charMatcher('U');
        strBuilder0.indexOf(strMatcher0, 1955);
        strBuilder0.lastIndexOf('w');
    }

    @Test(timeout = 4000)
    public void test08787() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("j=:4,XR*");
        int int0 = 9;
        strBuilder0.appendSeparator("j=:4,XR*", 9);
        StrBuilder strBuilder1 = new StrBuilder(9);
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
        char char0 = '+';
        StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('+');
        strBuilder1.appendAll((Iterator) strTokenizer0);
        int int1 = 4;
        strBuilder0.append(strBuilder1, 4, 9);
    }

    @Test(timeout = 4000)
    public void test08888() throws Throwable {
        String string0 = "&=a='<@]7\"SL)mn";
        StrBuilder strBuilder0 = new StrBuilder("&=a='<@]7\"SL)mn");
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        char[] charArray0 = null;
        strBuilder_StrBuilderReader0.read();
        int int0 = (-686);
        strBuilder_StrBuilderReader0.read((char[]) null, (-2715), (-686));
    }

    @Test(timeout = 4000)
    public void test08989() throws Throwable {
        int int0 = 0;
        StrBuilder strBuilder0 = new StrBuilder(0);
        char char0 = 'X';
        strBuilder0.contains('X');
        String string0 = "";
        StrBuilder strBuilder1 = strBuilder0.appendln("");
        char char1 = '4';
        StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(0, 0, '4');
        StrBuilder strBuilder3 = strBuilder2.appendSeparator("", 0);
        strBuilder3.appendln('X');
        strBuilder2.asWriter();
        int int1 = 1;
        strBuilder1.validateRange(1, 0);
    }

    @Test(timeout = 4000)
    public void test09090() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        int int0 = (-632);
        strBuilder0.validateIndex((-632));
    }

    @Test(timeout = 4000)
    public void test09191() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder strBuilder1 = strBuilder0.insert(0, (-1L));
        strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
        strBuilder_StrBuilderWriter0.write(0);
        char[] charArray0 = new char[4];
        charArray0[0] = '9';
        charArray0[1] = '>';
        charArray0[2] = '0';
        charArray0[3] = 'K';
        strBuilder0.insert(0, charArray0);
    }

    @Test(timeout = 4000)
    public void test09292() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder strBuilder1 = new StrBuilder();
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, (-416), '[');
        strBuilder0.append("", (-2537), 0);
    }

    @Test(timeout = 4000)
    public void test09393() throws Throwable {
        String string0 = "V!^/XJ_6vB*2=";
        StrBuilder strBuilder0 = new StrBuilder("V!^/XJ_6vB*2=");
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        char[] charArray0 = new char[0];
        strBuilder_StrBuilderReader0.read(charArray0);
        int int0 = (-1645);
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-1645));
    }

    @Test(timeout = 4000)
    public void test09494() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("T0/f*");
        int int0 = 0;
        char[] charArray0 = new char[4];
        charArray0[0] = '[';
        charArray0[1] = '0';
        charArray0[2] = ';';
        charArray0[3] = '1';
        strBuilder0.getChars(0, 0, charArray0, (-2003));
    }

    @Test(timeout = 4000)
    public void test09595() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        strBuilder0.size = 0;
        strBuilder0.indexOf((StrMatcher) null);
        StrBuilder strBuilder1 = strBuilder0.appendln(0);
        StrBuilder strBuilder2 = strBuilder1.reverse();
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
        strBuilder_StrBuilderWriter0.write("EqpZb${bEh%!", 0, 0);
        String string0 = "OIc!";
        strBuilder_StrBuilderWriter0.write("OIc!", 0, 0);
        strBuilder2.insert(0, (-262));
        strBuilder0.replaceAll((StrMatcher) null, "[OOjOzI4+*E@6oCP+T_");
        strBuilder1.substring(0);
        strBuilder_StrBuilderWriter0.write("OIc!", 1515, 2);
    }

    @Test(timeout = 4000)
    public void test09696() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder strBuilder1 = strBuilder0.append(579.8806005091);
        strBuilder1.append(0.0F);
        StringBuffer stringBuffer0 = new StringBuffer();
        strBuilder0.insert(1892, 'b');
    }

    @Test(timeout = 4000)
    public void test09797() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("e\"l^5QU3z");
        strBuilder0.minimizeCapacity();
        strBuilder0.asTokenizer();
        strBuilder0.toString();
        strBuilder0.size = 4207;
        strBuilder0.hashCode();
    }

    @Test(timeout = 4000)
    public void test09898() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        String string0 = "user.timezone";
        strBuilder0.appendSeparator("user.timezone");
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        char[] charArray0 = new char[1];
        charArray0[0] = 'H';
        strBuilder_StrBuilderReader0.read(charArray0, 2446, 1048);
    }

    @Test(timeout = 4000)
    public void test09999() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        char[] charArray0 = new char[5];
        charArray0[0] = 'D';
        charArray0[1] = 'z';
        charArray0[2] = 'w';
        charArray0[3] = 'R';
        charArray0[4] = '0';
        StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
        LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
        StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "2BW?qhEvAf^M");
        strBuilder1.buffer = charArray0;
        StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
        strBuilder1.replaceAll(strMatcher0, "53r^xfe!*`l@X17Z[.");
        StrBuilder strBuilder3 = strBuilder1.appendSeparator("6EcMg", 0);
        strBuilder1.getChars(charArray0);
        StrBuilder strBuilder4 = strBuilder1.insert(0, "(b&`n\"K&gHsATfMT<");
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
        strBuilder_StrBuilderTokenizer0.setIgnoredChar('R');
        StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
        strBuilder2.deleteFirst(strMatcher1);
        strBuilder4.insert((-2479), (-215));
    }

    @Test(timeout = 4000)
    public void test100100() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(1817);
        strBuilder0.setCharAt((-3445), 'T');
    }

    @Test(timeout = 4000)
    public void test101101() throws Throwable {
        int int0 = (-1286);
        StrBuilder strBuilder0 = new StrBuilder((-1286));
        int int1 = 44;
        strBuilder0.charAt(44);
    }

    @Test(timeout = 4000)
    public void test102102() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
        strBuilder_StrBuilderWriter0.write((String) null, 0, 2);
        strBuilder_StrBuilderWriter0.write(138);
    }

    @Test(timeout = 4000)
    public void test103103() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("");
        strBuilder0.setCharAt(0, 'Z');
    }

    @Test(timeout = 4000)
    public void test104104() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        int int0 = 500;
        char char0 = 'I';
        strBuilder0.setCharAt(500, 'I');
    }

    @Test(timeout = 4000)
    public void test105105() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        strBuilder0.ensureCapacity(1950);
        int int0 = 101;
        strBuilder0.charAt(101);
    }

    @Test(timeout = 4000)
    public void test106106() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((String) null);
        int int0 = 3;
        strBuilder0.append(3);
        strBuilder0.insert(3, 3);
    }

    @Test(timeout = 4000)
    public void test107107() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("1.5");
        strBuilder0.replaceAll('B', 'B');
    }

    @Test(timeout = 4000)
    public void test108108() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(5);
        StrBuilder strBuilder1 = strBuilder0.appendln(false);
        char[] charArray0 = new char[8];
        strBuilder1.appendln(0L);
        charArray0[0] = 'X';
        charArray0[1] = '=';
        charArray0[2] = 'b';
        charArray0[3] = 'a';
        charArray0[4] = ' ';
        charArray0[5] = 'E';
        charArray0[6] = 'N';
        charArray0[7] = 'l';
        strBuilder1.append(charArray0, 5, (-65));
    }

    @Test(timeout = 4000)
    public void test109109() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "WHu-'I|;vxdN");
        strBuilder1.appendSeparator('m');
        strBuilder0.appendWithSeparators((Collection) linkedList0, "WHu-'I|;vxdN");
        StrBuilder strBuilder2 = strBuilder0.deleteAll(' ');
        strBuilder2.appendSeparator('j', 0);
        StrBuilder strBuilder3 = strBuilder0.appendAll((Collection) linkedList0);
        strBuilder3.appendWithSeparators((Collection) linkedList0, "WHu-'I|;vxdN");
        strBuilder0.appendln(false);
        StrBuilder strBuilder4 = strBuilder2.append((char[]) null, 1720, 0);
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
        StringBuffer stringBuffer0 = new StringBuffer(0);
        strBuilder4.appendln(stringBuffer0);
        strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, 48, 1720);
        strBuilder3.append((long) 0);
    }

    @Test(timeout = 4000)
    public void test110110() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("");
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        char[] charArray0 = new char[8];
        charArray0[0] = 'k';
        charArray0[1] = '\'';
        charArray0[2] = '!';
        StrTokenizer.getTSVInstance(charArray0);
        charArray0[3] = '}';
        charArray0[4] = 'j';
        char char0 = 'H';
        charArray0[5] = 'H';
        charArray0[6] = 'A';
        charArray0[7] = '$';
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 428);
    }

    @Test(timeout = 4000)
    public void test111111() throws Throwable {
        int int0 = (-1644);
        StrBuilder strBuilder0 = new StrBuilder((-1644));
        StrMatcher strMatcher0 = StrMatcher.trimMatcher();
        String string0 = "\\,H| Do&";
        int int1 = 3933;
        strBuilder0.replace(strMatcher0, ",H| Do&", 3933, 3933, 3933);
    }

    @Test(timeout = 4000)
    public void test112112() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        String string0 = "startIndex must be valid";
        StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("startIndex must be valid");
        StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_StringMatcher0);
        strBuilder0.indexOf("`_IQ1EK}", 39);
        StrBuilder strBuilder2 = strBuilder1.append((-1));
        Object[] objectArray0 = new Object[3];
        objectArray0[0] = (Object) strMatcher_StringMatcher0;
        StrMatcher.stringMatcher("startIndex must be valid");
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
        strBuilder_StrBuilderTokenizer0.hasPrevious();
        strBuilder_StrBuilderTokenizer0.next();
        objectArray0[1] = (Object) "-1";
        StrMatcher.stringMatcher("Invalid length: ");
        objectArray0[2] = (Object) "startIndex must be valid";
        strBuilder0.appendWithSeparators(objectArray0, "java.io.tmpdir");
        strBuilder0.minimizeCapacity();
        strBuilder2.insert(39, '`');
        int int0 = 0;
        strBuilder0.replace(0, (-1311), "");
    }

    @Test(timeout = 4000)
    public void test113113() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        String string0 = "";
        StrBuilder strBuilder1 = new StrBuilder("");
        int int0 = (-1);
        strBuilder0.appendln(strBuilder1, (-1), (-1));
    }

    @Test(timeout = 4000)
    public void test114114() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        strBuilder0.append(0);
        char char0 = '9';
        StrBuilder strBuilder1 = strBuilder0.replaceFirst('9', '9');
        strBuilder1.replace((-884), (-1048), "7|*=^[pK|s-P58");
    }

    @Test(timeout = 4000)
    public void test115115() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("!cw?O'");
        StrMatcher strMatcher0 = StrMatcher.tabMatcher();
        StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "!cw?O'");
        strBuilder1.append(stringBuffer0, 5, 0);
        StrBuilder strBuilder2 = strBuilder0.deleteAll('2');
        char[] charArray0 = new char[6];
        charArray0[0] = '2';
        charArray0[1] = '2';
        charArray0[2] = '2';
        charArray0[3] = '2';
        charArray0[4] = '`';
        charArray0[5] = '2';
        StrBuilder strBuilder3 = strBuilder2.appendln(charArray0);
        strBuilder2.asReader();
        strBuilder0.appendSeparator(",@T \r *13=", 0);
        strBuilder0.insert(0, 0L);
        StrBuilder strBuilder4 = strBuilder3.replaceFirst('2', '`');
        strBuilder1.minimizeCapacity();
        strBuilder4.appendSeparator(",@T \r *13=");
    }

    @Test(timeout = 4000)
    public void test116116() throws Throwable {
        String string0 = "> 2$q @(zkv()&";
        StrBuilder strBuilder0 = new StrBuilder("> 2$q @(zkv()&");
        StrBuilder strBuilder1 = strBuilder0.appendln(0.0F);
        strBuilder1.appendln((-4821L));
        strBuilder1.asTokenizer();
        strBuilder0.appendFixedWidthPadRight(32, 32, '');
        StringBuffer stringBuffer0 = new StringBuffer("> 2$q @(zkv()&");
        int int0 = 0;
        int int1 = (-2129);
        strBuilder1.appendln(stringBuffer0, 0, (-2129));
    }

    @Test(timeout = 4000)
    public void test117117() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("UPjo(AzNrC%:");
        StrBuilder strBuilder1 = strBuilder0.append(0.0);
        char char0 = 'n';
        strBuilder1.deleteFirst('n');
        strBuilder0.append((-1935.59F));
        int int0 = (-1777);
        strBuilder0.insert((-1777), "UPjo(AzNrC%:");
    }

    @Test(timeout = 4000)
    public void test118118() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        strBuilder0.replace((StrMatcher) null, "B iI'(", 0, 0, 57);
        int int0 = 26;
        strBuilder0.size = 26;
        StrBuilder strBuilder1 = strBuilder0.deleteFirst('(');
        strBuilder0.append((long) 26);
        strBuilder0.leftString(26);
        strBuilder0.capacity();
        strBuilder1.insert(32, 'O');
    }

    @Test(timeout = 4000)
    public void test119119() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("OmsjU;A*2A$S");
        strBuilder0.substring(5);
        StrBuilder strBuilder1 = strBuilder0.deleteAll(";A*2A$S");
        strBuilder1.deleteAll('H');
        strBuilder0.asTokenizer();
        strBuilder0.replaceAll("OmsjU;A*2A$S", "OmsjU;A*2A$S");
    }

    @Test(timeout = 4000)
    public void test120120() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((-818));
        StrMatcher.splitMatcher();
        char[] charArray0 = new char[2];
        charArray0[0] = 'V';
        strBuilder0.appendNull();
        charArray0[1] = '@';
        strBuilder0.getChars((-818), (-818), charArray0, (-2146));
    }

    @Test(timeout = 4000)
    public void test121121() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("user.language");
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        linkedList0.remove((Object) "user.language");
        strBuilder0.appendAll((Collection) linkedList0);
        strBuilder0.appendNewLine();
    }

    @Test(timeout = 4000)
    public void test122122() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(">");
        strBuilder0.appendSeparator('1', 0);
    }

    @Test(timeout = 4000)
    public void test123123() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        strBuilder_StrBuilderTokenizer0.hasNext();
        StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("'a_Id_QlqU?qMg?^#%W");
        StrBuilder strBuilder1 = strBuilder0.appendAll((Iterator) strTokenizer0);
        String string0 = "Invalid startIndex: ";
        strBuilder0.deleteAll("Invalid startIndex: ");
        strBuilder1.appendln(0);
        strBuilder0.charAt(0);
        strBuilder0.endsWith("Invalid startIndex: ");
        strBuilder1.trim();
        strBuilder0.append(0.0);
        StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-968));
        strBuilder2.appendln(strBuilder1, 44, 39);
    }

    @Test(timeout = 4000)
    public void test124124() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((String) null);
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
        strBuilder0.indexOf((StrMatcher) null, 514);
        strBuilder1.asTokenizer();
        StrBuilder strBuilder2 = strBuilder1.append((long) (-1));
        strBuilder2.asWriter();
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
        strBuilder_StrBuilderWriter0.flush();
    }

    @Test(timeout = 4000)
    public void test125125() throws Throwable {
        String string0 = "java.vm.info";
        StrBuilder strBuilder0 = new StrBuilder("java.vm.info");
        int int0 = 1647;
        strBuilder0.delete(1647, 1647);
    }

    @Test(timeout = 4000)
    public void test126126() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        char[] charArray0 = new char[6];
        charArray0[0] = 'a';
        charArray0[1] = '.';
        charArray0[3] = 'a';
        charArray0[4] = '/';
        charArray0[5] = '[';
        strBuilder0.append(charArray0);
    }

    @Test(timeout = 4000)
    public void test127127() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        StrBuilder strBuilder1 = strBuilder0.deleteAll("");
        strBuilder1.append(0);
        strBuilder1.replaceFirst("", "3($^nL:uM.7pnb]");
        strBuilder1.indexOf("java.vm.name");
        char[] charArray0 = new char[9];
        charArray0[0] = 'm';
        charArray0[1] = '$';
        charArray0[2] = 'G';
        charArray0[3] = 'Y';
        charArray0[4] = '0';
        charArray0[5] = 'Z';
        charArray0[6] = ']';
        charArray0[7] = 't';
        charArray0[8] = 'c';
        strBuilder0.insert(0, charArray0);
    }

    @Test(timeout = 4000)
    public void test128128() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        StrMatcher strMatcher0 = StrMatcher.trimMatcher();
        strBuilder0.indexOf(strMatcher0);
        StrBuilder strBuilder1 = new StrBuilder();
        char[] charArray0 = new char[4];
        charArray0[0] = '\"';
        charArray0[1] = '@';
        charArray0[2] = 'F';
        charArray0[3] = ',';
        strBuilder1.insert(0, charArray0, (-1), 0);
    }

    @Test(timeout = 4000)
    public void test129129() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder0.new StrBuilderTokenizer();
        StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer1.getQuoteMatcher();
        strBuilder0.appendNull();
        strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
        strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, 31, 578);
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "startIndex must be valid");
        stringBuffer0.appendCodePoint(9);
        StrBuilder strBuilder1 = strBuilder0.appendln(stringBuffer0);
        strMatcher0.isMatch((char[]) null, 5, 2553, 9);
        strBuilder0.deleteAll("");
        strBuilder1.replace(strMatcher0, "", 31, 578, 31);
        strBuilder0.setNewLineText("HP-UX");
        strBuilder1.substring(31);
        strBuilder1.append(true);
        char[] charArray0 = new char[3];
        charArray0[0] = '';
        charArray0[1] = 'R';
        charArray0[2] = '\'';
        strBuilder0.insert(0, charArray0);
    }

    @Test(timeout = 4000)
    public void test130130() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StringBuffer stringBuffer0 = new StringBuffer();
        StrBuilder strBuilder1 = strBuilder0.append(0L);
        strBuilder1.appendln(0L);
        StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
        StrBuilder strBuilder3 = strBuilder0.appendln(stringBuffer0);
        strBuilder3.replace(0, 0, "qJNt5V[5(A?N}qe");
        StrBuilder strBuilder4 = strBuilder0.appendSeparator('%');
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
        StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(false);
        strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
    }

    @Test(timeout = 4000)
    public void test131131() throws Throwable {
        int int0 = 934;
        StrBuilder strBuilder0 = new StrBuilder(934);
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
        char[] charArray0 = new char[3];
        strBuilder_StrBuilderWriter0.write(charArray0, 934, (-1008));
    }

    @Test(timeout = 4000)
    public void test132132() throws Throwable {
        String string0 = " K,ZgkkB4El|e";
        StrBuilder strBuilder0 = new StrBuilder(" K,ZgkkB4El|e");
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
        char char0 = 'L';
        StrBuilder strBuilder1 = strBuilder0.deleteAll('L');
        StrBuilder strBuilder2 = strBuilder1.appendNull();
        strBuilder2.appendln('L');
        int int0 = (-2418);
        strBuilder0.toCharArray((-2418), (-2418));
    }

    @Test(timeout = 4000)
    public void test133133() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        char[] charArray0 = new char[2];
        charArray0[0] = 'n';
        charArray0[1] = '<';
        StrBuilder strBuilder1 = strBuilder0.append(charArray0);
        StrBuilder strBuilder2 = strBuilder0.append(1412.6066152908295);
        strBuilder2.lastIndexOf("kkf'V", 0);
        int int0 = 32;
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
        Object object0 = strBuilder_StrBuilderTokenizer0.clone();
        strBuilder1.insert(32, object0);
    }

    @Test(timeout = 4000)
    public void test134134() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("00}nq%<");
        strBuilder0.indexOf("m~");
        strBuilder0.startsWith("SO]1");
    }

    @Test(timeout = 4000)
    public void test135135() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(39);
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        StrBuilder strBuilder1 = strBuilder0.clear();
        StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
        strBuilder0.indexOf(strMatcher0, 39);
        strBuilder1.appendPadding((-4025), 'n');
        char char0 = 'E';
        strBuilder0.lastIndexOf('E');
        strBuilder1.startsWith("");
        strBuilder1.toCharArray((-1), (-1));
    }

    @Test(timeout = 4000)
    public void test136136() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        char[] charArray0 = new char[1];
        charArray0[0] = '(';
        char[] charArray1 = strBuilder0.getChars(charArray0);
        strBuilder0.leftString(0);
        StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
        StrMatcher.charMatcher('/');
        StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_NoMatcher0);
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
        stringBuffer0.insert(0, (CharSequence) "", 0, 0);
        strBuilder0.append(stringBuffer0);
        StrMatcher strMatcher0 = StrMatcher.commaMatcher();
        stringBuffer0.append(0L);
        strBuilder1.indexOf(strMatcher0);
        strBuilder1.append("[Iv[? &{", 0, 0);
        StrMatcher.charSetMatcher("add() is unsupported");
        int int0 = 0;
        strBuilder1.insert(4, charArray1, 4, 0);
    }

    @Test(timeout = 4000)
    public void test137137() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        String string0 = "xLN+>^&S\"@";
        StrBuilder strBuilder1 = strBuilder0.deleteAll("xLN+>^&S\"@");
        strBuilder1.toStringBuffer();
        char[] charArray0 = new char[2];
        charArray0[0] = 'K';
        charArray0[1] = '0';
        StrBuilder strBuilder2 = strBuilder0.append(charArray0);
        StrBuilder strBuilder3 = strBuilder2.appendln(4672);
        strBuilder3.leftString((-1073));
        strBuilder0.startsWith("");
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
        char[] charArray1 = new char[9];
        charArray1[0] = 'K';
        charArray1[1] = '0';
        charArray1[2] = '0';
        charArray1[3] = 'K';
        charArray1[4] = '0';
        charArray1[5] = '0';
        charArray1[6] = '0';
        charArray1[7] = '0';
        charArray1[8] = 'K';
        strBuilder_StrBuilderWriter0.write(charArray1, (-652), 97);
    }

    @Test(timeout = 4000)
    public void test138138() throws Throwable {
        int int0 = 1494;
        StrBuilder strBuilder0 = new StrBuilder(1494);
        StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1494, 5, 'e');
        String string0 = null;
        StrBuilder strBuilder2 = strBuilder1.append((String) null);
        char[] charArray0 = new char[8];
        charArray0[0] = 'e';
        charArray0[1] = 'e';
        charArray0[2] = 'e';
        charArray0[3] = 'K';
        charArray0[4] = 'e';
        charArray0[5] = 'e';
        charArray0[6] = 'n';
        charArray0[7] = 'e';
        strBuilder2.insert(1494, charArray0);
    }

    @Test(timeout = 4000)
    public void test139139() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder strBuilder1 = strBuilder0.clear();
        strBuilder1.appendSeparator("g?G", (-1));
        int int0 = 0;
        String string0 = null;
        StrBuilder strBuilder2 = strBuilder1.appendln((String) null);
        strBuilder2.append((float) 0);
        String string1 = "=F\\";
        strBuilder1.replace(501, 0, "=F");
    }

    @Test(timeout = 4000)
    public void test140140() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        StrBuilder strBuilder1 = strBuilder0.append((double) 0);
        StrBuilder strBuilder2 = new StrBuilder(" O9'^, B1?:[!Xro._$");
        StrBuilder strBuilder3 = strBuilder0.appendln(strBuilder2);
        strBuilder3.deleteCharAt(0);
        strBuilder1.appendPadding(0, 'y');
    }

    @Test(timeout = 4000)
    public void test141141() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(1373);
        strBuilder0.appendFixedWidthPadLeft((Object) "z?8BI%.?IOfF", 1373, '@');
        char[] charArray0 = new char[0];
        StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
        StrMatcher.charSetMatcher("");
        StrMatcher.charSetMatcher(charArray0);
        strBuilder0.indexOf((StrMatcher) strMatcher_CharSetMatcher0, 1373);
        strBuilder0.asReader();
        StrBuilder strBuilder1 = strBuilder0.insert(3, 1373);
        strBuilder1.insert(1373, charArray0);
    }

    @Test(timeout = 4000)
    public void test142142() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(7);
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
        strBuilder_StrBuilderWriter0.close();
    }

    @Test(timeout = 4000)
    public void test143143() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        StrBuilder strBuilder1 = strBuilder0.insert(0, true);
        StrBuilder strBuilder2 = strBuilder1.appendln(strBuilder0);
        StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
        strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, 0);
        StrBuilder strBuilder3 = strBuilder0.setLength(1959);
        strBuilder0.contains((StrMatcher) null);
        StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
        strBuilder0.endsWith("");
        StrBuilder strBuilder4 = strBuilder0.appendln((double) 0);
        strBuilder2.equalsIgnoreCase(strBuilder4);
        strBuilder4.substring(0);
        StrBuilder strBuilder5 = strBuilder0.appendAll((Iterator) strTokenizer0);
        strBuilder5.midString(1, 1);
        strBuilder5.asReader();
        strBuilder5.toString();
        strBuilder0.midString(114, 2859);
        strBuilder2.indexOf((StrMatcher) strMatcher_NoMatcher0);
        strBuilder3.insert(989, true);
        strBuilder4.deleteCharAt(114);
    }

    @Test(timeout = 4000)
    public void test144144() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        char[] charArray0 = new char[7];
        charArray0[0] = 'B';
        charArray0[1] = 'E';
        char char0 = 'f';
        int int0 = 57;
        int int1 = 0;
        strBuilder0.getChars(57, 0, charArray0, 0);
    }

    @Test(timeout = 4000)
    public void test145145() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(9);
        strBuilder0.toString();
        strBuilder0.deleteCharAt(53);
    }

    @Test(timeout = 4000)
    public void test146146() throws Throwable {
        String string0 = "2P,obrHA.QSc}M";
        StrBuilder strBuilder0 = new StrBuilder("2P,obrHA.QSc}M");
        StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("2P,obrHA.QSc}M");
        char char0 = '\\';
        StrMatcher.charMatcher('\\');
        strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0);
        StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_StringMatcher0);
        strBuilder1.appendNewLine();
        strBuilder1.ensureCapacity((-2706));
        int int0 = 2;
        strBuilder1.deleteCharAt(2);
    }

    @Test(timeout = 4000)
    public void test147147() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("");
        int int0 = (-1541);
        strBuilder0.substring((-1541), (-1541));
    }

    @Test(timeout = 4000)
    public void test148148() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        char char0 = 'Z';
        StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-3023), (-3023), 'k');
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
        char[] charArray0 = new char[9];
        charArray0[1] = 'y';
        charArray0[2] = 'Z';
        charArray0[3] = 'Z';
        charArray0[4] = 'k';
        charArray0[5] = 'Z';
        charArray0[6] = 'Z';
        charArray0[7] = 'Z';
        charArray0[8] = 'Z';
        StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
        strBuilder1.appendAll((Iterator) strTokenizer0);
        strBuilder0.appendSeparator('Z', (int) 'Z');
        StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(97, (-1606), 'k');
        strBuilder3.substring((int) 'Z', 0);
    }

    @Test(timeout = 4000)
    public void test149149() throws Throwable {
        int int0 = (-1);
        StrBuilder strBuilder0 = new StrBuilder((-1));
        char[] charArray0 = new char[0];
        strBuilder0.appendln(charArray0);
        StrBuilder strBuilder1 = strBuilder0.append((double) (-1));
        StrBuilder strBuilder2 = strBuilder1.append((-1273));
        int int1 = 0;
        StrBuilder strBuilder3 = strBuilder2.appendln(strBuilder1, 0, 5);
        strBuilder3.insert(0, charArray0, 32, 427);
    }

    @Test(timeout = 4000)
    public void test150150() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder strBuilder1 = new StrBuilder();
        StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
        StrBuilder strBuilder3 = strBuilder2.append(false);
        strBuilder0.startsWith("");
        StrBuilder strBuilder4 = strBuilder0.replaceAll("", "");
        strBuilder4.leftString(2255);
        StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
        strBuilder0.lastIndexOf(strMatcher0, 0);
        StrBuilder strBuilder5 = strBuilder1.appendln((double) 0);
        strBuilder1.substring(0, 723);
        strBuilder5.setNewLineText("\nYt$6%kn");
        LinkedList<String> linkedList0 = new LinkedList<String>();
        Object[] objectArray0 = new Object[4];
        objectArray0[0] = (Object) "\nYt$6%kn";
        objectArray0[1] = (Object) "";
        objectArray0[2] = (Object) "";
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
        Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
        objectArray0[3] = object0;
        strBuilder4.appendAll(objectArray0);
        StrBuilder strBuilder6 = strBuilder4.appendAll((Collection) linkedList0);
        strBuilder6.setNewLineText("org.apache.commons.lang.text.StrBuilder@0000000002false");
        strBuilder4.indexOf('+');
    }

    @Test(timeout = 4000)
    public void test151151() throws Throwable {
        String string0 = "NAUa0Jo/(HK*3";
        StrBuilder strBuilder0 = new StrBuilder("NAUa0Jo/(HK*3");
        strBuilder0.endsWith("NAUa0Jo/(HK*3");
        int int0 = 1218;
        char char0 = 'g';
        StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1218, 1218, 'g');
        StrBuilder strBuilder2 = strBuilder0.appendln(1.0);
        strBuilder2.clear();
        StrBuilder strBuilder3 = strBuilder2.deleteAll((StrMatcher) null);
        int int1 = 272;
        strBuilder2.midString((-198), 272);
        StrBuilder strBuilder4 = strBuilder1.reverse();
        int int2 = 2089;
        strBuilder3.append(strBuilder4, 0, 2089);
    }

    @Test(timeout = 4000)
    public void test152152() throws Throwable {
        int int0 = 0;
        StrBuilder strBuilder0 = new StrBuilder(0);
        char char0 = '\\';
        char[] charArray0 = new char[1];
        charArray0[0] = '\\';
        strBuilder0.insert(0, charArray0, 0, 0);
        strBuilder0.indexOf('\\', 5);
        StrBuilder strBuilder1 = new StrBuilder();
        StrMatcher strMatcher0 = StrMatcher.noneMatcher();
        strBuilder0.lastIndexOf(strMatcher0);
        strBuilder0.appendFixedWidthPadLeft(115, (-1), '\\');
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
        strBuilder0.appendFixedWidthPadRight(5, 0, '%');
        StrTokenizer.getCSVInstance();
        strBuilder_StrBuilderTokenizer0.previous();
    }

    @Test(timeout = 4000)
    public void test153153() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("");
        int int0 = (-1371);
        StrBuilder strBuilder1 = strBuilder0.appendln((String) null, 354, 354);
        StrBuilder strBuilder2 = strBuilder1.setLength(354);
        strBuilder2.validateRange((-1371), 0);
    }

    @Test(timeout = 4000)
    public void test154154() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(92);
        strBuilder0.appendFixedWidthPadRight(92, 92, '{');
        Object[] objectArray0 = new Object[1];
        objectArray0[0] = (Object) strBuilder0;
        StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(objectArray0[0], 0, 'y');
        strBuilder1.appendln(0.0F);
        StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
        strBuilder2.append(strBuilder1);
        strBuilder1.asTokenizer();
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        strBuilder_StrBuilderReader0.markSupported();
    }

    @Test(timeout = 4000)
    public void test155155() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("303~[");
        StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
        strBuilder0.indexOf(strMatcher0);
        StrBuilder strBuilder1 = new StrBuilder((-1));
        StrBuilder strBuilder2 = strBuilder0.appendln(strBuilder1);
        strBuilder2.toStringBuffer();
        String string0 = "x#WClg8&#";
        int int0 = 108;
        strBuilder1.charAt((-1));
    }

    @Test(timeout = 4000)
    public void test156156() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
        strBuilder_StrBuilderReader0.skip((-139L));
        strBuilder_StrBuilderReader0.reset();
        strBuilder0.getNewLineText();
        strBuilder1.substring(0);
        StrBuilder strBuilder2 = strBuilder0.setNewLineText((String) null);
        StringBuffer stringBuffer0 = new StringBuffer(0);
        StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0, 0, 0);
        strBuilder3.getNewLineText();
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
        char[] charArray0 = new char[5];
        charArray0[0] = 'e';
        charArray0[1] = '>';
        charArray0[2] = 'U';
        charArray0[3] = '9';
        charArray0[4] = 'n';
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 48);
    }

    @Test(timeout = 4000)
    public void test157157() throws Throwable {
        int int0 = 696;
        StrBuilder strBuilder0 = new StrBuilder(696);
        StrBuilder strBuilder1 = strBuilder0.appendAll((Iterator) null);
        StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
        strBuilder1.replace(strMatcher0, "g2k1pqlL:eQ^", 5, 5, 696);
    }

    @Test(timeout = 4000)
    public void test158158() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        strBuilder0.validateIndex(0);
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        char[] charArray0 = new char[5];
        charArray0[0] = 'n';
        charArray0[1] = '\"';
        charArray0[2] = 'j';
        CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
        strBuilder_StrBuilderReader0.read(charBuffer0);
        strBuilder_StrBuilderReader0.skip((-785L));
        charArray0[3] = 'Q';
        strBuilder_StrBuilderReader0.read(charArray0);
        charArray0[4] = ';';
        CharBuffer charBuffer1 = CharBuffer.wrap(charArray0, 0, 0);
        strBuilder_StrBuilderReader0.read(charBuffer1);
        strBuilder_StrBuilderReader0.skip((-786L));
        strBuilder0.startsWith("Z");
        StrBuilder strBuilder1 = new StrBuilder((-1865));
        strBuilder1.deleteAll("Z");
        strBuilder0.appendln(strBuilder1, 0, (-1865));
    }

    @Test(timeout = 4000)
    public void test159159() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(247);
        StringBuffer stringBuffer0 = new StringBuffer(0);
        StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
        strBuilder1.hashCode();
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
        strBuilder_StrBuilderWriter0.write(247);
        String string0 = "";
        int int0 = 925;
        strBuilder_StrBuilderWriter0.write("", 0, 925);
    }

    @Test(timeout = 4000)
    public void test160160() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("j5\"");
        strBuilder0.appendSeparator(", Length: ", 0);
        String string0 = "";
        StrBuilder strBuilder1 = strBuilder0.replaceFirst(", Length: ", "");
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        strBuilder1.appendWithSeparators((Collection) linkedList0, ", Length: ");
        StringBuffer stringBuffer0 = new StringBuffer();
        strBuilder0.appendln(stringBuffer0, (-1808), (-970));
    }

    @Test(timeout = 4000)
    public void test161161() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        strBuilder0.insert(0, (float) 0);
        strBuilder0.midString(0, 0);
        strBuilder0.asReader();
        strBuilder0.insert(0, 1541.137F);
        StrBuilder strBuilder1 = strBuilder0.deleteAll('e');
        strBuilder1.insert(0, "org.apache.commons.lang.text.StrMatcher$CharMatcher");
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
        char[] charArray0 = new char[2];
        charArray0[0] = 'e';
        charArray0[1] = 'p';
        strBuilder_StrBuilderWriter0.write(charArray0);
    }

    @Test(timeout = 4000)
    public void test162162() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
        char[] charArray0 = new char[8];
        charArray0[0] = 'B';
        charArray0[1] = 'm';
        char char0 = '?';
        StrBuilder strBuilder1 = strBuilder0.clear();
        strBuilder1.charAt(0);
    }

    @Test(timeout = 4000)
    public void test163163() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(97);
        StringBuffer stringBuffer0 = new StringBuffer(1);
        StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
        StrBuilder strBuilder2 = strBuilder1.appendln((char[]) null);
        StrBuilder strBuilder3 = strBuilder0.appendln((float) 97);
        strBuilder2.contains("{F=]qq_.^QC");
        StrBuilder strBuilder4 = strBuilder3.clear();
        StringBuffer stringBuffer1 = new StringBuffer("{F=]qq_.^QC");
        StrBuilder strBuilder5 = strBuilder1.appendln(stringBuffer1);
        StrBuilder strBuilder6 = new StrBuilder(1);
        strBuilder5.appendFixedWidthPadLeft((Object) strBuilder6, 1, '-');
        strBuilder4.asTokenizer();
        strBuilder4.appendln((long) 1);
        StrBuilder strBuilder7 = strBuilder0.appendln("8h");
        strBuilder7.ensureCapacity(97);
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
        strBuilder_StrBuilderWriter0.write(97);
        strBuilder0.setLength(0);
    }

    @Test(timeout = 4000)
    public void test164164() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        int int0 = (-975);
        strBuilder0.size = (-975);
        strBuilder0.startsWith((String) null);
        strBuilder0.appendln(true);
    }

    @Test(timeout = 4000)
    public void test165165() throws Throwable {
        String string0 = "[K";
        StrBuilder strBuilder0 = new StrBuilder("[K");
        strBuilder0.deleteCharAt((-573));
    }

    @Test(timeout = 4000)
    public void test166166() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
        strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0);
        strBuilder0.lastIndexOf("", 9);
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        char[] charArray0 = new char[3];
        charArray0[0] = 'Y';
        strMatcher_NoMatcher0.isMatch(charArray0, 9);
        charArray0[1] = '@';
        charArray0[2] = 'm';
        StrMatcher.charMatcher('Y');
        int int0 = 878;
        StrMatcher.charSetMatcher(charArray0);
        strBuilder_StrBuilderReader0.read(charArray0, 878, (-1));
    }

    @Test(timeout = 4000)
    public void test167167() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("A#");
        strBuilder0.rightString((-1832));
        strBuilder0.equals((Object) "A#");
    }

    @Test(timeout = 4000)
    public void test168168() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("]3ph");
        StrBuilder strBuilder1 = strBuilder0.deleteFirst('w');
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
        strBuilder0.indexOf(strMatcher0, 388);
        strBuilder0.appendNewLine();
        strBuilder1.rightString(0);
        strBuilder0.isEmpty();
        strBuilder1.append(1293);
        char[] charArray0 = new char[8];
        charArray0[0] = 'w';
        charArray0[1] = 'w';
        charArray0[2] = 'w';
        charArray0[3] = 'w';
        charArray0[4] = 'w';
        charArray0[5] = 'w';
        charArray0[6] = 'w';
        charArray0[7] = 'w';
        strBuilder0.appendln(charArray0);
    }

    @Test(timeout = 4000)
    public void test169169() throws Throwable {
        int int0 = (-3693);
        StrBuilder strBuilder0 = new StrBuilder((-3693));
        String string0 = "";
        strBuilder0.setNewLineText("");
        StrBuilder strBuilder1 = new StrBuilder((-3693));
        StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
        strBuilder2.appendFixedWidthPadLeft((Object) strBuilder0, (-3693), 'e');
        strBuilder2.deleteCharAt((-3693));
    }

    @Test(timeout = 4000)
    public void test170170() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
        String string0 = "user.region";
        strBuilder_StrBuilderWriter0.write("user.region");
        strBuilder0.substring(1469, 0);
    }

    @Test(timeout = 4000)
    public void test171171() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(1581);
        int int0 = (-2769);
        Integer integer0 = new Integer(1581);
        strBuilder0.setLength((-2769));
    }

    @Test(timeout = 4000)
    public void test172172() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((-4288));
        strBuilder0.getNullText();
        strBuilder0.hashCode();
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        strBuilder_StrBuilderReader0.skip(0L);
        strBuilder_StrBuilderReader0.mark((-4288));
        strBuilder_StrBuilderReader0.reset();
        strBuilder_StrBuilderReader0.skip((-3040L));
        strBuilder0.asTokenizer();
        StrBuilder strBuilder1 = new StrBuilder("4mc1");
        strBuilder0.equals((Object) strBuilder1);
        strBuilder0.setLength((-4288));
    }

    @Test(timeout = 4000)
    public void test173173() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((-2323));
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
        char[] charArray0 = new char[6];
        charArray0[0] = 'i';
        charArray0[1] = 'C';
        charArray0[2] = 'M';
        charArray0[3] = 'v';
        charArray0[4] = 'D';
        strBuilder_StrBuilderWriter0.write("Naq=EJ[a4ZQ");
        StrBuilder strBuilder1 = strBuilder0.append((-3965.6216974608983));
        StrBuilder strBuilder2 = strBuilder1.appendln('M');
        charArray0[5] = '}';
        strBuilder_StrBuilderWriter0.write(charArray0);
        strBuilder1.appendln((long) (-2323));
        strBuilder1.replaceAll(']', 'C');
        strBuilder2.asWriter();
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        strBuilder_StrBuilderTokenizer0.getContent();
        StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
        strBuilder3.appendln((float) (-2323));
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
        strBuilder_StrBuilderReader0.mark((-1009));
        strBuilder1.size();
    }

    @Test(timeout = 4000)
    public void test174174() throws Throwable {
        String string0 = "";
        StrBuilder strBuilder0 = new StrBuilder("");
        StrMatcher strMatcher0 = StrMatcher.trimMatcher();
        StrMatcher.stringMatcher("");
        StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
        int int0 = 0;
        strBuilder1.replaceAll("", "");
        char char0 = ':';
        strBuilder1.setCharAt(0, ':');
    }

    @Test(timeout = 4000)
    public void test175175() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        strBuilder0.appendFixedWidthPadRight((-1106), 0, 'E');
        strBuilder0.lastIndexOf('O', 34);
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        StrBuilder strBuilder1 = strBuilder0.trim();
        char[] charArray0 = new char[5];
        charArray0[0] = 'E';
        charArray0[1] = 'O';
        charArray0[2] = 'E';
        charArray0[3] = 'O';
        charArray0[4] = 'E';
        strBuilder_StrBuilderReader0.read();
        strBuilder1.insert((-2892), charArray0, (-54), 0);
    }

    @Test(timeout = 4000)
    public void test176176() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("%rbHP");
        StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
        String string0 = "O{,l";
        StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "O{,l");
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
        char[] charArray0 = new char[7];
        charArray0[0] = 'U';
        char[] charArray1 = new char[9];
        charArray1[0] = 'U';
        charArray1[1] = '';
        charArray1[2] = 'U';
        charArray1[3] = '-';
        charArray1[4] = 'H';
        charArray1[5] = 'U';
        charArray1[6] = 'H';
        charArray1[7] = 'U';
        charArray1[8] = 'H';
        strBuilder_StrBuilderReader0.read(charArray1);
        charArray0[1] = 'H';
        charArray0[2] = '8';
        charArray0[3] = '<';
        charArray0[4] = '\"';
        charArray0[5] = 'O';
        charArray0[6] = 'y';
        int int0 = 32;
        strBuilder_StrBuilderReader0.read(charArray0, 32, 1308);
    }

    @Test(timeout = 4000)
    public void test177177() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("6.0");
        char[] charArray0 = new char[4];
        charArray0[0] = 'u';
        charArray0[1] = '+';
        charArray0[2] = 'c';
        charArray0[3] = '_';
        StrBuilder strBuilder1 = strBuilder0.appendln(charArray0, 0, 0);
        strBuilder1.lastIndexOf('W');
        strBuilder1.getChars((-1934), (-1934), charArray0, 0);
    }

    @Test(timeout = 4000)
    public void test178178() throws Throwable {
        String string0 = "xLGvMV>QU@B_}M8pe,x";
        StrBuilder strBuilder0 = new StrBuilder("xLGvMV>QU@B_}M8pe,x");
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        int int0 = 224;
        strBuilder_StrBuilderReader0.mark(224);
        StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('V');
        StrMatcher.charSetMatcher("xLGvMV>QU@B_}M8pe,x");
        strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, 224);
        strBuilder0.insert(224, (long) 5);
    }

    @Test(timeout = 4000)
    public void test179179() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        StrBuilder strBuilder1 = strBuilder0.appendln(0L);
        strBuilder1.setCharAt(0, ':');
        char[] charArray0 = new char[2];
        charArray0[0] = '6';
        charArray0[1] = '!';
        StrBuilder strBuilder2 = strBuilder0.appendln('E');
        strBuilder2.append(0);
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 0);
        strBuilder0.indexOf("", 4);
        strBuilder0.length();
        StrBuilder strBuilder3 = strBuilder0.setNullText("");
        strBuilder3.toCharArray((-1), 0);
    }

    @Test(timeout = 4000)
    public void test180180() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((String) null);
        StrBuilder strBuilder1 = strBuilder0.appendln((-464.78));
        StrBuilder strBuilder2 = strBuilder1.clear();
        strBuilder0.midString((-576), 0);
        strBuilder0.getNewLineText();
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
        strBuilder_StrBuilderReader0.markSupported();
        StrBuilder strBuilder3 = strBuilder0.append((double) (-576));
        strBuilder0.appendFixedWidthPadLeft((Object) "", 117, '>');
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
        char[] charArray0 = new char[4];
        charArray0[0] = '>';
        charArray0[1] = '>';
        charArray0[2] = '>';
        charArray0[3] = '>';
        StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
        strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "");
        strBuilder1.indexOf('*');
        StrBuilder strBuilder4 = strBuilder3.setNewLineText("");
        Object[] objectArray0 = new Object[0];
        strBuilder4.appendWithSeparators(objectArray0, "");
        strBuilder4.append(strBuilder1, (-2336), Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test181181() throws Throwable {
        int int0 = 0;
        StrBuilder strBuilder0 = new StrBuilder(0);
        int int1 = 0;
        strBuilder0.deleteCharAt(0);
    }

    @Test(timeout = 4000)
    public void test182182() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        strBuilder0.appendNull();
        Object object0 = new Object();
        strBuilder0.appendFixedWidthPadRight(object0, 528, 'Z');
        StrBuilder strBuilder1 = strBuilder0.clear();
        strBuilder1.asReader();
        char[] charArray0 = new char[8];
        charArray0[0] = 'Z';
        charArray0[1] = 'Z';
        charArray0[2] = 'c';
        charArray0[3] = 'Z';
        charArray0[4] = 'V';
        charArray0[5] = 'R';
        charArray0[6] = 'Z';
        charArray0[7] = 'Z';
        StrBuilder strBuilder2 = strBuilder1.append(charArray0);
        strBuilder2.appendln(0.0);
        strBuilder1.appendln((char[]) null);
    }

    @Test(timeout = 4000)
    public void test183183() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        int int0 = 4035;
        strBuilder0.ensureCapacity(4035);
        int int1 = 0;
        strBuilder0.rightString(0);
        StrBuilder strBuilder1 = strBuilder0.insert(0, false);
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
        String string0 = "";
        strBuilder_StrBuilderWriter0.write(4035);
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
        int int2 = (-1);
        strBuilder1.append(stringBuffer0, 1020, (-1));
    }

    @Test(timeout = 4000)
    public void test184184() throws Throwable {
        int int0 = 0;
        StrBuilder strBuilder0 = new StrBuilder(0);
        String string0 = null;
        int int1 = (-1);
        char char0 = '^';
        strBuilder0.appendFixedWidthPadLeft((Object) null, 57, '^');
    }

    @Test(timeout = 4000)
    public void test185185() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        StrBuilder strBuilder1 = new StrBuilder();
        StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) null, "5RIgD:9X");
        strBuilder2.size = (-416);
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, (-416), '[');
        strBuilder0.append("", (-2537), 0);
    }

    @Test(timeout = 4000)
    public void test186186() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        String string0 = "M.1yKs5~eH|q";
        StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, "M.1yKs5~eH|q");
        int int0 = (-2377);
        strBuilder1.setLength((-2377));
    }

    @Test(timeout = 4000)
    public void test187187() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("w\\.1hrMj");
        char[] charArray0 = strBuilder0.toCharArray();
        LinkedList<String> linkedList0 = new LinkedList<String>();
        strBuilder0.appendAll((Collection) linkedList0);
        StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
        strMatcher0.isMatch(charArray0, 2, 2, 2);
        strBuilder0.contains(strMatcher0);
        char char0 = 'J';
        int int0 = 5;
        int int1 = 102;
        strBuilder0.substring(102);
    }

    @Test(timeout = 4000)
    public void test188188() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        int int0 = 1;
        StrBuilder strBuilder1 = strBuilder0.append(1);
        strBuilder0.asTokenizer();
        StrMatcher strMatcher0 = StrMatcher.stringMatcher("Invalid startIndex: ");
        strBuilder1.replaceFirst(strMatcher0, "7r8~8}D`LMEEc`");
        strBuilder0.rightString(1);
        strBuilder1.validateIndex(775);
    }

    @Test(timeout = 4000)
    public void test189189() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        char char0 = 'z';
        char char1 = ':';
        strBuilder0.replaceFirst('z', ':');
        StrBuilder strBuilder1 = new StrBuilder("");
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
        StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
        strBuilder1.append('z');
        strBuilder0.deleteFirst(strMatcher0);
        strBuilder0.toString();
        int int0 = (-1898);
        strBuilder0.insert((-1898), (-3505L));
    }

    @Test(timeout = 4000)
    public void test190190() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("");
        StrBuilder strBuilder1 = strBuilder0.append((-481L));
        strBuilder0.append(strBuilder1, 0, 0);
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
        stringBuffer0.replace((-346), 0, "");
    }

    @Test(timeout = 4000)
    public void test191191() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        StrBuilder strBuilder1 = new StrBuilder((String) null);
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
        Object object0 = strBuilder_StrBuilderTokenizer0.clone();
        strBuilder0.insert(0, "");
        strBuilder_StrBuilderTokenizer0.toString();
        StrBuilder strBuilder2 = strBuilder0.appendln(object0);
        StrBuilder strBuilder3 = strBuilder2.appendln(0.0F);
        StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft(0, 0, '\\');
        strBuilder4.asTokenizer();
        strBuilder3.deleteAll("36");
    }

    @Test(timeout = 4000)
    public void test192192() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        char[] charArray0 = new char[5];
        charArray0[0] = 'D';
        charArray0[1] = 'z';
        charArray0[2] = 'w';
        charArray0[3] = 'w';
        charArray0[4] = '0';
        StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
        LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
        StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "2BW?qhEvAf^M");
        strBuilder1.buffer = charArray0;
        StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
        StrBuilder strBuilder3 = strBuilder1.replaceAll(strMatcher0, "53r^xfe!*`l@X17Z[.");
        StrBuilder strBuilder4 = strBuilder1.appendSeparator("6EcMg", 0);
        strBuilder3.deleteFirst('V');
        strBuilder1.getChars(charArray0);
        StrBuilder strBuilder5 = strBuilder1.insert(0, "(b&`n\"K&gHsATfMT<");
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
        strBuilder_StrBuilderTokenizer0.setIgnoredChar('w');
        StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
        StrBuilder strBuilder6 = strBuilder2.deleteFirst(strMatcher1);
        strBuilder6.lastIndexOf(strMatcher1);
        strBuilder2.appendFixedWidthPadRight(1, (-2479), 'J');
        strBuilder5.insert((-2479), (-215));
    }

    @Test(timeout = 4000)
    public void test193193() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        int int0 = 117;
        StringBuffer stringBuffer0 = new StringBuffer();
        strBuilder0.append(stringBuffer0, (-979), 117);
    }

    @Test(timeout = 4000)
    public void test194194() throws Throwable {
        int int0 = (-1371);
        StrBuilder strBuilder0 = new StrBuilder((-1371));
        strBuilder0.size();
        StringBuffer stringBuffer0 = null;
        stringBuffer0 = new StringBuffer((-1371));
    }

    @Test(timeout = 4000)
    public void test195195() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(":`?w`vm_:");
        char[] charArray0 = new char[3];
        strBuilder0.append('`');
        charArray0[0] = '>';
        charArray0[1] = 'i';
        charArray0[2] = '6';
        StrBuilder strBuilder1 = strBuilder0.insert(3, charArray0);
        LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
        strBuilder1.setNewLineText("");
        StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, ":`?w`vm_:");
        strBuilder1.equals((Object) strBuilder2);
        strBuilder1.appendNull();
        StrBuilder strBuilder3 = strBuilder0.appendln('<');
        strBuilder3.append("", 3, 3);
    }

    @Test(timeout = 4000)
    public void test196196() throws Throwable {
        int int0 = (-1);
        StrBuilder strBuilder0 = new StrBuilder((-1));
        char[] charArray0 = new char[0];
        strBuilder0.appendln(charArray0);
        StrBuilder strBuilder1 = new StrBuilder((-1));
        StrBuilder strBuilder2 = strBuilder1.append((-1273));
        int int1 = 0;
        StrBuilder strBuilder3 = strBuilder2.appendln(strBuilder1, 0, 5);
        strBuilder3.insert(0, charArray0, 32, 427);
    }

    @Test(timeout = 4000)
    public void test197197() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("j5\"");
        strBuilder0.appendSeparator("j5\"", 0);
        String string0 = "";
        strBuilder0.replaceFirst("j5\"", "");
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        StringBuffer stringBuffer0 = new StringBuffer();
        strBuilder0.appendln(stringBuffer0, (-1808), (-970));
    }

    @Test(timeout = 4000)
    public void test198198() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
        Object[] objectArray0 = new Object[7];
        objectArray0[0] = (Object) strBuilder0;
        objectArray0[1] = (Object) strBuilder0;
        objectArray0[2] = (Object) strBuilder0;
        objectArray0[3] = (Object) strBuilder0;
        objectArray0[4] = (Object) strBuilder0;
        objectArray0[5] = (Object) strBuilder0;
        objectArray0[6] = (Object) "Invalid startIndex: ";
        strBuilder0.appendAll(objectArray0);
        strBuilder0.appendSeparator("end < start");
        strBuilder0.asReader();
        char[] charArray0 = new char[0];
        StrBuilder strBuilder1 = strBuilder0.appendln(charArray0);
        strBuilder1.rightString(102);
        int int0 = 3575;
        strBuilder1.appendln("FI7z-;T#", 102, 3575);
    }

    @Test(timeout = 4000)
    public void test199199() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("");
        StrMatcher.quoteMatcher();
        strBuilder0.asWriter();
        StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
        strBuilder1.appendSeparator('D', 0);
        StrBuilder strBuilder2 = strBuilder0.appendln("F0IK=S#GdY't,ON/Af1");
        char[] charArray0 = new char[6];
        charArray0[3] = '<';
        strBuilder2.getChars(39, 39, charArray0, 0);
    }

    @Test(timeout = 4000)
    public void test200200() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("");
        StrBuilder strBuilder1 = strBuilder0.appendln('\'');
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "E*}Ew5RVb26|aZ");
        strBuilder0.append(stringBuffer0, 0, 0);
        StrBuilder strBuilder2 = strBuilder1.appendln("E*}Ew5RVb26|aZ");
        StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
        strBuilder2.indexOf(strMatcher0, 0);
        strBuilder0.asWriter();
        StrBuilder strBuilder3 = strBuilder0.setNewLineText("");
        strBuilder3.appendSeparator('D', 0);
        StrBuilder strBuilder4 = strBuilder0.appendln("F0IK=S#GdY't,ON/Af1");
        char[] charArray0 = new char[6];
        charArray0[0] = '\'';
        charArray0[1] = '\'';
        charArray0[2] = '\'';
        charArray0[3] = '<';
        charArray0[4] = '\'';
        charArray0[5] = '\'';
        strBuilder4.getChars((int) '\'', (int) '\'', charArray0, 0);
    }

    @Test(timeout = 4000)
    public void test201201() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("java.endorsed.dirs");
        StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
        StrBuilder strBuilder1 = strBuilder0.append((Object) strMatcher_NoMatcher0);
        strBuilder1.setLength(1330);
        strBuilder0.contains((StrMatcher) strMatcher_NoMatcher0);
        strBuilder0.deleteAll("java.endorsed.dirs");
    }

    @Test(timeout = 4000)
    public void test202202() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        char[] charArray0 = new char[6];
        charArray0[0] = 'j';
        StrMatcher strMatcher0 = StrMatcher.stringMatcher("%Gj;mWhsgtSZ%");
        strBuilder0.lastIndexOf(strMatcher0, 107);
        charArray0[1] = '3';
        charArray0[2] = 'Q';
        charArray0[3] = 'k';
        charArray0[4] = '/';
        charArray0[5] = '[';
        strBuilder0.append(charArray0);
    }

    @Test(timeout = 4000)
    public void test203203() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        Object object0 = new Object();
        StrBuilder strBuilder1 = strBuilder0.appendln(object0);
        StrMatcher strMatcher0 = StrMatcher.trimMatcher();
        StrMatcher strMatcher1 = StrMatcher.quoteMatcher();
        char[] charArray0 = new char[1];
        charArray0[0] = '0';
        StrMatcher.charSetMatcher(charArray0);
        strBuilder0.appendNull();
        strBuilder1.lastIndexOf(strMatcher1);
        StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "");
        strBuilder0.getNewLineText();
        strBuilder0.appendSeparator((String) null, 31);
        strBuilder1.equals(strBuilder2);
        strBuilder1.insert((-1), true);
    }

    @Test(timeout = 4000)
    public void test204204() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("");
        StrBuilder strBuilder1 = strBuilder0.appendln((-731.6734F));
        StrBuilder strBuilder2 = strBuilder1.appendNull();
        StrMatcher strMatcher0 = StrMatcher.noneMatcher();
        StrBuilder strBuilder3 = strBuilder2.deleteAll(strMatcher0);
        StrBuilder strBuilder4 = strBuilder2.appendNull();
        strBuilder3.replaceAll(strMatcher0, "end < start");
        char[] charArray0 = new char[7];
        charArray0[0] = 'h';
        strBuilder1.lastIndexOf((StrMatcher) null, 22);
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
        strBuilder2.appendAll((Iterator) strBuilder_StrBuilderTokenizer0);
        StrMatcher.charSetMatcher(charArray0);
        charArray0[1] = 't';
        charArray0[2] = '/';
        charArray0[3] = 'X';
        charArray0[4] = 'f';
        charArray0[5] = 'A';
        charArray0[6] = '|';
        StrBuilder strBuilder5 = strBuilder3.append((Object) strBuilder1);
        strBuilder5.appendln('(');
        strBuilder0.insert((-3058), 1009);
    }

    @Test(timeout = 4000)
    public void test205205() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        int int0 = (-1277);
        char char0 = ']';
        strBuilder0.midString((-1120), (-1120));
        strBuilder0.deleteCharAt(0);
    }

    @Test(timeout = 4000)
    public void test206206() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("");
        strBuilder0.lastIndexOf("");
        strBuilder0.insert((-1), "1Q?s;RZ]m.");
    }

    @Test(timeout = 4000)
    public void test207207() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(0);
        StrBuilder strBuilder1 = strBuilder0.insert(0, true);
        StrBuilder strBuilder2 = strBuilder1.appendln(strBuilder0);
        StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
        strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, 0);
        StrBuilder strBuilder3 = strBuilder0.setLength(1959);
        strBuilder0.contains((StrMatcher) null);
        StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
        strBuilder0.endsWith("");
        StrBuilder strBuilder4 = strBuilder0.appendln((double) 0);
        strBuilder2.equalsIgnoreCase(strBuilder4);
        strBuilder4.substring(0);
        StrBuilder strBuilder5 = strBuilder0.appendAll((Iterator) strTokenizer0);
        strBuilder5.midString(1, 1);
        strBuilder5.asReader();
        strBuilder5.toString();
        String string0 = strBuilder0.midString(114, 2859);
        strBuilder2.indexOf((StrMatcher) strMatcher_NoMatcher0);
        int int0 = 989;
        strBuilder3.insert(989, true);
        StrBuilder strBuilder6 = strBuilder4.deleteCharAt(114);
        StrBuilder strBuilder7 = strBuilder6.appendln((-1848));
        // Undeclared exception!
        strBuilder7.lastIndexOf(string0);
    }

    @Test(timeout = 4000)
    public void test208208() throws Throwable {
        String string0 = "NAUa0Jo/(HK*3";
        StrBuilder strBuilder0 = new StrBuilder("NAUa0Jo/(HK*3");
        strBuilder0.endsWith("NAUa0Jo/(HK*3");
        int int0 = 1218;
        StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1218, 1218, 'g');
        StrBuilder strBuilder2 = new StrBuilder();
        strBuilder2.clear();
        strBuilder2.deleteAll((StrMatcher) null);
        strBuilder2.midString((-215), 272);
        strBuilder0.replaceFirst((StrMatcher) null, "NAUa0Jo/(HK*3");
        StrBuilder strBuilder3 = strBuilder1.reverse();
        strBuilder0.minimizeCapacity();
        StrBuilder strBuilder4 = new StrBuilder();
        strBuilder4.indexOf((String) null, 2089);
        strBuilder3.isEmpty();
        strBuilder3.appendPadding((-683), 'g');
        StrBuilder strBuilder5 = strBuilder2.append(strBuilder4);
        char[] charArray0 = new char[1];
        charArray0[0] = 'g';
        strBuilder5.insert(32, charArray0, 1218, 272);
    }

    @Test(timeout = 4000)
    public void test209209() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("A#");
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
        strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "A#");
        strBuilder0.rightString((-1832));
        strBuilder0.equals((Object) "A#");
        strBuilder0.lastIndexOf((String) null);
    }

    @Test(timeout = 4000)
    public void test210210() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder((-552));
        StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
        strBuilder_StrBuilderReader0.mark((-552));
        StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
        char[] charArray0 = new char[8];
        charArray0[0] = 'f';
        charArray0[1] = 'f';
        charArray0[2] = '{';
        charArray0[3] = 'L';
        charArray0[4] = 'O';
        charArray0[5] = '[';
        charArray0[6] = '+';
        charArray0[7] = 'G';
        strBuilder_StrBuilderWriter0.write(charArray0);
        strBuilder_StrBuilderWriter0.write(4);
        strBuilder_StrBuilderWriter0.flush();
        StrBuilder strBuilder1 = strBuilder0.deleteAll('N');
        strBuilder_StrBuilderReader0.close();
        strBuilder1.replaceAll((String) null, "!E|@^;:4aA79");
        strBuilder1.insert(0, "!E|@^;:4aA79");
        strBuilder1.lastIndexOf((String) null, 101);
    }

    @Test(timeout = 4000)
    public void test211211() throws Throwable {
        String string0 = "";
        StrBuilder strBuilder0 = new StrBuilder("");
        char char0 = '\'';
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "E*}Ew5RVb26|aZ");
        int int0 = 0;
        stringBuffer0.append(0);
        strBuilder0.append(stringBuffer0, 0, 0);
        StrBuilder strBuilder1 = strBuilder0.appendln("E*}Ew5RVb26|aZ");
        StrMatcher.quoteMatcher();
        char[] charArray0 = new char[7];
        charArray0[0] = '\'';
        charArray0[1] = '\'';
        charArray0[2] = '\'';
        charArray0[3] = '\'';
        charArray0[4] = 'D';
        charArray0[5] = '\'';
        charArray0[6] = '\'';
        strBuilder1.appendln(charArray0, 0, 48);
    }

    @Test(timeout = 4000)
    public void test212212() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("*{O3bitJLa_# R:2p*");
        char[] charArray0 = new char[0];
        strBuilder0.append(charArray0);
        strBuilder0.contains("79m\\M&(8r");
    }

    @Test(timeout = 4000)
    public void test213213() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder("");
        StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(48, 0, 'q');
        StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
        strBuilder0.indexOf(strMatcher0, 0);
        StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
        strBuilder0.deleteFirst("");
        strBuilder2.setNullText("4.9");
        char[] charArray0 = new char[6];
        charArray0[0] = 'q';
        charArray0[1] = 'q';
        charArray0[2] = 'q';
        charArray0[3] = 'q';
        charArray0[4] = 'q';
        charArray0[5] = 'q';
        strBuilder1.getChars(9, 0, charArray0, (-3896));
    }

    @Test(timeout = 4000)
    public void test214214() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder(">7fjPzegH2xU&=:qkX");
        StrBuilder strBuilder1 = new StrBuilder(">7fjPzegH2xU&=:qkX");
        strBuilder0.appendln(strBuilder1, 4, 4);
        Object[] objectArray0 = new Object[10];
        objectArray0[0] = (Object) strBuilder0;
        objectArray0[4] = (Object) strBuilder0;
        objectArray0[6] = (Object) ">7fjPzegH2xU&=:qkX";
        strBuilder0.asReader();
        char[] charArray0 = new char[0];
        StrBuilder strBuilder2 = strBuilder0.appendln(charArray0);
        StringBuffer stringBuffer0 = new StringBuffer();
        strBuilder0.appendln(stringBuffer0);
        StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 3575, (-1019));
        strBuilder0.clear();
        StrMatcher strMatcher0 = StrMatcher.stringMatcher(">7fjPzegH2xU&=:qkX");
        strBuilder1.lastIndexOf(strMatcher0, 97);
    }

    @Test(timeout = 4000)
    public void test215215() throws Throwable {
        StrBuilder strBuilder0 = new StrBuilder();
        Object object0 = new Object();
        StrBuilder strBuilder1 = strBuilder0.appendln(object0);
        StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
        StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
        char[] charArray0 = new char[1];
        charArray0[0] = '0';
        StrMatcher.charSetMatcher(charArray0);
        strBuilder0.appendNull();
        strBuilder1.lastIndexOf(strMatcher0);
        StrBuilder strBuilder2 = new StrBuilder("");
        strBuilder0.getNewLineText();
        strBuilder0.appendSeparator((String) null, 28);
        strBuilder1.equals(strBuilder2);
        strBuilder1.insert((-1), false);
    }
}
