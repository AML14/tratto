/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 02:03:39 GMT 2023
 */
package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.util.AbstractMap;
import java.util.Arrays;
import java.util.Map;
import org.apache.commons.lang3.ArrayUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class ArrayUtils_ESTest extends ArrayUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        char[] charArray0 = new char[2];
        ArrayUtils.remove(charArray0, 2);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        ArrayUtils.add((char[]) null, (-783), '&');
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        float[] floatArray0 = new float[9];
        int int0 = ArrayUtils.lastIndexOf(floatArray0, 0.0F, 0);
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        float[] floatArray0 = new float[7];
        int int0 = ArrayUtils.indexOf(floatArray0, 0.0F, 735);
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        double[] doubleArray0 = new double[5];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 94.0, 5, 551.91);
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        double[] doubleArray0 = new double[8];
        doubleArray0[2] = (double) (-3328);
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1.0));
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        double[] doubleArray0 = new double[1];
        int int0 = ArrayUtils.indexOf(doubleArray0, 1516.4349, 459, 1516.4349);
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        char[] charArray0 = new char[5];
        charArray0[4] = '\\';
        int int0 = ArrayUtils.lastIndexOf(charArray0, 'B');
    }

    @Test(timeout = 4000)
    public void test0088() throws Throwable {
        char[] charArray0 = new char[0];
        int int0 = ArrayUtils.lastIndexOf(charArray0, 'c', 0);
    }

    @Test(timeout = 4000)
    public void test0099() throws Throwable {
        char[] charArray0 = new char[6];
        charArray0[0] = 's';
        char[] charArray1 = ArrayUtils.removeElement(charArray0, 'a');
    }

    @Test(timeout = 4000)
    public void test01010() throws Throwable {
        short[] shortArray0 = new short[7];
        int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 939, 7);
    }

    @Test(timeout = 4000)
    public void test01111() throws Throwable {
        int[] intArray0 = new int[8];
        intArray0[0] = (-806);
        int int0 = ArrayUtils.lastIndexOf(intArray0, (-562), 11);
    }

    @Test(timeout = 4000)
    public void test01212() throws Throwable {
        long[] longArray0 = new long[6];
        int int0 = ArrayUtils.lastIndexOf(longArray0, 1849L);
    }

    @Test(timeout = 4000)
    public void test01313() throws Throwable {
        Object[] objectArray0 = new Object[5];
        Object object0 = new Object();
        objectArray0[2] = object0;
        objectArray0[1] = objectArray0[2];
        int int0 = ArrayUtils.lastIndexOf(objectArray0, objectArray0[0], 2);
    }

    @Test(timeout = 4000)
    public void test01414() throws Throwable {
        Object[] objectArray0 = new Object[5];
        Object object0 = new Object();
        int int0 = ArrayUtils.lastIndexOf(objectArray0, object0, 0);
    }

    @Test(timeout = 4000)
    public void test01515() throws Throwable {
        float[] floatArray0 = new float[0];
        ArrayUtils.reverse(floatArray0);
    }

    @Test(timeout = 4000)
    public void test01616() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        ArrayUtils.reverse(arrayUtils0.EMPTY_DOUBLE_ARRAY);
    }

    @Test(timeout = 4000)
    public void test01717() throws Throwable {
        char[] charArray0 = new char[0];
        ArrayUtils.reverse(charArray0);
    }

    @Test(timeout = 4000)
    public void test01818() throws Throwable {
        short[] shortArray0 = new short[3];
        ArrayUtils.reverse(shortArray0);
    }

    @Test(timeout = 4000)
    public void test01919() throws Throwable {
        int[] intArray0 = new int[3];
        ArrayUtils.reverse(intArray0);
    }

    @Test(timeout = 4000)
    public void test02020() throws Throwable {
        long[] longArray0 = new long[1];
        ArrayUtils.reverse(longArray0);
    }

    @Test(timeout = 4000)
    public void test02121() throws Throwable {
        Integer[] integerArray0 = new Integer[9];
        ArrayUtils.reverse((Object[]) integerArray0);
    }

    @Test(timeout = 4000)
    public void test02222() throws Throwable {
        double[] doubleArray0 = new double[1];
        double[] doubleArray1 = new double[6];
        boolean boolean0 = ArrayUtils.isSameLength(doubleArray0, doubleArray1);
    }

    @Test(timeout = 4000)
    public void test02323() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        byte[] byteArray0 = new byte[3];
        boolean boolean0 = ArrayUtils.isSameLength(arrayUtils0.EMPTY_BYTE_ARRAY, byteArray0);
    }

    @Test(timeout = 4000)
    public void test02424() throws Throwable {
        int[] intArray0 = new int[5];
        int[] intArray1 = new int[0];
        boolean boolean0 = ArrayUtils.isSameLength(intArray0, intArray1);
    }

    @Test(timeout = 4000)
    public void test02525() throws Throwable {
        long[] longArray0 = new long[8];
        long[] longArray1 = new long[0];
        boolean boolean0 = ArrayUtils.isSameLength(longArray0, longArray1);
    }

    @Test(timeout = 4000)
    public void test02626() throws Throwable {
        boolean[] booleanArray0 = new boolean[7];
        boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, (-6108), 0);
    }

    @Test(timeout = 4000)
    public void test02727() throws Throwable {
        boolean[] booleanArray0 = new boolean[8];
        boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 0, 48);
    }

    @Test(timeout = 4000)
    public void test02829() throws Throwable {
        float[] floatArray0 = new float[0];
        float[] floatArray1 = ArrayUtils.subarray(floatArray0, 1, 0);
    }

    @Test(timeout = 4000)
    public void test02930() throws Throwable {
        float[] floatArray0 = new float[3];
        float[] floatArray1 = ArrayUtils.subarray(floatArray0, (int) (short) 0, 57);
    }

    @Test(timeout = 4000)
    public void test03032() throws Throwable {
        double[] doubleArray0 = new double[9];
        double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test03133() throws Throwable {
        char[] charArray0 = new char[3];
        char[] charArray1 = ArrayUtils.subarray(charArray0, 2, 2);
    }

    @Test(timeout = 4000)
    public void test03234() throws Throwable {
        short[] shortArray0 = new short[0];
        short[] shortArray1 = ArrayUtils.subarray(shortArray0, 2851, 0);
        shortArray1.equals((Object) shortArray0);
    }

    @Test(timeout = 4000)
    public void test03335() throws Throwable {
        short[] shortArray0 = new short[5];
        short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (short) 0, (int) (short) 64);
    }

    @Test(timeout = 4000)
    public void test03437() throws Throwable {
        int[] intArray0 = new int[0];
        int[] intArray1 = ArrayUtils.subarray(intArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test03538() throws Throwable {
        long[] longArray0 = new long[9];
        long[] longArray1 = ArrayUtils.subarray(longArray0, 5, 5);
    }

    @Test(timeout = 4000)
    public void test03640() throws Throwable {
        String[] stringArray0 = new String[0];
        String[] stringArray1 = ArrayUtils.subarray(stringArray0, 106, 3);
    }

    @Test(timeout = 4000)
    public void test03743() throws Throwable {
        String[] stringArray0 = ArrayUtils.toArray((String[]) null);
    }

    @Test(timeout = 4000)
    public void test03844() throws Throwable {
        Integer[] integerArray0 = new Integer[3];
        Integer[] integerArray1 = ArrayUtils.toArray(integerArray0);
    }

    @Test(timeout = 4000)
    public void test03945() throws Throwable {
        short[] shortArray0 = new short[1];
        shortArray0[0] = (short) (-1116);
        short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) (-1116));
    }

    @Test(timeout = 4000)
    public void test04046() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        Object[] objectArray0 = ArrayUtils.removeElement((Object[]) arrayUtils0.EMPTY_BYTE_OBJECT_ARRAY, (Object) arrayUtils0.INDEX_NOT_FOUND);
    }

    @Test(timeout = 4000)
    public void test04147() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        long[] longArray0 = ArrayUtils.removeElement(arrayUtils0.EMPTY_LONG_ARRAY, 2723L);
    }

    @Test(timeout = 4000)
    public void test04248() throws Throwable {
        int[] intArray0 = new int[0];
        int[] intArray1 = ArrayUtils.removeElement(intArray0, 0);
    }

    @Test(timeout = 4000)
    public void test04349() throws Throwable {
        float[] floatArray0 = new float[0];
        float[] floatArray1 = ArrayUtils.removeElement(floatArray0, 0.0F);
    }

    @Test(timeout = 4000)
    public void test04450() throws Throwable {
        double[] doubleArray0 = new double[0];
        double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 2519.472655);
    }

    @Test(timeout = 4000)
    public void test04551() throws Throwable {
        char[] charArray0 = ArrayUtils.removeElement((char[]) null, 'X');
    }

    @Test(timeout = 4000)
    public void test04652() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        char[] charArray0 = ArrayUtils.removeElement(arrayUtils0.EMPTY_CHAR_ARRAY, 'R');
    }

    @Test(timeout = 4000)
    public void test04753() throws Throwable {
        byte[] byteArray0 = ArrayUtils.removeElement((byte[]) null, (byte) 98);
    }

    @Test(timeout = 4000)
    public void test04854() throws Throwable {
        boolean[] booleanArray0 = new boolean[4];
        boolean[] booleanArray1 = ArrayUtils.remove(booleanArray0, 3);
    }

    @Test(timeout = 4000)
    public void test04955() throws Throwable {
        long[] longArray0 = new long[4];
        long[] longArray1 = ArrayUtils.remove(longArray0, 0);
    }

    @Test(timeout = 4000)
    public void test05056() throws Throwable {
        long[] longArray0 = new long[1];
        long[] longArray1 = ArrayUtils.remove(longArray0, 0);
    }

    @Test(timeout = 4000)
    public void test05157() throws Throwable {
        int[] intArray0 = new int[9];
        int[] intArray1 = ArrayUtils.remove(intArray0, 2);
    }

    @Test(timeout = 4000)
    public void test05258() throws Throwable {
        float[] floatArray0 = new float[4];
        float[] floatArray1 = ArrayUtils.remove(floatArray0, 3);
    }

    @Test(timeout = 4000)
    public void test05359() throws Throwable {
        char[] charArray0 = new char[5];
        char[] charArray1 = ArrayUtils.remove(charArray0, 2);
    }

    @Test(timeout = 4000)
    public void test05460() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        booleanArray0[0] = true;
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 0);
    }

    @Test(timeout = 4000)
    public void test05561() throws Throwable {
        boolean[] booleanArray0 = new boolean[4];
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, false);
    }

    @Test(timeout = 4000)
    public void test05662() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true);
    }

    @Test(timeout = 4000)
    public void test05763() throws Throwable {
        short[] shortArray0 = new short[9];
        int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 0, 0);
    }

    @Test(timeout = 4000)
    public void test05864() throws Throwable {
        short[] shortArray0 = new short[3];
        shortArray0[0] = (short) 64;
        int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 64);
    }

    @Test(timeout = 4000)
    public void test05965() throws Throwable {
        short[] shortArray0 = new short[7];
        shortArray0[4] = (short) (-1);
        int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) (-1));
    }

    @Test(timeout = 4000)
    public void test06066() throws Throwable {
        Object[] objectArray0 = new Object[5];
        int int0 = ArrayUtils.lastIndexOf(objectArray0, objectArray0[0]);
    }

    @Test(timeout = 4000)
    public void test06167() throws Throwable {
        long[] longArray0 = new long[1];
        int int0 = ArrayUtils.lastIndexOf(longArray0, 0L, (int) '=');
    }

    @Test(timeout = 4000)
    public void test06268() throws Throwable {
        long[] longArray0 = new long[1];
        int int0 = ArrayUtils.lastIndexOf(longArray0, (long) 0);
    }

    @Test(timeout = 4000)
    public void test06369() throws Throwable {
        long[] longArray0 = new long[3];
        int int0 = ArrayUtils.lastIndexOf(longArray0, 0L);
    }

    @Test(timeout = 4000)
    public void test06470() throws Throwable {
        int[] intArray0 = new int[3];
        intArray0[0] = (-672);
        int int0 = ArrayUtils.lastIndexOf(intArray0, (-672));
    }

    @Test(timeout = 4000)
    public void test06571() throws Throwable {
        int[] intArray0 = new int[7];
        intArray0[1] = (-1);
        int int0 = ArrayUtils.lastIndexOf(intArray0, (-1));
    }

    @Test(timeout = 4000)
    public void test06672() throws Throwable {
        float[] floatArray0 = new float[9];
        int int0 = ArrayUtils.lastIndexOf(floatArray0, 0.0F, 64);
    }

    @Test(timeout = 4000)
    public void test06773() throws Throwable {
        float[] floatArray0 = new float[1];
        floatArray0[0] = (-98.0F);
        int int0 = ArrayUtils.lastIndexOf(floatArray0, (-98.0F));
    }

    @Test(timeout = 4000)
    public void test06874() throws Throwable {
        double[] doubleArray0 = new double[21];
        doubleArray0[0] = 938.37784;
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 938.37784, 1811, 1.0);
    }

    @Test(timeout = 4000)
    public void test06975() throws Throwable {
        double[] doubleArray0 = new double[1];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 0);
    }

    @Test(timeout = 4000)
    public void test07076() throws Throwable {
        double[] doubleArray0 = new double[1];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test07177() throws Throwable {
        double[] doubleArray0 = new double[0];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test07278() throws Throwable {
        double[] doubleArray0 = new double[8];
        doubleArray0[0] = (double) (-1);
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1.0));
    }

    @Test(timeout = 4000)
    public void test07379() throws Throwable {
        double[] doubleArray0 = new double[4];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0);
    }

    @Test(timeout = 4000)
    public void test07480() throws Throwable {
        char[] charArray0 = new char[3];
        charArray0[2] = 'R';
        int int0 = ArrayUtils.lastIndexOf(charArray0, 'R', (int) (byte) 5);
    }

    @Test(timeout = 4000)
    public void test07581() throws Throwable {
        char[] charArray0 = new char[3];
        charArray0[0] = '~';
        int int0 = ArrayUtils.lastIndexOf(charArray0, '~');
    }

    @Test(timeout = 4000)
    public void test07682() throws Throwable {
        char[] charArray0 = new char[5];
        charArray0[4] = '4';
        int int0 = ArrayUtils.lastIndexOf(charArray0, '4');
    }

    @Test(timeout = 4000)
    public void test07783() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) 82;
        byteArray0[2] = (byte) 19;
        byteArray0[3] = (byte) 5;
        byteArray0[4] = (byte) 5;
        int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 0, (int) (byte) 82);
    }

    @Test(timeout = 4000)
    public void test07884() throws Throwable {
        byte[] byteArray0 = new byte[1];
        int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 0);
    }

    @Test(timeout = 4000)
    public void test07985() throws Throwable {
        Integer integer0 = new Integer(0);
        boolean boolean0 = ArrayUtils.isSameType(integer0, integer0);
    }

    @Test(timeout = 4000)
    public void test08086() throws Throwable {
        Object object0 = new Object();
        boolean boolean0 = ArrayUtils.isEquals("java.awt.graphicsenv", object0);
    }

    @Test(timeout = 4000)
    public void test08187() throws Throwable {
        boolean[] booleanArray0 = new boolean[4];
        booleanArray0[1] = true;
        int int0 = ArrayUtils.indexOf(booleanArray0, true, (int) (short) 0);
    }

    @Test(timeout = 4000)
    public void test08288() throws Throwable {
        boolean[] booleanArray0 = new boolean[4];
        booleanArray0[0] = true;
        int int0 = ArrayUtils.indexOf(booleanArray0, false);
    }

    @Test(timeout = 4000)
    public void test08389() throws Throwable {
        short[] shortArray0 = new short[7];
        shortArray0[0] = (short) 2997;
        int int0 = ArrayUtils.indexOf(shortArray0, (short) 2997);
    }

    @Test(timeout = 4000)
    public void test08490() throws Throwable {
        short[] shortArray0 = new short[5];
        shortArray0[3] = (short) (-2811);
        int int0 = ArrayUtils.indexOf(shortArray0, (short) (-2811));
    }

    @Test(timeout = 4000)
    public void test08591() throws Throwable {
        Object[] objectArray0 = new Object[3];
        Object object0 = new Object();
        objectArray0[1] = object0;
        int int0 = ArrayUtils.indexOf(objectArray0, object0);
    }

    @Test(timeout = 4000)
    public void test08692() throws Throwable {
        long[] longArray0 = new long[4];
        int int0 = ArrayUtils.indexOf(longArray0, 0L);
    }

    @Test(timeout = 4000)
    public void test08793() throws Throwable {
        long[] longArray0 = new long[5];
        longArray0[1] = (long) (-1);
        int int0 = ArrayUtils.indexOf(longArray0, (long) (-1));
    }

    @Test(timeout = 4000)
    public void test08894() throws Throwable {
        int[] intArray0 = new int[5];
        intArray0[2] = 58;
        int int0 = ArrayUtils.indexOf(intArray0, 58, (-2996));
    }

    @Test(timeout = 4000)
    public void test08995() throws Throwable {
        int[] intArray0 = new int[5];
        intArray0[1] = (-1990);
        int int0 = ArrayUtils.indexOf(intArray0, (-1990));
    }

    @Test(timeout = 4000)
    public void test09096() throws Throwable {
        float[] floatArray0 = new float[3];
        floatArray0[2] = (-1.0F);
        int int0 = ArrayUtils.indexOf(floatArray0, (-1.0F));
    }

    @Test(timeout = 4000)
    public void test09197() throws Throwable {
        double[] doubleArray0 = new double[7];
        doubleArray0[2] = 435.264886227;
        int int0 = ArrayUtils.indexOf(doubleArray0, 435.264886227, (int) (byte) 0, (double) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test09298() throws Throwable {
        int int0 = ArrayUtils.indexOf((double[]) null, 1235.3909518515, 26.20243310753);
    }

    @Test(timeout = 4000)
    public void test09399() throws Throwable {
        double[] doubleArray0 = new double[9];
        doubleArray0[3] = (double) (byte) 109;
        int int0 = ArrayUtils.indexOf(doubleArray0, (double) (byte) 109);
    }

    @Test(timeout = 4000)
    public void test094100() throws Throwable {
        char[] charArray0 = new char[5];
        charArray0[1] = 'U';
        int int0 = ArrayUtils.indexOf(charArray0, 'U', (-1));
    }

    @Test(timeout = 4000)
    public void test095101() throws Throwable {
        char[] charArray0 = new char[4];
        charArray0[0] = 'y';
        int int0 = ArrayUtils.indexOf(charArray0, 'y');
    }

    @Test(timeout = 4000)
    public void test096102() throws Throwable {
        byte[] byteArray0 = new byte[7];
        byteArray0[4] = (byte) 5;
        int int0 = ArrayUtils.indexOf(byteArray0, (byte) 5, 0);
    }

    @Test(timeout = 4000)
    public void test097103() throws Throwable {
        byte[] byteArray0 = new byte[5];
        int int0 = ArrayUtils.indexOf(byteArray0, (byte) 0);
    }

    @Test(timeout = 4000)
    public void test098104() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byteArray0[2] = (byte) 19;
        int int0 = ArrayUtils.indexOf(byteArray0, (byte) 19);
    }

    @Test(timeout = 4000)
    public void test099105() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test100106() throws Throwable {
        short[] shortArray0 = new short[0];
        short[] shortArray1 = ArrayUtils.clone(shortArray0);
    }

    @Test(timeout = 4000)
    public void test101107() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        Integer[] integerArray0 = ArrayUtils.clone(arrayUtils0.EMPTY_INTEGER_OBJECT_ARRAY);
    }

    @Test(timeout = 4000)
    public void test102108() throws Throwable {
        long[] longArray0 = new long[4];
        long[] longArray1 = ArrayUtils.clone(longArray0);
    }

    @Test(timeout = 4000)
    public void test103109() throws Throwable {
        int[] intArray0 = new int[0];
        int[] intArray1 = ArrayUtils.clone(intArray0);
    }

    @Test(timeout = 4000)
    public void test104110() throws Throwable {
        float[] floatArray0 = new float[0];
        float[] floatArray1 = ArrayUtils.clone(floatArray0);
        floatArray1.equals((Object) floatArray0);
    }

    @Test(timeout = 4000)
    public void test105111() throws Throwable {
        char[] charArray0 = new char[5];
        char[] charArray1 = ArrayUtils.clone(charArray0);
    }

    @Test(timeout = 4000)
    public void test106112() throws Throwable {
        byte[] byteArray0 = new byte[7];
        byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    }

    @Test(timeout = 4000)
    public void test107113() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test108114() throws Throwable {
        short[] shortArray0 = new short[0];
        short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    }

    @Test(timeout = 4000)
    public void test109115() throws Throwable {
        AbstractMap.SimpleEntry<Object, String>[] abstractMap_SimpleEntryArray0 = (AbstractMap.SimpleEntry<Object, String>[]) Array.newInstance(AbstractMap.SimpleEntry.class, 0);
        AbstractMap.SimpleEntry<Object, String>[] abstractMap_SimpleEntryArray1 = ArrayUtils.addAll(abstractMap_SimpleEntryArray0, abstractMap_SimpleEntryArray0);
    }

    @Test(timeout = 4000)
    public void test110116() throws Throwable {
        int[] intArray0 = new int[0];
        int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    }

    @Test(timeout = 4000)
    public void test111117() throws Throwable {
        float[] floatArray0 = new float[0];
        float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    }

    @Test(timeout = 4000)
    public void test112118() throws Throwable {
        double[] doubleArray0 = new double[0];
        double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test113119() throws Throwable {
        char[] charArray0 = new char[0];
        char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    }

    @Test(timeout = 4000)
    public void test114120() throws Throwable {
        boolean[] booleanArray0 = new boolean[7];
        boolean[] booleanArray1 = ArrayUtils.add(booleanArray0, 0, false);
        Arrays.equals(new boolean[] { false, false, false, false, false, false, false, false }, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test115121() throws Throwable {
        float[] floatArray0 = new float[2];
        float[] floatArray1 = ArrayUtils.add(floatArray0, 1, 0.0F);
    }

    @Test(timeout = 4000)
    public void test116122() throws Throwable {
        double[] doubleArray0 = new double[8];
        double[] doubleArray1 = ArrayUtils.add(doubleArray0, 0, (-1.0));
    }

    @Test(timeout = 4000)
    public void test117123() throws Throwable {
        char[] charArray0 = new char[2];
        char[] charArray1 = ArrayUtils.add(charArray0, (int) (byte) 0, ')');
    }

    @Test(timeout = 4000)
    public void test118124() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[8];
        ArrayUtils.toPrimitive(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test119125() throws Throwable {
        short[] shortArray0 = new short[8];
        ArrayUtils.remove(shortArray0, (-1));
    }

    @Test(timeout = 4000)
    public void test120126() throws Throwable {
        ArrayUtils.remove((Integer[]) null, (-246));
    }

    @Test(timeout = 4000)
    public void test121127() throws Throwable {
        double[] doubleArray0 = new double[5];
        ArrayUtils.remove(doubleArray0, 415);
    }

    @Test(timeout = 4000)
    public void test122128() throws Throwable {
        byte[] byteArray0 = new byte[9];
        ArrayUtils.remove(byteArray0, (int) (byte) (-1));
    }

    @Test(timeout = 4000)
    public void test123129() throws Throwable {
        short[] shortArray0 = new short[6];
        ArrayUtils.add(shortArray0, (int) (short) 2847, (short) 2847);
    }

    @Test(timeout = 4000)
    public void test124130() throws Throwable {
        Object object0 = new Object();
        ArrayUtils arrayUtils0 = new ArrayUtils();
        ArrayUtils.add((Object[]) arrayUtils0.EMPTY_CLASS_ARRAY, object0);
    }

    @Test(timeout = 4000)
    public void test125131() throws Throwable {
        ArrayUtils.add((int[]) null, (int) (short) 224, 36);
    }

    @Test(timeout = 4000)
    public void test126132() throws Throwable {
        byte[] byteArray0 = new byte[8];
        ArrayUtils.add(byteArray0, (int) (byte) 49, (byte) 4);
    }

    @Test(timeout = 4000)
    public void test127133() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        boolean boolean0 = ArrayUtils.isEmpty(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test128134() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test129135() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean boolean0 = ArrayUtils.isEmpty(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test130136() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((float[]) null);
    }

    @Test(timeout = 4000)
    public void test131137() throws Throwable {
        float[] floatArray0 = new float[0];
        boolean boolean0 = ArrayUtils.isEmpty(floatArray0);
    }

    @Test(timeout = 4000)
    public void test132138() throws Throwable {
        float[] floatArray0 = new float[4];
        boolean boolean0 = ArrayUtils.isEmpty(floatArray0);
    }

    @Test(timeout = 4000)
    public void test133139() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((double[]) null);
    }

    @Test(timeout = 4000)
    public void test134140() throws Throwable {
        double[] doubleArray0 = new double[1];
        boolean boolean0 = ArrayUtils.isEmpty(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test135141() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, false, 2286);
    }

    @Test(timeout = 4000)
    public void test136142() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        booleanArray0[0] = true;
        int int0 = ArrayUtils.indexOf(booleanArray0, true, (-1903));
    }

    @Test(timeout = 4000)
    public void test137143() throws Throwable {
        boolean[] booleanArray0 = new boolean[6];
        int int0 = ArrayUtils.indexOf(booleanArray0, false, 1881);
    }

    @Test(timeout = 4000)
    public void test138144() throws Throwable {
        int int0 = ArrayUtils.indexOf((boolean[]) null, false, (int) (short) (-1697));
    }

    @Test(timeout = 4000)
    public void test139145() throws Throwable {
        float[] floatArray0 = new float[1];
        int int0 = ArrayUtils.lastIndexOf(floatArray0, (float) 48, 48);
    }

    @Test(timeout = 4000)
    public void test140146() throws Throwable {
        float[] floatArray0 = new float[0];
        int int0 = ArrayUtils.lastIndexOf(floatArray0, (float) (short) 2, (-1867));
    }

    @Test(timeout = 4000)
    public void test141147() throws Throwable {
        float[] floatArray0 = new float[8];
        floatArray0[4] = (float) (byte) 19;
        int int0 = ArrayUtils.indexOf(floatArray0, 19.0F, (int) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test142148() throws Throwable {
        float[] floatArray0 = new float[8];
        int int0 = ArrayUtils.indexOf(floatArray0, 19.0F, (int) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test143149() throws Throwable {
        float[] floatArray0 = new float[0];
        int int0 = ArrayUtils.indexOf(floatArray0, (float) 1, 1);
    }

    @Test(timeout = 4000)
    public void test144150() throws Throwable {
        double[] doubleArray0 = new double[21];
        doubleArray0[1] = 2250.7;
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 938.37784, 1811, 1.0);
    }

    @Test(timeout = 4000)
    public void test145151() throws Throwable {
        double[] doubleArray0 = new double[7];
        int int0 = ArrayUtils.indexOf(doubleArray0, (-1753.527353), 2, (-674.23487837027));
    }

    @Test(timeout = 4000)
    public void test146152() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = (-1.0);
        int int0 = ArrayUtils.indexOf(doubleArray0, (-1.0), 0);
    }

    @Test(timeout = 4000)
    public void test147153() throws Throwable {
        double[] doubleArray0 = new double[1];
        int int0 = ArrayUtils.indexOf(doubleArray0, 435.264886227, 2168);
    }

    @Test(timeout = 4000)
    public void test148154() throws Throwable {
        int int0 = ArrayUtils.indexOf((double[]) null, 155.64351735, 48);
    }

    @Test(timeout = 4000)
    public void test149155() throws Throwable {
        byte[] byteArray0 = new byte[5];
        int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 0, (int) (byte) 82);
    }

    @Test(timeout = 4000)
    public void test150156() throws Throwable {
        byte[] byteArray0 = new byte[5];
        int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 26, 5);
    }

    @Test(timeout = 4000)
    public void test151157() throws Throwable {
        byte[] byteArray0 = new byte[1];
        byteArray0[0] = (byte) 2;
        int int0 = ArrayUtils.indexOf(byteArray0, (byte) 0, (-3328));
    }

    @Test(timeout = 4000)
    public void test152158() throws Throwable {
        byte[] byteArray0 = new byte[4];
        int int0 = ArrayUtils.indexOf(byteArray0, (byte) (-109), (int) (byte) 68);
    }

    @Test(timeout = 4000)
    public void test153159() throws Throwable {
        char[] charArray0 = new char[5];
        int int0 = ArrayUtils.indexOf(charArray0, '2', 17);
    }

    @Test(timeout = 4000)
    public void test154160() throws Throwable {
        int int0 = ArrayUtils.indexOf((char[]) null, ' ', 2145847248);
    }

    @Test(timeout = 4000)
    public void test155161() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((short[]) null, (short) 1960, (int) (short) 0);
    }

    @Test(timeout = 4000)
    public void test156162() throws Throwable {
        short[] shortArray0 = new short[5];
        shortArray0[1] = (short) 2;
        int int0 = ArrayUtils.indexOf(shortArray0, (short) (byte) 2, (-931));
    }

    @Test(timeout = 4000)
    public void test157163() throws Throwable {
        short[] shortArray0 = new short[8];
        int int0 = ArrayUtils.indexOf(shortArray0, (short) 37, (int) (short) 539);
    }

    @Test(timeout = 4000)
    public void test158164() throws Throwable {
        int[] intArray0 = new int[5];
        int int0 = ArrayUtils.indexOf(intArray0, 58, (-2996));
    }

    @Test(timeout = 4000)
    public void test159165() throws Throwable {
        int[] intArray0 = new int[1];
        int int0 = ArrayUtils.indexOf(intArray0, 2735, 53);
    }

    @Test(timeout = 4000)
    public void test160166() throws Throwable {
        long[] longArray0 = new long[1];
        int int0 = ArrayUtils.indexOf(longArray0, (-1127L), 2145847248);
    }

    @Test(timeout = 4000)
    public void test161167() throws Throwable {
        int int0 = ArrayUtils.indexOf((long[]) null, (long) (-1), 2);
    }

    @Test(timeout = 4000)
    public void test162168() throws Throwable {
        Object[] objectArray0 = new Object[2];
        Object object0 = new Object();
        objectArray0[0] = object0;
        int int0 = ArrayUtils.lastIndexOf(objectArray0, object0, 58);
    }

    @Test(timeout = 4000)
    public void test163169() throws Throwable {
        Object[] objectArray0 = new Object[6];
        Object object0 = new Object();
        objectArray0[0] = object0;
        int int0 = ArrayUtils.indexOf(objectArray0, objectArray0[0], 548);
    }

    @Test(timeout = 4000)
    public void test164170() throws Throwable {
        Object[] objectArray0 = new Object[8];
        Object object0 = new Object();
        objectArray0[2] = object0;
        objectArray0[4] = objectArray0[2];
        int int0 = ArrayUtils.indexOf(objectArray0, objectArray0[4], 0);
    }

    @Test(timeout = 4000)
    public void test165171() throws Throwable {
        Object[] objectArray0 = new Object[8];
        int int0 = ArrayUtils.indexOf(objectArray0, objectArray0[4], 0);
    }

    @Test(timeout = 4000)
    public void test166172() throws Throwable {
        Integer integer0 = new Integer((-2141337091));
        int int0 = ArrayUtils.indexOf((Object[]) null, (Object) integer0, 2);
    }

    @Test(timeout = 4000)
    public void test167173() throws Throwable {
        Object object0 = new Object();
        ArrayUtils.getLength(object0);
    }

    @Test(timeout = 4000)
    public void test168174() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.clone((boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test169175() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test170176() throws Throwable {
        float[] floatArray0 = ArrayUtils.clone((float[]) null);
    }

    @Test(timeout = 4000)
    public void test171177() throws Throwable {
        double[] doubleArray0 = ArrayUtils.clone((double[]) null);
    }

    @Test(timeout = 4000)
    public void test172178() throws Throwable {
        char[] charArray0 = new char[0];
        char[] charArray1 = ArrayUtils.clone(charArray0);
    }

    @Test(timeout = 4000)
    public void test173179() throws Throwable {
        short[] shortArray0 = ArrayUtils.clone((short[]) null);
    }

    @Test(timeout = 4000)
    public void test174180() throws Throwable {
        int[] intArray0 = new int[5];
        int[] intArray1 = ArrayUtils.clone(intArray0);
    }

    @Test(timeout = 4000)
    public void test175181() throws Throwable {
        int[] intArray0 = ArrayUtils.clone((int[]) null);
    }

    @Test(timeout = 4000)
    public void test176182() throws Throwable {
        long[] longArray0 = ArrayUtils.clone((long[]) null);
    }

    @Test(timeout = 4000)
    public void test177183() throws Throwable {
        String[] stringArray0 = new String[8];
        String[] stringArray1 = ArrayUtils.clone(stringArray0);
    }

    @Test(timeout = 4000)
    public void test178184() throws Throwable {
        Object[] objectArray0 = ArrayUtils.clone((Object[]) null);
    }

    @Test(timeout = 4000)
    public void test179185() throws Throwable {
        int[] intArray0 = new int[4];
        String string0 = ArrayUtils.toString((Object) intArray0[1], "', is neither of type Map.Entry nor an Array");
    }

    @Test(timeout = 4000)
    public void test180186() throws Throwable {
        float[] floatArray0 = new float[3];
        int int0 = ArrayUtils.indexOf(floatArray0, (-1.0F));
    }

    @Test(timeout = 4000)
    public void test181187() throws Throwable {
        char[] charArray0 = new char[4];
        int int0 = ArrayUtils.indexOf(charArray0, 'y');
    }

    @Test(timeout = 4000)
    public void test182188() throws Throwable {
        float[] floatArray0 = new float[1];
        ArrayUtils.remove(floatArray0, (-77));
    }

    @Test(timeout = 4000)
    public void test183189() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byte[] byteArray1 = ArrayUtils.remove(byteArray0, 0);
    }

    @Test(timeout = 4000)
    public void test184190() throws Throwable {
        int int0 = ArrayUtils.indexOf((boolean[]) null, true);
    }

    @Test(timeout = 4000)
    public void test185191() throws Throwable {
        double[] doubleArray0 = new double[4];
        double[] doubleArray1 = ArrayUtils.remove(doubleArray0, 2);
    }

    @Test(timeout = 4000)
    public void test186192() throws Throwable {
        long[] longArray0 = new long[4];
        int int0 = ArrayUtils.indexOf(longArray0, (-3L));
    }

    @Test(timeout = 4000)
    public void test187193() throws Throwable {
        short[] shortArray0 = new short[3];
        short[] shortArray1 = ArrayUtils.remove(shortArray0, (int) (short) 2);
    }

    @Test(timeout = 4000)
    public void test188194() throws Throwable {
        int int0 = ArrayUtils.indexOf((int[]) null, Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test189195() throws Throwable {
        double[] doubleArray0 = new double[4];
        int int0 = ArrayUtils.indexOf(doubleArray0, (double) (-1));
    }

    @Test(timeout = 4000)
    public void test190196() throws Throwable {
        short[] shortArray0 = new short[5];
        int int0 = ArrayUtils.indexOf(shortArray0, (short) (-2811));
    }

    @Test(timeout = 4000)
    public void test191197() throws Throwable {
        String[] stringArray0 = new String[8];
        String[] stringArray1 = ArrayUtils.remove(stringArray0, 1);
    }

    @Test(timeout = 4000)
    public void test192198() throws Throwable {
        int[] intArray0 = new int[3];
        ArrayUtils.remove(intArray0, (int) (byte) 64);
    }

    @Test(timeout = 4000)
    public void test193199() throws Throwable {
        long[] longArray0 = new long[6];
        long[] longArray1 = ArrayUtils.removeElement(longArray0, 0L);
    }

    @Test(timeout = 4000)
    public void test194200() throws Throwable {
        int[] intArray0 = new int[7];
        intArray0[0] = 1;
        int[] intArray1 = ArrayUtils.removeElement(intArray0, 1);
    }

    @Test(timeout = 4000)
    public void test195202() throws Throwable {
        double[] doubleArray0 = new double[1];
        double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 118.04661);
    }

    @Test(timeout = 4000)
    public void test196203() throws Throwable {
        char[] charArray0 = new char[8];
        charArray0[2] = 'A';
        char[] charArray1 = ArrayUtils.removeElement(charArray0, 'A');
    }

    @Test(timeout = 4000)
    public void test197205() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        byte[] byteArray0 = ArrayUtils.removeElement(arrayUtils0.EMPTY_BYTE_ARRAY, (byte) 0);
    }

    @Test(timeout = 4000)
    public void test198206() throws Throwable {
        ArrayUtils.add((long[]) null, 58, 1233L);
    }

    @Test(timeout = 4000)
    public void test199207() throws Throwable {
        Integer[] integerArray0 = new Integer[4];
        Integer integer0 = new Integer(1286);
        ArrayUtils.add(integerArray0, 8, integer0);
    }

    @Test(timeout = 4000)
    public void test200208() throws Throwable {
        Integer integer0 = new Integer(2);
        Object[] objectArray0 = ArrayUtils.add((Object[]) null, 0, (Object) integer0);
    }

    @Test(timeout = 4000)
    public void test201210() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        String[] stringArray0 = ArrayUtils.add(arrayUtils0.EMPTY_STRING_ARRAY, "Array element ");
    }

    @Test(timeout = 4000)
    public void test202211() throws Throwable {
        float[] floatArray0 = ArrayUtils.addAll((float[]) null, (float[]) null);
    }

    @Test(timeout = 4000)
    public void test203212() throws Throwable {
        float[] floatArray0 = new float[3];
        float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    }

    @Test(timeout = 4000)
    public void test204213() throws Throwable {
        long[] longArray0 = ArrayUtils.addAll((long[]) null, (long[]) null);
    }

    @Test(timeout = 4000)
    public void test205214() throws Throwable {
        long[] longArray0 = new long[5];
        long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    }

    @Test(timeout = 4000)
    public void test206215() throws Throwable {
        int[] intArray0 = new int[8];
        int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    }

    @Test(timeout = 4000)
    public void test207216() throws Throwable {
        short[] shortArray0 = new short[1];
        short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    }

    @Test(timeout = 4000)
    public void test208217() throws Throwable {
        byte[] byteArray0 = ArrayUtils.addAll((byte[]) null, (byte[]) null);
    }

    @Test(timeout = 4000)
    public void test209218() throws Throwable {
        byte[] byteArray0 = new byte[3];
        byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    }

    @Test(timeout = 4000)
    public void test210219() throws Throwable {
        char[] charArray0 = ArrayUtils.addAll((char[]) null, (char[]) null);
    }

    @Test(timeout = 4000)
    public void test211220() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.addAll((boolean[]) null, (boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test212221() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test213222() throws Throwable {
        Double[] doubleArray0 = new Double[3];
        Object[] objectArray0 = ArrayUtils.addAll((Object[]) doubleArray0, (Object[]) null);
    }

    @Test(timeout = 4000)
    public void test214224() throws Throwable {
        float[] floatArray0 = new float[0];
        boolean boolean0 = ArrayUtils.contains(floatArray0, 1852.25F);
    }

    @Test(timeout = 4000)
    public void test215225() throws Throwable {
        byte[] byteArray0 = new byte[0];
        boolean boolean0 = ArrayUtils.isEmpty(byteArray0);
    }

    @Test(timeout = 4000)
    public void test216226() throws Throwable {
        byte[] byteArray0 = new byte[5];
        boolean boolean0 = ArrayUtils.isEmpty(byteArray0);
    }

    @Test(timeout = 4000)
    public void test217227() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test218228() throws Throwable {
        char[] charArray0 = new char[7];
        boolean boolean0 = ArrayUtils.isEmpty(charArray0);
    }

    @Test(timeout = 4000)
    public void test219229() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        boolean boolean0 = ArrayUtils.isEmpty(arrayUtils0.EMPTY_CHAR_ARRAY);
    }

    @Test(timeout = 4000)
    public void test220230() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((char[]) null);
    }

    @Test(timeout = 4000)
    public void test221231() throws Throwable {
        short[] shortArray0 = new short[0];
        boolean boolean0 = ArrayUtils.isEmpty(shortArray0);
    }

    @Test(timeout = 4000)
    public void test222232() throws Throwable {
        short[] shortArray0 = new short[7];
        boolean boolean0 = ArrayUtils.isEmpty(shortArray0);
    }

    @Test(timeout = 4000)
    public void test223233() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((short[]) null);
    }

    @Test(timeout = 4000)
    public void test224234() throws Throwable {
        int[] intArray0 = new int[6];
        boolean boolean0 = ArrayUtils.isEmpty(intArray0);
    }

    @Test(timeout = 4000)
    public void test225235() throws Throwable {
        int[] intArray0 = new int[0];
        boolean boolean0 = ArrayUtils.isEmpty(intArray0);
    }

    @Test(timeout = 4000)
    public void test226236() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((int[]) null);
    }

    @Test(timeout = 4000)
    public void test227237() throws Throwable {
        long[] longArray0 = new long[4];
        boolean boolean0 = ArrayUtils.isEmpty(longArray0);
    }

    @Test(timeout = 4000)
    public void test228238() throws Throwable {
        long[] longArray0 = new long[0];
        boolean boolean0 = ArrayUtils.isEmpty(longArray0);
    }

    @Test(timeout = 4000)
    public void test229239() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((long[]) null);
    }

    @Test(timeout = 4000)
    public void test230240() throws Throwable {
        String[] stringArray0 = new String[0];
        boolean boolean0 = ArrayUtils.isEmpty(stringArray0);
    }

    @Test(timeout = 4000)
    public void test231241() throws Throwable {
        String[] stringArray0 = new String[8];
        boolean boolean0 = ArrayUtils.isEmpty(stringArray0);
    }

    @Test(timeout = 4000)
    public void test232242() throws Throwable {
        boolean[] booleanArray0 = new boolean[7];
        booleanArray0[0] = true;
        Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test233243() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test234244() throws Throwable {
        Boolean[] booleanArray0 = ArrayUtils.toObject((boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test235245() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[6];
        booleanArray0[0] = (Boolean) true;
        boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0, false);
        Arrays.equals(new boolean[] { true, false, false, false, false, false }, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test236246() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[0];
        boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0, true);
        Arrays.equals(new boolean[] {}, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test237247() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.toPrimitive((Boolean[]) null, false);
    }

    @Test(timeout = 4000)
    public void test238248() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[0];
        boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test239249() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.toPrimitive((Boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test240250() throws Throwable {
        float[] floatArray0 = new float[0];
        Float[] floatArray1 = ArrayUtils.toObject(floatArray0);
    }

    @Test(timeout = 4000)
    public void test241251() throws Throwable {
        Float[] floatArray0 = new Float[7];
        Float float0 = new Float((float) 0);
        floatArray0[0] = float0;
        float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, (float) 0);
    }

    @Test(timeout = 4000)
    public void test242252() throws Throwable {
        Float[] floatArray0 = new Float[0];
        float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, 0.0F);
    }

    @Test(timeout = 4000)
    public void test243253() throws Throwable {
        float[] floatArray0 = ArrayUtils.toPrimitive((Float[]) null, (-1.0F));
    }

    @Test(timeout = 4000)
    public void test244254() throws Throwable {
        Float[] floatArray0 = new Float[6];
        Float float0 = new Float((-1.0F));
        floatArray0[0] = float0;
        floatArray0[1] = float0;
        floatArray0[2] = floatArray0[0];
        floatArray0[3] = floatArray0[1];
        floatArray0[4] = float0;
        floatArray0[5] = float0;
        float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    }

    @Test(timeout = 4000)
    public void test245256() throws Throwable {
        Float[] floatArray0 = new Float[9];
        ArrayUtils.toPrimitive(floatArray0);
    }

    @Test(timeout = 4000)
    public void test246257() throws Throwable {
        Double[] doubleArray0 = new Double[12];
        Double double0 = new Double(0.0);
        doubleArray0[0] = double0;
        double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0, 2552.4325229722544);
    }

    @Test(timeout = 4000)
    public void test247258() throws Throwable {
        Double[] doubleArray0 = new Double[0];
        double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0, 26.20243310753);
    }

    @Test(timeout = 4000)
    public void test248259() throws Throwable {
        double[] doubleArray0 = ArrayUtils.toPrimitive((Double[]) null, 457.141);
    }

    @Test(timeout = 4000)
    public void test249260() throws Throwable {
        Double[] doubleArray0 = new Double[1];
        doubleArray0[0] = (Double) (-1.0);
        double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test250261() throws Throwable {
        double[] doubleArray0 = ArrayUtils.toPrimitive((Double[]) null);
    }

    @Test(timeout = 4000)
    public void test251262() throws Throwable {
        Double[] doubleArray0 = new Double[1];
        ArrayUtils.toPrimitive(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test252263() throws Throwable {
        byte[] byteArray0 = new byte[7];
        Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
    }

    @Test(timeout = 4000)
    public void test253264() throws Throwable {
        Byte[] byteArray0 = ArrayUtils.toObject((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test254265() throws Throwable {
        Byte[] byteArray0 = new Byte[3];
        Byte byte0 = new Byte((byte) 120);
        byteArray0[0] = byte0;
        byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, (byte) 0);
    }

    @Test(timeout = 4000)
    public void test255266() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        byte[] byteArray0 = ArrayUtils.toPrimitive(arrayUtils0.EMPTY_BYTE_OBJECT_ARRAY, (byte) 66);
    }

    @Test(timeout = 4000)
    public void test256267() throws Throwable {
        byte[] byteArray0 = ArrayUtils.toPrimitive((Byte[]) null, (byte) 5);
    }

    @Test(timeout = 4000)
    public void test257268() throws Throwable {
        Byte[] byteArray0 = new Byte[2];
        Byte byte0 = new Byte((byte) (-34));
        byteArray0[0] = byte0;
        byteArray0[1] = byte0;
        byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0);
    }

    @Test(timeout = 4000)
    public void test258269() throws Throwable {
        byte[] byteArray0 = ArrayUtils.EMPTY_BYTE_ARRAY;
        Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
        byte[] byteArray2 = ArrayUtils.toPrimitive(byteArray1);
    }

    @Test(timeout = 4000)
    public void test259271() throws Throwable {
        byte[] byteArray0 = ArrayUtils.toPrimitive((Byte[]) null);
    }

    @Test(timeout = 4000)
    public void test260272() throws Throwable {
        Byte[] byteArray0 = new Byte[2];
        ArrayUtils.toPrimitive(byteArray0);
    }

    @Test(timeout = 4000)
    public void test261273() throws Throwable {
        short[] shortArray0 = new short[0];
        Short[] shortArray1 = ArrayUtils.toObject(shortArray0);
    }

    @Test(timeout = 4000)
    public void test262274() throws Throwable {
        Short[] shortArray0 = ArrayUtils.toObject((short[]) null);
    }

    @Test(timeout = 4000)
    public void test263275() throws Throwable {
        short[] shortArray0 = new short[2];
        Short[] shortArray1 = ArrayUtils.toObject(shortArray0);
    }

    @Test(timeout = 4000)
    public void test264277() throws Throwable {
        Short[] shortArray0 = new Short[2];
        Short short0 = Short.decode("6");
        shortArray0[0] = short0;
        short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0, (short) short0);
    }

    @Test(timeout = 4000)
    public void test265278() throws Throwable {
        short[] shortArray0 = ArrayUtils.toPrimitive((Short[]) null, (short) (byte) (-1));
    }

    @Test(timeout = 4000)
    public void test266279() throws Throwable {
        Short[] shortArray0 = new Short[4];
        Short short0 = new Short((short) 26214);
        shortArray0[0] = short0;
        shortArray0[1] = short0;
        shortArray0[2] = short0;
        shortArray0[3] = short0;
        short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
    }

    @Test(timeout = 4000)
    public void test267281() throws Throwable {
        Short[] shortArray0 = new Short[0];
        short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
    }

    @Test(timeout = 4000)
    public void test268282() throws Throwable {
        Short[] shortArray0 = new Short[4];
        ArrayUtils.toPrimitive(shortArray0);
    }

    @Test(timeout = 4000)
    public void test269283() throws Throwable {
        int[] intArray0 = new int[0];
        Integer[] integerArray0 = ArrayUtils.toObject(intArray0);
    }

    @Test(timeout = 4000)
    public void test270284() throws Throwable {
        Integer[] integerArray0 = ArrayUtils.toObject((int[]) null);
    }

    @Test(timeout = 4000)
    public void test271285() throws Throwable {
        Integer[] integerArray0 = new Integer[9];
        Integer integer0 = new Integer((-392));
        integerArray0[0] = integer0;
        int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, 1);
    }

    @Test(timeout = 4000)
    public void test272287() throws Throwable {
        Integer[] integerArray0 = new Integer[0];
        int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, (-851));
    }

    @Test(timeout = 4000)
    public void test273288() throws Throwable {
        Integer[] integerArray0 = new Integer[0];
        int[] intArray0 = ArrayUtils.toPrimitive(integerArray0);
    }

    @Test(timeout = 4000)
    public void test274289() throws Throwable {
        int[] intArray0 = new int[8];
        Integer[] integerArray0 = ArrayUtils.toObject(intArray0);
        int[] intArray1 = ArrayUtils.toPrimitive(integerArray0);
    }

    @Test(timeout = 4000)
    public void test275291() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        Long[] longArray0 = ArrayUtils.toObject(arrayUtils0.EMPTY_LONG_ARRAY);
    }

    @Test(timeout = 4000)
    public void test276292() throws Throwable {
        Long[] longArray0 = ArrayUtils.toObject((long[]) null);
    }

    @Test(timeout = 4000)
    public void test277293() throws Throwable {
        long[] longArray0 = ArrayUtils.add((long[]) null, 0L);
        Long[] longArray1 = ArrayUtils.toObject(longArray0);
    }

    @Test(timeout = 4000)
    public void test278295() throws Throwable {
        Long[] longArray0 = new Long[0];
        long[] longArray1 = ArrayUtils.toPrimitive(longArray0, (-2360L));
    }

    @Test(timeout = 4000)
    public void test279296() throws Throwable {
        long[] longArray0 = ArrayUtils.toPrimitive((Long[]) null, 2465L);
    }

    @Test(timeout = 4000)
    public void test280297() throws Throwable {
        Long[] longArray0 = new Long[1];
        Long long0 = new Long(375L);
        longArray0[0] = long0;
        long[] longArray1 = ArrayUtils.toPrimitive(longArray0, (long) longArray0[0]);
    }

    @Test(timeout = 4000)
    public void test281299() throws Throwable {
        Long[] longArray0 = new Long[2];
        Long long0 = new Long(1L);
        longArray0[0] = long0;
        longArray0[1] = longArray0[0];
        long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    }

    @Test(timeout = 4000)
    public void test282301() throws Throwable {
        Long[] longArray0 = new Long[0];
        long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    }

    @Test(timeout = 4000)
    public void test283302() throws Throwable {
        Long[] longArray0 = new Long[2];
        ArrayUtils.toPrimitive(longArray0);
    }

    @Test(timeout = 4000)
    public void test284303() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        Character[] characterArray0 = ArrayUtils.toObject(arrayUtils0.EMPTY_CHAR_ARRAY);
    }

    @Test(timeout = 4000)
    public void test285304() throws Throwable {
        Character[] characterArray0 = ArrayUtils.toObject((char[]) null);
    }

    @Test(timeout = 4000)
    public void test286305() throws Throwable {
        Character[] characterArray0 = new Character[2];
        Character character0 = new Character('`');
        characterArray0[0] = character0;
        char[] charArray0 = ArrayUtils.toPrimitive(characterArray0, '&');
    }

    @Test(timeout = 4000)
    public void test287306() throws Throwable {
        char[] charArray0 = ArrayUtils.toPrimitive((Character[]) null, 'a');
    }

    @Test(timeout = 4000)
    public void test288307() throws Throwable {
        Character[] characterArray0 = new Character[1];
        characterArray0[0] = (Character) 'G';
        char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    }

    @Test(timeout = 4000)
    public void test289308() throws Throwable {
        Character[] characterArray0 = new Character[0];
        char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    }

    @Test(timeout = 4000)
    public void test290309() throws Throwable {
        char[] charArray0 = ArrayUtils.toPrimitive((Character[]) null);
    }

    @Test(timeout = 4000)
    public void test291310() throws Throwable {
        Character[] characterArray0 = new Character[1];
        ArrayUtils.toPrimitive(characterArray0);
    }

    @Test(timeout = 4000)
    public void test292311() throws Throwable {
        boolean[] booleanArray0 = new boolean[5];
        boolean boolean0 = ArrayUtils.contains(booleanArray0, false);
    }

    @Test(timeout = 4000)
    public void test293312() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean boolean0 = ArrayUtils.contains(booleanArray0, true);
    }

    @Test(timeout = 4000)
    public void test294313() throws Throwable {
        boolean[] booleanArray0 = new boolean[7];
        booleanArray0[0] = true;
        booleanArray0[1] = true;
        booleanArray0[2] = true;
        booleanArray0[3] = true;
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, false, 3);
    }

    @Test(timeout = 4000)
    public void test295314() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, false, (-3397));
    }

    @Test(timeout = 4000)
    public void test296315() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((boolean[]) null, false, 118);
    }

    @Test(timeout = 4000)
    public void test297316() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        int int0 = ArrayUtils.indexOf(booleanArray0, true, (-1903));
    }

    @Test(timeout = 4000)
    public void test298317() throws Throwable {
        float[] floatArray0 = new float[5];
        floatArray0[3] = (float) (short) (-1);
        boolean boolean0 = ArrayUtils.contains(floatArray0, (-1.0F));
    }

    @Test(timeout = 4000)
    public void test299318() throws Throwable {
        float[] floatArray0 = new float[7];
        int int0 = ArrayUtils.lastIndexOf(floatArray0, (-1152.65F), 2);
    }

    @Test(timeout = 4000)
    public void test300319() throws Throwable {
        float[] floatArray0 = new float[4];
        int int0 = ArrayUtils.lastIndexOf(floatArray0, 0.0F, (-943));
    }

    @Test(timeout = 4000)
    public void test301320() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((float[]) null, (float) (byte) 64);
    }

    @Test(timeout = 4000)
    public void test302321() throws Throwable {
        float[] floatArray0 = new float[4];
        int int0 = ArrayUtils.indexOf(floatArray0, 3301.3457F, (-3067));
    }

    @Test(timeout = 4000)
    public void test303322() throws Throwable {
        double[] doubleArray0 = new double[9];
        doubleArray0[4] = (double) (short) 2168;
        boolean boolean0 = ArrayUtils.contains(doubleArray0, 2168.0, (double) 4);
    }

    @Test(timeout = 4000)
    public void test304323() throws Throwable {
        double[] doubleArray0 = new double[8];
        boolean boolean0 = ArrayUtils.contains(doubleArray0, (double) (short) 26214, 939.37784);
    }

    @Test(timeout = 4000)
    public void test305324() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[4] = 852.772538765;
        boolean boolean0 = ArrayUtils.contains(doubleArray0, 852.772538765);
    }

    @Test(timeout = 4000)
    public void test306325() throws Throwable {
        double[] doubleArray0 = new double[3];
        doubleArray0[2] = 2269.0511557721948;
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 1.0, 1.0);
    }

    @Test(timeout = 4000)
    public void test307326() throws Throwable {
        double[] doubleArray0 = new double[6];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-32.706932), (int) (short) 1, 1310.6);
    }

    @Test(timeout = 4000)
    public void test308327() throws Throwable {
        double[] doubleArray0 = new double[9];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 554.94136, (-3084), (double) (byte) (-49));
    }

    @Test(timeout = 4000)
    public void test309328() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((double[]) null, (double) 0.0F, (int) (byte) 0, (-1476.73027527364));
    }

    @Test(timeout = 4000)
    public void test310329() throws Throwable {
        double[] doubleArray0 = new double[2];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 48);
    }

    @Test(timeout = 4000)
    public void test311330() throws Throwable {
        double[] doubleArray0 = new double[6];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (double) (-330.81F), 2);
    }

    @Test(timeout = 4000)
    public void test312331() throws Throwable {
        double[] doubleArray0 = new double[7];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1178.3237168008875), (-1717986918));
    }

    @Test(timeout = 4000)
    public void test313332() throws Throwable {
        double[] doubleArray0 = new double[0];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (double) (-1), 3282);
    }

    @Test(timeout = 4000)
    public void test314333() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 603.0;
        int int0 = ArrayUtils.indexOf(doubleArray0, (double) 0L, 0.0);
    }

    @Test(timeout = 4000)
    public void test315334() throws Throwable {
        double[] doubleArray0 = new double[9];
        int int0 = ArrayUtils.indexOf(doubleArray0, 0.0, (-875), 1.5);
    }

    @Test(timeout = 4000)
    public void test316335() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        int int0 = ArrayUtils.indexOf(arrayUtils0.EMPTY_DOUBLE_ARRAY, 1.5, (-370), 1.0);
    }

    @Test(timeout = 4000)
    public void test317336() throws Throwable {
        double[] doubleArray0 = new double[5];
        int int0 = ArrayUtils.indexOf(doubleArray0, (-1.0), (-449));
    }

    @Test(timeout = 4000)
    public void test318337() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 4;
        boolean boolean0 = ArrayUtils.contains(byteArray0, (byte) 4);
    }

    @Test(timeout = 4000)
    public void test319338() throws Throwable {
        byte[] byteArray0 = new byte[1];
        byteArray0[0] = (byte) 2;
        boolean boolean0 = ArrayUtils.contains(byteArray0, (byte) 0);
    }

    @Test(timeout = 4000)
    public void test320339() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byteArray0[2] = (byte) 19;
        int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 19);
    }

    @Test(timeout = 4000)
    public void test321340() throws Throwable {
        byte[] byteArray0 = new byte[2];
        int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 0, (-1768));
    }

    @Test(timeout = 4000)
    public void test322341() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((byte[]) null, (byte) 0, 0);
    }

    @Test(timeout = 4000)
    public void test323342() throws Throwable {
        byte[] byteArray0 = new byte[1];
        int int0 = ArrayUtils.indexOf(byteArray0, (byte) 0, (-3328));
    }

    @Test(timeout = 4000)
    public void test324343() throws Throwable {
        int int0 = ArrayUtils.indexOf((byte[]) null, (byte) 33, (-650));
    }

    @Test(timeout = 4000)
    public void test325344() throws Throwable {
        char[] charArray0 = new char[8];
        charArray0[6] = ']';
        boolean boolean0 = ArrayUtils.contains(charArray0, ']');
    }

    @Test(timeout = 4000)
    public void test326345() throws Throwable {
        char[] charArray0 = new char[1];
        charArray0[0] = '7';
        int int0 = ArrayUtils.lastIndexOf(charArray0, '7', 1);
    }

    @Test(timeout = 4000)
    public void test327346() throws Throwable {
        char[] charArray0 = new char[4];
        int int0 = ArrayUtils.lastIndexOf(charArray0, 'I', 2);
    }

    @Test(timeout = 4000)
    public void test328347() throws Throwable {
        char[] charArray0 = new char[6];
        int int0 = ArrayUtils.lastIndexOf(charArray0, 'v', (-1));
    }

    @Test(timeout = 4000)
    public void test329348() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((char[]) null, '!', 2);
    }

    @Test(timeout = 4000)
    public void test330349() throws Throwable {
        char[] charArray0 = new char[2];
        charArray0[0] = '>';
        int int0 = ArrayUtils.indexOf(charArray0, '>', (int) (short) (-2181));
    }

    @Test(timeout = 4000)
    public void test331350() throws Throwable {
        boolean boolean0 = ArrayUtils.contains((char[]) null, 'T');
    }

    @Test(timeout = 4000)
    public void test332351() throws Throwable {
        short[] shortArray0 = new short[7];
        shortArray0[0] = (short) (-26);
        boolean boolean0 = ArrayUtils.contains(shortArray0, (short) (-26));
    }

    @Test(timeout = 4000)
    public void test333352() throws Throwable {
        short[] shortArray0 = new short[2];
        boolean boolean0 = ArrayUtils.contains(shortArray0, (short) (-64));
    }

    @Test(timeout = 4000)
    public void test334353() throws Throwable {
        short[] shortArray0 = new short[2];
        shortArray0[1] = (short) 2168;
        int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 2168, 13);
    }

    @Test(timeout = 4000)
    public void test335354() throws Throwable {
        short[] shortArray0 = new short[9];
        int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 1, (-648));
    }

    @Test(timeout = 4000)
    public void test336355() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((short[]) null, (short) (-1697));
    }

    @Test(timeout = 4000)
    public void test337356() throws Throwable {
        int[] intArray0 = new int[5];
        intArray0[3] = 57;
        boolean boolean0 = ArrayUtils.contains(intArray0, 57);
    }

    @Test(timeout = 4000)
    public void test338357() throws Throwable {
        int[] intArray0 = new int[1];
        boolean boolean0 = ArrayUtils.contains(intArray0, (-1408));
    }

    @Test(timeout = 4000)
    public void test339358() throws Throwable {
        int[] intArray0 = new int[8];
        intArray0[2] = (-562);
        int int0 = ArrayUtils.lastIndexOf(intArray0, (-562), 11);
    }

    @Test(timeout = 4000)
    public void test340359() throws Throwable {
        int[] intArray0 = new int[8];
        int int0 = ArrayUtils.lastIndexOf(intArray0, 5, (-1));
    }

    @Test(timeout = 4000)
    public void test341360() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((int[]) null, (-4227), 69);
    }

    @Test(timeout = 4000)
    public void test342361() throws Throwable {
        int[] intArray0 = new int[1];
        int int0 = ArrayUtils.indexOf(intArray0, 0, (-1596));
    }

    @Test(timeout = 4000)
    public void test343362() throws Throwable {
        int int0 = ArrayUtils.indexOf((int[]) null, 18, (int) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test344363() throws Throwable {
        long[] longArray0 = new long[2];
        longArray0[0] = (-221L);
        boolean boolean0 = ArrayUtils.contains(longArray0, (-221L));
    }

    @Test(timeout = 4000)
    public void test345364() throws Throwable {
        long[] longArray0 = new long[9];
        longArray0[1] = (-1894L);
        int int0 = ArrayUtils.lastIndexOf(longArray0, (-1894L), Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test346365() throws Throwable {
        long[] longArray0 = new long[6];
        int int0 = ArrayUtils.lastIndexOf(longArray0, (-1L), 3);
    }

    @Test(timeout = 4000)
    public void test347366() throws Throwable {
        long[] longArray0 = new long[6];
        int int0 = ArrayUtils.lastIndexOf(longArray0, 317L, (-1));
    }

    @Test(timeout = 4000)
    public void test348367() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((long[]) null, 1L, 0);
    }

    @Test(timeout = 4000)
    public void test349368() throws Throwable {
        long[] longArray0 = new long[9];
        longArray0[5] = 1L;
        int int0 = ArrayUtils.indexOf(longArray0, 1L, (-1073741824));
    }

    @Test(timeout = 4000)
    public void test350369() throws Throwable {
        Object[] objectArray0 = new Object[7];
        boolean boolean0 = ArrayUtils.contains(objectArray0, objectArray0[0]);
    }

    @Test(timeout = 4000)
    public void test351370() throws Throwable {
        Object[] objectArray0 = new Object[1];
        Object object0 = new Object();
        boolean boolean0 = ArrayUtils.contains(objectArray0, object0);
    }

    @Test(timeout = 4000)
    public void test352371() throws Throwable {
        char[] charArray0 = new char[6];
        Character[] characterArray0 = ArrayUtils.toObject(charArray0);
    }

    @Test(timeout = 4000)
    public void test352372() throws Throwable {
        char[] charArray0 = new char[6];
        Character[] characterArray0 = ArrayUtils.toObject(charArray0);
        Integer integer0 = new Integer(55);
        int int0 = ArrayUtils.lastIndexOf((Object[]) characterArray0, (Object) integer0, 647);
    }

    @Test(timeout = 4000)
    public void test353374() throws Throwable {
        Object[] objectArray0 = new Object[4];
        objectArray0[3] = (Object) 'i';
        int int0 = ArrayUtils.lastIndexOf(objectArray0, objectArray0[2], (int) 'U');
    }

    @Test(timeout = 4000)
    public void test354375() throws Throwable {
        Object[] objectArray0 = new Object[5];
        objectArray0[0] = (Object) (short) 0;
        int int0 = ArrayUtils.lastIndexOf(objectArray0, objectArray0[0]);
    }

    @Test(timeout = 4000)
    public void test355376() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        int int0 = ArrayUtils.lastIndexOf((Object[]) arrayUtils0.EMPTY_STRING_ARRAY, (Object) arrayUtils0, (-1));
    }

    @Test(timeout = 4000)
    public void test356377() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((Object[]) null, (Object) "org.apache.commons.lang3.ArrayUtils", Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test357378() throws Throwable {
        Object[] objectArray0 = new Object[2];
        Object object0 = new Object();
        objectArray0[0] = object0;
        int int0 = ArrayUtils.indexOf(objectArray0, object0);
    }

    @Test(timeout = 4000)
    public void test358379() throws Throwable {
        Object[] objectArray0 = new Object[2];
        int int0 = ArrayUtils.indexOf(objectArray0, (Object) "gp^{:T6UR^jb1");
    }

    @Test(timeout = 4000)
    public void test359380() throws Throwable {
        Object[] objectArray0 = new Object[8];
        Object object0 = new Object();
        objectArray0[0] = object0;
        objectArray0[1] = objectArray0[0];
        objectArray0[2] = objectArray0[1];
        objectArray0[3] = objectArray0[1];
        objectArray0[4] = objectArray0[0];
        objectArray0[5] = objectArray0[0];
        objectArray0[6] = objectArray0[0];
        objectArray0[7] = objectArray0[1];
        int int0 = ArrayUtils.indexOf(objectArray0, (Object) null, (-348));
    }

    @Test(timeout = 4000)
    public void test360381() throws Throwable {
        boolean[] booleanArray0 = new boolean[7];
        ArrayUtils.reverse(booleanArray0);
        Arrays.equals(new boolean[] { false, false, false, false, false, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test361382() throws Throwable {
        ArrayUtils.reverse((boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test362383() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        ArrayUtils.reverse(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test363384() throws Throwable {
        ArrayUtils.reverse((float[]) null);
    }

    @Test(timeout = 4000)
    public void test364385() throws Throwable {
        float[] floatArray0 = new float[7];
        ArrayUtils.reverse(floatArray0);
    }

    @Test(timeout = 4000)
    public void test365386() throws Throwable {
        double[] doubleArray0 = new double[9];
        ArrayUtils.reverse(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test366387() throws Throwable {
        byte[] byteArray0 = new byte[4];
        ArrayUtils.reverse(byteArray0);
    }

    @Test(timeout = 4000)
    public void test367388() throws Throwable {
        ArrayUtils.reverse((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test368389() throws Throwable {
        byte[] byteArray0 = ArrayUtils.add((byte[]) null, (byte) 0);
    }

    @Test(timeout = 4000)
    public void test368390() throws Throwable {
        byte[] byteArray0 = ArrayUtils.add((byte[]) null, (byte) 0);
        ArrayUtils.reverse(byteArray0);
    }

    @Test(timeout = 4000)
    public void test369391() throws Throwable {
        ArrayUtils.reverse((char[]) null);
    }

    @Test(timeout = 4000)
    public void test370392() throws Throwable {
        char[] charArray0 = new char[3];
        ArrayUtils.reverse(charArray0);
    }

    @Test(timeout = 4000)
    public void test371393() throws Throwable {
        short[] shortArray0 = new short[2];
        ArrayUtils.reverse(shortArray0);
    }

    @Test(timeout = 4000)
    public void test372394() throws Throwable {
        ArrayUtils.reverse((int[]) null);
    }

    @Test(timeout = 4000)
    public void test373395() throws Throwable {
        int[] intArray0 = new int[4];
        ArrayUtils.reverse(intArray0);
    }

    @Test(timeout = 4000)
    public void test374396() throws Throwable {
        ArrayUtils.reverse((long[]) null);
    }

    @Test(timeout = 4000)
    public void test375397() throws Throwable {
        long[] longArray0 = new long[4];
        ArrayUtils.reverse(longArray0);
    }

    @Test(timeout = 4000)
    public void test376398() throws Throwable {
        Byte[] byteArray0 = new Byte[2];
        ArrayUtils.reverse((Object[]) byteArray0);
    }

    @Test(timeout = 4000)
    public void test377399() throws Throwable {
        Object object0 = new Object();
        boolean boolean0 = ArrayUtils.isSameType("Array element ", object0);
    }

    @Test(timeout = 4000)
    public void test378400() throws Throwable {
        ArrayUtils.isSameType((Object) null, "jzYHQb-AJ");
    }

    @Test(timeout = 4000)
    public void test379401() throws Throwable {
        ArrayUtils.remove((boolean[]) null, (-1));
    }

    @Test(timeout = 4000)
    public void test380402() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        boolean[] booleanArray1 = new boolean[8];
        boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test381403() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[4];
        Boolean boolean0 = Boolean.TRUE;
        booleanArray0[0] = boolean0;
        booleanArray0[1] = boolean0;
        booleanArray0[2] = booleanArray0[0];
        booleanArray0[3] = booleanArray0[0];
        boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
        boolean boolean1 = ArrayUtils.isSameLength((boolean[]) null, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test381404() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[4];
        Boolean boolean0 = Boolean.TRUE;
        booleanArray0[0] = boolean0;
        booleanArray0[1] = boolean0;
        booleanArray0[2] = booleanArray0[0];
        booleanArray0[3] = booleanArray0[0];
        boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
        boolean boolean1 = ArrayUtils.isSameLength((boolean[]) null, booleanArray1);
        Arrays.equals(new boolean[] { true, true, true, true }, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test382405() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((boolean[]) null, (boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test383406() throws Throwable {
        boolean[] booleanArray0 = new boolean[9];
        boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test384407() throws Throwable {
        float[] floatArray0 = new float[7];
        float[] floatArray1 = new float[3];
        boolean boolean0 = ArrayUtils.isSameLength(floatArray0, floatArray1);
    }

    @Test(timeout = 4000)
    public void test385408() throws Throwable {
        float[] floatArray0 = new float[1];
        boolean boolean0 = ArrayUtils.isSameLength((float[]) null, floatArray0);
    }

    @Test(timeout = 4000)
    public void test386409() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((float[]) null, (float[]) null);
    }

    @Test(timeout = 4000)
    public void test387410() throws Throwable {
        float[] floatArray0 = new float[2];
        boolean boolean0 = ArrayUtils.isSameLength(floatArray0, floatArray0);
    }

    @Test(timeout = 4000)
    public void test388411() throws Throwable {
        double[] doubleArray0 = new double[8];
        double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
        boolean boolean0 = ArrayUtils.isSameLength(doubleArray1, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test389413() throws Throwable {
        double[] doubleArray0 = new double[0];
        boolean boolean0 = ArrayUtils.isSameLength(doubleArray0, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test390414() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byte[] byteArray1 = new byte[5];
        boolean boolean0 = ArrayUtils.isSameLength(byteArray0, byteArray1);
    }

    @Test(timeout = 4000)
    public void test391415() throws Throwable {
        byte[] byteArray0 = new byte[9];
        boolean boolean0 = ArrayUtils.isSameLength(byteArray0, byteArray0);
    }

    @Test(timeout = 4000)
    public void test392416() throws Throwable {
        char[] charArray0 = new char[6];
        char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
        boolean boolean0 = ArrayUtils.isSameLength(charArray1, charArray0);
    }

    @Test(timeout = 4000)
    public void test393418() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((char[]) null, (char[]) null);
    }

    @Test(timeout = 4000)
    public void test394419() throws Throwable {
        char[] charArray0 = new char[6];
        boolean boolean0 = ArrayUtils.isSameLength(charArray0, charArray0);
    }

    @Test(timeout = 4000)
    public void test395420() throws Throwable {
        short[] shortArray0 = new short[7];
        short[] shortArray1 = new short[4];
        boolean boolean0 = ArrayUtils.isSameLength(shortArray1, shortArray0);
    }

    @Test(timeout = 4000)
    public void test396421() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((short[]) null, (short[]) null);
    }

    @Test(timeout = 4000)
    public void test397422() throws Throwable {
        short[] shortArray0 = new short[4];
        boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray0);
    }

    @Test(timeout = 4000)
    public void test398423() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((int[]) null, (int[]) null);
    }

    @Test(timeout = 4000)
    public void test399424() throws Throwable {
        int[] intArray0 = new int[1];
        boolean boolean0 = ArrayUtils.isSameLength(intArray0, intArray0);
    }

    @Test(timeout = 4000)
    public void test400425() throws Throwable {
        long[] longArray0 = new long[5];
        long[] longArray1 = new long[8];
        boolean boolean0 = ArrayUtils.isSameLength(longArray0, longArray1);
    }

    @Test(timeout = 4000)
    public void test401426() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((long[]) null, (long[]) null);
    }

    @Test(timeout = 4000)
    public void test402427() throws Throwable {
        long[] longArray0 = new long[2];
        boolean boolean0 = ArrayUtils.isSameLength(longArray0, longArray0);
    }

    @Test(timeout = 4000)
    public void test403428() throws Throwable {
        Object[] objectArray0 = new Object[7];
        boolean boolean0 = ArrayUtils.isSameLength(objectArray0, objectArray0);
    }

    @Test(timeout = 4000)
    public void test404429() throws Throwable {
        boolean[] booleanArray0 = new boolean[9];
        boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 1479, 1479);
    }

    @Test(timeout = 4000)
    public void test405430() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.subarray((boolean[]) null, 1, 1);
    }

    @Test(timeout = 4000)
    public void test406431() throws Throwable {
        float[] floatArray0 = new float[4];
        float[] floatArray1 = ArrayUtils.subarray(floatArray0, (-265), (-1));
    }

    @Test(timeout = 4000)
    public void test407432() throws Throwable {
        float[] floatArray0 = ArrayUtils.subarray((float[]) null, 0, Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test408433() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (int) (byte) 0, 2);
    }

    @Test(timeout = 4000)
    public void test409434() throws Throwable {
        double[] doubleArray0 = new double[6];
        double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (-3311), (-3311));
    }

    @Test(timeout = 4000)
    public void test410435() throws Throwable {
        double[] doubleArray0 = ArrayUtils.subarray((double[]) null, 58, 58);
    }

    @Test(timeout = 4000)
    public void test411436() throws Throwable {
        double[] doubleArray0 = new double[1];
        double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, 57, 4);
    }

    @Test(timeout = 4000)
    public void test412438() throws Throwable {
        byte[] byteArray0 = new byte[2];
        byte[] byteArray1 = ArrayUtils.subarray(byteArray0, 0, 520);
    }

    @Test(timeout = 4000)
    public void test413440() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) (byte) 58, (int) (byte) 102);
    }

    @Test(timeout = 4000)
    public void test414441() throws Throwable {
        byte[] byteArray0 = new byte[4];
        byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) (byte) (-82), (int) (byte) (-1));
    }

    @Test(timeout = 4000)
    public void test415442() throws Throwable {
        byte[] byteArray0 = ArrayUtils.subarray((byte[]) null, 0, 0);
    }

    @Test(timeout = 4000)
    public void test416443() throws Throwable {
        char[] charArray0 = new char[7];
        char[] charArray1 = ArrayUtils.subarray(charArray0, 0, Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test417445() throws Throwable {
        char[] charArray0 = new char[7];
        char[] charArray1 = ArrayUtils.subarray(charArray0, (int) (short) (-4227), (-2146065914));
    }

    @Test(timeout = 4000)
    public void test418446() throws Throwable {
        char[] charArray0 = ArrayUtils.subarray((char[]) null, (-3067), 2145847248);
    }

    @Test(timeout = 4000)
    public void test419447() throws Throwable {
        short[] shortArray0 = new short[1];
        short[] shortArray1 = ArrayUtils.subarray(shortArray0, (-2211), 836);
    }

    @Test(timeout = 4000)
    public void test420449() throws Throwable {
        short[] shortArray0 = new short[8];
        short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (short) (-648), (int) (short) 0);
    }

    @Test(timeout = 4000)
    public void test421450() throws Throwable {
        short[] shortArray0 = ArrayUtils.subarray((short[]) null, (-608), (-608));
    }

    @Test(timeout = 4000)
    public void test422451() throws Throwable {
        int[] intArray0 = new int[1];
        int[] intArray1 = ArrayUtils.subarray(intArray0, (-1578), 3);
    }

    @Test(timeout = 4000)
    public void test423453() throws Throwable {
        int[] intArray0 = ArrayUtils.subarray((int[]) null, 1092, 1092);
    }

    @Test(timeout = 4000)
    public void test424454() throws Throwable {
        int[] intArray0 = new int[6];
        int[] intArray1 = ArrayUtils.subarray(intArray0, 1190, 0);
    }

    @Test(timeout = 4000)
    public void test424455() throws Throwable {
        int[] intArray0 = new int[6];
        int[] intArray1 = ArrayUtils.subarray(intArray0, 1190, 0);
        boolean boolean0 = ArrayUtils.isSameLength(intArray1, intArray0);
    }

    @Test(timeout = 4000)
    public void test425456() throws Throwable {
        long[] longArray0 = new long[4];
        long[] longArray1 = ArrayUtils.subarray(longArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test426458() throws Throwable {
        long[] longArray0 = new long[5];
        long[] longArray1 = ArrayUtils.subarray(longArray0, 57, 204);
    }

    @Test(timeout = 4000)
    public void test427460() throws Throwable {
        long[] longArray0 = new long[2];
        long[] longArray1 = ArrayUtils.subarray(longArray0, (-386), (int) (byte) (-80));
    }

    @Test(timeout = 4000)
    public void test428462() throws Throwable {
        Object[] objectArray0 = new Object[1];
        Object[] objectArray1 = ArrayUtils.subarray(objectArray0, (-110), 414);
    }

    @Test(timeout = 4000)
    public void test429465() throws Throwable {
        Integer[] integerArray0 = new Integer[4];
        Integer[] integerArray1 = ArrayUtils.subarray(integerArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test430467() throws Throwable {
        float[] floatArray0 = new float[4];
        Float[] floatArray1 = ArrayUtils.toObject(floatArray0);
        Object[] objectArray0 = ArrayUtils.subarray((Object[]) floatArray1, (-1), (-1));
    }

    @Test(timeout = 4000)
    public void test431470() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.removeElement((boolean[]) null, true);
    }

    @Test(timeout = 4000)
    public void test432471() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean[] booleanArray1 = ArrayUtils.removeElement(booleanArray0, true);
    }

    @Test(timeout = 4000)
    public void test433472() throws Throwable {
        float[] floatArray0 = ArrayUtils.removeElement((float[]) null, (float) 0L);
    }

    @Test(timeout = 4000)
    public void test434473() throws Throwable {
        float[] floatArray0 = new float[4];
        float[] floatArray1 = ArrayUtils.clone(floatArray0);
    }

    @Test(timeout = 4000)
    public void test435475() throws Throwable {
        double[] doubleArray0 = ArrayUtils.addAll((double[]) null, (double[]) null);
    }

    @Test(timeout = 4000)
    public void test436476() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = ArrayUtils.clone(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test437478() throws Throwable {
        byte[] byteArray0 = ArrayUtils.clone((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test438479() throws Throwable {
        byte[] byteArray0 = new byte[0];
        byte[] byteArray1 = ArrayUtils.clone(byteArray0);
        byteArray1.equals((Object) byteArray0);
    }

    @Test(timeout = 4000)
    public void test439480() throws Throwable {
        char[] charArray0 = ArrayUtils.clone((char[]) null);
    }

    @Test(timeout = 4000)
    public void test440481() throws Throwable {
        short[] shortArray0 = ArrayUtils.removeElement((short[]) null, (short) 0);
    }

    @Test(timeout = 4000)
    public void test441482() throws Throwable {
        short[] shortArray0 = new short[6];
        short[] shortArray1 = ArrayUtils.clone(shortArray0);
    }

    @Test(timeout = 4000)
    public void test442484() throws Throwable {
        int[] intArray0 = ArrayUtils.addAll((int[]) null, (int[]) null);
    }

    @Test(timeout = 4000)
    public void test443485() throws Throwable {
        long[] longArray0 = ArrayUtils.removeElement((long[]) null, 1L);
    }

    @Test(timeout = 4000)
    public void test444486() throws Throwable {
        long[] longArray0 = new long[0];
        long[] longArray1 = ArrayUtils.clone(longArray0);
        longArray1.equals((Object) longArray0);
    }

    @Test(timeout = 4000)
    public void test445487() throws Throwable {
        Object[] objectArray0 = ArrayUtils.removeElement((Object[]) null, (Object) "org.apache.commons.lang3.ArrayUtils");
    }

    @Test(timeout = 4000)
    public void test446488() throws Throwable {
        Object object0 = new Object();
        String[] stringArray0 = new String[8];
        String[] stringArray1 = ArrayUtils.removeElement(stringArray0, object0);
    }

    @Test(timeout = 4000)
    public void test447490() throws Throwable {
        double[] doubleArray0 = new double[0];
        Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
        Map<Object, Object> map0 = ArrayUtils.toMap(doubleArray1);
        map0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test448491() throws Throwable {
        double[] doubleArray0 = new double[5];
        Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
        ArrayUtils.toMap(doubleArray1);
    }

    @Test(timeout = 4000)
    public void test449492() throws Throwable {
        String string0 = ArrayUtils.toString((Object) null, "java.lang.Object");
    }

    @Test(timeout = 4000)
    public void test450493() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) 82;
        byte[] byteArray1 = ArrayUtils.removeElement(byteArray0, (byte) 82);
    }

    @Test(timeout = 4000)
    public void test451495() throws Throwable {
        char[] charArray0 = new char[5];
        ArrayUtils.add(charArray0, (-4227), 'a');
    }

    @Test(timeout = 4000)
    public void test452496() throws Throwable {
        long[] longArray0 = new long[3];
        ArrayUtils.remove(longArray0, (-2023));
    }

    @Test(timeout = 4000)
    public void test453497() throws Throwable {
        Object[] objectArray0 = new Object[0];
        Object[] objectArray1 = ArrayUtils.toArray(objectArray0);
    }

    @Test(timeout = 4000)
    public void test454498() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[3] = (-1420.8574896);
        double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, (-1420.8574896));
    }

    @Test(timeout = 4000)
    public void test455499() throws Throwable {
        float[] floatArray0 = new float[3];
        ArrayUtils.add(floatArray0, 2203, 0.0F);
    }

    @Test(timeout = 4000)
    public void test456500() throws Throwable {
        byte[] byteArray0 = ArrayUtils.add((byte[]) null, (byte) 0);
        boolean boolean0 = ArrayUtils.isSameLength(byteArray0, (byte[]) null);
    }

    @Test(timeout = 4000)
    public void test457502() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayUtils.add(doubleArray0, (-1), 0.0);
    }

    @Test(timeout = 4000)
    public void test458503() throws Throwable {
        long[] longArray0 = new long[5];
        boolean boolean0 = ArrayUtils.contains(longArray0, (-1380L));
    }

    @Test(timeout = 4000)
    public void test459504() throws Throwable {
        byte[] byteArray0 = new byte[5];
        int int0 = ArrayUtils.indexOf(byteArray0, (byte) 19);
    }

    @Test(timeout = 4000)
    public void test460505() throws Throwable {
        boolean[] booleanArray0 = new boolean[7];
        boolean[] booleanArray1 = ArrayUtils.removeElement(booleanArray0, false);
    }

    @Test(timeout = 4000)
    public void test461506() throws Throwable {
        double[] doubleArray0 = new double[4];
        int int0 = ArrayUtils.indexOf(doubleArray0, (double) 0L, 0.0);
    }

    @Test(timeout = 4000)
    public void test462507() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        short[] shortArray0 = ArrayUtils.add(arrayUtils0.EMPTY_SHORT_ARRAY, 0, (short) (-1447));
    }

    @Test(timeout = 4000)
    public void test463508() throws Throwable {
        float[] floatArray0 = new float[3];
        float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (float) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test464509() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        double[] doubleArray0 = ArrayUtils.add(arrayUtils0.EMPTY_DOUBLE_ARRAY, (-1.0));
    }

    @Test(timeout = 4000)
    public void test465510() throws Throwable {
        boolean boolean0 = ArrayUtils.isEquals((Object) null, (Object) null);
    }

    @Test(timeout = 4000)
    public void test466511() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byte[] byteArray1 = ArrayUtils.add(byteArray0, 1, (byte) (-113));
    }

    @Test(timeout = 4000)
    public void test467512() throws Throwable {
        int[] intArray0 = new int[2];
        int[] intArray1 = ArrayUtils.add(intArray0, 0, (int) (byte) 98);
    }

    @Test(timeout = 4000)
    public void test468513() throws Throwable {
        short[] shortArray0 = new short[9];
        short[] shortArray1 = ArrayUtils.add(shortArray0, (short) 0);
    }

    @Test(timeout = 4000)
    public void test469514() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        ArrayUtils.add(booleanArray0, 4064, true);
    }

    @Test(timeout = 4000)
    public void test470515() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, false);
    }

    @Test(timeout = 4000)
    public void test471516() throws Throwable {
        byte[] byteArray0 = new byte[5];
        int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 19);
    }

    @Test(timeout = 4000)
    public void test472517() throws Throwable {
        String string0 = ArrayUtils.toString((Object) "java.lang.String");
    }

    @Test(timeout = 4000)
    public void test473518() throws Throwable {
        float[] floatArray0 = new float[7];
        int int0 = ArrayUtils.lastIndexOf(floatArray0, 0.0F);
    }

    @Test(timeout = 4000)
    public void test474519() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.add((boolean[]) null, true);
        int int0 = ArrayUtils.indexOf(booleanArray0, true);
    }

    @Test(timeout = 4000)
    public void test475520() throws Throwable {
        Object[] objectArray0 = new Object[3];
        String[] stringArray0 = new String[8];
        String[] stringArray1 = ArrayUtils.removeElement(stringArray0, objectArray0[0]);
    }

    @Test(timeout = 4000)
    public void test476521() throws Throwable {
        double[] doubleArray0 = new double[0];
        Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test476522() throws Throwable {
        double[] doubleArray0 = new double[0];
        Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
        int int0 = ArrayUtils.lastIndexOf((Object[]) doubleArray1, (Object) null);
    }

    @Test(timeout = 4000)
    public void test477523() throws Throwable {
        short[] shortArray0 = new short[8];
        shortArray0[7] = (short) 64;
        short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) 64);
    }

    @Test(timeout = 4000)
    public void test478524() throws Throwable {
        Byte[] byteArray0 = new Byte[3];
        Byte byte0 = new Byte((byte) 120);
        byteArray0[0] = byte0;
        int[] intArray0 = ArrayUtils.add((int[]) null, (int) byteArray0[0]);
    }

    @Test(timeout = 4000)
    public void test479526() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        boolean boolean0 = ArrayUtils.contains(arrayUtils0.EMPTY_DOUBLE_ARRAY, (double) (-1));
    }

    @Test(timeout = 4000)
    public void test480527() throws Throwable {
        long[] longArray0 = new long[0];
        long[] longArray1 = ArrayUtils.add(longArray0, 0, (long) 0);
        long[] longArray2 = ArrayUtils.add(longArray1, (-1L));
    }

    @Test(timeout = 4000)
    public void test481528() throws Throwable {
        char[] charArray0 = new char[3];
        char[] charArray1 = ArrayUtils.add(charArray0, '^');
    }

    @Test(timeout = 4000)
    public void test482529() throws Throwable {
        float[] floatArray0 = new float[7];
        float[] floatArray1 = ArrayUtils.add(floatArray0, 0.0F);
    }

    @Test(timeout = 4000)
    public void test483530() throws Throwable {
        int[] intArray0 = new int[3];
        int int0 = ArrayUtils.lastIndexOf(intArray0, (-672));
    }
}
