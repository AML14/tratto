project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test001,"public void test001() throws Throwable {
    byte[] byteArray0 = new byte[7];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    byteArrayInputStream0.read();
    int int0 = IOUtils.readFully((InputStream) byteArrayInputStream0, byteArray0);
    assertEquals(6, int0);
}",0,"assertEquals(0, int0)"
project,0,test012,"public void test012() throws Throwable {
    byte[] byteArray0 = new byte[0];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    long long0 = IOUtils.skip(byteArrayInputStream0, 0L);
    assertEquals(0L, long0);
}",0,"assertEquals(1, long0)"
project,0,test034,"public void test034() throws Throwable {
    byte[] byteArray0 = new byte[1];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    byte[] byteArray1 = IOUtils.toByteArray(byteArrayInputStream0);
    assertEquals(1, byteArray1.length);
}",0,
project,0,test045,"public void test045() throws Throwable {
    byte[] byteArray0 = new byte[0];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    long long0 = IOUtils.copy((InputStream) byteArrayInputStream0, (OutputStream) null);
    assertEquals(0L, long0);
}",0,"assertEquals(1, long0)"
project,0,test056,"public void test056() throws Throwable {
    // Undeclared exception!
    try {
        IOUtils.toByteArray((InputStream) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.utils.IOUtils"", e);
    }
}",0,
project,0,test067,"public void test067() throws Throwable {
    byte[] byteArray0 = new byte[0];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), 2752);
    // Undeclared exception!
    try {
        IOUtils.toByteArray(byteArrayInputStream0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.io.ByteArrayInputStream"", e);
    }
}",0,
project,0,test078,"public void test078() throws Throwable {
    PipedInputStream pipedInputStream0 = new PipedInputStream();
    try {
        IOUtils.toByteArray(pipedInputStream0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Pipe not connected
        //
        verifyException(""java.io.PipedInputStream"", e);
    }
}",0,
project,0,test089,"public void test089() throws Throwable {
    // Undeclared exception!
    try {
        IOUtils.skip((InputStream) null, 2792L);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.utils.IOUtils"", e);
    }
}",1,
project,0,test0910,"public void test0910() throws Throwable {
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
    DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
    try {
        IOUtils.skip(dataInputStream0, 1622L);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.BufferedInputStream"", e);
    }
}",0,
project,0,test1011,"public void test1011() throws Throwable {
    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
    // Undeclared exception!
    try {
        IOUtils.readFully((InputStream) dataInputStream0, (byte[]) null, 543, 8024);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.utils.IOUtils"", e);
    }
}",0,
project,0,test1112,"public void test1112() throws Throwable {
    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
    // Undeclared exception!
    try {
        IOUtils.readFully((InputStream) pushbackInputStream0, (byte[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.utils.IOUtils"", e);
    }
}",0,
project,0,test1213,"public void test1213() throws Throwable {
    PipedInputStream pipedInputStream0 = new PipedInputStream();
    DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
    byte[] byteArray0 = new byte[5];
    try {
        IOUtils.readFully((InputStream) dataInputStream0, byteArray0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Pipe not connected
        //
        verifyException(""java.io.PipedInputStream"", e);
    }
}",0,
project,0,test1314,"public void test1314() throws Throwable {
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    // Undeclared exception!
    try {
        IOUtils.copy((InputStream) null, (OutputStream) byteArrayOutputStream0, 0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.utils.IOUtils"", e);
    }
}",0,
project,0,test1415,"public void test1415() throws Throwable {
    PipedInputStream pipedInputStream0 = new PipedInputStream();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(528);
    try {
        IOUtils.copy((InputStream) pipedInputStream0, (OutputStream) byteArrayOutputStream0, 528);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Pipe not connected
        //
        verifyException(""java.io.PipedInputStream"", e);
    }
}",0,
project,0,test1516,"public void test1516() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""@9R#W8%Q&dA}l\"""");
    // Undeclared exception!
    try {
        IOUtils.copy((InputStream) null, (OutputStream) mockPrintStream0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.utils.IOUtils"", e);
    }
}",0,
project,0,test1617,"public void test1617() throws Throwable {
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
    try {
        IOUtils.copy((InputStream) pushbackInputStream0, (OutputStream) null);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.PushbackInputStream"", e);
    }
}",0,
project,0,test1718,"public void test1718() throws Throwable {
    byte[] byteArray0 = new byte[3];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = IOUtils.readFully((InputStream) byteArrayInputStream0, byteArray0, 0, (int) (byte) 0);
    assertEquals(0, int0);
}",1,
project,0,test1820,"public void test1820() throws Throwable {
    byte[] byteArray0 = new byte[7];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    long long0 = IOUtils.copy((InputStream) byteArrayInputStream0, (OutputStream) byteArrayOutputStream0, (int) (byte) 114);
    assertEquals(7L, long0);
}",0,"assertEquals(1, long0)"
project,0,test1921,"public void test1921() throws Throwable {
    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""a E!VIPqv^n? *"");
    long long0 = IOUtils.copy((InputStream) sequenceInputStream0, (OutputStream) mockFileOutputStream0, 0);
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
project,0,test2022,"public void test2022() throws Throwable {
    Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false, true).when(enumeration0).hasMoreElements();
    doReturn((Object) null).when(enumeration0).nextElement();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    // Undeclared exception!
    try {
        IOUtils.closeQuietly(sequenceInputStream0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.io.SequenceInputStream"", e);
    }
}",1,
project,0,test2223,"public void test2223() throws Throwable {
    byte[] byteArray0 = new byte[0];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
    int int0 = IOUtils.readFully((InputStream) sequenceInputStream0, byteArray0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test2324,"public void test2324() throws Throwable {
    byte[] byteArray0 = new byte[3];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    // Undeclared exception!
    try {
        IOUtils.readFully((InputStream) byteArrayInputStream0, byteArray0, 543, 8024);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.utils.IOUtils"", e);
    }
}",1,
project,0,test2425,"public void test2425() throws Throwable {
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    // Undeclared exception!
    try {
        IOUtils.readFully((InputStream) byteArrayInputStream0, byteArray0, (int) (byte) (-44), 0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.utils.IOUtils"", e);
    }
}",1,
project,0,test2526,"public void test2526() throws Throwable {
    byte[] byteArray0 = new byte[1];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 1, (-809));
    // Undeclared exception!
    try {
        IOUtils.readFully((InputStream) byteArrayInputStream0, byteArray0, (int) (byte) 1, (-322));
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.utils.IOUtils"", e);
    }
}",1,
project,0,test2628,"public void test2628() throws Throwable {
    byte[] byteArray0 = new byte[3];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 69, 0);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
    long long0 = IOUtils.skip(pushbackInputStream0, 1291L);
    assertEquals((-66L), long0);
}",0,"assertEquals(1, long0)"
project,0,test2729,"public void test2729() throws Throwable {
    byte[] byteArray0 = new byte[3];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    long long0 = IOUtils.skip(byteArrayInputStream0, (-1157L));
    assertEquals(0L, long0);
}",0,"assertEquals(1, long0)"
project,0,test2830,"public void test2830() throws Throwable {
    byte[] byteArray0 = new byte[3];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    MockFile mockFile0 = new MockFile(""qayi"", ""/GC`"");
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
    long long0 = IOUtils.copy((InputStream) byteArrayInputStream0, (OutputStream) mockFileOutputStream0);
    assertEquals(3L, long0);
}",0,"assertEquals(1, long0)"
project,0,test2932,"public void test2932() throws Throwable {
    Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    byte[] byteArray0 = IOUtils.toByteArray(sequenceInputStream0);
    assertArrayEquals(new byte[] {}, byteArray0);
}",0,
