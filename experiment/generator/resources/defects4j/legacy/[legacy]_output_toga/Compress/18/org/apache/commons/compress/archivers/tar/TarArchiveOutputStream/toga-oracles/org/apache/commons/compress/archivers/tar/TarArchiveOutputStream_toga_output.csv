project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test040,"public void test040() throws Throwable {
    File file0 = MockFile.createTempFile(""XJ_"", ""XJ_"");
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, false);
    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0, ""XJ_"");
    Map<String, String> map0 = ZoneId.SHORT_IDS;
    // Undeclared exception!
    try {
        tarArchiveOutputStream0.writePaxHeaders((String) null, map0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.archivers.tar.TarArchiveOutputStream"", e);
    }
}",0,
project,0,test051,"public void test051() throws Throwable {
    MockFile mockFile0 = new MockFile(""wIp{s2qfiJD2"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockPrintStream0, (byte) 48, 193);
    Map<String, String> map0 = ZoneId.SHORT_IDS;
    // Undeclared exception!
    try {
        tarArchiveOutputStream0.writePaxHeaders("""", map0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 193
        //
        verifyException(""org.apache.commons.compress.archivers.tar.TarUtils"", e);
    }
}",0,
project,0,test062,"public void test062() throws Throwable {
    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream((OutputStream) null, 249);
    // Undeclared exception!
    try {
        tarArchiveOutputStream0.flush();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.io.FilterOutputStream"", e);
    }
}",0,
project,0,test073,"public void test073() throws Throwable {
    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream((OutputStream) null, 2241);
    // Undeclared exception!
    try {
        tarArchiveOutputStream0.finish();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.utils.CountingOutputStream"", e);
    }
}",1,
project,0,test084,"public void test084() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Ejd5R|eeb^5z4*"");
    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockPrintStream0, 57);
    // Undeclared exception!
    try {
        tarArchiveOutputStream0.finish();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",1,
project,0,test095,"public void test095() throws Throwable {
    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(pipedOutputStream0, 468);
    try {
        tarArchiveOutputStream0.finish();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Pipe not connected
        //
        verifyException(""java.io.PipedOutputStream"", e);
    }
}",1,
project,0,test106,"public void test106() throws Throwable {
    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream((OutputStream) null, 2241);
    // Undeclared exception!
    try {
        tarArchiveOutputStream0.close();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.utils.CountingOutputStream"", e);
    }
}",0,
project,0,test117,"public void test117() throws Throwable {
    TarArchiveOutputStream tarArchiveOutputStream0 = null;
    try {
        tarArchiveOutputStream0 = new TarArchiveOutputStream((OutputStream) null, ""1*vz+F`<>Ky&"");
        fail(""Expecting exception: IllegalCharsetNameException"");
    } catch (IllegalCharsetNameException e) {
        //
        // 1*vz+F`<>Ky&
        //
        verifyException(""java.nio.charset.Charset"", e);
    }
}",0,
project,0,test128,"public void test128() throws Throwable {
    TarArchiveOutputStream tarArchiveOutputStream0 = null;
    try {
        tarArchiveOutputStream0 = new TarArchiveOutputStream((OutputStream) null, 2028, ""#"");
        fail(""Expecting exception: IllegalCharsetNameException"");
    } catch (IllegalCharsetNameException e) {
        //
        // #
        //
        verifyException(""java.nio.charset.Charset"", e);
    }
}",0,
project,0,test139,"public void test139() throws Throwable {
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("".m7{au(E"", true);
    TarArchiveOutputStream tarArchiveOutputStream0 = null;
    try {
        tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0, 3, 0, """");
        fail(""Expecting exception: IllegalCharsetNameException"");
    } catch (IllegalCharsetNameException e) {
        //
        //
        //
        verifyException(""java.nio.charset.Charset"", e);
    }
}",0,
project,0,test1410,"public void test1410() throws Throwable {
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""size"");
    TarArchiveOutputStream tarArchiveOutputStream0 = null;
    try {
        tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0, (-1823), (-192), ""size"");
        fail(""Expecting exception: NegativeArraySizeException"");
    } catch (NegativeArraySizeException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.archivers.tar.TarBuffer"", e);
    }
}",0,
project,0,test1511,"public void test1511() throws Throwable {
    File file0 = MockFile.createTempFile(""])u3J8n5D`"", ""])u3J8n5D`"");
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, true);
    TarArchiveOutputStream tarArchiveOutputStream0 = null;
    try {
        tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0, 0, 0, (String) null);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // / by zero
        //
        verifyException(""org.apache.commons.compress.archivers.tar.TarBuffer"", e);
    }
}",0,
project,0,test1814,"public void test1814() throws Throwable {
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
    TarArchiveOutputStream tarArchiveOutputStream0 = null;
    try {
        tarArchiveOutputStream0 = new TarArchiveOutputStream(bufferedOutputStream0, (-295));
        fail(""Expecting exception: NegativeArraySizeException"");
    } catch (NegativeArraySizeException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.archivers.tar.TarBuffer"", e);
    }
}",0,
project,0,test2415,"public void test2415() throws Throwable {
    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream((OutputStream) null, 1);
    byte[] byteArray0 = new byte[9];
    try {
        tarArchiveOutputStream0.write(byteArray0, (int) (byte) 76, (int) (byte) 97);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // request to write '97' bytes exceeds size in header of '0' bytes for entry 'null'
        //
        verifyException(""org.apache.commons.compress.archivers.tar.TarArchiveOutputStream"", e);
    }
}",1,
project,0,test2616,"public void test2616() throws Throwable {
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
    try {
        tarArchiveOutputStream0.closeArchiveEntry();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // No current entry to close
        //
        verifyException(""org.apache.commons.compress.archivers.tar.TarArchiveOutputStream"", e);
    }
}",1,
project,0,test2717,"public void test2717() throws Throwable {
    MockFile mockFile0 = new MockFile("""");
    MockFile mockFile1 = new MockFile(mockFile0, ""gid"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile1);
    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockPrintStream0);
    tarArchiveOutputStream0.close();
    try {
        tarArchiveOutputStream0.closeArchiveEntry();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream has already been finished
        //
        verifyException(""org.apache.commons.compress.archivers.tar.TarArchiveOutputStream"", e);
    }
}",1,
project,0,test3018,"public void test3018() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""minor device number"");
    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockPrintStream0, 100);
    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(""minor device number"", (byte) 87);
    // Undeclared exception!
    try {
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",0,
project,0,test3419,"public void test3419() throws Throwable {
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0, 2958, ""org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField"");
    tarArchiveOutputStream0.finish();
    MockFile mockFile0 = new MockFile(""org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField"", ""org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField"");
    try {
        tarArchiveOutputStream0.createArchiveEntry(mockFile0, ""org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField"");
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream has already been finished
        //
        verifyException(""org.apache.commons.compress.archivers.tar.TarArchiveOutputStream"", e);
    }
}",0,
project,0,test3520,"public void test3520() throws Throwable {
    File file0 = MockFile.createTempFile(""HLg^m']W't D%} ou"", (String) null);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);
    int int0 = tarArchiveOutputStream0.getRecordSize();
    assertEquals(512, int0);
}",0,"assertEquals(0, int0)"
project,0,test3621,"public void test3621() throws Throwable {
    File file0 = MockFile.createTempFile(""iG+${/kZ*G4fl"", ""iG+${/kZ*G4fl"");
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, false);
    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0, 479);
    // Undeclared exception!
    try {
        tarArchiveOutputStream0.close();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",0,
project,0,test3722,"public void test3722() throws Throwable {
    File file0 = MockFile.createTempFile(""HLg^m']W't D%} ou"", (String) null);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);
    int int0 = tarArchiveOutputStream0.getCount();
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test3823,"public void test3823() throws Throwable {
    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream((OutputStream) null, 474, 88);
    ZipArchiveEntry zipArchiveEntry0 = new ZipArchiveEntry(""gu{f4#3*aBo5{"");
    // Undeclared exception!
    try {
        tarArchiveOutputStream0.putArchiveEntry(zipArchiveEntry0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.apache.commons.compress.archivers.zip.ZipArchiveEntry cannot be cast to org.apache.commons.compress.archivers.tar.TarArchiveEntry
        //
        verifyException(""org.apache.commons.compress.archivers.tar.TarArchiveOutputStream"", e);
    }
}",1,
