project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    x7875_NewUnix0.setUID((-2518L));
    byte[] byteArray0 = x7875_NewUnix0.getLocalFileDataData();
    assertArrayEquals(new byte[] { (byte) 1, (byte) 4, (byte) 42, (byte) (-10), (byte) (-1), (byte) (-1), (byte) 2, (byte) (-24), (byte) 3 }, byteArray0);
}",0,
project,0,test001,"public void test001() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    x7875_NewUnix0.setUID((-2518L));
    byte[] byteArray0 = x7875_NewUnix0.getLocalFileDataData();
    assertEquals(9, byteArray0.length);
}",0,
project,0,test022,"public void test022() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[4];
    Object object0 = x7875_NewUnix0.clone();
    assertTrue(object0.equals((Object) x7875_NewUnix0));
}",0,
project,0,test023,"public void test023() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[4];
    Object object0 = x7875_NewUnix0.clone();
    byteArray0[0] = (byte) (-1);
    x7875_NewUnix0.parseFromLocalFileData(byteArray0, (byte) 0, (-1285));
    boolean boolean0 = x7875_NewUnix0.equals(object0);
    assertFalse(object0.equals((Object) x7875_NewUnix0));
}",0,
project,0,test024,"public void test024() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[4];
    Object object0 = x7875_NewUnix0.clone();
    byteArray0[0] = (byte) (-1);
    x7875_NewUnix0.parseFromLocalFileData(byteArray0, (byte) 0, (-1285));
    boolean boolean0 = x7875_NewUnix0.equals(object0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test035,"public void test035() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    x7875_NewUnix0.setUID(0L);
    ZipShort zipShort0 = x7875_NewUnix0.getCentralDirectoryLength();
    assertEquals(6, zipShort0.getValue());
}",0,
project,0,test046,"public void test046() throws Throwable {
    byte[] byteArray0 = new byte[3];
    byte[] byteArray1 = X7875_NewUnix.trimLeadingZeroesForceMinLength(byteArray0);
    assertEquals(1, byteArray1.length);
}",0,
project,0,test057,"public void test057() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[13];
    x7875_NewUnix0.parseFromLocalFileData(byteArray0, (byte) 0, (byte) 0);
    long long0 = x7875_NewUnix0.getUID();
    assertEquals(0L, long0);
}",0,
project,0,test068,"public void test068() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    x7875_NewUnix0.setGID(0L);
    long long0 = x7875_NewUnix0.getGID();
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
project,0,test079,"public void test079() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    // Undeclared exception!
    try {
        x7875_NewUnix0.parseFromLocalFileData((byte[]) null, (-1234567), (byte) (-57));
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.archivers.zip.X7875_NewUnix"", e);
    }
}",1,
project,0,test0810,"public void test0810() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[9];
    byteArray0[4] = (byte) 3;
    byteArray0[8] = (byte) 117;
    // Undeclared exception!
    try {
        x7875_NewUnix0.parseFromLocalFileData(byteArray0, (byte) 3, (-1174));
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",1,
project,0,test0911,"public void test0911() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    ZipShort zipShort0 = x7875_NewUnix0.getLocalFileDataLength();
    assertEquals(7, zipShort0.getValue());
}",0,"assertEquals(0, zipShort0.getValue())"
project,0,test1012,"public void test1012() throws Throwable {
    byte[] byteArray0 = X7875_NewUnix.trimLeadingZeroesForceMinLength((byte[]) null);
    assertNull(byteArray0);
}",0,
project,0,test1113,"public void test1113() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    X7875_NewUnix x7875_NewUnix1 = new X7875_NewUnix();
    assertTrue(x7875_NewUnix1.equals((Object) x7875_NewUnix0));
}",0,
project,0,test1114,"public void test1114() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    X7875_NewUnix x7875_NewUnix1 = new X7875_NewUnix();
    x7875_NewUnix0.setGID((-16L));
    boolean boolean0 = x7875_NewUnix0.equals(x7875_NewUnix1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1215,"public void test1215() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    X7875_NewUnix x7875_NewUnix1 = new X7875_NewUnix();
    assertTrue(x7875_NewUnix1.equals((Object) x7875_NewUnix0));
}",0,
project,0,test1216,"public void test1216() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    X7875_NewUnix x7875_NewUnix1 = new X7875_NewUnix();
    x7875_NewUnix1.setUID(1167L);
    boolean boolean0 = x7875_NewUnix0.equals(x7875_NewUnix1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1317,"public void test1317() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[4];
    Object object0 = x7875_NewUnix0.clone();
    assertTrue(object0.equals((Object) x7875_NewUnix0));
}",0,
project,0,test1318,"public void test1318() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[4];
    Object object0 = x7875_NewUnix0.clone();
    x7875_NewUnix0.parseFromLocalFileData(byteArray0, (byte) 0, (-1285));
    boolean boolean0 = x7875_NewUnix0.equals(object0);
    assertFalse(object0.equals((Object) x7875_NewUnix0));
}",0,
project,0,test1319,"public void test1319() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[4];
    Object object0 = x7875_NewUnix0.clone();
    x7875_NewUnix0.parseFromLocalFileData(byteArray0, (byte) 0, (-1285));
    boolean boolean0 = x7875_NewUnix0.equals(object0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1420,"public void test1420() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    boolean boolean0 = x7875_NewUnix0.equals(x7875_NewUnix0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test1521,"public void test1521() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    boolean boolean0 = x7875_NewUnix0.equals(""0x7875 Zip Extra Field: UID=1000 GID=0"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1622,"public void test1622() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[8];
    x7875_NewUnix0.parseFromCentralDirectoryData(byteArray0, 0, (byte) 84);
    assertEquals(8, byteArray0.length);
}",1,
project,0,test1723,"public void test1723() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    long long0 = x7875_NewUnix0.getGID();
    assertEquals(1000L, long0);
}",0,"assertEquals(0, long0)"
project,0,test1924,"public void test1924() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = x7875_NewUnix0.getCentralDirectoryData();
    assertEquals(0, byteArray0.length);
}",0,
project,0,test2025,"public void test2025() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    ZipShort zipShort0 = x7875_NewUnix0.getHeaderId();
    assertEquals(30837, zipShort0.getValue());
}",0,"assertEquals(0, zipShort0.getValue())"
project,0,test2126,"public void test2126() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    long long0 = x7875_NewUnix0.getUID();
    assertEquals(1000L, long0);
}",0,"assertEquals(0, long0)"
project,0,test2227,"public void test2227() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    String string0 = x7875_NewUnix0.toString();
    assertEquals(""0x7875 Zip Extra Field: UID=1000 GID=1000"", string0);
}",0,
