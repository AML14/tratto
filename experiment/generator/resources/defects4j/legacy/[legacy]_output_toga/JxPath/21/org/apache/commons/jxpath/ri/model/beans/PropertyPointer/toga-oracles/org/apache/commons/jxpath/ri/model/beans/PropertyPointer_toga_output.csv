project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"", ""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setIndex((-5));
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    boolean boolean0 = nullPropertyPointer0.equals(beanPropertyPointer0);
    assertEquals(Integer.MIN_VALUE, nullPropertyPointer0.getPropertyIndex());
}",0,
project,0,test001,"public void test001() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"", ""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setIndex((-5));
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    boolean boolean0 = nullPropertyPointer0.equals(beanPropertyPointer0);
    assertFalse(boolean0);
}",1,
project,0,test012,"public void test012() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    nullPropertyPointer0.propertyIndex = 1383;
    boolean boolean0 = nullPropertyPointer0.equals(beanPropertyPointer0);
    assertEquals(1383, nullPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, nullPropertyPointer0.getPropertyIndex())"
project,0,test013,"public void test013() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    nullPropertyPointer0.propertyIndex = 1383;
    boolean boolean0 = nullPropertyPointer0.equals(beanPropertyPointer0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test024,"public void test024() throws Throwable {
    Class<Integer> class0 = Integer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setPropertyIndex((-279));
    beanPropertyPointer0.hashCode();
    assertEquals((-279), beanPropertyPointer0.getPropertyIndex());
}",0,
project,0,test035,"public void test035() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    // Undeclared exception!
    try {
        beanPropertyPointer0.createChild((JXPathContext) null, qName0, 23, (Object) nullPropertyPointer0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.NodePointer"", e);
    }
}",0,
project,0,test046,"public void test046() throws Throwable {
    Class<Integer> class0 = Integer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setPropertyIndex((-279));
    beanPropertyPointer0.setPropertyIndex((-693));
    assertEquals((-693), beanPropertyPointer0.getPropertyIndex());
}",0,
project,0,test057,"public void test057() throws Throwable {
    VariablePointer variablePointer0 = new VariablePointer((QName) null);
    Class<Object> class0 = Object.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setPropertyName("""");
    assertEquals(Integer.MIN_VALUE, beanPropertyPointer0.getIndex());
}",0,
project,0,test068,"public void test068() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"", ""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    boolean boolean0 = nullPropertyPointer0.equals(nullPropertyPointer0);
    assertEquals(Integer.MIN_VALUE, nullPropertyPointer0.getPropertyIndex());
}",0,
project,0,test069,"public void test069() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"", ""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    boolean boolean0 = nullPropertyPointer0.equals(nullPropertyPointer0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test0710,"public void test0710() throws Throwable {
    QName qName0 = new QName("""", """");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<VariablePointer> class0 = VariablePointer.class;
    Class<String> class1 = String.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPropertyPointer0);
    nullPropertyPointer0.isLeaf();
    assertEquals(Integer.MIN_VALUE, nullPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, nullPropertyPointer0.getPropertyIndex())"
project,0,test0811,"public void test0811() throws Throwable {
    Class<BeanPropertyPointer> class0 = BeanPropertyPointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
    beanPropertyPointer0.isCollection();
    assertEquals(Integer.MIN_VALUE, beanPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, beanPropertyPointer0.getPropertyIndex())"
project,0,test0912,"public void test0912() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, true);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.getPropertyNames();
    assertEquals(Integer.MIN_VALUE, beanPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, beanPropertyPointer0.getPropertyIndex())"
project,0,test1013,"public void test1013() throws Throwable {
    QName qName0 = new QName(""$+us1Ux#T$.U"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    nullPropertyPointer0.getPropertyNames();
    assertEquals(Integer.MIN_VALUE, nullPropertyPointer0.getPropertyIndex());
}",0,
project,0,test1114,"public void test1114() throws Throwable {
    Class<String> class0 = String.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
    beanPropertyPointer0.getPropertyName();
    assertEquals(Integer.MIN_VALUE, beanPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, beanPropertyPointer0.getPropertyIndex())"
project,0,test1215,"public void test1215() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setPropertyIndex(0);
    int int0 = beanPropertyPointer0.getPropertyIndex();
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test1316,"public void test1316() throws Throwable {
    QName qName0 = new QName(""_zmtFtx8\""S1!s2]c"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setPropertyIndex(2316);
    int int0 = beanPropertyPointer0.getPropertyIndex();
    assertEquals(2316, int0);
}",0,"assertEquals(0, int0)"
project,0,test1417,"public void test1417() throws Throwable {
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
    nullPropertyPointer0.getPropertyCount();
    assertEquals(Integer.MIN_VALUE, nullPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, nullPropertyPointer0.getPropertyIndex())"
project,0,test1518,"public void test1518() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"", ""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.getPropertyCount();
    assertEquals(Integer.MIN_VALUE, beanPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, beanPropertyPointer0.getPropertyIndex())"
project,0,test1619,"public void test1619() throws Throwable {
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
    nullPropertyPointer0.getLength();
    assertEquals(Integer.MIN_VALUE, nullPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, nullPropertyPointer0.getPropertyIndex())"
project,0,test1720,"public void test1720() throws Throwable {
    Class<String> class0 = String.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
    beanPropertyPointer0.getLength();
    assertEquals(Integer.MIN_VALUE, beanPropertyPointer0.getPropertyIndex());
}",0,
project,0,test1821,"public void test1821() throws Throwable {
    QName qName0 = new QName("""", ""; "");
    BasicVariables basicVariables0 = new BasicVariables();
    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    Class<Integer> class0 = Integer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, true);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(nullPropertyPointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.getImmediateNode();
    assertEquals(Integer.MIN_VALUE, beanPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, beanPropertyPointer0.getPropertyIndex())"
project,0,test1922,"public void test1922() throws Throwable {
    QName qName0 = new QName("""");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, true);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(nullPropertyPointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.getBean();
    assertEquals(Integer.MIN_VALUE, beanPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, beanPropertyPointer0.getPropertyIndex())"
project,0,test2023,"public void test2023() throws Throwable {
    QName qName0 = new QName(""_zmtFtx8\""S1!s2]c"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
    Class<Object> class1 = Object.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPropertyPointer0);
    int int0 = nullPropertyPointer0.compareChildNodePointers(variablePointer0, beanPropertyPointer0);
    assertEquals(53, int0);
}",0,"assertEquals(0, int0)"
project,0,test2024,"public void test2024() throws Throwable {
    QName qName0 = new QName(""_zmtFtx8\""S1!s2]c"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
    Class<Object> class1 = Object.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPropertyPointer0);
    int int0 = nullPropertyPointer0.compareChildNodePointers(variablePointer0, beanPropertyPointer0);
    assertEquals(Integer.MIN_VALUE, nullPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, nullPropertyPointer0.getPropertyIndex())"
project,0,test2125,"public void test2125() throws Throwable {
    QName qName0 = new QName(""$+us1Ux#T$.U"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    variablePointer0.setIndex(196);
    NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(nodePointer0);
    int int0 = nullPropertyPointer0.compareChildNodePointers(variablePointer0, nodePointer0);
    assertEquals((-2147483452), int0);
}",0,"assertEquals(0, int0)"
project,0,test2126,"public void test2126() throws Throwable {
    QName qName0 = new QName(""$+us1Ux#T$.U"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    variablePointer0.setIndex(196);
    NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(nodePointer0);
    int int0 = nullPropertyPointer0.compareChildNodePointers(variablePointer0, nodePointer0);
    assertEquals(Integer.MIN_VALUE, nullPropertyPointer0.getPropertyIndex());
}",0,
project,0,test2227,"public void test2227() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setPropertyIndex(1);
    // Undeclared exception!
    try {
        beanPropertyPointer0.isLeaf();
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Undefined variable: {-X-Di2
        //
        verifyException(""org.apache.commons.jxpath.ri.model.VariablePointer$1"", e);
    }
}",0,
project,0,test2328,"public void test2328() throws Throwable {
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, (JXPathBeanInfo) null);
    // Undeclared exception!
    try {
        beanPropertyPointer0.isLeaf();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer"", e);
    }
}",0,
project,0,test2429,"public void test2429() throws Throwable {
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
    QName qName0 = nullPropertyPointer0.getName();
    VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    boolean boolean0 = beanPropertyPointer0.isLeaf();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2430,"public void test2430() throws Throwable {
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
    QName qName0 = nullPropertyPointer0.getName();
    VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    boolean boolean0 = beanPropertyPointer0.isLeaf();
    assertEquals(Integer.MIN_VALUE, beanPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, beanPropertyPointer0.getPropertyIndex())"
project,0,test2531,"public void test2531() throws Throwable {
    BasicVariables basicVariables0 = new BasicVariables();
    QName qName0 = new QName("""");
    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, (JXPathBeanInfo) null);
    // Undeclared exception!
    try {
        beanPropertyPointer0.isActual();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer"", e);
    }
}",0,
project,0,test2632,"public void test2632() throws Throwable {
    QName qName0 = new QName((String) null, """");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, (JXPathBeanInfo) null);
    // Undeclared exception!
    try {
        beanPropertyPointer0.getPropertyNames();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer"", e);
    }
}",0,
project,0,test2733,"public void test2733() throws Throwable {
    BasicVariables basicVariables0 = new BasicVariables();
    QName qName0 = new QName(""g~\""O5mpgGQ-gf=Us"");
    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, (JXPathBeanInfo) null);
    // Undeclared exception!
    try {
        beanPropertyPointer0.getPropertyName();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer"", e);
    }
}",0,
project,0,test2834,"public void test2834() throws Throwable {
    QName qName0 = new QName("""", """");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, (JXPathBeanInfo) null);
    // Undeclared exception!
    try {
        beanPropertyPointer0.getPropertyCount();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer"", e);
    }
}",0,
project,0,test2935,"public void test2935() throws Throwable {
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, (JXPathBeanInfo) null);
    // Undeclared exception!
    try {
        beanPropertyPointer0.getName();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer"", e);
    }
}",0,
project,0,test3036,"public void test3036() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"", ""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setPropertyIndex(18);
    // Undeclared exception!
    try {
        beanPropertyPointer0.getLength();
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Undefined variable: {-X-Di2:{-X-Di2
        //
        verifyException(""org.apache.commons.jxpath.ri.model.VariablePointer$1"", e);
    }
}",0,
project,0,test3137,"public void test3137() throws Throwable {
    Class<VariablePointer> class0 = VariablePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
    beanPropertyPointer0.propertyIndex = 0;
    // Undeclared exception!
    try {
        beanPropertyPointer0.getImmediateValuePointer();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.beans.PropertyPointer"", e);
    }
}",0,
project,0,test3238,"public void test3238() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setPropertyIndex(1);
    // Undeclared exception!
    try {
        beanPropertyPointer0.getImmediateNode();
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Undefined variable: {-X-Di2
        //
        verifyException(""org.apache.commons.jxpath.ri.model.VariablePointer$1"", e);
    }
}",0,
project,0,test3339,"public void test3339() throws Throwable {
    QName qName0 = new QName(""L/VJlI["");
    VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, (JXPathBeanInfo) null);
    // Undeclared exception!
    try {
        beanPropertyPointer0.getImmediateNode();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer"", e);
    }
}",0,
project,0,test3440,"public void test3440() throws Throwable {
    QName qName0 = new QName(""i"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    // Undeclared exception!
    try {
        nullPropertyPointer0.getBean();
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Undefined variable: i
        //
        verifyException(""org.apache.commons.jxpath.ri.model.VariablePointer$1"", e);
    }
}",0,
project,0,test3541,"public void test3541() throws Throwable {
    QName qName0 = new QName(""zjDqX/f&PJ1.MlGf`"", ""zjDqX/f&PJ1.MlGf`"");
    VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    // Undeclared exception!
    try {
        nullPropertyPointer0.getBean();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.VariablePointer"", e);
    }
}",0,
project,0,test3642,"public void test3642() throws Throwable {
    QName qName0 = new QName(""_zmtFtx8\""S1!s2]c"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
    Class<Object> class1 = Object.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPropertyPointer0);
    nullPropertyPointer0.getBean();
    assertEquals(Integer.MIN_VALUE, nullPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, nullPropertyPointer0.getPropertyIndex())"
project,0,test3743,"public void test3743() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"", ""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, true);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    nullPropertyPointer0.setNameAttributeValue((String) null);
    // Undeclared exception!
    try {
        nullPropertyPointer0.equals(beanPropertyPointer0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
    }
}",1,
project,0,test3844,"public void test3844() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setPropertyIndex(1);
    // Undeclared exception!
    try {
        beanPropertyPointer0.createPath((JXPathContext) null, (Object) qName0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Undefined variable: {-X-Di2
        //
        verifyException(""org.apache.commons.jxpath.ri.model.VariablePointer$1"", e);
    }
}",0,
project,0,test3945,"public void test3945() throws Throwable {
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
    // Undeclared exception!
    try {
        nullPropertyPointer0.createPath((JXPathContext) null, (Object) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer"", e);
    }
}",0,
project,0,test4046,"public void test4046() throws Throwable {
    Class<Object> class0 = Object.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
    // Undeclared exception!
    try {
        beanPropertyPointer0.createPath((JXPathContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.NodePointer"", e);
    }
}",0,
project,0,test4147,"public void test4147() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setPropertyIndex(1);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    // Undeclared exception!
    try {
        beanPropertyPointer0.compareChildNodePointers(variablePointer0, nullPropertyPointer0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Undefined variable: {-X-Di2
        //
        verifyException(""org.apache.commons.jxpath.ri.model.VariablePointer$1"", e);
    }
}",0,
project,0,test4248,"public void test4248() throws Throwable {
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
    Class<VariablePointer> class0 = VariablePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
    // Undeclared exception!
    try {
        nullPropertyPointer0.compareChildNodePointers(beanPropertyPointer0, (NodePointer) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer"", e);
    }
}",0,
project,0,test4349,"public void test4349() throws Throwable {
    BasicVariables basicVariables0 = new BasicVariables();
    QName qName0 = new QName("""", """");
    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    // Undeclared exception!
    try {
        nullPropertyPointer0.getBean();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // No such variable: ':'
        //
        verifyException(""org.apache.commons.jxpath.BasicVariables"", e);
    }
}",0,
project,0,test4450,"public void test4450() throws Throwable {
    Class<Integer> class0 = Integer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
    beanPropertyPointer0.getName();
    assertEquals(Integer.MIN_VALUE, beanPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, beanPropertyPointer0.getPropertyIndex())"
project,0,test4551,"public void test4551() throws Throwable {
    Class<BeanPropertyPointer> class0 = BeanPropertyPointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
    int int0 = beanPropertyPointer0.getPropertyIndex();
    assertEquals(Integer.MIN_VALUE, int0);
}",0,
project,0,test4652,"public void test4652() throws Throwable {
    Class<VariablePointer> class0 = VariablePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
    beanPropertyPointer0.getImmediateValuePointer();
    assertEquals(Integer.MIN_VALUE, beanPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, beanPropertyPointer0.getPropertyIndex())"
project,0,test4753,"public void test4753() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"", ""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setIndex(1);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    boolean boolean0 = nullPropertyPointer0.equals(beanPropertyPointer0);
    assertEquals(Integer.MIN_VALUE, nullPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, nullPropertyPointer0.getPropertyIndex())"
project,0,test4754,"public void test4754() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"", ""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setIndex(1);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    boolean boolean0 = nullPropertyPointer0.equals(beanPropertyPointer0);
    assertFalse(boolean0);
}",1,
project,0,test4855,"public void test4855() throws Throwable {
    QName qName0 = new QName("""");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    nullPropertyPointer0.setNameAttributeValue(""<<unknown namespace>>"");
    NullPropertyPointer nullPropertyPointer1 = new NullPropertyPointer(variablePointer0);
    boolean boolean0 = nullPropertyPointer0.equals(nullPropertyPointer1);
    assertEquals(Integer.MIN_VALUE, nullPropertyPointer1.getPropertyIndex());
}",0,
project,0,test4856,"public void test4856() throws Throwable {
    QName qName0 = new QName("""");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    nullPropertyPointer0.setNameAttributeValue(""<<unknown namespace>>"");
    NullPropertyPointer nullPropertyPointer1 = new NullPropertyPointer(variablePointer0);
    boolean boolean0 = nullPropertyPointer0.equals(nullPropertyPointer1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4957,"public void test4957() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"", ""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    NullPropertyPointer nullPropertyPointer1 = (NullPropertyPointer) nullPropertyPointer0.clone();
    boolean boolean0 = nullPropertyPointer0.equals(nullPropertyPointer1);
    assertEquals(Integer.MIN_VALUE, nullPropertyPointer1.getPropertyIndex());
}",0,
project,0,test4958,"public void test4958() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"", ""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    NullPropertyPointer nullPropertyPointer1 = (NullPropertyPointer) nullPropertyPointer0.clone();
    boolean boolean0 = nullPropertyPointer0.equals(nullPropertyPointer1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test5059,"public void test5059() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, true);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
    boolean boolean0 = nullPropertyPointer0.equals(beanPropertyPointer0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5060,"public void test5060() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, true);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
    boolean boolean0 = nullPropertyPointer0.equals(beanPropertyPointer0);
    assertEquals(Integer.MIN_VALUE, nullPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, nullPropertyPointer0.getPropertyIndex())"
project,0,test5161,"public void test5161() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(nullPropertyPointer0, jXPathBasicBeanInfo0);
    boolean boolean0 = nullPropertyPointer0.equals(beanPropertyPointer0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5162,"public void test5162() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(nullPropertyPointer0, jXPathBasicBeanInfo0);
    boolean boolean0 = nullPropertyPointer0.equals(beanPropertyPointer0);
    assertEquals(Integer.MIN_VALUE, beanPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, beanPropertyPointer0.getPropertyIndex())"
project,0,test5263,"public void test5263() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    boolean boolean0 = beanPropertyPointer0.equals(""<<unknown namespace>>"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5264,"public void test5264() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    boolean boolean0 = beanPropertyPointer0.equals(""<<unknown namespace>>"");
    assertEquals(Integer.MIN_VALUE, beanPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, beanPropertyPointer0.getPropertyIndex())"
project,0,test5365,"public void test5365() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setPropertyIndex(1);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    boolean boolean0 = nullPropertyPointer0.equals(beanPropertyPointer0);
    assertEquals(1, beanPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(1, beanPropertyPointer0.getPropertyIndex())"
project,0,test5366,"public void test5366() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setPropertyIndex(1);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    boolean boolean0 = nullPropertyPointer0.equals(beanPropertyPointer0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5467,"public void test5467() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    // Undeclared exception!
    try {
        beanPropertyPointer0.createChild((JXPathContext) null, qName0, (-1));
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.NodePointer"", e);
    }
}",0,
project,0,test5568,"public void test5568() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"", ""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    // Undeclared exception!
    try {
        beanPropertyPointer0.createChild((JXPathContext) null, (QName) null, (-3277), (Object) ""<<unknown namespace>>"");
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Cannot set property: ${-X-Di2:{-X-Di2 - no such property
        //
        verifyException(""org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer"", e);
    }
}",0,
project,0,test5669,"public void test5669() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    // Undeclared exception!
    try {
        beanPropertyPointer0.createPath((JXPathContext) null, (Object) qName0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Cannot set property: ${-X-Di2 - no such property
        //
        verifyException(""org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer"", e);
    }
}",0,
project,0,test5770,"public void test5770() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    // Undeclared exception!
    try {
        beanPropertyPointer0.createChild((JXPathContext) null, qName0, 1, (Object) nullPropertyPointer0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.NodePointer"", e);
    }
}",0,
project,0,test5871,"public void test5871() throws Throwable {
    BasicVariables basicVariables0 = new BasicVariables();
    QName qName0 = new QName("""");
    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    Class<Object> class0 = Object.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    boolean boolean0 = beanPropertyPointer0.isActual();
    assertEquals(Integer.MIN_VALUE, beanPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, beanPropertyPointer0.getPropertyIndex())"
project,0,test5872,"public void test5872() throws Throwable {
    BasicVariables basicVariables0 = new BasicVariables();
    QName qName0 = new QName("""");
    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    Class<Object> class0 = Object.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    boolean boolean0 = beanPropertyPointer0.isActual();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5973,"public void test5973() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setPropertyIndex(1);
    boolean boolean0 = beanPropertyPointer0.isActual();
    assertEquals(1, beanPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, beanPropertyPointer0.getPropertyIndex())"
project,0,test5974,"public void test5974() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setPropertyIndex(1);
    boolean boolean0 = beanPropertyPointer0.isActual();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test6075,"public void test6075() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    int int0 = beanPropertyPointer0.compareChildNodePointers(variablePointer0, nullPropertyPointer0);
    assertEquals(Integer.MIN_VALUE, nullPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, nullPropertyPointer0.getPropertyIndex())"
project,0,test6076,"public void test6076() throws Throwable {
    QName qName0 = new QName(""{-X-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    int int0 = beanPropertyPointer0.compareChildNodePointers(variablePointer0, nullPropertyPointer0);
    assertEquals(81, int0);
}",0,
project,0,test6177,"public void test6177() throws Throwable {
    BasicVariables basicVariables0 = new BasicVariables();
    QName qName0 = new QName("""");
    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    Class<Object> class0 = Object.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    nullPropertyPointer0.compareChildNodePointers(beanPropertyPointer0, beanPropertyPointer0);
    assertEquals(Integer.MIN_VALUE, beanPropertyPointer0.getPropertyIndex());
}",0,"assertEquals(0, beanPropertyPointer0.getPropertyIndex())"
project,0,test6178,"public void test6178() throws Throwable {
    BasicVariables basicVariables0 = new BasicVariables();
    QName qName0 = new QName("""");
    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
    Class<Object> class0 = Object.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    nullPropertyPointer0.compareChildNodePointers(beanPropertyPointer0, beanPropertyPointer0);
    assertEquals(Integer.MIN_VALUE, nullPropertyPointer0.getPropertyIndex());
}",0,
project,0,test6279,"public void test6279() throws Throwable {
    QName qName0 = new QName(""{-BX-Di2"", ""{-BX-Di2"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    Class<NodePointer> class0 = NodePointer.class;
    JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
    BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
    beanPropertyPointer0.setPropertyIndex(18);
    // Undeclared exception!
    try {
        beanPropertyPointer0.createChild((JXPathContext) null, (QName) null, 23, (Object) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Undefined variable: {-BX-Di2:{-BX-Di2
        //
        verifyException(""org.apache.commons.jxpath.ri.model.VariablePointer$1"", e);
    }
}",0,
