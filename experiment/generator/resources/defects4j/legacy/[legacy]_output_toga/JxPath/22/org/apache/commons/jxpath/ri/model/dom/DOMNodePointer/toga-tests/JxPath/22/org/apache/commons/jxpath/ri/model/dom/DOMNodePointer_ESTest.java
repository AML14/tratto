/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 00:46:39 GMT 2023
 */
package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.commons.jxpath.util.TypeConverter;
import org.apache.commons.jxpath.util.TypeUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class DOMNodePointer_ESTest extends DOMNodePointer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        Node node0 = iIOMetadataNode0.removeChild(iIOMetadataNode0);
        Locale locale0 = Locale.PRC;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node0, locale0);
        Object object0 = dOMNodePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("\"descendant:");
        Node node0 = iIOMetadataNode0.cloneNode(true);
        Node node1 = iIOMetadataNode0.insertBefore(node0, node0);
        String string0 = DOMNodePointer.getNamespaceURI(node1);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("\"descendant::\"");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        QName qName0 = dOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("\"descendant::\"");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        QName qName0 = dOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        nodeNameTest0.toString();
        assertNotNull(nodeNameTest0.toString());
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
        Locale locale0 = Locale.CANADA_FRENCH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "");
        boolean boolean0 = dOMNodePointer0.isLanguage("");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("9D/ze,^TeRr!e");
        String string0 = DOMNodePointer.getLocalName(iIOMetadataNode0);
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        String string0 = dOMNodePointer0.getLanguage();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode((String) null);
        Locale locale0 = Locale.KOREAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0);
        Object object0 = dOMNodePointer0.getImmediateNode();
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null);
        Object object0 = dOMNodePointer0.getBaseValue();
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);
        DOMNodePointer.testNode((Node) null, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, (Node) null);
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null);
        dOMNodePointer0.remove();
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        Locale locale0 = Locale.FRANCE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
        dOMNodePointer0.namespaceIterator();
    }

    @Test(timeout = 4000)
    public void test1213() throws Throwable {
        Locale locale0 = Locale.JAPAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
        dOMNodePointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test1314() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, iIOMetadataNode0);
        dOMNodePointer0.isLanguage("<<unknown namespace>>");
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Locale locale0 = Locale.FRANCE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, (String) null);
        dOMNodePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        DOMNodePointer.getPrefix((Node) null);
    }

    @Test(timeout = 4000)
    public void test1817() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        DOMNodePointer.getNamespaceURI((Node) iIOMetadataNode0);
    }

    @Test(timeout = 4000)
    public void test1918() throws Throwable {
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null, "SR2xw+9Lr#}&r&(e^^");
        dOMNodePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test2019() throws Throwable {
        Locale locale0 = Locale.ENGLISH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "");
        dOMNodePointer0.getName();
    }

    @Test(timeout = 4000)
    public void test2120() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        QName qName0 = dOMNodePointer0.getName();
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        DOMNodePointer.findEnclosingAttribute(iIOMetadataNode0, (String) null);
    }

    @Test(timeout = 4000)
    public void test2221() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, iIOMetadataNode0);
        dOMNodePointer0.createChild((JXPathContext) null, (QName) null, (-2157), (Object) dOMNodePointer0);
    }

    @Test(timeout = 4000)
    public void test2322() throws Throwable {
        Locale locale0 = Locale.ENGLISH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
        QName qName0 = new QName("L6EZCml!Dp ,k`njD~");
        dOMNodePointer0.createChild(jXPathContext0, qName0, (-3763));
    }

    @Test(timeout = 4000)
    public void test2423() throws Throwable {
        Locale locale0 = Locale.US;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "[");
        QName qName0 = new QName("<<unknown namespace>>");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        dOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
    }

    @Test(timeout = 4000)
    public void test2524() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        QName qName0 = dOMNodePointer0.getName();
        NodePointer nodePointer0 = dOMNodePointer0.namespacePointer("Aau%'&Zb4%W)q7OWA");
        NodePointer nodePointer1 = dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        dOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer1);
    }

    @Test(timeout = 4000)
    public void test2625() throws Throwable {
        QName qName0 = new QName("");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, (Node) null);
        dOMNodePointer0.childIterator((NodeTest) null, true, variablePointer0);
    }

    @Test(timeout = 4000)
    public void test2726() throws Throwable {
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("`");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, (Node) null);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        dOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
    }

    @Test(timeout = 4000)
    public void test2827() throws Throwable {
        Locale locale0 = Locale.CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "4");
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("4");
        QName qName0 = new QName("<<unknown namespace>>", "0ipz]M*_C-M8E0:");
        NodePointer nodePointer0 = NodePointer.newChildNodePointer(dOMNodePointer0, qName0, processingInstructionTest0);
        dOMNodePointer0.childIterator(processingInstructionTest0, false, nodePointer0);
    }

    @Test(timeout = 4000)
    public void test2928() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("xml:space");
        Locale locale0 = Locale.ITALY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0);
        dOMNodePointer0.attributeIterator((QName) null);
    }

    @Test(timeout = 4000)
    public void test3029() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        Locale locale0 = Locale.KOREAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0);
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, iIOMetadataNode0);
        dOMNodePointer1.asPath();
    }

    @Test(timeout = 4000)
    public void test3130() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("[");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        Object object0 = dOMNodePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test3231() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
        String string0 = DOMNodePointer.getLocalName(iIOMetadataNode0);
    }

    @Test(timeout = 4000)
    public void test3332() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        DOMNodePointer.getLocalName(iIOMetadataNode0);
    }

    @Test(timeout = 4000)
    public void test3433() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("xml:space");
        String string0 = DOMNodePointer.getPrefix(iIOMetadataNode0);
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("xml:space");
        String string0 = DOMNodePointer.getPrefix(iIOMetadataNode0);
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("02z<");
        String string0 = DOMNodePointer.getPrefix(iIOMetadataNode0);
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("79t<8=6$\"(>T");
        Node node0 = iIOMetadataNode1.cloneNode(false);
        Node node1 = iIOMetadataNode0.replaceChild(node0, node0);
        Locale locale0 = Locale.GERMANY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node1, locale0);
        QName qName0 = dOMNodePointer0.getName();
        NodePointer nodePointer0 = NodePointer.newChildNodePointer(dOMNodePointer0, qName0, iIOMetadataNode1);
        String string0 = nodePointer0.asPath();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test3637() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("79t<8=6$\"(>T");
        Node node0 = iIOMetadataNode1.cloneNode(false);
        Node node1 = iIOMetadataNode0.replaceChild(node0, node0);
        Locale locale0 = Locale.GERMANY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node1, locale0);
        QName qName0 = dOMNodePointer0.getName();
        NodePointer nodePointer0 = NodePointer.newChildNodePointer(dOMNodePointer0, qName0, iIOMetadataNode1);
        String string0 = nodePointer0.asPath();
        qName0.toString();
        assertNotNull(qName0.toString());
    }

    @Test(timeout = 4000)
    public void test3738() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, iIOMetadataNode0);
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test3839() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("[");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test3940() throws Throwable {
        Locale locale0 = new Locale("org.apache.commons.jxpath.ri.model.container.ContainerPointerFactory");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "org.apache.commons.jxpath.ri.model.container.ContainerPointerFactory");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
        dOMNodePointer0.createChild(jXPathContext0, (QName) null, Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test4041() throws Throwable {
        Locale locale0 = Locale.KOREAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "");
        dOMNodePointer0.getDefaultNamespaceURI();
        String string0 = dOMNodePointer0.getDefaultNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test4142() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        Locale locale0 = Locale.PRC;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0);
        String string0 = dOMNodePointer0.getNamespaceURI("xmlns");
    }

    @Test(timeout = 4000)
    public void test4143() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        Locale locale0 = Locale.PRC;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0);
        String string0 = dOMNodePointer0.getNamespaceURI("xmlns");
    }

    @Test(timeout = 4000)
    public void test4244() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
        Locale locale0 = Locale.ENGLISH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "Lwlq8hR*hLL`$^%");
        String string0 = dOMNodePointer0.getNamespaceURI("org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl");
    }

    @Test(timeout = 4000)
    public void test4345() throws Throwable {
        Locale locale0 = new Locale("java.util.concurrent.atomic.AtomicBoolean", "{*", "{*");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, ".0");
        String string0 = dOMNodePointer0.getNamespaceURI("");
    }

    @Test(timeout = 4000)
    public void test4446() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("[");
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
        boolean boolean0 = DOMNodePointer.testNode((Node) iIOMetadataNode0, (NodeTest) processingInstructionTest0);
    }

    @Test(timeout = 4000)
    public void test4547() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("[");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        QName qName0 = dOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        boolean boolean0 = DOMNodePointer.testNode((Node) iIOMetadataNode0, (NodeTest) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test4548() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("[");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        QName qName0 = dOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        boolean boolean0 = DOMNodePointer.testNode((Node) iIOMetadataNode0, (NodeTest) nodeNameTest0);
        nodeNameTest0.toString();
        assertNotNull(nodeNameTest0.toString());
    }

    @Test(timeout = 4000)
    public void test4649() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("[");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        QName qName0 = dOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = DOMNodePointer.testNode((Node) iIOMetadataNode0, (NodeTest) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test4650() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("[");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        QName qName0 = dOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = DOMNodePointer.testNode((Node) iIOMetadataNode0, (NodeTest) nodeNameTest0);
        nodeNameTest0.toString();
        assertNotNull(nodeNameTest0.toString());
    }

    @Test(timeout = 4000)
    public void test4751() throws Throwable {
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
        Object object0 = dOMNodePointer0.getImmediateNode();
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test4852() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
        Locale locale0 = Locale.GERMANY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0);
        Object object0 = dOMNodePointer0.getBaseValue();
    }

    @Test(timeout = 4000)
    public void test4953() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        Locale locale0 = Locale.GERMANY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0);
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
    }

    @Test(timeout = 4000)
    public void test5054() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, iIOMetadataNode0);
        dOMNodePointer0.getPointerByID((JXPathContext) null, "+GtYQI&%Zq2");
    }

    @Test(timeout = 4000)
    public void test5155() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
        iIOMetadataNode0.setAttribute("", (String) null);
        Locale locale0 = Locale.ITALY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "");
        NodeIterator nodeIterator0 = dOMNodePointer0.namespaceIterator();
        nodeIterator0.getPosition();
        assertEquals(1, nodeIterator0.getPosition());
    }

    @Test(timeout = 4000)
    public void test5256() throws Throwable {
        Locale locale0 = Locale.US;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
        BasicVariables basicVariables0 = new BasicVariables();
        QName qName0 = new QName("\"floor\"", "http://www.w3.org/XML/1998/namespace");
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(variablePointer0, (Node) null);
        boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5357() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        Locale locale0 = Locale.GERMANY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0);
        boolean boolean0 = dOMNodePointer0.equals("79t<8=6$\"(>T");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5458() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("79t<8=6$\"(>T");
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0);
        QName qName0 = dOMNodePointer0.getName();
        NodePointer nodePointer0 = NodePointer.newChildNodePointer(dOMNodePointer0, qName0, iIOMetadataNode0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, (String) null);
        nodePointer0.createChild(jXPathContext0, qName0, 47, (Object) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test5559() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("\"descendant:");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, (Locale) null);
        dOMNodePointer0.remove();
    }

    @Test(timeout = 4000)
    public void test5660() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        Node node0 = iIOMetadataNode0.insertBefore(iIOMetadataNode0, iIOMetadataNode0);
        Locale locale0 = Locale.ENGLISH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node0, locale0, "");
        dOMNodePointer0.remove();
        dOMNodePointer0.isNode();
        assertTrue(dOMNodePointer0.isNode());
    }

    @Test(timeout = 4000)
    public void test5761() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
        iIOMetadataNode0.setAttribute("", (String) null);
        Locale locale0 = Locale.ITALY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "");
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("xml:space");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) processingInstructionTest0);
        QName qName0 = dOMNodePointer0.getName();
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        qName0.getName();
        assertNotNull(qName0.getName());
    }

    @Test(timeout = 4000)
    public void test5762() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
        iIOMetadataNode0.setAttribute("", (String) null);
        Locale locale0 = Locale.ITALY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "");
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("xml:space");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) processingInstructionTest0);
        QName qName0 = dOMNodePointer0.getName();
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test5863() throws Throwable {
        Locale locale0 = Locale.CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
        QName qName0 = new QName("<<unknown namespace>>");
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
    }

    @Test(timeout = 4000)
    public void test5964() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest@0000000003");
        dOMNodePointer0.setValue(dOMNodePointer0);
        dOMNodePointer0.isNode();
        assertTrue(dOMNodePointer0.isNode());
    }

    @Test(timeout = 4000)
    public void test6065() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        Locale locale0 = Locale.ITALIAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0);
        TypeConverter typeConverter0 = mock(TypeConverter.class, new ViolatedAssumptionAnswer());
        doReturn((Object) null).when(typeConverter0).convert(any(), any(java.lang.Class.class));
        TypeUtils.setTypeConverter(typeConverter0);
        dOMNodePointer0.setValue(dOMNodePointer0);
        dOMNodePointer0.isActual();
        assertTrue(dOMNodePointer0.isActual());
    }

    @Test(timeout = 4000)
    public void test6166() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
        Locale locale0 = Locale.ITALY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "");
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1794593710));
        dOMNodePointer0.setValue(nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test6267() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
        Locale locale0 = Locale.ITALY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "");
        dOMNodePointer0.setValue(iIOMetadataNode0);
        dOMNodePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test6368() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
        iIOMetadataNode0.setAttribute("", (String) null);
        String string0 = DOMNodePointer.findEnclosingAttribute(iIOMetadataNode0, "");
    }

    @Test(timeout = 4000)
    public void test6469() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("[");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        boolean boolean0 = dOMNodePointer0.isLeaf();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test6570() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("\"descendant:");
        iIOMetadataNode0.insertBefore(iIOMetadataNode0, iIOMetadataNode0);
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, (Locale) null);
        boolean boolean0 = dOMNodePointer0.isLeaf();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test6671() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
        Locale locale0 = Locale.ITALY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "");
        dOMNodePointer0.getDefaultNamespaceURI();
        String string0 = dOMNodePointer0.getNamespaceURI((String) null);
    }

    @Test(timeout = 4000)
    public void test6772() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        Locale locale0 = Locale.GERMAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0);
        QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
        dOMNodePointer0.attributeIterator(qName0);
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) nodeNameTest0);
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
    }

    @Test(timeout = 4000)
    public void test6873() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("xml:space");
        Locale locale0 = Locale.ITALY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "xml:space");
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("xml:space");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) processingInstructionTest0);
        QName qName0 = dOMNodePointer0.getName();
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
    }

    @Test(timeout = 4000)
    public void test6974() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
        Locale locale0 = Locale.ITALY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "");
        QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "");
        dOMNodePointer0.attributeIterator(qName0);
        String string0 = dOMNodePointer0.getNamespaceURI("xml:space");
    }

    @Test(timeout = 4000)
    public void test7075() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        dOMNodePointer0.getNamespaceResolver();
        NamespaceResolver namespaceResolver0 = dOMNodePointer0.getNamespaceResolver();
        namespaceResolver0.isSealed();
        assertTrue(namespaceResolver0.isSealed());
    }

    @Test(timeout = 4000)
    public void test7176() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);
        boolean boolean0 = DOMNodePointer.testNode((Node) iIOMetadataNode0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test7277() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
        boolean boolean0 = DOMNodePointer.testNode((Node) iIOMetadataNode0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test7378() throws Throwable {
        QName qName0 = new QName(" o|=cMEo\n`&rLa/ae", " of ");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, " o|=cMEo\n`&rLa/ae");
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("**&lLY&Mh");
        boolean boolean0 = DOMNodePointer.testNode((Node) iIOMetadataNode0, (NodeTest) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test7479() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
        Locale locale0 = Locale.ITALY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "");
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("xml:space");
        boolean boolean0 = dOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test7580() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        boolean boolean0 = DOMNodePointer.testNode((Node) iIOMetadataNode0, (NodeTest) null);
    }

    @Test(timeout = 4000)
    public void test7681() throws Throwable {
        Locale locale0 = Locale.JAPAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("VcO&&zth");
        NodeIterator nodeIterator0 = dOMNodePointer0.childIterator(processingInstructionTest0, true, dOMNodePointer0);
        nodeIterator0.getPosition();
        assertEquals(0, nodeIterator0.getPosition());
    }

    @Test(timeout = 4000)
    public void test7782() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, iIOMetadataNode0);
        boolean boolean0 = dOMNodePointer0.isActual();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test7983() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
        Locale locale0 = Locale.ENGLISH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "Lwlq8hR*hLL`$^%");
        int int0 = dOMNodePointer0.getLength();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test8084() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("[");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        String string0 = dOMNodePointer0.getNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test8185() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        boolean boolean0 = dOMNodePointer0.isLanguage("coreano");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test8286() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("[");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        QName qName0 = dOMNodePointer0.getName();
        NodePointer nodePointer0 = dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, nodePointer0);
        qName0.toString();
        assertNotNull(qName0.toString());
    }

    @Test(timeout = 4000)
    public void test8287() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("[");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "]");
        QName qName0 = dOMNodePointer0.getName();
        NodePointer nodePointer0 = dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, nodePointer0);
    }

    @Test(timeout = 4000)
    public void test8388() throws Throwable {
        IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
        Locale locale0 = Locale.ENGLISH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(iIOMetadataNode0, locale0, "Lwlq8hR*hLL`$^%");
        boolean boolean0 = dOMNodePointer0.isCollection();
        assertTrue(boolean0);
    }
}
