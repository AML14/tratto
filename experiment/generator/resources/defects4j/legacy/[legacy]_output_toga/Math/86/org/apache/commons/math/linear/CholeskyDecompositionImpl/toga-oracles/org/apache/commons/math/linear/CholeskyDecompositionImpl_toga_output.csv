project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    double[] doubleArray0 = new double[1];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.0);
    RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrix0, 1.0E-12, (-124.6528351558643));
    double double0 = choleskyDecompositionImpl0.getDeterminant();
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test011,"public void test011() throws Throwable {
    RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl();
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrixImpl0, (-1183.6668903126), (-1183.6668903126));
    double double0 = choleskyDecompositionImpl0.getDeterminant();
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test022,"public void test022() throws Throwable {
    RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl();
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrixImpl0, (-1183.6668903126), (-1183.6668903126));
    // Undeclared exception!
    try {
        choleskyDecompositionImpl0.getL();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 0
        //
        verifyException(""org.apache.commons.math.linear.DenseRealMatrix"", e);
    }
}",0,
project,0,test043,"public void test043() throws Throwable {
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
    try {
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl((RealMatrix) null, (-1010.877599918819), 2270.84505827051);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.linear.CholeskyDecompositionImpl"", e);
    }
}",0,
project,0,test054,"public void test054() throws Throwable {
    double[] doubleArray0 = new double[0];
    RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl(doubleArray0);
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
    try {
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrixImpl0, (-1.0), 0.0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 0
        //
        verifyException(""org.apache.commons.math.linear.RealMatrixImpl"", e);
    }
}",1,
project,0,test075,"public void test075() throws Throwable {
    double[] doubleArray0 = new double[0];
    RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl(doubleArray0);
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
    try {
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrixImpl0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 0
        //
        verifyException(""org.apache.commons.math.linear.RealMatrixImpl"", e);
    }
}",1,
project,0,test086,"public void test086() throws Throwable {
    RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl();
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrixImpl0, (-1183.6668903126), (-1183.6668903126));
    // Undeclared exception!
    try {
        choleskyDecompositionImpl0.getLT();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 0
        //
        verifyException(""org.apache.commons.math.linear.DenseRealMatrix"", e);
    }
}",0,
project,0,test097,"public void test097() throws Throwable {
    double[] doubleArray0 = new double[5];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 1605.74765799);
    OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
    try {
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(openMapRealMatrix0, 1.0, 3.1431336163519293E-9);
        fail(""Expecting exception: Exception"");
    } catch (Throwable e) {
        //
        // not positive definite matrix
        //
        verifyException(""org.apache.commons.math.linear.CholeskyDecompositionImpl"", e);
    }
}",0,
project,0,test108,"public void test108() throws Throwable {
    double[] doubleArray0 = new double[7];
    RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl(doubleArray0);
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
    try {
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrixImpl0, (-1518.7014536), (-1939.9482595484867));
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // a 7x1 matrix was provided instead of a square matrix
        //
        verifyException(""org.apache.commons.math.linear.CholeskyDecompositionImpl"", e);
    }
}",0,
project,0,test119,"public void test119() throws Throwable {
    RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl();
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrixImpl0);
    assertEquals(1.0E-10, CholeskyDecompositionImpl.DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD, 0.01);
}",1,
project,0,test1210,"public void test1210() throws Throwable {
    double[] doubleArray0 = new double[2];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.0);
    RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrix0, 0.0, 0.0);
    double double0 = choleskyDecompositionImpl0.getDeterminant();
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test1311,"public void test1311() throws Throwable {
    double[] doubleArray0 = new double[2];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.0);
    RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrix0, 0.0, 0.0);
    choleskyDecompositionImpl0.getL();
    RealMatrix realMatrix1 = choleskyDecompositionImpl0.getLT();
    assertEquals(Double.NaN, realMatrix1.getFrobeniusNorm(), 0.01);
}",0,
project,0,test1412,"public void test1412() throws Throwable {
    double[] doubleArray0 = new double[2];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.0);
    RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrix0, 0.0, 0.0);
    choleskyDecompositionImpl0.getL();
    RealMatrix realMatrix1 = choleskyDecompositionImpl0.getL();
    assertEquals(Double.NaN, realMatrix1.getFrobeniusNorm(), 0.01);
}",0,
project,0,test1413,"public void test1413() throws Throwable {
    double[] doubleArray0 = new double[2];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.0);
    RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrix0, 0.0, 0.0);
    choleskyDecompositionImpl0.getL();
    RealMatrix realMatrix1 = choleskyDecompositionImpl0.getL();
    assertNotNull(realMatrix1);
}",0,
project,0,test1514,"public void test1514() throws Throwable {
    double[] doubleArray0 = new double[5];
    doubleArray0[0] = 3140.30398224132;
    doubleArray0[4] = 3140.30398224132;
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 3140.30398224132);
    OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
    try {
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(openMapRealMatrix0, (-1992.2776373530703), 3140.30398224132);
        fail(""Expecting exception: Exception"");
    } catch (Throwable e) {
        //
        // not symmetric matrix
        //
        verifyException(""org.apache.commons.math.linear.CholeskyDecompositionImpl"", e);
    }
}",0,
project,0,test1615,"public void test1615() throws Throwable {
    double[] doubleArray0 = new double[4];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.0);
    RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
    try {
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrix0);
        fail(""Expecting exception: Exception"");
    } catch (Throwable e) {
        //
        // not positive definite matrix
        //
        verifyException(""org.apache.commons.math.linear.CholeskyDecompositionImpl"", e);
    }
}",1,
project,0,test1716,"public void test1716() throws Throwable {
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(2146438111, 382);
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
    try {
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(openMapRealMatrix0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // a 2,146,438,111x382 matrix was provided instead of a square matrix
        //
        verifyException(""org.apache.commons.math.linear.CholeskyDecompositionImpl"", e);
    }
}",1,
project,0,test1817,"public void test1817() throws Throwable {
    double[] doubleArray0 = new double[2];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.0);
    RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrix0, 0.0, 0.0);
    choleskyDecompositionImpl0.getSolver();
    assertEquals(Double.NaN, choleskyDecompositionImpl0.getDeterminant(), 0.01);
}",0,
project,0,test1918,"public void test1918() throws Throwable {
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
    try {
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl((RealMatrix) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.linear.CholeskyDecompositionImpl"", e);
    }
}",1,
