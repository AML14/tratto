project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test041,"public void test041() throws Throwable {
    LinkedList<Chromosome> linkedList0 = new LinkedList<Chromosome>();
    int int0 = 0;
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(linkedList0, 0, (-763.75318048848));
    // Undeclared exception!
    try {
        elitisticListPopulation0.setElitismRate(int0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // population limit has to be positive
        //
        verifyException(""org.apache.commons.math3.genetics.ListPopulation"", e);
    }
}",1,
project,0,test052,"public void test052() throws Throwable {
    int int0 = (-881);
    double double0 = 700.3623;
    ElitisticListPopulation elitisticListPopulation0 = null;
    try {
        elitisticListPopulation0 = new ElitisticListPopulation((-881), 700.3623);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // population limit has to be positive
        //
        verifyException(""org.apache.commons.math3.genetics.ListPopulation"", e);
    }
}",0,
project,0,test073,"public void test073() throws Throwable {
    List<Chromosome> list0 = null;
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation((List<Chromosome>) null, 0, 0);
    // Undeclared exception!
    try {
        elitisticListPopulation0.setChromosomes(list0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.genetics.ListPopulation"", e);
    }
}",0,
project,0,test084,"public void test084() throws Throwable {
    int int0 = 1054;
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1054, 0.0);
    List<Chromosome> list0 = elitisticListPopulation0.getChromosomes();
    ElitisticListPopulation elitisticListPopulation1 = new ElitisticListPopulation(list0, 1054, 1054);
    elitisticListPopulation1.nextGeneration();
    elitisticListPopulation1.setElitismRate(1054);
    // Undeclared exception!
    try {
        elitisticListPopulation1.iterator();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // elitism rate (1,054)
        //
        verifyException(""org.apache.commons.math3.genetics.ElitisticListPopulation"", e);
    }
}",0,
project,0,test185,"public void test185() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(254, 254);
    Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
    elitisticListPopulation0.forEach(consumer0);
    elitisticListPopulation0.setPopulationLimit((-1073741824));
    elitisticListPopulation0.addChromosome((Chromosome) null);
    List<Chromosome> list0 = elitisticListPopulation0.getChromosomes();
    ElitisticListPopulation elitisticListPopulation1 = new ElitisticListPopulation(list0, 254, 254);
    elitisticListPopulation1.iterator();
    elitisticListPopulation1.nextGeneration();
    elitisticListPopulation0.nextGeneration();
    elitisticListPopulation0.nextGeneration();
    // Undeclared exception!
    try {
        elitisticListPopulation0.nextGeneration();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -253
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
