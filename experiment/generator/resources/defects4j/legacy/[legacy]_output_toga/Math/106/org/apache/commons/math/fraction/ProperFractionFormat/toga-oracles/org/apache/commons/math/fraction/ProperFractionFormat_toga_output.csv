project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test024,"public void test024() throws Throwable {
    Locale locale0 = Locale.CANADA_FRENCH;
    NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
    ProperFractionFormat properFractionFormat0 = new ProperFractionFormat(numberFormat0, numberFormat0, numberFormat0);
    Fraction fraction0 = new Fraction((-4438.5648678));
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 1902);
    // Undeclared exception!
    try {
        properFractionFormat0.format(fraction0, (StringBuffer) null, fieldPosition0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test035,"public void test035() throws Throwable {
    DecimalFormat decimalFormat0 = new DecimalFormat();
    ProperFractionFormat properFractionFormat0 = new ProperFractionFormat(decimalFormat0);
    ParsePosition parsePosition0 = new ParsePosition(0);
    Fraction fraction0 = properFractionFormat0.parse(""-2"", parsePosition0);
    assertEquals((-2.0F), fraction0.floatValue(), 0.01F);
}",0,
project,0,test046,"public void test046() throws Throwable {
    NumberFormat numberFormat0 = NumberFormat.getInstance();
    ProperFractionFormat properFractionFormat0 = new ProperFractionFormat(numberFormat0);
    ParsePosition parsePosition0 = new ParsePosition(1);
    Fraction fraction0 = properFractionFormat0.parse(""-686"", parsePosition0);
    assertEquals(686L, fraction0.longValue());
}",0,"assertEquals(0, fraction0.longValue())"
project,0,test068,"public void test068() throws Throwable {
    NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
    ProperFractionFormat properFractionFormat0 = new ProperFractionFormat(numberFormat0);
    NumberFormat numberFormat1 = properFractionFormat0.getWholeFormat();
    assertSame(numberFormat1, numberFormat0);
}",0,
project,0,test079,"public void test079() throws Throwable {
    NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
    ProperFractionFormat properFractionFormat0 = new ProperFractionFormat(numberFormat0);
    ParsePosition parsePosition0 = new ParsePosition(Integer.MIN_VALUE);
    // Undeclared exception!
    try {
        properFractionFormat0.parse(""]p~+@BV1@"", parsePosition0);
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test0810,"public void test0810() throws Throwable {
    Locale locale0 = Locale.GERMAN;
    NumberFormat numberFormat0 = NumberFormat.getNumberInstance(locale0);
    ProperFractionFormat properFractionFormat0 = new ProperFractionFormat(numberFormat0, numberFormat0, numberFormat0);
    ParsePosition parsePosition0 = new ParsePosition(0);
    // Undeclared exception!
    try {
        properFractionFormat0.parse((String) null, parsePosition0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.fraction.FractionFormat"", e);
    }
}",0,
project,0,test0911,"public void test0911() throws Throwable {
    ProperFractionFormat properFractionFormat0 = null;
    try {
        properFractionFormat0 = new ProperFractionFormat((NumberFormat) null, (NumberFormat) null, (NumberFormat) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // whole format can not be null.
        //
        verifyException(""org.apache.commons.math.fraction.ProperFractionFormat"", e);
    }
}",0,
project,0,test1012,"public void test1012() throws Throwable {
    ProperFractionFormat properFractionFormat0 = null;
    try {
        properFractionFormat0 = new ProperFractionFormat((NumberFormat) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.fraction.ProperFractionFormat"", e);
    }
}",0,
project,0,test1113,"public void test1113() throws Throwable {
    NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
    ProperFractionFormat properFractionFormat0 = new ProperFractionFormat(numberFormat0);
    NumberFormat numberFormat1 = properFractionFormat0.getWholeFormat();
    assertSame(numberFormat1, numberFormat0);
}",0,
project,0,test1214,"public void test1214() throws Throwable {
    NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
    ProperFractionFormat properFractionFormat0 = new ProperFractionFormat(numberFormat0, numberFormat0, numberFormat0);
    // Undeclared exception!
    try {
        properFractionFormat0.setWholeFormat((NumberFormat) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // whole format can not be null.
        //
        verifyException(""org.apache.commons.math.fraction.ProperFractionFormat"", e);
    }
}",1,
project,0,test1519,"public void test1519() throws Throwable {
    ChoiceFormat choiceFormat0 = new ChoiceFormat("""");
    ProperFractionFormat properFractionFormat0 = new ProperFractionFormat(choiceFormat0, choiceFormat0, choiceFormat0);
    ParsePosition parsePosition0 = new ParsePosition(3023);
    Fraction fraction0 = properFractionFormat0.parse(""R"", parsePosition0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) """");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 3023);
    // Undeclared exception!
    try {
        properFractionFormat0.format(fraction0, stringBuffer0, fieldPosition0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 0
        //
        verifyException(""java.text.ChoiceFormat"", e);
    }
}",0,
