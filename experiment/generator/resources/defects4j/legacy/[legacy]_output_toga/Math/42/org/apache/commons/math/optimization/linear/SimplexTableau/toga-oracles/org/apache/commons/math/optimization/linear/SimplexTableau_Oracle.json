[ {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected RealPointValuePair getSolution()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected void divideRow(final int dividendRow, final double divisor)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test021"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon, final int maxUlps)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test052"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected void divideRow(final int dividendRow, final double divisor)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test063"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected void divideRow(final int dividendRow, final double divisor)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test074"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "public List<LinearConstraint> normalizeConstraints(Collection<LinearConstraint> originalConstraints)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test095"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test176"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected void subtractRow(final int minuendRow, final int subtrahendRow, final double multiple)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test197"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected static double getInvertedCoefficientSum(final RealVector coefficients)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test288"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected RealMatrix createTableau(final boolean maximize)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test299"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3110"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "public OpenMapRealVector getSubVector(int index, int n)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3511"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon, final int maxUlps)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3612"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon, final int maxUlps)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4113"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4214"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "public ArrayRealVector(double[] d, int pos, int size)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4315"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected final double getEntry(final int row, final int column)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4516"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4717"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected void divideRow(final int dividendRow, final double divisor)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4818"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected void subtractRow(final int minuendRow, final int subtrahendRow, final double multiple)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5119"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected final void setEntry(final int row, final int column, final double value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5420"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected final void setEntry(final int row, final int column, final double value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5521"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected final double getEntry(final int row, final int column)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5922"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected static double getInvertedCoefficientSum(final RealVector coefficients)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6023"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected Integer getBasicRow(final int col)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6124"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "public ArrayRealVector(double[] v1, ArrayRealVector v2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6225"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon, final int maxUlps)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6326"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6427"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected Integer getBasicRow(final int col)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6828"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected void subtractRow(final int minuendRow, final int subtrahendRow, final double multiple)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6929"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test7330"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "public double getValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test7631"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected static double getInvertedCoefficientSum(final RealVector coefficients)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test7732"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected final int getArtificialVariableOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test7733"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "int getColumnDimension()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, realMatrix0.getColumnDimension())",
  "exception" : "",
  "testName" : "test7734"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "public boolean equals(Object other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test7735"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "public boolean equals(Object other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test7736"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected final int getArtificialVariableOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test7837"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "public boolean equals(Object other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test7838"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected final int getSlackVariableOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int1)",
  "exception" : "",
  "testName" : "test7839"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected void divideRow(final int dividendRow, final double divisor)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test7940"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected void divideRow(final int dividendRow, final double divisor)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test8041"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "public boolean equals(Object other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test8142"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected final int getArtificialVariableOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test8243"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "public boolean equals(Object other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test8244"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected final void setEntry(final int row, final int column, final double value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test8345"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected final int getRhsOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test8446"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "public double getValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test8547"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "protected final double[][] getData()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test8548"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "boolean isOptimal()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test8549"
}, {
  "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
  "methodSignature" : "boolean isOptimal()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test8650"
} ]