[ {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int getNumerator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public double percentageValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test001"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int getDenominator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test012"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public Fraction negate()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test023"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int getDenominator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test034"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public float floatValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test035"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public double percentageValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test046"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public FractionField getField()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test057"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public double percentageValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test079"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public long longValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test0710"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public double doubleValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0811"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int getDenominator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0812"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int intValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test0913"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int getDenominator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0914"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int getNumerator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test1115"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public float floatValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1216"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public double percentageValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1317"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public Fraction(double value, int maxDenominator) throws FractionConversionException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1418"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public Fraction(double value) throws FractionConversionException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1519"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public Fraction(double value, int maxDenominator) throws FractionConversionException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1620"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public Fraction(double value, double epsilon, int maxIterations) throws FractionConversionException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1721"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int getDenominator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1822"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public double percentageValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1923"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public Fraction(int num, int den)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2024"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int getNumerator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2125"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public double percentageValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2126"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public Fraction(int num, int den)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2227"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public Fraction(int num, int den)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2328"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int getDenominator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2429"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public double doubleValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2531"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int compareTo(Fraction object)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test2632"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int compareTo(Fraction object)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test2733"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public float floatValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2734"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int compareTo(Fraction object)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test2835"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public boolean equals(Object other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2937"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public boolean equals(Object other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2938"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public boolean equals(Object other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test3039"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public boolean equals(Object other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test3140"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public boolean equals(Object other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test3241"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public boolean equals(Object other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3242"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public boolean equals(Object other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test3343"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public Fraction add(Fraction fraction)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3444"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public double percentageValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3545"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int getNumerator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3546"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public Fraction add(Fraction fraction)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3647"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public double percentageValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3748"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int getNumerator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, fraction1.getNumerator())",
  "exception" : "",
  "testName" : "test3849"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public double percentageValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3850"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public double percentageValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3951"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int getDenominator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3952"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public Fraction add(Fraction fraction)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4053"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int getNumerator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, fraction1.getNumerator())",
  "exception" : "",
  "testName" : "test4154"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int getDenominator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4155"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public double percentageValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4156"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public Fraction multiply(Fraction fraction)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4257"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public double doubleValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4358"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public int getNumerator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4459"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public Fraction divide(Fraction fraction)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4560"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public Fraction divide(Fraction fraction)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4661"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4762"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public double doubleValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4863"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public double percentageValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4964"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5065"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5166"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5267"
}, {
  "className" : "org.apache.commons.math3.fraction.Fraction",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5368"
} ]