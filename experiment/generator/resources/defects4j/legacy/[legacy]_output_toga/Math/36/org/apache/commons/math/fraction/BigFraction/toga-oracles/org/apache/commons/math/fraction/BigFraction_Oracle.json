[ {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction divide(final BigInteger bg)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0000"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction multiply(final BigInteger bg)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0011"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction multiply(final BigInteger bg)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0022"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public int compareTo(final BigFraction object)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test0033"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public boolean equals(final Object other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0034"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public float floatValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0035"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public boolean equals(final Object other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0036"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public float floatValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0037"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public float floatValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0038"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public double doubleValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00412"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigDecimal bigDecimalValue(final int roundingMode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00513"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction divide(final BigFraction fraction)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00614"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction(final double value, final int maxDenominator) throws FractionConversionException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00715"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigDecimal bigDecimalValue(final int roundingMode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00816"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction add(final BigInteger bg) throws NullArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00917"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction(final double value, final double epsilon, final int maxIterations) throws FractionConversionException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01218"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction divide(final BigInteger bg)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01719"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigDecimal bigDecimalValue(final int scale, final int roundingMode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02020"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigDecimal bigDecimalValue(final int roundingMode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02121"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction divide(final BigFraction fraction)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02522"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction(final double value, final double epsilon, final int maxIterations) throws FractionConversionException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02823"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction divide(final long l)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02924"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction divide(final BigInteger bg)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03025"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigDecimal bigDecimalValue(final int roundingMode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04426"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigDecimal bigDecimalValue(final int scale, final int roundingMode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04527"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction(final BigInteger num)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04628"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction(BigInteger num, BigInteger den)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05029"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction(BigInteger num, BigInteger den)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05130"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction divide(final BigInteger bg)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05431"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction(final long num, final long den)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05632"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public int compareTo(final BigFraction object)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05733"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigDecimal bigDecimalValue(final int roundingMode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06034"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public static BigFraction getReducedFraction(final int numerator, final int denominator)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06435"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction multiply(final BigInteger bg)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06536"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction(BigInteger num, BigInteger den)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06637"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction divide(final BigInteger bg)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06838"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigDecimal bigDecimalValue(final int scale, final int roundingMode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06939"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public static BigFraction getReducedFraction(final int numerator, final int denominator)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07340"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction divide(final int i)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07641"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigDecimal bigDecimalValue(final int roundingMode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07842"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction subtract(final BigFraction fraction)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08143"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigDecimal bigDecimalValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08244"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigDecimal bigDecimalValue(final int scale, final int roundingMode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08345"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction reciprocal()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08646"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction(final double value, final double epsilon, final int maxIterations) throws FractionConversionException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08947"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction(final double value, final int maxDenominator) throws FractionConversionException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09048"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigDecimal bigDecimalValue(final int roundingMode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09149"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction(final double value, final int maxDenominator) throws FractionConversionException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09250"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction subtract(final BigInteger bg)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09351"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction add(final BigInteger bg) throws NullArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09552"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigDecimal bigDecimalValue(final int roundingMode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09753"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction add(final BigFraction fraction)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09954"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigDecimal bigDecimalValue(final int scale, final int roundingMode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test10055"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction pow(final BigInteger exponent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test10256"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigFraction pow(final int exponent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test10357"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigDecimal bigDecimalValue(final int scale, final int roundingMode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test10458"
}, {
  "className" : "org.apache.commons.math.fraction.BigFraction",
  "methodSignature" : "public BigDecimal bigDecimalValue(final int scale, final int roundingMode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test10559"
} ]