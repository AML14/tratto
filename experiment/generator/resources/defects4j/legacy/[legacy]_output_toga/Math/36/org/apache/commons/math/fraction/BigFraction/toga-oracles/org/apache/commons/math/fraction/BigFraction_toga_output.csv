project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
    BigFraction bigFraction1 = new BigFraction(0L);
    BigFraction bigFraction2 = bigFraction0.TWO_FIFTHS.subtract(bigFraction1);
    bigFraction0.MINUS_ONE.pow(2.4106173515319824);
    bigFraction2.ONE_QUARTER.getDenominatorAsInt();
    BigFraction bigFraction3 = bigFraction0.reciprocal();
    BigFraction bigFraction4 = bigFraction0.ONE_HALF.reciprocal();
    bigFraction0.percentageValue();
    BigFraction bigFraction5 = bigFraction4.divide(bigFraction0);
    BigFraction bigFraction6 = bigFraction5.TWO_FIFTHS.divide(1951);
    BigFraction bigFraction7 = bigFraction6.ONE_FIFTH.reciprocal();
    bigFraction7.ONE_THIRD.getDenominatorAsInt();
    BigFraction bigFraction8 = bigFraction5.ONE_FIFTH.multiply(bigFraction3);
    bigFraction6.TWO_THIRDS.getDenominatorAsLong();
    bigFraction8.TWO_QUARTERS.add(bigFraction4);
    bigFraction0.getField();
    bigFraction2.getField();
    BigFraction bigFraction9 = bigFraction1.multiply(4458);
    bigFraction9.ZERO.divide(3L);
    bigFraction7.abs();
    // Undeclared exception!
    try {
        bigFraction7.divide((BigInteger) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test0011,"public void test0011() throws Throwable {
    BigFraction bigFraction0 = new BigFraction(0.0);
    bigFraction0.intValue();
    BigFraction bigFraction1 = bigFraction0.ONE_HALF.reciprocal();
    bigFraction1.ONE.multiply((-74));
    BigFraction bigFraction2 = BigFraction.TWO_QUARTERS;
    int int0 = 1847;
    BigFraction bigFraction3 = bigFraction2.subtract(1847);
    bigFraction0.divide(bigFraction2);
    bigFraction3.TWO.toString();
    BigFraction bigFraction4 = bigFraction0.reduce();
    bigFraction4.TWO.subtract(1847);
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) (-120);
    // Undeclared exception!
    try {
        bigFraction3.ONE.multiply((BigInteger) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // null is not allowed
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test0022,"public void test0022() throws Throwable {
    BigFraction bigFraction0 = new BigFraction((-717.224843262248));
    int int0 = 1245;
    BigFraction bigFraction1 = bigFraction0.pow(1245);
    BigFraction bigFraction2 = bigFraction0.THREE_FIFTHS.add((long) 1245);
    BigFraction bigFraction3 = bigFraction1.divide(bigFraction0);
    BigFraction bigFraction4 = bigFraction1.add(bigFraction0);
    BigFraction bigFraction5 = bigFraction3.divide(1037L);
    int int1 = 3;
    BigFraction bigFraction6 = bigFraction2.divide(3);
    bigFraction2.ONE_FIFTH.divide(328L);
    BigFraction bigFraction7 = bigFraction5.ONE_HALF.subtract(1037L);
    bigFraction7.MINUS_ONE.equals(bigFraction6);
    bigFraction5.getNumeratorAsLong();
    bigFraction5.add(bigFraction2);
    BigInteger bigInteger0 = null;
    // Undeclared exception!
    try {
        bigFraction4.multiply((BigInteger) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // null is not allowed
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test0033,"public void test0033() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
    bigFraction0.ONE_HALF.bigDecimalValue();
    BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));
    bigFraction1.TWO_FIFTHS.floatValue();
    BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
    bigFraction2.ONE_THIRD.getField();
    byte[] byteArray0 = new byte[7];
    byteArray0[0] = (byte) (-1);
    byteArray0[1] = (byte) 79;
    byteArray0[2] = (byte) 4;
    byteArray0[3] = (byte) 0;
    byteArray0[4] = (byte) (-65);
    byteArray0[5] = (byte) 0;
    int int0 = bigFraction0.ONE.compareTo(bigFraction2);
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test0034,"public void test0034() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
    bigFraction0.ONE_HALF.bigDecimalValue();
    BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));
    bigFraction1.TWO_FIFTHS.floatValue();
    BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
    bigFraction2.ONE_THIRD.getField();
    byte[] byteArray0 = new byte[7];
    byteArray0[0] = (byte) (-1);
    byteArray0[1] = (byte) 79;
    byteArray0[2] = (byte) 4;
    byteArray0[3] = (byte) 0;
    byteArray0[4] = (byte) (-65);
    byteArray0[5] = (byte) 0;
    int int0 = bigFraction0.ONE.compareTo(bigFraction2);
    byteArray0[6] = (byte) (-5);
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    BigFraction bigFraction3 = bigFraction2.TWO.divide(bigInteger0);
    BigFraction bigFraction4 = bigFraction3.THREE_FIFTHS.add((int) (byte) 0);
    assertFalse(bigFraction4.equals((Object) bigFraction0));
}",0,
project,0,test0035,"public void test0035() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
    bigFraction0.ONE_HALF.bigDecimalValue();
    BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));
    bigFraction1.TWO_FIFTHS.floatValue();
    BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
    bigFraction2.ONE_THIRD.getField();
    byte[] byteArray0 = new byte[7];
    byteArray0[0] = (byte) (-1);
    byteArray0[1] = (byte) 79;
    byteArray0[2] = (byte) 4;
    byteArray0[3] = (byte) 0;
    byteArray0[4] = (byte) (-65);
    byteArray0[5] = (byte) 0;
    int int0 = bigFraction0.ONE.compareTo(bigFraction2);
    byteArray0[6] = (byte) (-5);
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    BigFraction bigFraction3 = bigFraction2.TWO.divide(bigInteger0);
    BigFraction bigFraction4 = bigFraction3.THREE_FIFTHS.add((int) (byte) 0);
    float float0 = bigFraction1.floatValue();
    assertEquals(1.0F, float0, 0.01F);
}",0,
project,0,test0036,"public void test0036() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
    bigFraction0.ONE_HALF.bigDecimalValue();
    BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));
    bigFraction1.TWO_FIFTHS.floatValue();
    BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
    bigFraction2.ONE_THIRD.getField();
    byte[] byteArray0 = new byte[7];
    byteArray0[0] = (byte) (-1);
    byteArray0[1] = (byte) 79;
    byteArray0[2] = (byte) 4;
    byteArray0[3] = (byte) 0;
    byteArray0[4] = (byte) (-65);
    byteArray0[5] = (byte) 0;
    int int0 = bigFraction0.ONE.compareTo(bigFraction2);
    byteArray0[6] = (byte) (-5);
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    BigFraction bigFraction3 = bigFraction2.TWO.divide(bigInteger0);
    BigFraction bigFraction4 = bigFraction3.THREE_FIFTHS.add((int) (byte) 0);
    float float0 = bigFraction1.floatValue();
    float float1 = bigFraction3.floatValue();
    assertFalse(bigFraction0.equals((Object) bigFraction4));
}",0,
project,0,test0037,"public void test0037() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
    bigFraction0.ONE_HALF.bigDecimalValue();
    BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));
    bigFraction1.TWO_FIFTHS.floatValue();
    BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
    bigFraction2.ONE_THIRD.getField();
    byte[] byteArray0 = new byte[7];
    byteArray0[0] = (byte) (-1);
    byteArray0[1] = (byte) 79;
    byteArray0[2] = (byte) 4;
    byteArray0[3] = (byte) 0;
    byteArray0[4] = (byte) (-65);
    byteArray0[5] = (byte) 0;
    int int0 = bigFraction0.ONE.compareTo(bigFraction2);
    byteArray0[6] = (byte) (-5);
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    BigFraction bigFraction3 = bigFraction2.TWO.divide(bigInteger0);
    BigFraction bigFraction4 = bigFraction3.THREE_FIFTHS.add((int) (byte) 0);
    float float0 = bigFraction1.floatValue();
    float float1 = bigFraction3.floatValue();
    assertEquals((-1.0277684E-14F), float1, 0.01F);
}",0,
project,0,test0038,"public void test0038() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
    bigFraction0.ONE_HALF.bigDecimalValue();
    BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));
    bigFraction1.TWO_FIFTHS.floatValue();
    BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
    bigFraction2.ONE_THIRD.getField();
    byte[] byteArray0 = new byte[7];
    byteArray0[0] = (byte) (-1);
    byteArray0[1] = (byte) 79;
    byteArray0[2] = (byte) 4;
    byteArray0[3] = (byte) 0;
    byteArray0[4] = (byte) (-65);
    byteArray0[5] = (byte) 0;
    int int0 = bigFraction0.ONE.compareTo(bigFraction2);
    byteArray0[6] = (byte) (-5);
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    BigFraction bigFraction3 = bigFraction2.TWO.divide(bigInteger0);
    BigFraction bigFraction4 = bigFraction3.THREE_FIFTHS.add((int) (byte) 0);
    float float0 = bigFraction1.floatValue();
    float float1 = bigFraction3.floatValue();
    assertNotSame(bigFraction2, bigFraction0);
}",0,
project,0,test00412,"public void test00412() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
    BigFraction bigFraction1 = BigFraction.getReducedFraction(1055, 37);
    BigFraction bigFraction2 = bigFraction1.ONE_HALF.add(1055);
    BigFraction bigFraction3 = bigFraction0.pow(0L);
    BigFraction bigFraction4 = bigFraction3.divide((-2651));
    double double0 = bigFraction2.doubleValue();
    assertEquals(1055.5, double0, 0.01);
}",0,
project,0,test00513,"public void test00513() throws Throwable {
    BigFraction bigFraction0 = BigFraction.getReducedFraction((-1482), 1045);
    bigFraction0.toString();
    bigFraction0.ONE.percentageValue();
    BigFraction bigFraction1 = bigFraction0.TWO_QUARTERS.multiply((-496L));
    bigFraction0.THREE_QUARTERS.equals(""-78 / 55"");
    BigFraction bigFraction2 = bigFraction0.add(bigFraction0);
    BigInteger bigInteger0 = bigFraction2.getDenominator();
    BigFraction bigFraction3 = bigFraction1.multiply(bigInteger0);
    bigFraction3.TWO_THIRDS.getNumeratorAsLong();
    BigFraction bigFraction4 = bigFraction0.add(1);
    BigInteger bigInteger1 = BigInteger.ONE;
    bigInteger1.xor(bigInteger0);
    bigFraction0.divide(bigInteger1);
    BigFraction bigFraction5 = bigFraction1.multiply(bigFraction4);
    bigFraction5.FOUR_FIFTHS.getDenominatorAsLong();
    bigFraction5.TWO_QUARTERS.pow(0.0);
    bigFraction4.TWO.subtract((long) 1);
    bigFraction4.divide(bigFraction0);
    // Undeclared exception!
    try {
        bigFraction4.bigDecimalValue(2472);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",1,
project,0,test00614,"public void test00614() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ONE_HALF;
    bigFraction0.ONE_FIFTH.getDenominatorAsInt();
    int int0 = (-1209);
    BigFraction bigFraction1 = null;
    // Undeclared exception!
    try {
        bigFraction0.TWO_THIRDS.divide((BigFraction) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // fraction
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test00715,"public void test00715() throws Throwable {
    int int0 = (-1);
    BigFraction bigFraction0 = null;
    try {
        bigFraction0 = new BigFraction(0.0, (-1));
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // illegal state: Overflow trying to convert 0 to fraction (1/9,223,372,036,854,775,807)
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",0,
project,0,test00816,"public void test00816() throws Throwable {
    BigFraction bigFraction0 = new BigFraction(206.213706466, 206.213706466, (-3));
    bigFraction0.TWO_THIRDS.doubleValue();
    bigFraction0.FOUR_FIFTHS.percentageValue();
    BigFraction bigFraction1 = BigFraction.MINUS_ONE;
    bigFraction1.ONE.multiply(bigFraction0);
    BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
    BigFraction bigFraction3 = bigFraction1.TWO_QUARTERS.multiply((-2446L));
    bigFraction0.longValue();
    BigFraction bigFraction4 = BigFraction.getReducedFraction((-3), (-182));
    BigFraction bigFraction5 = bigFraction0.multiply(206L);
    BigFraction bigFraction6 = bigFraction5.add(bigFraction2);
    bigFraction3.pow((-182));
    bigFraction6.longValue();
    bigFraction4.reduce();
    bigFraction2.getDenominatorAsInt();
    bigFraction5.hashCode();
    bigFraction1.getDenominator();
    // Undeclared exception!
    try {
        bigFraction4.bigDecimalValue((-182));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test00917,"public void test00917() throws Throwable {
    BigFraction bigFraction0 = BigFraction.TWO;
    bigFraction0.longValue();
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-1);
    byteArray0[1] = (byte) (-83);
    BigInteger bigInteger0 = BigInteger.ONE;
    bigFraction0.TWO_THIRDS.add(bigInteger0);
    bigFraction0.ZERO.pow(0.0);
    byteArray0[2] = (byte) (-1);
    bigFraction0.ONE_QUARTER.floatValue();
    BigInteger bigInteger1 = new BigInteger(byteArray0);
    BigFraction bigFraction1 = bigFraction0.pow(bigInteger1);
    bigFraction1.ONE.floatValue();
    BigInteger bigInteger2 = null;
    BigFraction bigFraction2 = BigFraction.ZERO;
    bigFraction1.ONE.add(bigFraction2);
    try {
        bigFraction0.add((BigInteger) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // null is not allowed
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test01218,"public void test01218() throws Throwable {
    BigFraction bigFraction0 = BigFraction.TWO_THIRDS;
    BigFraction bigFraction1 = null;
    try {
        bigFraction1 = new BigFraction(0.0, 0.0, (-4207));
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // illegal state: Overflow trying to convert 0 to fraction (1/9,223,372,036,854,775,807)
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",0,
project,0,test01719,"public void test01719() throws Throwable {
    BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;
    BigInteger bigInteger0 = BigInteger.valueOf(0L);
    // Undeclared exception!
    try {
        bigFraction0.divide(bigInteger0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // denominator must be different from 0
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test02020,"public void test02020() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ZERO;
    bigFraction0.longValue();
    BigFraction bigFraction1 = BigFraction.TWO;
    bigFraction0.add(bigFraction1);
    bigFraction1.reciprocal();
    // Undeclared exception!
    try {
        bigFraction1.THREE_QUARTERS.bigDecimalValue(1501, 1501);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test02121,"public void test02121() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ONE_HALF;
    // Undeclared exception!
    try {
        bigFraction0.bigDecimalValue(1438);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test02522,"public void test02522() throws Throwable {
    BigFraction bigFraction0 = BigFraction.getReducedFraction(0, 0);
    BigFraction bigFraction1 = bigFraction0.negate();
    bigFraction0.doubleValue();
    // Undeclared exception!
    try {
        bigFraction1.divide(bigFraction0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // denominator must be different from 0
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test02823,"public void test02823() throws Throwable {
    BigInteger bigInteger0 = BigInteger.TEN;
    BigFraction bigFraction0 = new BigFraction(bigInteger0);
    BigFraction bigFraction1 = null;
    try {
        bigFraction1 = new BigFraction(0.0, 0.0, 2356);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // illegal state: Overflow trying to convert 0 to fraction (1/9,223,372,036,854,775,807)
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test02924,"public void test02924() throws Throwable {
    long long0 = 5648769086999809661L;
    BigFraction bigFraction0 = new BigFraction(4208363204685324176L, 5648769086999809661L);
    // Undeclared exception!
    try {
        bigFraction0.THREE_QUARTERS.divide(0L);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // denominator must be different from 0
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test03025,"public void test03025() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ZERO;
    BigFraction bigFraction0 = new BigFraction(bigInteger0);
    bigFraction0.getField();
    BigFraction bigFraction1 = bigFraction0.pow(0L);
    int int0 = 0;
    bigFraction1.bigDecimalValue(0);
    BigFraction bigFraction2 = bigFraction1.multiply(0);
    bigFraction2.ONE_THIRD.floatValue();
    BigFraction bigFraction3 = bigFraction0.ONE_FIFTH.pow(bigInteger0);
    BigFraction bigFraction4 = new BigFraction(bigInteger0);
    // Undeclared exception!
    try {
        bigFraction3.divide(bigInteger0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // denominator must be different from 0
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test04426,"public void test04426() throws Throwable {
    BigFraction bigFraction0 = BigFraction.FOUR_FIFTHS;
    BigInteger bigInteger0 = BigInteger.ONE;
    BigFraction bigFraction1 = new BigFraction(bigInteger0);
    bigFraction0.TWO_QUARTERS.getDenominatorAsInt();
    bigFraction0.ONE_THIRD.multiply(bigFraction1);
    BigFraction bigFraction2 = BigFraction.ONE;
    bigFraction2.ZERO.negate();
    BigFraction bigFraction3 = bigFraction0.divide(bigFraction2);
    bigFraction3.THREE_FIFTHS.getDenominatorAsLong();
    bigFraction2.getDenominatorAsInt();
    bigFraction0.ONE_FIFTH.intValue();
    BigFraction bigFraction4 = bigFraction0.divide(1066L);
    bigFraction4.ONE.getNumeratorAsInt();
    bigFraction4.getDenominatorAsInt();
    BigFraction bigFraction5 = bigFraction4.divide(bigFraction2);
    bigFraction5.ONE_QUARTER.multiply(Integer.MAX_VALUE);
    int int0 = (-28);
    // Undeclared exception!
    try {
        bigFraction0.bigDecimalValue((-28));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test04527,"public void test04527() throws Throwable {
    BigFraction bigFraction0 = new BigFraction((-2040.65), (-348));
    BigFraction bigFraction1 = bigFraction0.THREE_QUARTERS.negate();
    bigFraction0.ONE.getField();
    bigFraction0.toString();
    bigFraction0.bigDecimalValue();
    int int0 = (-1);
    // Undeclared exception!
    try {
        bigFraction1.bigDecimalValue((-1), (-348));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test04628,"public void test04628() throws Throwable {
    BigInteger bigInteger0 = null;
    BigFraction bigFraction0 = null;
    try {
        bigFraction0 = new BigFraction((BigInteger) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // numerator
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test05029,"public void test05029() throws Throwable {
    BigInteger bigInteger0 = BigInteger.TEN;
    BigInteger bigInteger1 = BigInteger.ZERO;
    BigFraction bigFraction0 = null;
    try {
        bigFraction0 = new BigFraction(bigInteger0, bigInteger1);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // denominator must be different from 0
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test05130,"public void test05130() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ZERO;
    BigFraction bigFraction0 = null;
    try {
        bigFraction0 = new BigFraction(bigInteger0, bigInteger0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // denominator must be different from 0
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test05431,"public void test05431() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
    BigFraction bigFraction1 = new BigFraction(0L);
    BigFraction bigFraction2 = bigFraction0.TWO_FIFTHS.subtract(bigFraction1);
    bigFraction0.MINUS_ONE.pow(2.4106173515319824);
    BigFraction bigFraction3 = bigFraction0.reciprocal();
    BigFraction bigFraction4 = bigFraction0.ONE_HALF.reciprocal();
    bigFraction0.percentageValue();
    BigFraction bigFraction5 = bigFraction4.divide(bigFraction0);
    BigFraction bigFraction6 = bigFraction5.TWO_FIFTHS.divide(1951);
    BigFraction bigFraction7 = bigFraction6.ONE_FIFTH.reciprocal();
    bigFraction7.ONE_THIRD.getDenominatorAsInt();
    BigFraction bigFraction8 = bigFraction5.ONE_FIFTH.multiply(bigFraction3);
    bigFraction8.TWO_QUARTERS.add(bigFraction4);
    bigFraction0.getField();
    bigFraction2.getField();
    bigFraction1.multiply(4458);
    bigFraction7.abs();
    // Undeclared exception!
    try {
        bigFraction7.divide((BigInteger) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test05632,"public void test05632() throws Throwable {
    BigFraction bigFraction0 = null;
    try {
        bigFraction0 = new BigFraction(0L, 0L);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // denominator must be different from 0
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",0,
project,0,test05733,"public void test05733() throws Throwable {
    BigFraction bigFraction0 = new BigFraction((-467.49498417), 1480);
    bigFraction0.doubleValue();
    bigFraction0.getNumeratorAsLong();
    // Undeclared exception!
    try {
        bigFraction0.compareTo((BigFraction) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",0,
project,0,test06034,"public void test06034() throws Throwable {
    BigFraction bigFraction0 = new BigFraction((-1));
    BigFraction bigFraction1 = BigFraction.THREE_QUARTERS;
    BigFraction bigFraction2 = bigFraction0.multiply(bigFraction1);
    bigFraction2.add(bigFraction1);
    bigFraction0.getDenominatorAsInt();
    bigFraction1.bigDecimalValue(1, 5);
    bigFraction2.getDenominatorAsInt();
    BigFraction bigFraction3 = bigFraction2.add(205);
    bigFraction0.negate();
    // Undeclared exception!
    try {
        bigFraction3.bigDecimalValue((-1488));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test06435,"public void test06435() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ZERO;
    BigFraction bigFraction1 = BigFraction.MINUS_ONE;
    BigFraction bigFraction2 = bigFraction1.TWO.add(bigFraction0);
    bigFraction2.MINUS_ONE.doubleValue();
    bigFraction0.divide(bigFraction1);
    BigFraction bigFraction3 = bigFraction1.add(3);
    bigFraction3.pow(0.0);
    bigFraction3.bigDecimalValue();
    bigFraction0.getNumeratorAsInt();
    BigFraction bigFraction4 = bigFraction1.multiply(0);
    bigFraction4.THREE_QUARTERS.getNumeratorAsInt();
    bigFraction4.TWO_THIRDS.abs();
    bigFraction3.multiply(bigFraction1);
    BigFraction bigFraction5 = bigFraction1.reduce();
    bigFraction5.ONE.add((long) 3);
    // Undeclared exception!
    try {
        BigFraction.getReducedFraction(3630, 0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // denominator must be different from 0
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test06536,"public void test06536() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ONE_THIRD;
    BigInteger bigInteger0 = null;
    // Undeclared exception!
    try {
        bigFraction0.MINUS_ONE.multiply((BigInteger) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // null is not allowed
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test06637,"public void test06637() throws Throwable {
    BigInteger bigInteger0 = null;
    BigFraction bigFraction0 = null;
    try {
        bigFraction0 = new BigFraction((BigInteger) null, (BigInteger) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // numerator
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test06838,"public void test06838() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
    BigFraction bigFraction1 = bigFraction0.ONE_THIRD.subtract((-749L));
    Object object0 = new Object();
    bigFraction0.equals(object0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    bigFraction1.TWO.pow(bigInteger0);
    // Undeclared exception!
    try {
        bigFraction0.TWO_QUARTERS.divide(bigInteger0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // denominator must be different from 0
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test06939,"public void test06939() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ONE;
    bigFraction0.getField();
    bigFraction0.FOUR_FIFTHS.subtract(1);
    bigFraction0.bigDecimalValue();
    bigFraction0.longValue();
    // Undeclared exception!
    try {
        bigFraction0.bigDecimalValue((-719), 1043);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test07340,"public void test07340() throws Throwable {
    BigFraction bigFraction0 = new BigFraction((-1464.0718), 3530.3516753794024, 76);
    BigFraction bigFraction1 = bigFraction0.TWO_FIFTHS.pow((long) 76);
    bigFraction1.TWO.pow((long) 76);
    bigFraction0.ONE.divide(76);
    bigFraction0.ZERO.multiply(100L);
    bigFraction1.MINUS_ONE.pow(76);
    bigFraction1.TWO_QUARTERS.getDenominatorAsLong();
    bigFraction0.toString();
    bigFraction0.intValue();
    BigFraction bigFraction2 = bigFraction0.subtract((long) 76);
    BigInteger bigInteger0 = BigInteger.ONE;
    bigFraction0.THREE_FIFTHS.subtract(bigInteger0);
    bigFraction2.compareTo(bigFraction1);
    bigFraction0.getDenominatorAsInt();
    bigFraction0.ZERO.subtract(0);
    // Undeclared exception!
    try {
        BigFraction.getReducedFraction((-1465), 0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // denominator must be different from 0
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test07641,"public void test07641() throws Throwable {
    BigFraction bigFraction0 = BigFraction.TWO_QUARTERS;
    BigFraction.getReducedFraction(0, 0);
    BigInteger bigInteger0 = bigFraction0.getNumerator();
    BigFraction bigFraction1 = bigFraction0.divide(540);
    BigFraction bigFraction2 = bigFraction1.add(bigInteger0);
    bigFraction1.TWO_FIFTHS.pow(bigInteger0);
    bigInteger0.equals(bigFraction1);
    BigFraction bigFraction3 = bigFraction2.divide(540);
    bigFraction2.ONE.doubleValue();
    bigFraction3.hashCode();
    BigFraction bigFraction4 = bigFraction1.THREE_QUARTERS.pow(540);
    bigFraction4.ONE.getNumeratorAsLong();
    BigFraction bigFraction5 = BigFraction.getReducedFraction(1699, 1699);
    bigFraction5.THREE_QUARTERS.longValue();
    BigFraction.getReducedFraction(3, 1911);
    BigFraction bigFraction6 = bigFraction2.add(540);
    bigFraction6.ZERO.floatValue();
    BigFraction bigFraction7 = bigFraction2.pow(0L);
    bigFraction5.subtract(bigInteger0);
    bigFraction0.intValue();
    bigFraction4.getNumerator();
    // Undeclared exception!
    try {
        bigFraction7.divide(0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // denominator must be different from 0
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test07842,"public void test07842() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ONE_HALF;
    MockRandom mockRandom0 = new MockRandom();
    BigInteger bigInteger0 = new BigInteger(794, 794, mockRandom0);
    BigFraction bigFraction1 = bigFraction0.add(bigInteger0);
    bigFraction1.ONE_THIRD.intValue();
    bigFraction0.ONE_FIFTH.doubleValue();
    BigFraction bigFraction2 = bigFraction0.divide(1728L);
    BigFraction bigFraction3 = bigFraction2.multiply(4208363204685324176L);
    BigFraction bigFraction4 = bigFraction3.ONE_HALF.subtract(1728L);
    bigFraction3.ONE_QUARTER.getNumeratorAsLong();
    bigFraction3.ONE_QUARTER.pow(1.0);
    bigFraction4.ONE_THIRD.reciprocal();
    bigFraction1.bigDecimalValue(0, 1);
    bigFraction2.ONE_THIRD.getNumeratorAsInt();
    bigFraction1.getNumeratorAsLong();
    bigFraction2.hashCode();
    // Undeclared exception!
    try {
        bigFraction2.bigDecimalValue((-1468));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test08143,"public void test08143() throws Throwable {
    int int0 = 1075;
    BigFraction bigFraction0 = new BigFraction(1075);
    bigFraction0.getDenominator();
    bigFraction0.TWO.subtract((-4337));
    // Undeclared exception!
    try {
        bigFraction0.subtract((BigFraction) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // fraction
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test08244,"public void test08244() throws Throwable {
    BigFraction bigFraction0 = BigFraction.MINUS_ONE;
    bigFraction0.ONE_QUARTER.longValue();
    // Undeclared exception!
    try {
        bigFraction0.ONE_THIRD.bigDecimalValue();
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // Non-terminating decimal expansion; no exact representable decimal result.
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",1,
project,0,test08345,"public void test08345() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ZERO;
    bigFraction0.TWO_THIRDS.intValue();
    BigInteger bigInteger0 = BigInteger.TEN;
    BigFraction bigFraction1 = bigFraction0.subtract(bigInteger0);
    BigFraction bigFraction2 = BigFraction.getReducedFraction(1, 1);
    BigFraction bigFraction3 = bigFraction1.reduce();
    bigFraction3.THREE_FIFTHS.multiply(bigFraction1);
    BigFraction.getReducedFraction(0, 0);
    BigFraction bigFraction4 = bigFraction0.multiply(bigInteger0);
    BigFraction bigFraction5 = BigFraction.getReducedFraction(0, 5);
    bigFraction5.ONE.getDenominatorAsLong();
    bigFraction2.pow(bigInteger0);
    BigFraction bigFraction6 = new BigFraction(36);
    bigFraction5.THREE_QUARTERS.compareTo(bigFraction6);
    BigFraction bigFraction7 = bigFraction2.reduce();
    BigFraction bigFraction8 = bigFraction1.abs();
    bigFraction8.ONE_FIFTH.floatValue();
    bigFraction0.getNumerator();
    bigFraction5.divide(bigFraction1);
    bigFraction7.toString();
    bigFraction6.pow(1.0);
    // Undeclared exception!
    try {
        bigFraction4.bigDecimalValue(1, (-806));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",1,
project,0,test08646,"public void test08646() throws Throwable {
    BigFraction bigFraction0 = BigFraction.TWO_QUARTERS;
    bigFraction0.FOUR_FIFTHS.bigDecimalValue();
    bigFraction0.ONE_FIFTH.bigDecimalValue(1770, 0);
    BigFraction bigFraction1 = BigFraction.THREE_FIFTHS;
    BigFraction bigFraction2 = bigFraction0.TWO.subtract(bigFraction1);
    bigFraction2.pow((double) 0);
    BigFraction bigFraction3 = bigFraction0.multiply((-1068));
    bigFraction3.ONE_QUARTER.intValue();
    BigFraction bigFraction4 = bigFraction3.multiply((long) 0);
    BigFraction bigFraction5 = bigFraction0.negate();
    bigFraction5.THREE_QUARTERS.multiply(1494L);
    bigFraction5.FOUR_FIFTHS.getDenominatorAsInt();
    int int0 = 1;
    BigFraction bigFraction6 = bigFraction4.TWO_THIRDS.subtract(1);
    bigFraction6.ONE_FIFTH.getField();
    bigFraction6.ONE.reciprocal();
    bigFraction0.ONE_FIFTH.abs();
    bigFraction4.TWO_FIFTHS.add(748);
    bigFraction4.divide((long) (-1068));
    // Undeclared exception!
    try {
        bigFraction4.reciprocal();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // denominator must be different from 0
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test08947,"public void test08947() throws Throwable {
    BigFraction bigFraction0 = null;
    try {
        bigFraction0 = new BigFraction(0.01111111111106311, (-1491.6951094175113), (-1208));
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // illegal state: Unable to convert 0.011 to fraction after -1,208 iterations
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",0,
project,0,test09048,"public void test09048() throws Throwable {
    int int0 = (-1);
    BigFraction bigFraction0 = null;
    try {
        bigFraction0 = new BigFraction(0.0, (-1));
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // illegal state: Overflow trying to convert 0 to fraction (1/9,223,372,036,854,775,807)
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",0,
project,0,test09149,"public void test09149() throws Throwable {
    BigFraction bigFraction0 = BigFraction.getReducedFraction((-1482), 1045);
    bigFraction0.toString();
    BigFraction bigFraction1 = new BigFraction((-1), 1045);
    bigFraction0.ONE.percentageValue();
    BigFraction bigFraction2 = bigFraction1.TWO_QUARTERS.multiply((-496L));
    bigFraction1.THREE_QUARTERS.equals(""-78 / 55"");
    BigFraction bigFraction3 = bigFraction0.add(bigFraction1);
    BigInteger bigInteger0 = bigFraction3.getDenominator();
    BigFraction bigFraction4 = bigFraction2.multiply(bigInteger0);
    bigFraction4.TWO_THIRDS.getNumeratorAsLong();
    BigFraction bigFraction5 = bigFraction1.add(1);
    BigInteger bigInteger1 = BigInteger.ONE;
    bigInteger1.xor(bigInteger0);
    bigFraction0.divide(bigInteger1);
    BigFraction bigFraction6 = bigFraction2.multiply(bigFraction5);
    bigFraction6.TWO_QUARTERS.pow(0.0);
    bigFraction5.TWO.subtract((long) 1);
    bigFraction5.divide(bigFraction0);
    // Undeclared exception!
    try {
        bigFraction5.bigDecimalValue(2472);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test09250,"public void test09250() throws Throwable {
    BigFraction bigFraction0 = null;
    try {
        bigFraction0 = new BigFraction(3.7048805655699485E151, 1);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // illegal state: Overflow trying to convert 37,048,805,655,699,485,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000 to fraction (9,223,372,036,854,775,807/1)
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",0,
project,0,test09351,"public void test09351() throws Throwable {
    byte[] byteArray0 = new byte[7];
    byteArray0[0] = (byte) (-3);
    byteArray0[1] = (byte) 0;
    byteArray0[2] = (byte) 0;
    byteArray0[3] = (byte) (-55);
    byteArray0[4] = (byte) 0;
    byteArray0[5] = (byte) 0;
    byteArray0[6] = (byte) 1;
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    BigFraction bigFraction0 = new BigFraction(bigInteger0);
    // Undeclared exception!
    try {
        bigFraction0.subtract((BigInteger) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // null is not allowed
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test09552,"public void test09552() throws Throwable {
    BigFraction bigFraction0 = BigFraction.TWO;
    bigFraction0.longValue();
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-1);
    byteArray0[1] = (byte) (-83);
    BigInteger bigInteger0 = BigInteger.ONE;
    bigFraction0.TWO_THIRDS.add(bigInteger0);
    bigFraction0.ZERO.pow(0.0);
    byteArray0[2] = (byte) (-1);
    bigFraction0.ONE_QUARTER.floatValue();
    BigInteger bigInteger1 = new BigInteger(byteArray0);
    BigFraction bigFraction1 = bigFraction0.pow(bigInteger1);
    BigInteger bigInteger2 = null;
    BigFraction bigFraction2 = BigFraction.ZERO;
    bigFraction1.ONE.add(bigFraction2);
    try {
        bigFraction0.add((BigInteger) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // null is not allowed
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test09753,"public void test09753() throws Throwable {
    byte[] byteArray0 = new byte[0];
    BigInteger bigInteger0 = new BigInteger(0, byteArray0);
    BigFraction bigFraction0 = new BigFraction(bigInteger0);
    bigFraction0.FOUR_FIFTHS.divide(1);
    bigFraction0.ONE_QUARTER.divide((-2933));
    bigFraction0.bigDecimalValue(0);
    bigFraction0.TWO_QUARTERS.intValue();
    // Undeclared exception!
    try {
        bigFraction0.bigDecimalValue((-1189));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test09954,"public void test09954() throws Throwable {
    BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
    // Undeclared exception!
    try {
        bigFraction0.FOUR_FIFTHS.add((BigFraction) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // fraction
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test10055,"public void test10055() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ONE;
    BigFraction bigFraction0 = new BigFraction(bigInteger0, bigInteger0);
    bigFraction0.ONE_QUARTER.doubleValue();
    bigFraction0.doubleValue();
    BigFraction bigFraction1 = BigFraction.TWO_THIRDS;
    BigFraction bigFraction2 = bigFraction0.add(bigFraction1);
    BigFraction bigFraction3 = bigFraction2.reduce();
    bigFraction0.reduce();
    bigFraction1.MINUS_ONE.reduce();
    bigFraction2.THREE_QUARTERS.pow(1213);
    // Undeclared exception!
    try {
        bigFraction3.bigDecimalValue((-1780), (-1780));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",1,
project,0,test10256,"public void test10256() throws Throwable {
    BigFraction bigFraction0 = new BigFraction((-974L));
    BigFraction bigFraction1 = bigFraction0.TWO_QUARTERS.abs();
    BigFraction bigFraction2 = bigFraction1.ONE_THIRD.pow(1);
    bigFraction0.TWO.hashCode();
    int int0 = (-1154);
    bigFraction1.THREE_QUARTERS.intValue();
    BigFraction bigFraction3 = bigFraction0.divide((-1154));
    bigFraction2.ONE_FIFTH.add((-1154));
    bigFraction3.subtract((-974L));
    BigFraction bigFraction4 = bigFraction3.add(bigFraction0);
    // Undeclared exception!
    try {
        bigFraction4.TWO.pow((BigInteger) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.fraction.BigFraction"", e);
    }
}",1,
project,0,test10357,"public void test10357() throws Throwable {
    BigFraction bigFraction0 = new BigFraction(2147483648L);
    bigFraction0.getNumeratorAsInt();
    BigFraction bigFraction1 = bigFraction0.THREE_FIFTHS.add(bigFraction0);
    BigFraction bigFraction2 = bigFraction1.TWO_QUARTERS.multiply(2147483648L);
    bigFraction0.TWO_THIRDS.getDenominatorAsInt();
    bigFraction0.TWO_FIFTHS.subtract(bigFraction0);
    bigFraction0.percentageValue();
    bigFraction0.intValue();
    bigFraction0.getDenominatorAsInt();
    BigFraction bigFraction3 = bigFraction0.pow((long) 3);
    BigFraction bigFraction4 = bigFraction0.ONE_THIRD.divide(2147483648L);
    BigFraction bigFraction5 = BigFraction.ONE_HALF;
    bigFraction4.ZERO.equals(bigFraction5);
    bigFraction3.TWO_THIRDS.divide(bigFraction0);
    bigFraction3.ONE_QUARTER.intValue();
    BigDecimal bigDecimal0 = new BigDecimal((long) 1);
    bigFraction3.divide((long) Integer.MIN_VALUE);
    BigFraction bigFraction6 = bigFraction2.multiply((-3142L));
    // Undeclared exception!
    try {
        bigFraction6.FOUR_FIFTHS.pow(Integer.MIN_VALUE);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // Negative exponent
        //
        verifyException(""java.math.BigInteger"", e);
    }
}",1,
project,0,test10458,"public void test10458() throws Throwable {
    BigFraction bigFraction0 = new BigFraction(1331);
    bigFraction0.divide((-378));
    // Undeclared exception!
    try {
        bigFraction0.bigDecimalValue(1331, 1331);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test10559,"public void test10559() throws Throwable {
    BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;
    bigFraction0.ZERO.percentageValue();
    bigFraction0.THREE_FIFTHS.floatValue();
    BigInteger bigInteger0 = BigInteger.TEN;
    BigFraction bigFraction1 = bigFraction0.subtract(bigInteger0);
    bigFraction0.toString();
    bigFraction1.longValue();
    BigFraction bigFraction2 = bigFraction1.subtract(bigFraction0);
    int int0 = (-1905);
    bigFraction2.TWO_THIRDS.subtract((-494));
    bigFraction2.ONE_QUARTER.pow((-1905));
    bigFraction1.negate();
    // Undeclared exception!
    try {
        bigFraction1.bigDecimalValue(2926, 2023);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",1,
