/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 19:33:32 GMT 2023
 */
package org.apache.commons.math.optimization.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.math.linear.OpenMapRealMatrix;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealMatrixImpl;
import org.apache.commons.math.linear.RealVector;
import org.apache.commons.math.linear.RealVectorImpl;
import org.apache.commons.math.optimization.GoalType;
import org.apache.commons.math.optimization.RealPointValuePair;
import org.apache.commons.math.optimization.linear.LinearConstraint;
import org.apache.commons.math.optimization.linear.LinearObjectiveFunction;
import org.apache.commons.math.optimization.linear.Relationship;
import org.apache.commons.math.optimization.linear.SimplexTableau;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class SimplexTableau_ESTest extends SimplexTableau_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test280() throws Throwable {
        double[] doubleArray0 = new double[3];
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MINIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
        simplexTableau0.subtractRow((-91), 3, 1.0E-12);
    }

    @Test(timeout = 4000)
    public void test301() throws Throwable {
        Double[] doubleArray0 = new Double[2];
        Double double0 = new Double(1.0);
        doubleArray0[0] = double0;
        doubleArray0[1] = double0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (double) doubleArray0[1]);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MINIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (double) doubleArray0[0]);
        simplexTableau0.getSolution();
    }

    @Test(timeout = 4000)
    public void test322() throws Throwable {
        SimplexTableau.getInvertedCoeffiecientSum((RealVector) null);
    }

    @Test(timeout = 4000)
    public void test333() throws Throwable {
        Double[] doubleArray0 = new Double[0];
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, (-2288.929830948728));
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-2288.929830948728));
        simplexTableau0.getEntry(189, 189);
    }

    @Test(timeout = 4000)
    public void test344() throws Throwable {
        Double[] doubleArray0 = new Double[3];
        Double double0 = new Double(0.0);
        doubleArray0[0] = double0;
        doubleArray0[1] = doubleArray0[0];
        doubleArray0[2] = double0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MINIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-3133.86376687968));
        simplexTableau0.divideRow(1953, 0.0);
    }

    @Test(timeout = 4000)
    public void test355() throws Throwable {
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(2096);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 0.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MINIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 3159.691);
        simplexTableau0.numArtificialVariables = (-2655);
        simplexTableau0.discardArtificialVariables();
    }

    @Test(timeout = 4000)
    public void test366() throws Throwable {
        double[] doubleArray0 = new double[5];
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, 1, 1);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 691.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-12.247700000000123));
        simplexTableau0.numArtificialVariables = 4164;
        simplexTableau0.discardArtificialVariables();
    }

    @Test(timeout = 4000)
    public void test387() throws Throwable {
        double[] doubleArray0 = new double[7];
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 956.6877);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-1080.595));
        linkedList0.offerFirst((LinearConstraint) null);
        simplexTableau0.createTableau(false);
    }

    @Test(timeout = 4000)
    public void test398() throws Throwable {
        double[] doubleArray0 = new double[7];
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MINIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 237.48833006081085);
        simplexTableau0.numArtificialVariables = (-1228);
        simplexTableau0.createTableau(true);
    }

    @Test(timeout = 4000)
    public void test409() throws Throwable {
        double[] doubleArray0 = new double[0];
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 0.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MINIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1026.0403267349266);
        Relationship relationship0 = Relationship.LEQ;
        LinearConstraint linearConstraint0 = new LinearConstraint(realVectorImpl0, 1, relationship0, realVectorImpl0, 0.0);
        linkedList0.add(linearConstraint0);
        linkedList0.add(linearConstraint0);
        simplexTableau0.createTableau(true);
    }

    @Test(timeout = 4000)
    public void test4210() throws Throwable {
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MINIMIZE;
        SimplexTableau simplexTableau0 = null;
        simplexTableau0 = new SimplexTableau((LinearObjectiveFunction) null, linkedList0, goalType0, true, 0.0);
    }

    @Test(timeout = 4000)
    public void test4311() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-3466), (-3466), (-3466));
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MINIMIZE;
        SimplexTableau simplexTableau0 = null;
        simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-3466));
    }

    @Test(timeout = 4000)
    public void test4412() throws Throwable {
        double[] doubleArray0 = new double[2];
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MINIMIZE;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(2420);
        Relationship relationship0 = Relationship.LEQ;
        LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, 0.0, relationship0, openMapRealVector0, 0.0);
        linkedList0.add(linearConstraint0);
        SimplexTableau simplexTableau0 = null;
        simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-4682.0));
    }

    @Test(timeout = 4000)
    public void test4513() throws Throwable {
        double[] doubleArray0 = new double[3];
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 253.165282);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        Relationship relationship0 = Relationship.EQ;
        LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, Double.NEGATIVE_INFINITY);
        linkedList0.add(linearConstraint0);
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
        List<LinearConstraint> list0 = simplexTableau0.getNormalizedConstraints();
        list0.contains(linearConstraint0);
    }

    @Test(timeout = 4000)
    public void test4614() throws Throwable {
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        double[] doubleArray0 = new double[8];
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1241.8646);
        int int0 = simplexTableau0.getNumVariables();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test4715() throws Throwable {
        double[] doubleArray0 = new double[5];
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, 1, 1);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 691.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
        double[][] doubleArray1 = new double[1][2];
        RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl(doubleArray1, true);
        simplexTableau0.tableau = (RealMatrix) realMatrixImpl0;
        SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
        boolean boolean0 = simplexTableau0.equals(simplexTableau1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4816() throws Throwable {
        double[] doubleArray0 = new double[5];
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, 1, 1);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 691.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
        SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, Double.POSITIVE_INFINITY);
        boolean boolean0 = simplexTableau0.equals(simplexTableau1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4917() throws Throwable {
        double[] doubleArray0 = new double[5];
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, 1, 1);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 691.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
        simplexTableau0.numArtificialVariables = 1;
        SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
        boolean boolean0 = simplexTableau0.equals(simplexTableau1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4918() throws Throwable {
        double[] doubleArray0 = new double[5];
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, 1, 1);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 691.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
        simplexTableau0.numArtificialVariables = 1;
        SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
        boolean boolean0 = simplexTableau0.equals(simplexTableau1);
        simplexTableau1.equals((Object) simplexTableau0);
    }

    @Test(timeout = 4000)
    public void test5019() throws Throwable {
        double[] doubleArray0 = new double[5];
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, 1, 1);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 691.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
        SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
        boolean boolean0 = simplexTableau0.equals(simplexTableau1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5120() throws Throwable {
        double[] doubleArray0 = new double[5];
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, 1, 1);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 691.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
        SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
        boolean boolean0 = simplexTableau0.equals(simplexTableau1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5221() throws Throwable {
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(4183);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 5416.317680548);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-1630.19976589));
        boolean boolean0 = simplexTableau0.equals((Object) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5322() throws Throwable {
        double[] doubleArray0 = new double[5];
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, 1, 1);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, (-12.247700000000123));
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
        boolean boolean0 = simplexTableau0.equals(simplexTableau0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5423() throws Throwable {
        double[] doubleArray0 = new double[5];
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, 1, 1);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 691.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
        Relationship relationship0 = Relationship.LEQ;
        LinearConstraint linearConstraint0 = new LinearConstraint(realVectorImpl0, relationship0, 2029.8031074786102);
        linkedList0.add(linearConstraint0);
        SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
        boolean boolean0 = simplexTableau0.equals(simplexTableau1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5524() throws Throwable {
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(2096);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 0.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MINIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 3159.691);
        simplexTableau0.divideRow(0, (-2892.48812));
        simplexTableau0.getNumVariables();
        assertEquals(0, simplexTableau0.getNumVariables());
    }

    @Test(timeout = 4000)
    public void test5625() throws Throwable {
        double[] doubleArray0 = new double[8];
        doubleArray0[2] = 1.0;
        doubleArray0[3] = (-1316.0582);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MINIMIZE;
        Relationship relationship0 = Relationship.GEQ;
        LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 1563.0709777);
        linkedList0.add(linearConstraint0);
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
        RealPointValuePair realPointValuePair0 = simplexTableau0.getSolution();
        realPointValuePair0.getValue();
    }

    @Test(timeout = 4000)
    public void test5726() throws Throwable {
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(2096);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 0.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MINIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 3159.691);
        simplexTableau0.discardArtificialVariables();
        simplexTableau0.getNumVariables();
        assertEquals(0, simplexTableau0.getNumVariables());
    }

    @Test(timeout = 4000)
    public void test5827() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (-0.06985575287115274);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-0.06985575287115274));
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        Relationship relationship0 = Relationship.EQ;
        LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, (-3842.09919628));
        linkedList0.add(linearConstraint0);
        linkedList0.add(linearConstraint0);
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-0.06985575287115274));
        RealPointValuePair realPointValuePair0 = simplexTableau0.getSolution();
        realPointValuePair0.getValue();
    }

    @Test(timeout = 4000)
    public void test5928() throws Throwable {
        Double[] doubleArray0 = new Double[2];
        Double double0 = new Double(1.0);
        doubleArray0[0] = double0;
        doubleArray0[1] = double0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (double) doubleArray0[1]);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MINIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (double) doubleArray0[0]);
        int int0 = simplexTableau0.getNumArtificialVariables();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test6029() throws Throwable {
        double[] doubleArray0 = new double[5];
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, 1, 1);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 691.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
        int int0 = simplexTableau0.getNumSlackVariables();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test6130() throws Throwable {
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(2096);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 0.0);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MINIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 3159.691);
        int int0 = simplexTableau0.getNumDecisionVariables();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test6231() throws Throwable {
        double[] doubleArray0 = new double[5];
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-0.06985575287115274));
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-0.06985575287115274));
        int int0 = simplexTableau0.getRhsOffset();
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test6332() throws Throwable {
        double[] doubleArray0 = new double[5];
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-0.06985575287115274));
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        Relationship relationship0 = Relationship.EQ;
        LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, (-3842.09919628));
        linkedList0.add(linearConstraint0);
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-0.06985575287115274));
        simplexTableau0.discardArtificialVariables();
        simplexTableau0.getNumVariables();
        assertEquals(0, simplexTableau0.getNumVariables());
    }

    @Test(timeout = 4000)
    public void test6433() throws Throwable {
        double[] doubleArray0 = new double[5];
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-0.06985575287115274));
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-0.06985575287115274));
        simplexTableau0.setEntry(2, (-16), 0.0);
    }

    @Test(timeout = 4000)
    public void test6534() throws Throwable {
        RealVectorImpl realVectorImpl0 = new RealVectorImpl(4183);
        LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 5416.317680548);
        LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
        GoalType goalType0 = GoalType.MAXIMIZE;
        SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-1630.19976589));
        double[][] doubleArray0 = simplexTableau0.getData();
    }
}
