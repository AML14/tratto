project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test00,"public void test00() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = 2.6197411946856397E-8;
    double[][] doubleArray1 = new double[1][1];
    doubleArray1[0] = doubleArray0;
    MultivariateNormalDistribution multivariateNormalDistribution0 = new MultivariateNormalDistribution(doubleArray0, doubleArray1);
    double double0 = multivariateNormalDistribution0.density(doubleArray0);
    assertArrayEquals(new double[] { 2.6197411946856397E-8 }, doubleArray0, 0.01);
}",1,
project,0,test01,"public void test01() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = 2.6197411946856397E-8;
    double[][] doubleArray1 = new double[1][1];
    doubleArray1[0] = doubleArray0;
    MultivariateNormalDistribution multivariateNormalDistribution0 = new MultivariateNormalDistribution(doubleArray0, doubleArray1);
    double double0 = multivariateNormalDistribution0.density(doubleArray0);
    assertEquals(6178.325789220325, double0, 0.01);
}",1,
project,0,test12,"public void test12() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = 2.6197411946856397E-8;
    double[][] doubleArray1 = new double[1][1];
    doubleArray1[0] = doubleArray0;
    MultivariateNormalDistribution multivariateNormalDistribution0 = new MultivariateNormalDistribution(doubleArray0, doubleArray1);
    RealMatrix realMatrix0 = multivariateNormalDistribution0.getCovariances();
    assertEquals(1, realMatrix0.getColumnDimension());
}",0,"assertEquals(1, realMatrix0.getColumnDimension())"
project,0,test23,"public void test23() throws Throwable {
    double[][] doubleArray0 = new double[6][7];
    MultivariateNormalDistribution multivariateNormalDistribution0 = null;
    try {
        multivariateNormalDistribution0 = new MultivariateNormalDistribution(doubleArray0[0], doubleArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // 6 != 7
        //
        verifyException(""org.apache.commons.math3.distribution.MultivariateNormalDistribution"", e);
    }
}",0,
project,0,test34,"public void test34() throws Throwable {
    double[][] doubleArray0 = new double[1][7];
    double[] doubleArray1 = new double[1];
    MultivariateNormalDistribution multivariateNormalDistribution0 = null;
    try {
        multivariateNormalDistribution0 = new MultivariateNormalDistribution(doubleArray1, doubleArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // 7 != 1
        //
        verifyException(""org.apache.commons.math3.distribution.MultivariateNormalDistribution"", e);
    }
}",0,
project,0,test45,"public void test45() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = (-2073.87779897508);
    double[][] doubleArray1 = new double[1][9];
    doubleArray1[0] = doubleArray0;
    MultivariateNormalDistribution multivariateNormalDistribution0 = null;
    try {
        multivariateNormalDistribution0 = new MultivariateNormalDistribution(doubleArray0, doubleArray1);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // -2,073.878 is smaller than, or equal to, the minimum (0): not positive definite matrix: value -2,073.878 at index 0
        //
        verifyException(""org.apache.commons.math3.distribution.MultivariateNormalDistribution"", e);
    }
}",0,
project,0,test56,"public void test56() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = 2.6197411946856397E-8;
    double[][] doubleArray1 = new double[1][1];
    doubleArray1[0] = doubleArray0;
    MultivariateNormalDistribution multivariateNormalDistribution0 = new MultivariateNormalDistribution(doubleArray0, doubleArray1);
    double[] doubleArray2 = new double[2];
    try {
        multivariateNormalDistribution0.density(doubleArray2);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // 2 != 1
        //
        verifyException(""org.apache.commons.math3.distribution.MultivariateNormalDistribution"", e);
    }
}",1,
project,0,test67,"public void test67() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = 2.6197411946856397E-8;
    double[][] doubleArray1 = new double[1][1];
    doubleArray1[0] = doubleArray0;
    MultivariateNormalDistribution multivariateNormalDistribution0 = new MultivariateNormalDistribution(doubleArray0, doubleArray1);
    double[] doubleArray2 = multivariateNormalDistribution0.getStandardDeviations();
    assertArrayEquals(new double[] { 1.618561458420915E-4 }, doubleArray2, 0.01);
}",0,
project,0,test78,"public void test78() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = 2.6197411946856397E-8;
    double[][] doubleArray1 = new double[1][1];
    doubleArray1[0] = doubleArray0;
    MultivariateNormalDistribution multivariateNormalDistribution0 = new MultivariateNormalDistribution(doubleArray0, doubleArray1);
    double[] doubleArray2 = multivariateNormalDistribution0.sample();
    assertArrayEquals(new double[] { 1.277162837685977E-4 }, doubleArray2, 0.01);
}",0,
