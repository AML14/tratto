project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    int int0 = MathUtils.hash((-841.431583755455));
    assertEquals(581259811, int0);
}",0,"assertEquals(1, int0)"
project,0,test0011,"public void test0011() throws Throwable {
    double[] doubleArray0 = new double[4];
    int int0 = MathUtils.hash(doubleArray0);
    assertEquals(923521, int0);
}",0,"assertEquals(0, int0)"
project,0,test0022,"public void test0022() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.lcm(307, (-2147483646));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: mul
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test0033,"public void test0033() throws Throwable {
    float float0 = MathUtils.round((float) 3872, 3872, 6);
    assertEquals(Float.NaN, float0, 0.01F);
}",0,
project,0,test0044,"public void test0044() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.addAndCheck((-9223372036854775808L), (-9223372036854775808L));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: add
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test0055,"public void test0055() throws Throwable {
    double double0 = MathUtils.sinh(2.2250738585072014E-308);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test0066,"public void test0066() throws Throwable {
    double double0 = MathUtils.normalizeAngle(3180.6304183601, 3180.6304183601);
    assertEquals(3180.6304183601, double0, 0.01);
}",0,
project,0,test0077,"public void test0077() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficient(473, 363);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // result too large to represent in a long integer
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test0088,"public void test0088() throws Throwable {
    double double0 = MathUtils.cosh(10.0);
    assertEquals(11013.232920103324, double0, 0.01);
}",0,
project,0,test0099,"public void test0099() throws Throwable {
    double double0 = MathUtils.log(3858, 3858);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test01010,"public void test01010() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.addAndCheck((-2147483645), (-2147483645));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: add
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test01111,"public void test01111() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.addAndCheck(2097152006, 2097152006);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: add
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test01212,"public void test01212() throws Throwable {
    int int0 = MathUtils.addAndCheck(21, 21);
    assertEquals(42, int0);
}",1,
project,0,test01313,"public void test01313() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.subAndCheck(9223372036854774385L, (long) (-3866));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: subtract
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test01414,"public void test01414() throws Throwable {
    long long0 = MathUtils.subAndCheck((long) 2546, (long) 2546);
    assertEquals(0L, long0);
}",1,
project,0,test01515,"public void test01515() throws Throwable {
    long long0 = MathUtils.addAndCheck((-1L), (-1L));
    assertEquals((-2L), long0);
}",0,"assertEquals(1, long0)"
project,0,test01616,"public void test01616() throws Throwable {
    long long0 = MathUtils.addAndCheck((long) 25, (long) 25);
    assertEquals(50L, long0);
}",0,"assertEquals(0, long0)"
project,0,test01717,"public void test01717() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficient((short) (-24), 4);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= k for binomial coefficient (n,k)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test01818,"public void test01818() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficient((-2145267461), (-2145267461));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for binomial coefficient (n,k)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test01919,"public void test01919() throws Throwable {
    long long0 = MathUtils.binomialCoefficient(7, 7);
    assertEquals(1L, long0);
}",1,
project,0,test02020,"public void test02020() throws Throwable {
    long long0 = MathUtils.binomialCoefficient(13, (byte) 0);
    assertEquals(1L, long0);
}",1,
project,0,test02121,"public void test02121() throws Throwable {
    long long0 = MathUtils.binomialCoefficient(21, 1);
    assertEquals(21L, long0);
}",1,
project,0,test02222,"public void test02222() throws Throwable {
    long long0 = MathUtils.binomialCoefficient(8, 7);
    assertEquals(8L, long0);
}",1,
project,0,test02323,"public void test02323() throws Throwable {
    long long0 = MathUtils.binomialCoefficient(25, 21);
    assertEquals(12650L, long0);
}",1,
project,0,test02424,"public void test02424() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficientDouble(16, 25);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= k for binomial coefficient (n,k)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test02525,"public void test02525() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficientLog((-747), (-747));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for binomial coefficient (n,k)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test02626,"public void test02626() throws Throwable {
    double double0 = MathUtils.binomialCoefficientDouble(25, 25);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test02727,"public void test02727() throws Throwable {
    double double0 = MathUtils.binomialCoefficientLog(907, 0);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test02828,"public void test02828() throws Throwable {
    double double0 = MathUtils.binomialCoefficientLog(2062, 1);
    assertEquals(7.631431664576906, double0, 0.01);
}",1,
project,0,test02929,"public void test02929() throws Throwable {
    double double0 = MathUtils.binomialCoefficientLog(13, 12);
    assertEquals(2.5649493574615367, double0, 0.01);
}",1,
project,0,test03030,"public void test03030() throws Throwable {
    double[] doubleArray0 = new double[8];
    doubleArray0[2] = (double) Float.NaN;
    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test03131,"public void test03131() throws Throwable {
    boolean boolean0 = MathUtils.equals(Double.NaN, (double) 0L);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test03232,"public void test03232() throws Throwable {
    double[] doubleArray0 = new double[1];
    boolean boolean0 = MathUtils.equals((double[]) null, doubleArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test03333,"public void test03333() throws Throwable {
    double[] doubleArray0 = new double[6];
    boolean boolean0 = MathUtils.equals(doubleArray0, (double[]) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test03434,"public void test03434() throws Throwable {
    boolean boolean0 = MathUtils.equals((double[]) null, (double[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test03535,"public void test03535() throws Throwable {
    double[] doubleArray0 = new double[3];
    double[] doubleArray1 = new double[6];
    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test03636,"public void test03636() throws Throwable {
    double[] doubleArray0 = new double[6];
    double[] doubleArray1 = new double[6];
    doubleArray1[5] = Double.NEGATIVE_INFINITY;
    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test03737,"public void test03737() throws Throwable {
    double double0 = MathUtils.factorialDouble(16);
    assertEquals(2.0922789888E13, double0, 0.01);
}",1,
project,0,test03838,"public void test03838() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.factorial((-3564));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for n!
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test03939,"public void test03939() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.factorial(1108);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // factorial value is too large to fit in a long
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test04040,"public void test04040() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.factorialDouble((-769));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for n!
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test04141,"public void test04141() throws Throwable {
    double double0 = MathUtils.factorialDouble(3872);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",1,
project,0,test04242,"public void test04242() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.factorialLog((-3));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n > 0 for n!
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test04343,"public void test04343() throws Throwable {
    double double0 = MathUtils.factorialLog(16);
    assertEquals(30.671860106080672, double0, 0.01);
}",1,
project,0,test04444,"public void test04444() throws Throwable {
    int int0 = MathUtils.gcd(0, 0);
    assertEquals(0, int0);
}",0,
project,0,test04545,"public void test04545() throws Throwable {
    int int0 = MathUtils.gcd((-910), 0);
    assertEquals(910, int0);
}",0,
project,0,test04646,"public void test04646() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.gcd(Integer.MIN_VALUE, Integer.MIN_VALUE);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: gcd is 2^31
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test04747,"public void test04747() throws Throwable {
    int int0 = MathUtils.gcd(3872, 3872);
    assertEquals(3872, int0);
}",0,
project,0,test04848,"public void test04848() throws Throwable {
    int int0 = MathUtils.gcd((-826), 1117);
    assertEquals(1, int0);
}",0,
project,0,test04949,"public void test04949() throws Throwable {
    byte byte0 = MathUtils.indicator((byte) (-78));
    assertEquals((byte) (-1), byte0);
}",0,assertNotNull(byte0)
project,0,test05050,"public void test05050() throws Throwable {
    byte byte0 = MathUtils.indicator((byte) 0);
    assertEquals((byte) 1, byte0);
}",0,assertNotNull(byte0)
project,0,test05151,"public void test05151() throws Throwable {
    double double0 = MathUtils.indicator((double) (-3281));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test05252,"public void test05252() throws Throwable {
    double double0 = MathUtils.indicator(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test05353,"public void test05353() throws Throwable {
    double double0 = MathUtils.indicator((double) 0);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test05454,"public void test05454() throws Throwable {
    float float0 = MathUtils.indicator(Float.NaN);
    assertEquals(Float.NaN, float0, 0.01F);
}",0,
project,0,test05555,"public void test05555() throws Throwable {
    int int0 = MathUtils.indicator((-384));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test05656,"public void test05656() throws Throwable {
    int int0 = MathUtils.indicator(3872);
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test05757,"public void test05757() throws Throwable {
    long long0 = MathUtils.indicator((-8L));
    assertEquals((-1L), long0);
}",0,"assertEquals(1, long0)"
project,0,test05858,"public void test05858() throws Throwable {
    long long0 = MathUtils.indicator(1267L);
    assertEquals(1L, long0);
}",0,"assertEquals(1, long0)"
project,0,test05959,"public void test05959() throws Throwable {
    short short0 = MathUtils.indicator((short) (-565));
    assertEquals((short) (-1), short0);
}",0,assertNotNull(short0)
project,0,test06060,"public void test06060() throws Throwable {
    short short0 = MathUtils.indicator((short) 23);
    assertEquals((short) 1, short0);
}",0,assertNotNull(short0)
project,0,test06161,"public void test06161() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.mulAndCheck((-2147483619), (-2147483619));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: mul
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test06262,"public void test06262() throws Throwable {
    int int0 = MathUtils.lcm((-1204), (-1204));
    assertEquals(1204, int0);
}",1,
project,0,test06363,"public void test06363() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.mulAndCheck((-9223372036854775808L), (-9223372036854775808L));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: multiply
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test06464,"public void test06464() throws Throwable {
    long long0 = MathUtils.mulAndCheck((long) 0, (-1L));
    assertEquals(0L, long0);
}",0,
project,0,test06565,"public void test06565() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.mulAndCheck(9223372036854775803L, 9223372036854775803L);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: multiply
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test06666,"public void test06666() throws Throwable {
    long long0 = MathUtils.mulAndCheck((-1571L), (-1571L));
    assertEquals(2468041L, long0);
}",0,
project,0,test06767,"public void test06767() throws Throwable {
    long long0 = MathUtils.mulAndCheck((long) 21, (-1L));
    assertEquals((-21L), long0);
}",0,
project,0,test06868,"public void test06868() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.mulAndCheck(22L, (-9223372036854775806L));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: multiply
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test06969,"public void test06969() throws Throwable {
    long long0 = MathUtils.mulAndCheck(0L, 0L);
    assertEquals(0L, long0);
}",1,
project,0,test07070,"public void test07070() throws Throwable {
    long long0 = MathUtils.mulAndCheck(1241L, 1241L);
    assertEquals(1540081L, long0);
}",0,
project,0,test07171,"public void test07171() throws Throwable {
    float float0 = MathUtils.round(0.0F, 3073);
    assertEquals(Float.NaN, float0, 0.01F);
}",1,
project,0,test07272,"public void test07272() throws Throwable {
    float float0 = MathUtils.round((-841.53F), 3073, 2);
    assertEquals(Float.NaN, float0, 0.01F);
}",0,
project,0,test07373,"public void test07373() throws Throwable {
    double double0 = MathUtils.nextAfter(1, (-2100));
    assertEquals(0.9999999999999999, double0, 0.01);
}",1,
project,0,test07474,"public void test07474() throws Throwable {
    double double0 = MathUtils.nextAfter(0, (-121.66024));
    assertEquals((-4.9E-324), double0, 0.01);
}",0,
project,0,test07575,"public void test07575() throws Throwable {
    double double0 = MathUtils.nextAfter(0.9999999999999999, 1);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test07676,"public void test07676() throws Throwable {
    float float0 = MathUtils.round((float) 5, (-2), 5);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test07777,"public void test07777() throws Throwable {
    double double0 = MathUtils.scalb(0, 0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test07878,"public void test07878() throws Throwable {
    double double0 = MathUtils.scalb(Float.NaN, 1732);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test07979,"public void test07979() throws Throwable {
    double double0 = MathUtils.scalb(Double.POSITIVE_INFINITY, 15);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test08080,"public void test08080() throws Throwable {
    double double0 = MathUtils.scalb((-17), (-17));
    assertEquals((-1.2969970703125E-4), double0, 0.01);
}",0,
project,0,test08181,"public void test08181() throws Throwable {
    double double0 = MathUtils.round(Double.NaN, 0, 0);
    assertEquals(Double.NaN, double0, 0.01);
}",1,
project,0,test08282,"public void test08282() throws Throwable {
    double double0 = MathUtils.round(Double.NEGATIVE_INFINITY, (int) (byte) 9);
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",1,
project,0,test08383,"public void test08383() throws Throwable {
    float float0 = MathUtils.round((float) 0, 0, 0);
    assertEquals(1.0F, float0, 0.01F);
}",0,
project,0,test08484,"public void test08484() throws Throwable {
    float float0 = MathUtils.round((float) 1, 1, 1);
    assertEquals(0.9F, float0, 0.01F);
}",0,
project,0,test08585,"public void test08585() throws Throwable {
    float float0 = MathUtils.round((-1852.62F), 3, 3);
    assertEquals((-1852.621F), float0, 0.01F);
}",0,
project,0,test08686,"public void test08686() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.round(3643.34F, 1, 7);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // Inexact result from rounding
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test08787,"public void test08787() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.round((float) 13, 13, 13);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding method.
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test08888,"public void test08888() throws Throwable {
    float float0 = MathUtils.round((float) 2, 2, 2);
    assertEquals(2.01F, float0, 0.01F);
}",0,
project,0,test08989,"public void test08989() throws Throwable {
    float float0 = MathUtils.round((float) 3, 3, 3);
    assertEquals(2.999F, float0, 0.01F);
}",0,
project,0,test09090,"public void test09090() throws Throwable {
    float float0 = MathUtils.round((float) 5, 5, 5);
    assertEquals(5.0F, float0, 0.01F);
}",0,
project,0,test09191,"public void test09191() throws Throwable {
    float float0 = MathUtils.round((-581.498F), (-2), 6);
    assertEquals((-600.0F), float0, 0.01F);
}",0,
project,0,test09292,"public void test09292() throws Throwable {
    float float0 = MathUtils.round((float) 6, 6, 6);
    assertEquals(6.0F, float0, 0.01F);
}",0,
project,0,test09393,"public void test09393() throws Throwable {
    float float0 = MathUtils.round(0.0F, 3872, 6);
    assertEquals(Float.NaN, float0, 0.01F);
}",0,
project,0,test09494,"public void test09494() throws Throwable {
    float float0 = MathUtils.round((float) 7, (-1));
    assertEquals(10.0F, float0, 0.01F);
}",1,
project,0,test09595,"public void test09595() throws Throwable {
    float float0 = MathUtils.round((float) 7, 7, 7);
    assertEquals(7.0F, float0, 0.01F);
}",0,
project,0,test09696,"public void test09696() throws Throwable {
    byte byte0 = MathUtils.sign((byte) (-87));
    assertEquals((byte) (-1), byte0);
}",0,assertNotNull(byte0)
project,0,test09797,"public void test09797() throws Throwable {
    byte byte0 = MathUtils.sign((byte) 0);
    assertEquals((byte) 0, byte0);
}",0,
project,0,test09898,"public void test09898() throws Throwable {
    byte byte0 = MathUtils.sign((byte) 5);
    assertEquals((byte) 1, byte0);
}",0,assertNotNull(byte0)
project,0,test09999,"public void test09999() throws Throwable {
    double double0 = MathUtils.sign((double) (-1736L));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test100100,"public void test100100() throws Throwable {
    double double0 = MathUtils.sign(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test101101,"public void test101101() throws Throwable {
    double double0 = MathUtils.sign(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test102102,"public void test102102() throws Throwable {
    double double0 = MathUtils.sign(0.5);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test103103,"public void test103103() throws Throwable {
    float float0 = MathUtils.sign(0.0F);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test104104,"public void test104104() throws Throwable {
    float float0 = MathUtils.sign(Float.NaN);
    assertEquals(Float.NaN, float0, 0.01F);
}",1,
project,0,test105105,"public void test105105() throws Throwable {
    float float0 = MathUtils.sign((-0.7871165F));
    assertEquals((-1.0F), float0, 0.01F);
}",0,
project,0,test106106,"public void test106106() throws Throwable {
    float float0 = MathUtils.sign((float) 3073);
    assertEquals(1.0F, float0, 0.01F);
}",0,
project,0,test107107,"public void test107107() throws Throwable {
    int int0 = MathUtils.sign((-388));
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test108108,"public void test108108() throws Throwable {
    int int0 = MathUtils.sign(0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test109109,"public void test109109() throws Throwable {
    int int0 = MathUtils.sign(3872);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test110110,"public void test110110() throws Throwable {
    long long0 = MathUtils.sign((-8L));
    assertEquals((-1L), long0);
}",0,"assertEquals(1, long0)"
project,0,test111111,"public void test111111() throws Throwable {
    long long0 = MathUtils.sign(0L);
    assertEquals(0L, long0);
}",0,"assertEquals(1, long0)"
project,0,test112112,"public void test112112() throws Throwable {
    long long0 = MathUtils.sign(7L);
    assertEquals(1L, long0);
}",0,"assertEquals(1, long0)"
project,0,test113113,"public void test113113() throws Throwable {
    short short0 = MathUtils.sign((short) (-615));
    assertEquals((short) (-1), short0);
}",0,
project,0,test114114,"public void test114114() throws Throwable {
    short short0 = MathUtils.sign((short) 0);
    assertEquals((short) 0, short0);
}",0,
project,0,test115115,"public void test115115() throws Throwable {
    short short0 = MathUtils.sign((short) 1434);
    assertEquals((short) 1, short0);
}",0,
project,0,test116116,"public void test116116() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.subAndCheck((-2147483645), 2097152000);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: subtract
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test117117,"public void test117117() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.subAndCheck(1762, (-2147483646));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: subtract
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test118118,"public void test118118() throws Throwable {
    int int0 = MathUtils.subAndCheck(7, 7);
    assertEquals(0, int0);
}",1,
project,0,test119119,"public void test119119() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.subAndCheck(1L, (-9223372036854775808L));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: subtract
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test120120,"public void test120120() throws Throwable {
    long long0 = MathUtils.subAndCheck((-9223372036854775808L), (-9223372036854775808L));
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
