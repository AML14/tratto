project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getMean();
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test001,"public void test001() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getMean();
    assertEquals(1.0, normalDistributionImpl0.getStandardDeviation(), 0.01);
}",0,
project,0,test012,"public void test012() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl(1038.4, 1038.4);
    double double0 = normalDistributionImpl0.getMean();
    assertEquals(1038.4, double0, 0.01);
}",0,
project,0,test013,"public void test013() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl(1038.4, 1038.4);
    double double0 = normalDistributionImpl0.getMean();
    assertEquals(1038.4, normalDistributionImpl0.getStandardDeviation(), 0.01);
}",0,
project,0,test024,"public void test024() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getInitialDomain(Double.NaN);
    assertEquals(1.0, normalDistributionImpl0.getStandardDeviation(), 0.01);
}",0,
project,0,test025,"public void test025() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getInitialDomain(Double.NaN);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test036,"public void test036() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl(3.6899182659531625E-6, 3.6899182659531625E-6);
    double double0 = normalDistributionImpl0.getDomainUpperBound(2.0);
    assertEquals(3.6899182659531625E-6, normalDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test037,"public void test037() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl(3.6899182659531625E-6, 3.6899182659531625E-6);
    double double0 = normalDistributionImpl0.getDomainUpperBound(2.0);
    assertEquals(1.7976931348623157E308, double0, 0.01);
}",0,
project,0,test038,"public void test038() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl(3.6899182659531625E-6, 3.6899182659531625E-6);
    double double0 = normalDistributionImpl0.getDomainUpperBound(2.0);
    assertEquals(3.6899182659531625E-6, normalDistributionImpl0.getStandardDeviation(), 0.01);
}",0,
project,0,test049,"public void test049() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl(1566.870848947, Double.NaN);
    normalDistributionImpl0.setMean((-476.980596301455));
    double double0 = normalDistributionImpl0.getDomainUpperBound(0.0);
    assertEquals((-476.980596301455), normalDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test0410,"public void test0410() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl(1566.870848947, Double.NaN);
    normalDistributionImpl0.setMean((-476.980596301455));
    double double0 = normalDistributionImpl0.getDomainUpperBound(0.0);
    assertEquals((-476.980596301455), double0, 0.01);
}",0,
project,0,test0511,"public void test0511() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getDomainLowerBound(721.84913012);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test0512,"public void test0512() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getDomainLowerBound(721.84913012);
    assertEquals(1.0, normalDistributionImpl0.getStandardDeviation(), 0.01);
}",0,
project,0,test0613,"public void test0613() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl((-1211.19838853756), 743.307826060422);
    normalDistributionImpl0.setMean(1.7976931348623157E308);
    double double0 = normalDistributionImpl0.getDomainLowerBound(743.307826060422);
    assertEquals(1.7976931348623157E308, normalDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test0614,"public void test0614() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl((-1211.19838853756), 743.307826060422);
    normalDistributionImpl0.setMean(1.7976931348623157E308);
    double double0 = normalDistributionImpl0.getDomainLowerBound(743.307826060422);
    assertEquals(1.7976931348623157E308, double0, 0.01);
}",0,
project,0,test0715,"public void test0715() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    normalDistributionImpl0.setStandardDeviation(57.15623566586292);
    double double0 = normalDistributionImpl0.cumulativeProbability((-1218.38709386323));
    assertEquals(57.15623566586292, normalDistributionImpl0.getStandardDeviation(), 0.01);
}",0,
project,0,test0716,"public void test0716() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    normalDistributionImpl0.setStandardDeviation(57.15623566586292);
    double double0 = normalDistributionImpl0.cumulativeProbability((-1218.38709386323));
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test0817,"public void test0817() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.cumulativeProbability(0.0);
    assertEquals(0.0, normalDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test0818,"public void test0818() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.cumulativeProbability(0.0);
    assertEquals(1.0, normalDistributionImpl0.getStandardDeviation(), 0.01);
}",0,
project,0,test0819,"public void test0819() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.cumulativeProbability(0.0);
    assertEquals(0.5, double0, 0.01);
}",0,
project,0,test0920,"public void test0920() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.cumulativeProbability((-36.04));
    assertEquals((-4.141131881851834E-14), double0, 0.01);
}",0,
project,0,test0921,"public void test0921() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.cumulativeProbability((-36.04));
    assertEquals(0.0, normalDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test1122,"public void test1122() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl(Double.NaN, Double.NaN);
    try {
        normalDistributionImpl0.inverseCumulativeProbability(Double.NaN);
        fail(""Expecting exception: Exception"");
    } catch (Exception e) {
        //
        // Maximal number of iterations (100) exceeded
        //
        verifyException(""org.apache.commons.math.analysis.BrentSolver"", e);
    }
}",0,
project,0,test1223,"public void test1223() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    // Undeclared exception!
    try {
        normalDistributionImpl0.inverseCumulativeProbability(1693.465677);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // p must be between 0.0 and 1.0, inclusive.
        //
        verifyException(""org.apache.commons.math.distribution.AbstractContinuousDistribution"", e);
    }
}",0,
project,0,test1424,"public void test1424() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = null;
    try {
        normalDistributionImpl0 = new NormalDistributionImpl((-2289.0505632029985), (-36.04));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Standard deviation must be positive.
        //
        verifyException(""org.apache.commons.math.distribution.NormalDistributionImpl"", e);
    }
}",0,
project,0,test1525,"public void test1525() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getStandardDeviation();
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test1526,"public void test1526() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getStandardDeviation();
    assertEquals(0.0, normalDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test1627,"public void test1627() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl((-1.0), Double.NaN);
    double double0 = normalDistributionImpl0.getMean();
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test1728,"public void test1728() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getInitialDomain(1.0);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test1729,"public void test1729() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getInitialDomain(1.0);
    assertEquals(0.0, normalDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test1830,"public void test1830() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getDomainLowerBound((-290.6555688));
    assertEquals(1.0, normalDistributionImpl0.getStandardDeviation(), 0.01);
}",0,
project,0,test1831,"public void test1831() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getDomainLowerBound((-290.6555688));
    assertEquals((-1.7976931348623157E308), double0, 0.01);
}",0,
project,0,test1832,"public void test1832() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getDomainLowerBound((-290.6555688));
    assertEquals(0.0, normalDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test1933,"public void test1933() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.inverseCumulativeProbability(1.0);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test1934,"public void test1934() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.inverseCumulativeProbability(1.0);
    assertEquals(0.0, normalDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test1935,"public void test1935() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.inverseCumulativeProbability(1.0);
    assertEquals(1.0, normalDistributionImpl0.getStandardDeviation(), 0.01);
}",0,
project,0,test2036,"public void test2036() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.inverseCumulativeProbability(0.0);
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test2037,"public void test2037() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.inverseCumulativeProbability(0.0);
    assertEquals(0.0, normalDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test2038,"public void test2038() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.inverseCumulativeProbability(0.0);
    assertEquals(1.0, normalDistributionImpl0.getStandardDeviation(), 0.01);
}",0,
project,0,test2139,"public void test2139() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.inverseCumulativeProbability(0.5);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test2140,"public void test2140() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.inverseCumulativeProbability(0.5);
    assertEquals(1.0, normalDistributionImpl0.getStandardDeviation(), 0.01);
}",0,
project,0,test2241,"public void test2241() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    // Undeclared exception!
    try {
        normalDistributionImpl0.setStandardDeviation(0.0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Standard deviation must be positive.
        //
        verifyException(""org.apache.commons.math.distribution.NormalDistributionImpl"", e);
    }
}",1,
project,0,test2342,"public void test2342() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getInitialDomain((-1878.384842));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test2343,"public void test2343() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getInitialDomain((-1878.384842));
    assertEquals(0.0, normalDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test2444,"public void test2444() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getDomainUpperBound((-1569.30441100995));
    assertEquals(1.0, normalDistributionImpl0.getStandardDeviation(), 0.01);
}",0,
project,0,test2445,"public void test2445() throws Throwable {
    NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
    double double0 = normalDistributionImpl0.getDomainUpperBound((-1569.30441100995));
    assertEquals(0.0, double0, 0.01);
}",0,
