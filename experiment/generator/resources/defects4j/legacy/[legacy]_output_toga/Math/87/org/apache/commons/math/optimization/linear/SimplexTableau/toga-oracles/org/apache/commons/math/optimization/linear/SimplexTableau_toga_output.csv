project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test020,"public void test020() throws Throwable {
    Double[] doubleArray0 = new Double[3];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    doubleArray0[1] = double0;
    doubleArray0[2] = doubleArray0[0];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-3133.86376687968));
    simplexTableau0.numArtificialVariables = 10;
    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (double) doubleArray0[0]);
    boolean boolean0 = simplexTableau0.equals(simplexTableau1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test031,"public void test031() throws Throwable {
    Double[] doubleArray0 = new Double[3];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    doubleArray0[1] = doubleArray0[0];
    doubleArray0[2] = double0;
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    double[] doubleArray1 = new double[5];
    Relationship relationship0 = Relationship.LEQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray1, relationship0, 269.7);
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-3133.86376687968));
    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (double) doubleArray0[0]);
    boolean boolean0 = simplexTableau0.equals(simplexTableau1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test042,"public void test042() throws Throwable {
    double[] doubleArray0 = new double[2];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1175.2787));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    // Undeclared exception!
    try {
        simplexTableau0.setEntry(2383, 0, 0.0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // no entry at indices (2,383, 0) in a 1x4 matrix
        //
        verifyException(""org.apache.commons.math.linear.RealMatrixImpl"", e);
    }
}",0,
project,0,test053,"public void test053() throws Throwable {
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(2096);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 3159.691);
    simplexTableau0.divideRow(0, (-2892.48812));
    assertEquals(2096, simplexTableau0.getNumVariables());
}",0,"assertEquals(0, simplexTableau0.getNumVariables())"
project,0,test064,"public void test064() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = (-504.4644902918153);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-504.4644902918153));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    Relationship relationship0 = Relationship.EQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, (-504.4644902918153));
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-504.4644902918153));
    RealPointValuePair realPointValuePair0 = simplexTableau0.getSolution();
    assertEquals((-504.4644902918153), realPointValuePair0.getValue(), 0.01);
}",0,
project,0,test075,"public void test075() throws Throwable {
    double[] doubleArray0 = new double[4];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    simplexTableau0.numArtificialVariables = 1;
    RealPointValuePair realPointValuePair0 = simplexTableau0.getSolution();
    assertEquals((-1.0), realPointValuePair0.getValue(), 0.01);
}",0,
project,0,test086,"public void test086() throws Throwable {
    double[] doubleArray0 = new double[1];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    Relationship relationship0 = Relationship.EQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, (-3842.09919628));
    linkedList0.add(linearConstraint0);
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
    assertEquals(1, simplexTableau0.getNumVariables());
}",0,"assertEquals(1, simplexTableau0.getNumVariables())"
project,0,test097,"public void test097() throws Throwable {
    double[] doubleArray0 = new double[5];
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, (-1.0));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
    simplexTableau0.subtractRow(0, 0, (-1564.3082268));
    assertEquals(5, simplexTableau0.getNumVariables());
}",0,"assertEquals(0, simplexTableau0.getNumVariables())"
project,0,test108,"public void test108() throws Throwable {
    Double[] doubleArray0 = new Double[2];
    Double double0 = new Double(1.0);
    doubleArray0[0] = double0;
    doubleArray0[1] = double0;
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (double) doubleArray0[1]);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (double) doubleArray0[0]);
    simplexTableau0.setEntry(0, 0, 657.54855);
    assertEquals(2, simplexTableau0.getNumVariables());
}",0,"assertEquals(0, simplexTableau0.getNumVariables())"
project,0,test119,"public void test119() throws Throwable {
    double[] doubleArray0 = new double[0];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1336.212031));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-504.4644902918153));
    boolean boolean0 = simplexTableau0.equals(linkedList0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1210,"public void test1210() throws Throwable {
    double[] doubleArray0 = new double[1];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-504.4644902918153));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-504.4644902918153));
    int int0 = simplexTableau0.getWidth();
    assertEquals(4, int0);
}",0,"assertEquals(0, int0)"
project,0,test1311,"public void test1311() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1.0E-12);
    int int0 = simplexTableau0.getSlackVariableOffset();
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test1412,"public void test1412() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1.0E-12);
    int int0 = simplexTableau0.getRhsOffset();
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test1513,"public void test1513() throws Throwable {
    double[] doubleArray0 = new double[0];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1336.212031));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-504.4644902918153));
    int int0 = simplexTableau0.getOriginalNumDecisionVariables();
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test1614,"public void test1614() throws Throwable {
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(11, 11);
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(11, 40, 40);
    RealVector realVector0 = openMapRealMatrix0.preMultiply((RealVector) openMapRealVector0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVector0, Double.NaN);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1249.5626846370565);
    int int0 = simplexTableau0.getOriginalNumDecisionVariables();
    assertEquals(11, int0);
}",0,"assertEquals(1, int0)"
project,0,test1715,"public void test1715() throws Throwable {
    double[] doubleArray0 = new double[0];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, (-443.52));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 2.0);
    int int0 = simplexTableau0.getNumVariables();
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test1816,"public void test1816() throws Throwable {
    double[] doubleArray0 = new double[9];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    Relationship relationship0 = Relationship.LEQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, 1.0, relationship0, doubleArray0, 1.0);
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-2861.0));
    int int0 = simplexTableau0.getNumSlackVariables();
    assertEquals(1, int0);
}",0,
project,0,test1917,"public void test1917() throws Throwable {
    Double[] doubleArray0 = new Double[3];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    doubleArray0[1] = double0;
    doubleArray0[2] = doubleArray0[1];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-3133.86376687968));
    int int0 = simplexTableau0.getNumObjectiveFunctions();
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test2018,"public void test2018() throws Throwable {
    double[] doubleArray0 = new double[0];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1336.212031));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-504.4644902918153));
    int int0 = simplexTableau0.getNumDecisionVariables();
    assertEquals(0, int0);
}",0,
project,0,test2119,"public void test2119() throws Throwable {
    double[] doubleArray0 = new double[2];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-47.133855613164));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    Relationship relationship0 = Relationship.GEQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 3.141592653589793);
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-2662.4290799));
    int int0 = simplexTableau0.getNumArtificialVariables();
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test2220,"public void test2220() throws Throwable {
    Double[] doubleArray0 = new Double[3];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    doubleArray0[1] = double0;
    doubleArray0[2] = doubleArray0[0];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-3133.86376687968));
    simplexTableau0.numArtificialVariables = (-76);
    int int0 = simplexTableau0.getNumArtificialVariables();
    assertEquals((-76), int0);
}",0,
project,0,test2422,"public void test2422() throws Throwable {
    Double[] doubleArray0 = new Double[3];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    doubleArray0[1] = doubleArray0[0];
    doubleArray0[2] = double0;
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    double double1 = SimplexTableau.getInvertedCoeffiecientSum(openMapRealVector0);
    assertEquals(0.0, double1, 0.01);
}",0,
project,0,test2523,"public void test2523() throws Throwable {
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(3111, (-2825.5792749552156));
    double double0 = SimplexTableau.getInvertedCoeffiecientSum(realVectorImpl0);
    assertEquals(8790377.124385778, double0, 0.01);
}",0,
project,0,test2624,"public void test2624() throws Throwable {
    Double[] doubleArray0 = new Double[3];
    Double double0 = new Double((-1.0));
    doubleArray0[0] = double0;
    Double double1 = new Double(2358.0);
    doubleArray0[1] = double1;
    doubleArray0[2] = double0;
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, Double.NaN);
    double double2 = SimplexTableau.getInvertedCoeffiecientSum(openMapRealVector0);
    assertEquals((-2356.0), double2, 0.01);
}",0,
project,0,test2725,"public void test2725() throws Throwable {
    double[] doubleArray0 = new double[23];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 2077.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-720.9505466214));
    RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl();
    simplexTableau0.tableau = (RealMatrix) realMatrixImpl0;
    int int0 = simplexTableau0.getHeight();
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test2826,"public void test2826() throws Throwable {
    double[] doubleArray0 = new double[9];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    Relationship relationship0 = Relationship.LEQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, 1.0, relationship0, doubleArray0, 1.0);
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-2861.0));
    double double0 = simplexTableau0.getEntry(1, 1);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test2927,"public void test2927() throws Throwable {
    double[] doubleArray0 = new double[0];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-3770.941893308484));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 3087.04427599);
    double double0 = simplexTableau0.getEntry(0, 0);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test3028,"public void test3028() throws Throwable {
    double[] doubleArray0 = new double[3];
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, false);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, (-227.07084310493));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
    double double0 = simplexTableau0.getEntry(0, 0);
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test3129,"public void test3129() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, (-1440.762562236));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1.0E-12);
    int int0 = simplexTableau0.getArtificialVariableOffset();
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test3230,"public void test3230() throws Throwable {
    double[] doubleArray0 = new double[2];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-47.133855613164));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-2662.4290799));
    // Undeclared exception!
    try {
        simplexTableau0.subtractRow(20, 2, 3.0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // no entry at indices (20, 0) in a 1x5 matrix
        //
        verifyException(""org.apache.commons.math.linear.RealMatrixImpl"", e);
    }
}",0,
project,0,test3331,"public void test3331() throws Throwable {
    double[] doubleArray0 = new double[3];
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, false);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, (-227.07084310493));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
    simplexTableau0.tableau = null;
    // Undeclared exception!
    try {
        simplexTableau0.getWidth();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test3432,"public void test3432() throws Throwable {
    Double[] doubleArray0 = new Double[3];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    doubleArray0[1] = double0;
    doubleArray0[2] = doubleArray0[1];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    openMapRealVector0.mapCosToSelf();
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, (-1.0));
    GoalType goalType0 = GoalType.MAXIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (double) doubleArray0[0]);
    // Undeclared exception!
    try {
        simplexTableau0.getSolution();
        fail(""Expecting exception: NoSuchElementException"");
    } catch (NoSuchElementException e) {
        //
        // iterator exhausted
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",0,
project,0,test3533,"public void test3533() throws Throwable {
    double[] doubleArray0 = new double[4];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    simplexTableau0.tableau = null;
    // Undeclared exception!
    try {
        simplexTableau0.getSolution();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.optimization.linear.SimplexTableau"", e);
    }
}",0,
project,0,test3634,"public void test3634() throws Throwable {
    double[] doubleArray0 = new double[0];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, (-443.52));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 2.0);
    linkedList0.add((LinearConstraint) null);
    // Undeclared exception!
    try {
        simplexTableau0.getNormalizedConstraints();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.optimization.linear.SimplexTableau"", e);
    }
}",0,
project,0,test3835,"public void test3835() throws Throwable {
    // Undeclared exception!
    try {
        SimplexTableau.getInvertedCoeffiecientSum((RealVector) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test3936,"public void test3936() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-1897), 1030);
    // Undeclared exception!
    try {
        SimplexTableau.getInvertedCoeffiecientSum(openMapRealVector0);
        fail(""Expecting exception: NegativeArraySizeException"");
    } catch (NegativeArraySizeException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.linear.OpenMapRealVector"", e);
    }
}",0,
project,0,test4037,"public void test4037() throws Throwable {
    Double[] doubleArray0 = new Double[0];
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, (-2288.929830948728));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-2288.929830948728));
    // Undeclared exception!
    try {
        simplexTableau0.getEntry(189, 189);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // no entry at indices (189, 189) in a 1x2 matrix
        //
        verifyException(""org.apache.commons.math.linear.RealMatrixImpl"", e);
    }
}",0,
project,0,test4138,"public void test4138() throws Throwable {
    double[] doubleArray0 = new double[3];
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, false);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 2.2250738585072014E-308);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
    simplexTableau0.tableau = null;
    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
    // Undeclared exception!
    try {
        simplexTableau0.equals(simplexTableau1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.optimization.linear.SimplexTableau"", e);
    }
}",0,
project,0,test4239,"public void test4239() throws Throwable {
    Double[] doubleArray0 = new Double[3];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    doubleArray0[1] = double0;
    doubleArray0[2] = doubleArray0[1];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-3133.86376687968));
    // Undeclared exception!
    try {
        simplexTableau0.divideRow(1953, 0.0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // no entry at indices (1,953, 0) in a 1x6 matrix
        //
        verifyException(""org.apache.commons.math.linear.RealMatrixImpl"", e);
    }
}",0,
project,0,test4340,"public void test4340() throws Throwable {
    Double[] doubleArray0 = new Double[3];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    doubleArray0[1] = double0;
    doubleArray0[2] = doubleArray0[0];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (double) doubleArray0[0]);
    simplexTableau0.tableau = null;
    // Undeclared exception!
    try {
        simplexTableau0.divideRow((-76), 0.0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test4441,"public void test4441() throws Throwable {
    Double[] doubleArray0 = new Double[3];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    doubleArray0[1] = double0;
    doubleArray0[2] = doubleArray0[0];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (double) doubleArray0[0]);
    double[] doubleArray1 = new double[0];
    RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl(doubleArray1);
    simplexTableau0.tableau = (RealMatrix) realMatrixImpl0;
    // Undeclared exception!
    try {
        simplexTableau0.divideRow((-76), 0.0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test4542,"public void test4542() throws Throwable {
    Double[] doubleArray0 = new Double[3];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    doubleArray0[1] = doubleArray0[0];
    doubleArray0[2] = doubleArray0[0];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-3133.86376687968));
    simplexTableau0.numArtificialVariables = (-76);
    // Undeclared exception!
    try {
        simplexTableau0.discardArtificialVariables();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // matrix must have at least one row
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",0,
project,0,test4643,"public void test4643() throws Throwable {
    Double[] doubleArray0 = new Double[3];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    doubleArray0[1] = doubleArray0[0];
    doubleArray0[2] = doubleArray0[0];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    double[] doubleArray1 = new double[5];
    Relationship relationship0 = Relationship.LEQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray1, relationship0, 269.7);
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-3133.86376687968));
    simplexTableau0.numArtificialVariables = (-76);
    // Undeclared exception!
    try {
        simplexTableau0.discardArtificialVariables();
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // no entry at indices (1, 6) in a 2x6 matrix
        //
        verifyException(""org.apache.commons.math.linear.RealMatrixImpl"", e);
    }
}",0,
project,0,test4744,"public void test4744() throws Throwable {
    double[] doubleArray0 = new double[1];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    Relationship relationship0 = Relationship.EQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, (-3842.09919628));
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    simplexTableau0.tableau = null;
    // Undeclared exception!
    try {
        simplexTableau0.discardArtificialVariables();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test4845,"public void test4845() throws Throwable {
    double[] doubleArray0 = new double[1];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    Relationship relationship0 = Relationship.EQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, (-3842.09919628));
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl(doubleArray0);
    simplexTableau0.tableau = (RealMatrix) realMatrixImpl0;
    // Undeclared exception!
    try {
        simplexTableau0.discardArtificialVariables();
        fail(""Expecting exception: NegativeArraySizeException"");
    } catch (NegativeArraySizeException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.optimization.linear.SimplexTableau"", e);
    }
}",0,
project,0,test4946,"public void test4946() throws Throwable {
    double[] doubleArray0 = new double[2];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-390.2317));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, doubleArray0);
    Relationship relationship0 = Relationship.GEQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(realVectorImpl0, relationship0, 2103.213374731782);
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-390.2317));
    RealVectorImpl realVectorImpl1 = new RealVectorImpl(doubleArray0);
    RealMatrix realMatrix0 = realVectorImpl1.outerProduct(doubleArray0);
    simplexTableau0.tableau = realMatrix0;
    // Undeclared exception!
    try {
        simplexTableau0.discardArtificialVariables();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.apache.commons.math.optimization.linear.SimplexTableau"", e);
    }
}",0,
project,0,test5047,"public void test5047() throws Throwable {
    double[] doubleArray0 = new double[4];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    linkedList0.add((LinearConstraint) null);
    // Undeclared exception!
    try {
        simplexTableau0.createTableau(true);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.optimization.linear.SimplexTableau"", e);
    }
}",0,
project,0,test5148,"public void test5148() throws Throwable {
    Double[] doubleArray0 = new Double[3];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    doubleArray0[1] = doubleArray0[0];
    doubleArray0[2] = double0;
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-3133.86376687968));
    simplexTableau0.numArtificialVariables = (-76);
    // Undeclared exception!
    try {
        simplexTableau0.createTableau(false);
        fail(""Expecting exception: NegativeArraySizeException"");
    } catch (NegativeArraySizeException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.optimization.linear.SimplexTableau"", e);
    }
}",0,
project,0,test5249,"public void test5249() throws Throwable {
    double[] doubleArray0 = new double[0];
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1026.0403267349266);
    Relationship relationship0 = Relationship.LEQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(realVectorImpl0, 1, relationship0, realVectorImpl0, 0.0);
    linkedList0.add(linearConstraint0);
    linkedList0.add(linearConstraint0);
    // Undeclared exception!
    try {
        simplexTableau0.createTableau(true);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test5450,"public void test5450() throws Throwable {
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = null;
    try {
        simplexTableau0 = new SimplexTableau((LinearObjectiveFunction) null, linkedList0, goalType0, true, 0.0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test5551,"public void test5551() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-3466), (-3466), (-3466));
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = null;
    try {
        simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-3466));
        fail(""Expecting exception: NegativeArraySizeException"");
    } catch (NegativeArraySizeException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.optimization.linear.SimplexTableau"", e);
    }
}",0,
project,0,test5652,"public void test5652() throws Throwable {
    double[] doubleArray0 = new double[2];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(2420);
    Relationship relationship0 = Relationship.LEQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, 0.0, relationship0, openMapRealVector0, 0.0);
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = null;
    try {
        simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-4682.0));
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.optimization.linear.SimplexTableau"", e);
    }
}",0,
project,0,test5854,"public void test5854() throws Throwable {
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(1020, (-405.6280814));
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, (-405.6280814));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 2322.149905789585);
    int int0 = simplexTableau0.getNumVariables();
    assertEquals(1020, int0);
}",0,"assertEquals(0, int0)"
project,0,test5955,"public void test5955() throws Throwable {
    double[] doubleArray0 = new double[3];
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, false);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
    boolean boolean0 = simplexTableau0.equals(simplexTableau1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test6056,"public void test6056() throws Throwable {
    double[] doubleArray0 = new double[4];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-2911.0));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-2911.0));
    boolean boolean0 = simplexTableau0.equals(simplexTableau1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test6157,"public void test6157() throws Throwable {
    Double[] doubleArray0 = new Double[3];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    doubleArray0[1] = doubleArray0[0];
    doubleArray0[2] = doubleArray0[0];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1.0E-12);
    simplexTableau0.numArtificialVariables = (-76);
    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (double) doubleArray0[0]);
    boolean boolean0 = simplexTableau0.equals(simplexTableau1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test6258,"public void test6258() throws Throwable {
    double[] doubleArray0 = new double[4];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    Relationship relationship0 = Relationship.GEQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 0.0);
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    boolean boolean0 = simplexTableau0.equals(simplexTableau1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test6359,"public void test6359() throws Throwable {
    double[] doubleArray0 = new double[3];
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, false);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    boolean boolean0 = simplexTableau0.equals(simplexTableau1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test6460,"public void test6460() throws Throwable {
    double[] doubleArray0 = new double[9];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    boolean boolean0 = simplexTableau0.equals((Object) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test6561,"public void test6561() throws Throwable {
    double[] doubleArray0 = new double[3];
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, false);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
    boolean boolean0 = simplexTableau0.equals(simplexTableau0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test6662,"public void test6662() throws Throwable {
    double[] doubleArray0 = new double[4];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    simplexTableau0.divideRow(0, (-1.0));
    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    boolean boolean0 = simplexTableau0.equals(simplexTableau1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test6763,"public void test6763() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = 18.44504490086728;
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-390.2317));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, doubleArray0);
    Relationship relationship0 = Relationship.GEQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(realVectorImpl0, relationship0, 2103.213374731782);
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-390.2317));
    RealPointValuePair realPointValuePair0 = simplexTableau0.getSolution();
    assertEquals(38403.63343303232, realPointValuePair0.getValue(), 0.01);
}",0,
project,0,test6864,"public void test6864() throws Throwable {
    double[] doubleArray0 = new double[4];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    simplexTableau0.discardArtificialVariables();
    assertEquals(4, simplexTableau0.getNumVariables());
}",0,"assertEquals(0, simplexTableau0.getNumVariables())"
project,0,test6965,"public void test6965() throws Throwable {
    double[] doubleArray0 = new double[19];
    doubleArray0[1] = 3583.1;
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 3583.1);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-917.5822528033328));
    double[][] doubleArray1 = new double[9][3];
    doubleArray1[0] = doubleArray0;
    doubleArray1[1] = doubleArray0;
    doubleArray1[2] = doubleArray0;
    doubleArray1[3] = doubleArray0;
    doubleArray1[4] = doubleArray0;
    doubleArray1[5] = doubleArray0;
    doubleArray1[6] = doubleArray0;
    doubleArray1[7] = doubleArray0;
    doubleArray1[8] = doubleArray0;
    DenseRealMatrix denseRealMatrix0 = new DenseRealMatrix(doubleArray1);
    simplexTableau0.tableau = (RealMatrix) denseRealMatrix0;
    // Undeclared exception!
    try {
        simplexTableau0.getSolution();
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // no entry at indices (8, 19) in a 9x19 matrix
        //
        verifyException(""org.apache.commons.math.linear.DenseRealMatrix"", e);
    }
}",0,
project,0,test7066,"public void test7066() throws Throwable {
    double[] doubleArray0 = new double[1];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    Relationship relationship0 = Relationship.EQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, (-3842.09919628));
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    simplexTableau0.discardArtificialVariables();
    assertEquals(1, simplexTableau0.getNumVariables());
}",0,"assertEquals(1, simplexTableau0.getNumVariables())"
project,0,test7167,"public void test7167() throws Throwable {
    double[] doubleArray0 = new double[4];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    int int0 = simplexTableau0.getNumArtificialVariables();
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test7268,"public void test7268() throws Throwable {
    double[] doubleArray0 = new double[3];
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0, false);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 2.2250738585072014E-308);
    int int0 = simplexTableau0.getNumSlackVariables();
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test7369,"public void test7369() throws Throwable {
    double[] doubleArray0 = new double[4];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    int int0 = simplexTableau0.getNumDecisionVariables();
    assertEquals(4, int0);
}",0,"assertEquals(1, int0)"
project,0,test7470,"public void test7470() throws Throwable {
    double[] doubleArray0 = new double[16];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    Relationship relationship0 = Relationship.GEQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 1961.6194);
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    RealPointValuePair realPointValuePair0 = simplexTableau0.getSolution();
    assertEquals(0.0, realPointValuePair0.getValue(), 0.01);
}",0,
project,0,test7571,"public void test7571() throws Throwable {
    double[] doubleArray0 = new double[0];
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1026.0403267349266);
    Relationship relationship0 = Relationship.LEQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(realVectorImpl0, 1, relationship0, realVectorImpl0, 0.0);
    linkedList0.add(linearConstraint0);
    double[][] doubleArray1 = simplexTableau0.createTableau(true);
    assertEquals(2, doubleArray1.length);
}",0,
project,0,test7672,"public void test7672() throws Throwable {
    double[] doubleArray0 = new double[0];
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1026.0403267349266);
    int int0 = simplexTableau0.getHeight();
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test7773,"public void test7773() throws Throwable {
    double[] doubleArray0 = new double[16];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);
    // Undeclared exception!
    try {
        simplexTableau0.setEntry((-1006), (-1006), (-1006));
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // no entry at indices (-1,006, -1,006) in a 1x18 matrix
        //
        verifyException(""org.apache.commons.math.linear.RealMatrixImpl"", e);
    }
}",0,
project,0,test7874,"public void test7874() throws Throwable {
    double[] doubleArray0 = new double[0];
    RealVectorImpl realVectorImpl0 = new RealVectorImpl(doubleArray0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(realVectorImpl0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1026.0403267349266);
    double[][] doubleArray1 = simplexTableau0.getData();
    assertEquals(1, doubleArray1.length);
}",0,
