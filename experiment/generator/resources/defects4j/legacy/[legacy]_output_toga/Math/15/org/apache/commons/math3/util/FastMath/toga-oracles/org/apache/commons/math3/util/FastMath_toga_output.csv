project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    float float0 = FastMath.copySign((-0.99999994F), (float) 2864);
    assertEquals(0.99999994F, float0, 0.01F);
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    float float0 = FastMath.copySign(0.0F, (-1262.3472F));
    assertEquals(-0.0F, float0, 0.01F);
}",0,
project,0,test0022,"public void test0022() throws Throwable {
    double double0 = FastMath.copySign((-720.3), 0.0);
    assertEquals(720.3, double0, 0.01);
}",0,
project,0,test0033,"public void test0033() throws Throwable {
    long long0 = FastMath.min((long) 0, (long) 0);
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
project,0,test0044,"public void test0044() throws Throwable {
    int int0 = FastMath.min(225, 1025);
    assertEquals(225, int0);
}",0,"assertEquals(0, int0)"
project,0,test0055,"public void test0055() throws Throwable {
    double double0 = FastMath.rint(0.99);
    assertEquals(1.0, double0, 0.01);
}",1,
project,0,test0066,"public void test0066() throws Throwable {
    double double0 = FastMath.floor(4.503599627370496E15);
    assertEquals(4.503599627370496E15, double0, 0.01);
}",0,
project,0,test0077,"public void test0077() throws Throwable {
    double double0 = FastMath.scalb(2938.083960078, 1024);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test0088,"public void test0088() throws Throwable {
    float float0 = FastMath.ulp(3614.844F);
    assertEquals(2.4414062E-4F, float0, 0.01F);
}",0,
project,0,test0099,"public void test0099() throws Throwable {
    double double0 = FastMath.ulp(614.669);
    assertEquals(1.1368683772161603E-13, double0, 0.01);
}",0,
project,0,test01010,"public void test01010() throws Throwable {
    double double0 = FastMath.ulp(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test01111,"public void test01111() throws Throwable {
    double double0 = FastMath.asin(0.8109631538391113);
    assertEquals(0.9457963854755578, double0, 0.01);
}",0,
project,0,test01212,"public void test01212() throws Throwable {
    double double0 = FastMath.atan2(0.0, 3659.1F);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test01313,"public void test01313() throws Throwable {
    double double0 = FastMath.atan2(3138.59025756, 3138.59025756);
    assertEquals(0.7853981633974483, double0, 0.01);
}",0,
project,0,test01414,"public void test01414() throws Throwable {
    double double0 = FastMath.atan2(1.42436589329759E250, (-1421.4236405208));
    assertEquals(1.5707963267948966, double0, 0.01);
}",0,
project,0,test01515,"public void test01515() throws Throwable {
    double double0 = FastMath.cos((-1.5707963267948966));
    assertEquals(6.123233995736766E-17, double0, 0.01);
}",0,
project,0,test01616,"public void test01616() throws Throwable {
    double double0 = FastMath.cos(3294198.0);
    assertEquals(0.7910146852024715, double0, 0.01);
}",0,
project,0,test01717,"public void test01717() throws Throwable {
    double double0 = FastMath.cos(0.0);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test01818,"public void test01818() throws Throwable {
    double double0 = FastMath.sin(1.6448897917725177E233);
    assertEquals(0.9508828885021079, double0, 0.01);
}",0,
project,0,test01919,"public void test01919() throws Throwable {
    double double0 = FastMath.expm1(1.0F);
    assertEquals(1.7182818284590453, double0, 0.01);
}",0,
project,0,test02020,"public void test02020() throws Throwable {
    double double0 = FastMath.expm1((-1.0F));
    assertEquals((-0.6321205588285577), double0, 0.01);
}",0,
project,0,test02121,"public void test02121() throws Throwable {
    double double0 = FastMath.signum(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test02222,"public void test02222() throws Throwable {
    double double0 = FastMath.tanh(0.5F);
    assertEquals(0.46211715726000974, double0, 0.01);
}",0,
project,0,test02323,"public void test02323() throws Throwable {
    double double0 = FastMath.cosh(3.5549586192569994E-8);
    assertEquals(1.0000000000000007, double0, 0.01);
}",0,
project,0,test02424,"public void test02424() throws Throwable {
    double double0 = FastMath.toRadians((-2870));
    assertEquals((-50.09094953223726), double0, 0.01);
}",0,
project,0,test02525,"public void test02525() throws Throwable {
    double double0 = FastMath.toDegrees((-2394.6));
    assertEquals((-137200.4736220269), double0, 0.01);
}",0,
project,0,test02626,"public void test02626() throws Throwable {
    double double0 = FastMath.sqrt(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test02727,"public void test02727() throws Throwable {
    double double0 = FastMath.sqrt(0.49999999999999994);
    assertEquals(0.7071067811865475, double0, 0.01);
}",0,
project,0,test02828,"public void test02828() throws Throwable {
    int int0 = FastMath.round(3659.1F);
    assertEquals(3659, int0);
}",0,"assertEquals(1, int0)"
project,0,test02929,"public void test02929() throws Throwable {
    int int0 = FastMath.round((-1035.8857F));
    assertEquals((-1036), int0);
}",0,"assertEquals(0, int0)"
project,0,test03030,"public void test03030() throws Throwable {
    long long0 = FastMath.round(0.0);
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
project,0,test03131,"public void test03131() throws Throwable {
    long long0 = FastMath.round(2009.5669265871545);
    assertEquals(2010L, long0);
}",0,"assertEquals(0, long0)"
project,0,test03232,"public void test03232() throws Throwable {
    double double0 = FastMath.pow((double) 989.485F, (-1023));
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test03333,"public void test03333() throws Throwable {
    float float0 = FastMath.nextUp((-1.4E-45F));
    assertEquals(-0.0F, float0, 0.01F);
}",0,
project,0,test03434,"public void test03434() throws Throwable {
    float float0 = FastMath.nextAfter(0.0F, 0.0);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test03535,"public void test03535() throws Throwable {
    long long0 = FastMath.min((long) 10, 4398046511103L);
    assertEquals(10L, long0);
}",0,"assertEquals(1, long0)"
project,0,test03636,"public void test03636() throws Throwable {
    int int0 = FastMath.min((-1494), (-1494));
    assertEquals((-1494), int0);
}",0,"assertEquals(0, int0)"
project,0,test03737,"public void test03737() throws Throwable {
    float float0 = FastMath.min(0.5F, 530.7F);
    assertEquals(0.5F, float0, 0.01F);
}",0,
project,0,test03838,"public void test03838() throws Throwable {
    double double0 = FastMath.min(1.0, 0.0);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test03939,"public void test03939() throws Throwable {
    long long0 = FastMath.max(0L, 0L);
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
project,0,test04040,"public void test04040() throws Throwable {
    int int0 = FastMath.max(0, 0);
    assertEquals(0, int0);
}",0,
project,0,test04141,"public void test04141() throws Throwable {
    int int0 = FastMath.max((-53), (-807));
    assertEquals((-53), int0);
}",0,"assertEquals(0, int0)"
project,0,test04242,"public void test04242() throws Throwable {
    float float0 = FastMath.max((-3218.0F), (-3218.0F));
    assertEquals((-3218.0F), float0, 0.01F);
}",0,
project,0,test04343,"public void test04343() throws Throwable {
    double double0 = FastMath.max((double) 0.0F, (-3.7999795083850525E-8));
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test04444,"public void test04444() throws Throwable {
    double double0 = FastMath.log10(1.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test04545,"public void test04545() throws Throwable {
    double double0 = FastMath.log10(4769.5539928784);
    assertEquals(3.678477769503843, double0, 0.01);
}",0,
project,0,test04646,"public void test04646() throws Throwable {
    double double0 = FastMath.log(0.0, 660.2065754);
    assertEquals(-0.0, double0, 0.01);
}",0,
project,0,test04747,"public void test04747() throws Throwable {
    double double0 = FastMath.log(248.87366015749137, 248.87366015749137);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test04848,"public void test04848() throws Throwable {
    double double0 = FastMath.log(592.5416056, 3.683043641790553E-251);
    assertEquals((-90.32065877837496), double0, 0.01);
}",0,
project,0,test04949,"public void test04949() throws Throwable {
    double double0 = FastMath.log((double) 1.0F);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test05050,"public void test05050() throws Throwable {
    double double0 = FastMath.log(1746.64);
    assertEquals(7.465449221354861, double0, 0.01);
}",0,
project,0,test05151,"public void test05151() throws Throwable {
    double double0 = FastMath.hypot(0.0, 0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test05252,"public void test05252() throws Throwable {
    int int0 = FastMath.getExponent((-1.0F));
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test05353,"public void test05353() throws Throwable {
    int int0 = FastMath.getExponent(2147.0F);
    assertEquals(11, int0);
}",0,"assertEquals(0, int0)"
project,0,test05454,"public void test05454() throws Throwable {
    int int0 = FastMath.getExponent((double) 1.0F);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test05555,"public void test05555() throws Throwable {
    int int0 = FastMath.getExponent(0.0);
    assertEquals((-1023), int0);
}",0,"assertEquals(0, int0)"
project,0,test05656,"public void test05656() throws Throwable {
    double double0 = FastMath.exp((-3715.441));
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test05757,"public void test05757() throws Throwable {
    float float0 = FastMath.copySign(0.0F, 760.49F);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test05858,"public void test05858() throws Throwable {
    double double0 = FastMath.copySign(0.0, (double) 0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test05959,"public void test05959() throws Throwable {
    double double0 = FastMath.ceil(796.5);
    assertEquals(797.0, double0, 0.01);
}",0,
project,0,test06060,"public void test06060() throws Throwable {
    double double0 = FastMath.cbrt(202.92101);
    assertEquals(5.876368270414237, double0, 0.01);
}",0,
project,0,test06161,"public void test06161() throws Throwable {
    double double0 = FastMath.atanh((-7.877917738262007E-9));
    assertEquals((-7.877917738262007E-9), double0, 0.01);
}",0,
project,0,test06262,"public void test06262() throws Throwable {
    double double0 = FastMath.atan((-12.571606602115155));
    assertEquals((-1.4914191316220655), double0, 0.01);
}",0,
project,0,test06363,"public void test06363() throws Throwable {
    double double0 = FastMath.acosh(1.0);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test06464,"public void test06464() throws Throwable {
    long long0 = FastMath.abs(0L);
    assertEquals(0L, long0);
}",0,
project,0,test06565,"public void test06565() throws Throwable {
    int int0 = FastMath.abs(0);
    assertEquals(0, int0);
}",0,
project,0,test06666,"public void test06666() throws Throwable {
    double double0 = FastMath.IEEEremainder(4.392983574030969E-147, 4.392983574030969E-147);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test06767,"public void test06767() throws Throwable {
    double double0 = FastMath.IEEEremainder(1.0, 506.971);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test06868,"public void test06868() throws Throwable {
    double double0 = FastMath.IEEEremainder((-5.555080534042001E-8), (-668.81043863254));
    assertEquals((-5.555080534042001E-8), double0, 0.01);
}",0,
project,0,test06969,"public void test06969() throws Throwable {
    double double0 = FastMath.floor(0.0F);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test07070,"public void test07070() throws Throwable {
    double double0 = FastMath.floor(3138.59025756);
    assertEquals(3138.0, double0, 0.01);
}",0,
project,0,test07171,"public void test07171() throws Throwable {
    double double0 = FastMath.floor((-905L));
    assertEquals((-905.0), double0, 0.01);
}",0,
project,0,test07272,"public void test07272() throws Throwable {
    double double0 = FastMath.floor((-4.048086182363988E115));
    assertEquals((-4.048086182363988E115), double0, 0.01);
}",0,
project,0,test07373,"public void test07373() throws Throwable {
    double double0 = FastMath.floor(1.5645672698520312E274);
    assertEquals(1.5645672698520312E274, double0, 0.01);
}",0,
project,0,test07474,"public void test07474() throws Throwable {
    double double0 = FastMath.floor(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test07575,"public void test07575() throws Throwable {
    double double0 = FastMath.floor((-1657.2));
    assertEquals((-1658.0), double0, 0.01);
}",0,
project,0,test07676,"public void test07676() throws Throwable {
    float float0 = FastMath.nextAfter((float) 325, (double) Float.POSITIVE_INFINITY);
    assertEquals(325.00003F, float0, 0.01F);
}",0,
project,0,test07777,"public void test07777() throws Throwable {
    float float0 = FastMath.nextAfter((-3259.5F), 524.315);
    assertEquals((-3259.4998F), float0, 0.01F);
}",0,
project,0,test07878,"public void test07878() throws Throwable {
    float float0 = FastMath.nextAfter((float) 0, 3425.0);
    assertEquals(1.4E-45F, float0, 0.01F);
}",0,
project,0,test07979,"public void test07979() throws Throwable {
    double double0 = FastMath.nextAfter(3.203391672602453E-8, 81.76);
    assertEquals(3.203391672602454E-8, double0, 0.01);
}",0,
project,0,test08080,"public void test08080() throws Throwable {
    double double0 = FastMath.nextAfter((double) (-1.4E-45F), 8.208715337901827E-9);
    assertEquals((-1.4012984643248169E-45), double0, 0.01);
}",0,
project,0,test08181,"public void test08181() throws Throwable {
    double double0 = FastMath.nextAfter((double) 0.0F, 1084.917224401101);
    assertEquals(4.9E-324, double0, 0.01);
}",0,
project,0,test08282,"public void test08282() throws Throwable {
    double double0 = FastMath.scalb((-1185.298742), 567);
    assertEquals((-5.72578933055519E173), double0, 0.01);
}",0,
project,0,test08383,"public void test08383() throws Throwable {
    double double0 = FastMath.abs((-1672.268605783241));
    assertEquals(1672.268605783241, double0, 0.01);
}",0,
project,0,test08484,"public void test08484() throws Throwable {
    float float0 = FastMath.abs(302.0F);
    assertEquals(302.0F, float0, 0.01F);
}",0,
project,0,test08585,"public void test08585() throws Throwable {
    double double0 = FastMath.exp(0.0F);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test08686,"public void test08686() throws Throwable {
    int int0 = FastMath.getExponent(2.113946677051906E252);
    assertEquals(838, int0);
}",0,
project,0,test08787,"public void test08787() throws Throwable {
    double double0 = FastMath.log(0.0);
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test08888,"public void test08888() throws Throwable {
    float float0 = FastMath.copySign((-254.0F), 0.0F);
    assertEquals(254.0F, float0, 0.01F);
}",0,
project,0,test08989,"public void test08989() throws Throwable {
    float float0 = FastMath.copySign(302.0F, (-2666.5457F));
    assertEquals((-302.0F), float0, 0.01F);
}",0,
project,0,test09090,"public void test09090() throws Throwable {
    float float0 = FastMath.copySign((float) 838, 0.0F);
    assertEquals(838.0F, float0, 0.01F);
}",0,
project,0,test09191,"public void test09191() throws Throwable {
    float float0 = FastMath.copySign((-1649.2449F), (-1649.2449F));
    assertEquals((-1649.2449F), float0, 0.01F);
}",0,
project,0,test09292,"public void test09292() throws Throwable {
    double double0 = FastMath.copySign((-2002.24731882), (-7.008664656565841));
    assertEquals((-2002.24731882), double0, 0.01);
}",0,
project,0,test09393,"public void test09393() throws Throwable {
    double double0 = FastMath.copySign(3.5549586192569994E-8, 5.301386276260592E-111);
    assertEquals(3.5549586192569994E-8, double0, 0.01);
}",0,
project,0,test09494,"public void test09494() throws Throwable {
    double double0 = FastMath.copySign(0.4278704972867398, (-1.0));
    assertEquals((-0.4278704972867398), double0, 0.01);
}",0,
project,0,test09595,"public void test09595() throws Throwable {
    double double0 = FastMath.copySign((-3.901826104778096E-9), 1461.3263526512394);
    assertEquals(3.901826104778096E-9, double0, 0.01);
}",0,
project,0,test09696,"public void test09696() throws Throwable {
    double double0 = FastMath.hypot(3.6725170580355583E-9, 2323.6140187522237);
    assertEquals(2323.6140187522237, double0, 0.01);
}",0,
project,0,test09797,"public void test09797() throws Throwable {
    double double0 = FastMath.hypot(735.93756502632, 0.0);
    assertEquals(735.93756502632, double0, 0.01);
}",0,
project,0,test09898,"public void test09898() throws Throwable {
    double double0 = FastMath.hypot(0.0, Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test09999,"public void test09999() throws Throwable {
    double double0 = FastMath.hypot(Double.NaN, 0.1246747374534607);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test100100,"public void test100100() throws Throwable {
    double double0 = FastMath.hypot(0.0, Double.NEGATIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test101101,"public void test101101() throws Throwable {
    double double0 = FastMath.hypot(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test102102,"public void test102102() throws Throwable {
    double double0 = FastMath.max((-311.087), (-311.087));
    assertEquals((-311.087), double0, 0.01);
}",0,
project,0,test103103,"public void test103103() throws Throwable {
    double double0 = FastMath.max(1.2167807682331913E-308, 0.1);
    assertEquals(0.1, double0, 0.01);
}",0,
project,0,test104104,"public void test104104() throws Throwable {
    double double0 = FastMath.max(9.755392680573412E-9, Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test105105,"public void test105105() throws Throwable {
    float float0 = FastMath.max((float) 0, Float.NaN);
    assertEquals(Float.NaN, float0, 0.01F);
}",0,
project,0,test106106,"public void test106106() throws Throwable {
    float float0 = FastMath.max(0.0F, 0.0F);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test107107,"public void test107107() throws Throwable {
    float float0 = FastMath.max(486.17F, (float) 5L);
    assertEquals(486.17F, float0, 0.01F);
}",0,
project,0,test108108,"public void test108108() throws Throwable {
    float float0 = FastMath.max((float) 15, (float) 1025);
    assertEquals(1025.0F, float0, 0.01F);
}",0,
project,0,test109109,"public void test109109() throws Throwable {
    long long0 = FastMath.max((-5034868814120038111L), (-2182L));
    assertEquals((-2182L), long0);
}",0,"assertEquals(1, long0)"
project,0,test110110,"public void test110110() throws Throwable {
    long long0 = FastMath.max(5L, 1L);
    assertEquals(5L, long0);
}",0,"assertEquals(1, long0)"
project,0,test111111,"public void test111111() throws Throwable {
    int int0 = FastMath.max(67, 4296);
    assertEquals(4296, int0);
}",0,"assertEquals(0, int0)"
project,0,test112112,"public void test112112() throws Throwable {
    double double0 = FastMath.min((-1092.92686), (-1092.92686));
    assertEquals((-1092.92686), double0, 0.01);
}",0,
project,0,test113113,"public void test113113() throws Throwable {
    double double0 = FastMath.min(Double.NaN, Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test114114,"public void test114114() throws Throwable {
    double double0 = FastMath.min(938.19028, 1305.45);
    assertEquals(938.19028, double0, 0.01);
}",0,
project,0,test115115,"public void test115115() throws Throwable {
    float float0 = FastMath.min(Float.NaN, 1483.65F);
    assertEquals(Float.NaN, float0, 0.01F);
}",0,
project,0,test116116,"public void test116116() throws Throwable {
    float float0 = FastMath.min((-1.0F), (-1.0F));
    assertEquals((-1.0F), float0, 0.01F);
}",1,
project,0,test117117,"public void test117117() throws Throwable {
    float float0 = FastMath.min(-0.0F, (float) (-1236));
    assertEquals((-1236.0F), float0, 0.01F);
}",0,
project,0,test118118,"public void test118118() throws Throwable {
    float float0 = FastMath.min(0.0F, 855.0F);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test119119,"public void test119119() throws Throwable {
    long long0 = FastMath.min(792L, (-213L));
    assertEquals((-213L), long0);
}",0,"assertEquals(0, long0)"
project,0,test120120,"public void test120120() throws Throwable {
    int int0 = FastMath.min(5, 0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test121121,"public void test121121() throws Throwable {
    double double0 = FastMath.rint((-4.926470933588261E-8));
    assertEquals(-0.0, double0, 0.01);
}",1,
project,0,test122122,"public void test122122() throws Throwable {
    double double0 = FastMath.rint((-709.04313048574));
    assertEquals((-709.0), double0, 0.01);
}",1,
project,0,test123123,"public void test123123() throws Throwable {
    double double0 = FastMath.ceil((-1.3345148716925826E-23));
    assertEquals(-0.0, double0, 0.01);
}",0,
project,0,test124124,"public void test124124() throws Throwable {
    double double0 = FastMath.ceil((-2312.61));
    assertEquals((-2312.0), double0, 0.01);
}",0,
project,0,test125125,"public void test125125() throws Throwable {
    double double0 = FastMath.ceil(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test126126,"public void test126126() throws Throwable {
    double double0 = FastMath.ceil((-1.0));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test127127,"public void test127127() throws Throwable {
    double double0 = FastMath.rint((-2.5445477450140954E103));
    assertEquals((-2.5445477450140954E103), double0, 0.01);
}",1,
project,0,test128128,"public void test128128() throws Throwable {
    double double0 = FastMath.rint(Double.POSITIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test129129,"public void test129129() throws Throwable {
    double double0 = FastMath.rint(Float.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test130130,"public void test130130() throws Throwable {
    float float0 = FastMath.nextUp((float) 444037001);
    assertEquals(4.44037024E8F, float0, 0.01F);
}",0,
project,0,test131131,"public void test131131() throws Throwable {
    float float0 = FastMath.nextAfter(1221.148F, (-2.2250738585072014E-308));
    assertEquals(1221.1478F, float0, 0.01F);
}",0,
project,0,test132132,"public void test132132() throws Throwable {
    float float0 = FastMath.nextAfter(0.0F, (-3227.2688339));
    assertEquals((-1.4E-45F), float0, 0.01F);
}",0,
project,0,test133133,"public void test133133() throws Throwable {
    float float0 = FastMath.nextAfter(Float.NEGATIVE_INFINITY, 0.9568695142600063);
    assertEquals((-3.4028235E38F), float0, 0.01F);
}",0,
project,0,test134134,"public void test134134() throws Throwable {
    float float0 = FastMath.nextAfter(Float.POSITIVE_INFINITY, 3138.59025756);
    assertEquals(3.4028235E38F, float0, 0.01F);
}",0,
project,0,test135135,"public void test135135() throws Throwable {
    float float0 = FastMath.nextAfter((-716.7F), Double.NaN);
    assertEquals(Float.NaN, float0, 0.01F);
}",0,
project,0,test136136,"public void test136136() throws Throwable {
    float float0 = FastMath.nextAfter(Float.NaN, 1.01);
    assertEquals(Float.NaN, float0, 0.01F);
}",0,
project,0,test137137,"public void test137137() throws Throwable {
    double double0 = FastMath.nextUp(1.5707963267948966);
    assertEquals(1.5707963267948968, double0, 0.01);
}",0,
project,0,test138138,"public void test138138() throws Throwable {
    double double0 = FastMath.nextAfter(1599.318544317312, (-1.401298464324817E-45));
    assertEquals(1599.3185443173118, double0, 0.01);
}",0,
project,0,test139139,"public void test139139() throws Throwable {
    double double0 = FastMath.nextAfter(0.0, (-674.9495796028052));
    assertEquals((-4.9E-324), double0, 0.01);
}",0,
project,0,test140140,"public void test140140() throws Throwable {
    double double0 = FastMath.nextUp((-3.901826104778096E-9));
    assertEquals((-3.9018261047780954E-9), double0, 0.01);
}",0,
project,0,test141141,"public void test141141() throws Throwable {
    double double0 = FastMath.nextAfter(Double.POSITIVE_INFINITY, (-2.6157563728873715E-8));
    assertEquals(1.7976931348623157E308, double0, 0.01);
}",0,
project,0,test142142,"public void test142142() throws Throwable {
    double double0 = FastMath.nextAfter(Double.NEGATIVE_INFINITY, 1.0);
    assertEquals((-1.7976931348623157E308), double0, 0.01);
}",0,
project,0,test143143,"public void test143143() throws Throwable {
    double double0 = FastMath.nextAfter((double) 0.0F, 0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test144144,"public void test144144() throws Throwable {
    double double0 = FastMath.nextAfter(41.77, Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test145145,"public void test145145() throws Throwable {
    double double0 = FastMath.nextAfter(Double.NaN, (-311.087));
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test146146,"public void test146146() throws Throwable {
    float float0 = FastMath.scalb((-202.9254F), 154);
    assertEquals(Float.NEGATIVE_INFINITY, float0, 0.01F);
}",1,
project,0,test147147,"public void test147147() throws Throwable {
    float float0 = FastMath.scalb(2201.0F, (-189));
    assertEquals(0.0F, float0, 0.01F);
}",1,
project,0,test148148,"public void test148148() throws Throwable {
    float float0 = FastMath.scalb((-857.3F), (-202));
    assertEquals(-0.0F, float0, 0.01F);
}",1,
project,0,test149149,"public void test149149() throws Throwable {
    float float0 = FastMath.scalb(1583.46F, (-135));
    assertEquals(3.6354458E-38F, float0, 0.01F);
}",1,
project,0,test150150,"public void test150150() throws Throwable {
    float float0 = FastMath.scalb(1.4E-45F, 680);
    assertEquals(Float.POSITIVE_INFINITY, float0, 0.01F);
}",1,
project,0,test151151,"public void test151151() throws Throwable {
    float float0 = FastMath.scalb(363.0F, 235);
    assertEquals(Float.POSITIVE_INFINITY, float0, 0.01F);
}",0,
project,0,test152152,"public void test152152() throws Throwable {
    float float0 = FastMath.scalb((-716.7074F), (-972));
    assertEquals(-0.0F, float0, 0.01F);
}",0,
project,0,test153153,"public void test153153() throws Throwable {
    float float0 = FastMath.scalb(0.0F, 271);
    assertEquals(0.0F, float0, 0.01F);
}",1,
project,0,test154154,"public void test154154() throws Throwable {
    float float0 = FastMath.scalb(Float.POSITIVE_INFINITY, (-1236));
    assertEquals(Float.POSITIVE_INFINITY, float0, 0.01F);
}",1,
project,0,test155155,"public void test155155() throws Throwable {
    float float0 = FastMath.scalb(Float.NaN, 1503);
    assertEquals(Float.NaN, float0, 0.01F);
}",1,
project,0,test156156,"public void test156156() throws Throwable {
    float float0 = FastMath.scalb((-3700.3245F), 483);
    assertEquals(Float.NEGATIVE_INFINITY, float0, 0.01F);
}",1,
project,0,test157157,"public void test157157() throws Throwable {
    float float0 = FastMath.scalb(1525.0F, (-1));
    assertEquals(762.5F, float0, 0.01F);
}",1,
project,0,test158158,"public void test158158() throws Throwable {
    float float0 = FastMath.scalb(1413.3413F, (-638));
    assertEquals(0.0F, float0, 0.01F);
}",1,
project,0,test159159,"public void test159159() throws Throwable {
    double double0 = FastMath.scalb(2688.0, 1025);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",1,
project,0,test160160,"public void test160160() throws Throwable {
    double double0 = FastMath.scalb(477.782103668, (-1720));
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test161161,"public void test161161() throws Throwable {
    double double0 = FastMath.scalb((double) (-1236), (-1236));
    assertEquals(-0.0, double0, 0.01);
}",0,
project,0,test162162,"public void test162162() throws Throwable {
    double double0 = FastMath.scalb(9.113713162029408E267, (-1624));
    assertEquals(1.2217501401153455E-221, double0, 0.01);
}",0,
project,0,test163163,"public void test163163() throws Throwable {
    double double0 = FastMath.scalb((-2339.656), 288369027);
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test164164,"public void test164164() throws Throwable {
    double double0 = FastMath.scalb((double) Integer.MAX_VALUE, Integer.MAX_VALUE);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",1,
project,0,test165165,"public void test165165() throws Throwable {
    double double0 = FastMath.scalb((double) (-203.2725F), (-64570314));
    assertEquals(-0.0, double0, 0.01);
}",0,
project,0,test166166,"public void test166166() throws Throwable {
    double double0 = FastMath.scalb(0.9568695142600063, (-4989));
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test167167,"public void test167167() throws Throwable {
    double double0 = FastMath.scalb(0.0, (-2829));
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test168168,"public void test168168() throws Throwable {
    double double0 = FastMath.scalb((double) Float.POSITIVE_INFINITY, 5230);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",1,
project,0,test169169,"public void test169169() throws Throwable {
    double double0 = FastMath.scalb((double) (-2870), 1948);
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test170170,"public void test170170() throws Throwable {
    double double0 = FastMath.scalb(Double.NaN, (-2147483647));
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test171171,"public void test171171() throws Throwable {
    double double0 = FastMath.ulp((double) Float.NEGATIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test172172,"public void test172172() throws Throwable {
    double double0 = FastMath.abs(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test173173,"public void test173173() throws Throwable {
    double double0 = FastMath.abs(1.01);
    assertEquals(1.01, double0, 0.01);
}",0,
project,0,test174174,"public void test174174() throws Throwable {
    float float0 = FastMath.abs(0.0F);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test175175,"public void test175175() throws Throwable {
    float float0 = FastMath.abs((float) (-5034868814120038111L));
    assertEquals(5.0348688E18F, float0, 0.01F);
}",0,
project,0,test176176,"public void test176176() throws Throwable {
    long long0 = FastMath.abs((-5034868814120038111L));
    assertEquals(5034868814120038111L, long0);
}",0,"assertEquals(1, long0)"
project,0,test177177,"public void test177177() throws Throwable {
    long long0 = FastMath.abs(4503599627370496L);
    assertEquals(4503599627370496L, long0);
}",0,"assertEquals(1, long0)"
project,0,test178178,"public void test178178() throws Throwable {
    int int0 = FastMath.abs((-872));
    assertEquals(872, int0);
}",0,"assertEquals(0, int0)"
project,0,test179179,"public void test179179() throws Throwable {
    int int0 = FastMath.abs(444037001);
    assertEquals(444037001, int0);
}",0,
project,0,test180180,"public void test180180() throws Throwable {
    double double0 = FastMath.toDegrees(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test181181,"public void test181181() throws Throwable {
    double double0 = FastMath.toDegrees(2665.52);
    assertEquals(152723.0462077112, double0, 0.01);
}",0,
project,0,test182182,"public void test182182() throws Throwable {
    double double0 = FastMath.toDegrees(Double.POSITIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test183183,"public void test183183() throws Throwable {
    double double0 = FastMath.toRadians(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test184184,"public void test184184() throws Throwable {
    double double0 = FastMath.toRadians(Double.POSITIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test185185,"public void test185185() throws Throwable {
    double double0 = FastMath.cbrt((-387.593185));
    assertEquals((-7.291083032397529), double0, 0.01);
}",0,
project,0,test186186,"public void test186186() throws Throwable {
    double double0 = FastMath.cbrt(0.0F);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test187187,"public void test187187() throws Throwable {
    double double0 = FastMath.cbrt(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test188188,"public void test188188() throws Throwable {
    double double0 = FastMath.acos(4.7683716E-7F);
    assertEquals(1.5707958499577384, double0, 0.01);
}",0,
project,0,test189189,"public void test189189() throws Throwable {
    double double0 = FastMath.acos(0.0);
    assertEquals(1.5707963267948966, double0, 0.01);
}",0,
project,0,test190190,"public void test190190() throws Throwable {
    double double0 = FastMath.acos(1.0F);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test191191,"public void test191191() throws Throwable {
    double double0 = FastMath.acos((-638));
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test192192,"public void test192192() throws Throwable {
    double double0 = FastMath.acos(3312.9047143185658);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test193193,"public void test193193() throws Throwable {
    double double0 = FastMath.acos(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test194194,"public void test194194() throws Throwable {
    double double0 = FastMath.asin(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test195195,"public void test195195() throws Throwable {
    double double0 = FastMath.asin((-1.0));
    assertEquals((-1.5707963267948966), double0, 0.01);
}",0,
project,0,test196196,"public void test196196() throws Throwable {
    double double0 = FastMath.asin(1.0F);
    assertEquals(1.5707963267948966, double0, 0.01);
}",0,
project,0,test197197,"public void test197197() throws Throwable {
    double double0 = FastMath.asin((-1222.135857097866));
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test198198,"public void test198198() throws Throwable {
    double double0 = FastMath.asin(1.01);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test199199,"public void test199199() throws Throwable {
    double double0 = FastMath.atan2(6.123233995736766E-17, 0.0);
    assertEquals(1.5707963267948966, double0, 0.01);
}",0,
project,0,test200200,"public void test200200() throws Throwable {
    double double0 = FastMath.atan2((-11.434339812172782), 0.0);
    assertEquals((-1.5707963267948966), double0, 0.01);
}",0,
project,0,test201201,"public void test201201() throws Throwable {
    double double0 = FastMath.atan2(1.1920929E-7F, Float.NEGATIVE_INFINITY);
    assertEquals(3.141592653589793, double0, 0.01);
}",0,
project,0,test202202,"public void test202202() throws Throwable {
    double double0 = FastMath.atan2(Double.NEGATIVE_INFINITY, 0.0);
    assertEquals((-1.5707963267948966), double0, 0.01);
}",0,
project,0,test203203,"public void test203203() throws Throwable {
    double double0 = FastMath.atan2(0.0, (-5.718749537552229E-8));
    assertEquals(3.141592653589793, double0, 0.01);
}",0,
project,0,test204204,"public void test204204() throws Throwable {
    double double0 = FastMath.atan2(0.0, 0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test205205,"public void test205205() throws Throwable {
    double double0 = FastMath.atan2(2943.677951461, Float.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test206206,"public void test206206() throws Throwable {
    double double0 = FastMath.atan(1.2207031E-4F);
    assertEquals(1.2207031189367021E-4, double0, 0.01);
}",0,
project,0,test207207,"public void test207207() throws Throwable {
    double double0 = FastMath.asin((-0.5331566755779711));
    assertEquals((-0.5623274195664489), double0, 0.01);
}",0,
project,0,test208208,"public void test208208() throws Throwable {
    double double0 = FastMath.atan2((-2.5377382055662134E168), (-320.314538));
    assertEquals((-1.5707963267948966), double0, 0.01);
}",0,
project,0,test209209,"public void test209209() throws Throwable {
    double double0 = FastMath.atan(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test210210,"public void test210210() throws Throwable {
    double double0 = FastMath.tan((-705.2247F));
    assertEquals((-15.882261131321966), double0, 0.01);
}",0,
project,0,test211211,"public void test211211() throws Throwable {
    double double0 = FastMath.tan(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test212212,"public void test212212() throws Throwable {
    double double0 = FastMath.tan(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test213213,"public void test213213() throws Throwable {
    double double0 = FastMath.tan(-0.0);
    assertEquals(-0.0, double0, 0.01);
}",0,
project,0,test214214,"public void test214214() throws Throwable {
    double double0 = FastMath.cos(Double.POSITIVE_INFINITY);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test215215,"public void test215215() throws Throwable {
    double double0 = FastMath.cos(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test216216,"public void test216216() throws Throwable {
    double double0 = FastMath.sin((-401.5669048437293));
    assertEquals(0.528603691118746, double0, 0.01);
}",0,
project,0,test217217,"public void test217217() throws Throwable {
    double double0 = FastMath.sin(1.0F);
    assertEquals(0.8414709848078965, double0, 0.01);
}",0,
project,0,test218218,"public void test218218() throws Throwable {
    double double0 = FastMath.sin(Double.POSITIVE_INFINITY);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test219219,"public void test219219() throws Throwable {
    double double0 = FastMath.sin(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test220220,"public void test220220() throws Throwable {
    double double0 = FastMath.sin(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test221221,"public void test221221() throws Throwable {
    double double0 = FastMath.sin(1.0183920005400422E109);
    assertEquals((-0.37756379731130807), double0, 0.01);
}",0,
project,0,test222222,"public void test222222() throws Throwable {
    double double0 = FastMath.cos((-1.1441115218462356E163));
    assertEquals((-0.3249628017436517), double0, 0.01);
}",0,
project,0,test223223,"public void test223223() throws Throwable {
    double double0 = FastMath.tan((-2.5445477450140954E103));
    assertEquals((-0.20308413112311322), double0, 0.01);
}",0,
project,0,test224224,"public void test224224() throws Throwable {
    double double0 = FastMath.cos((-8.0E298));
    assertEquals((-0.9991033281235678), double0, 0.01);
}",0,
project,0,test225225,"public void test225225() throws Throwable {
    double double0 = FastMath.cos((-4.048086182363987E115));
    assertEquals((-0.9964685410851065), double0, 0.01);
}",0,
project,0,test226226,"public void test226226() throws Throwable {
    double double0 = FastMath.tan(1.4E-45F);
    assertEquals(1.401298464324817E-45, double0, 0.01);
}",0,
project,0,test227227,"public void test227227() throws Throwable {
    double double0 = FastMath.tan((-5034868814120038111L));
    assertEquals(0.4278704972867398, double0, 0.01);
}",0,
project,0,test228228,"public void test228228() throws Throwable {
    double double0 = FastMath.sin((-0.12251966318888612));
    assertEquals((-0.1222133680069647), double0, 0.01);
}",0,
project,0,test229229,"public void test229229() throws Throwable {
    double double0 = FastMath.pow((double) 1.0F, 67);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test230230,"public void test230230() throws Throwable {
    double double0 = FastMath.pow((double) (-1.4E-45F), (-1));
    assertEquals((-7.1362384635297994E44), double0, 0.01);
}",0,
project,0,test231231,"public void test231231() throws Throwable {
    double double0 = FastMath.pow((-4.019569741253664E-293), 0);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test232232,"public void test232232() throws Throwable {
    double double0 = FastMath.pow(2.6197411946856397E-8, Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test233233,"public void test233233() throws Throwable {
    double double0 = FastMath.pow((-194.00666400423395), (double) 36);
    assertEquals(2.2982608824921844E82, double0, 0.01);
}",0,
project,0,test234234,"public void test234234() throws Throwable {
    double double0 = FastMath.pow((double) (-705.2247F), (double) (-705.2247F));
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test235235,"public void test235235() throws Throwable {
    double double0 = FastMath.pow((double) (-705.2247F), 3.3728055900968326E207);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test236236,"public void test236236() throws Throwable {
    double double0 = FastMath.pow((double) Float.NEGATIVE_INFINITY, 1.2312228679656982);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test237237,"public void test237237() throws Throwable {
    double double0 = FastMath.pow((-1497.8), Double.POSITIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test238238,"public void test238238() throws Throwable {
    double double0 = FastMath.pow(0.0, (-222.6351827692));
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test239239,"public void test239239() throws Throwable {
    double double0 = FastMath.pow(0.0, (double) 1353);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test240240,"public void test240240() throws Throwable {
    double double0 = FastMath.pow(Double.NaN, 3.203391672602453E-8);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test241241,"public void test241241() throws Throwable {
    double double0 = FastMath.pow((-2068.6856), (double) 0.0F);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test242242,"public void test242242() throws Throwable {
    double double0 = FastMath.log10((-148.2574483991));
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test243243,"public void test243243() throws Throwable {
    double double0 = FastMath.log1p(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test244244,"public void test244244() throws Throwable {
    double double0 = FastMath.log1p(3533.223739782153);
    assertEquals(8.17024896151006, double0, 0.01);
}",0,
project,0,test245245,"public void test245245() throws Throwable {
    double double0 = FastMath.log1p(Double.POSITIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test246246,"public void test246246() throws Throwable {
    double double0 = FastMath.log1p((-1.0));
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test247247,"public void test247247() throws Throwable {
    double double0 = FastMath.pow((double) (-1.0F), (double) (-1));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test248248,"public void test248248() throws Throwable {
    double double0 = FastMath.pow(1.01, (-5025.16826));
    assertEquals(1.9247291682624017E-22, double0, 0.01);
}",0,
project,0,test249249,"public void test249249() throws Throwable {
    double double0 = FastMath.log(0.875, (-1.0));
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test250250,"public void test250250() throws Throwable {
    double double0 = FastMath.acosh(6.49426800787191E246);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",1,
project,0,test251251,"public void test251251() throws Throwable {
    double double0 = FastMath.log1p((-2.74877906944E11));
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test252252,"public void test252252() throws Throwable {
    double double0 = FastMath.log10(0.0);
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test253253,"public void test253253() throws Throwable {
    double double0 = FastMath.expm1(4.9E-324);
    assertEquals(4.9E-324, double0, 0.01);
}",0,
project,0,test254254,"public void test254254() throws Throwable {
    double double0 = FastMath.expm1(1160);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test255255,"public void test255255() throws Throwable {
    double double0 = FastMath.expm1((-9223372036854775808L));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test256256,"public void test256256() throws Throwable {
    float float0 = FastMath.signum(0.0F);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test257257,"public void test257257() throws Throwable {
    float float0 = FastMath.signum((-4004.8F));
    assertEquals((-1.0F), float0, 0.01F);
}",0,
project,0,test258258,"public void test258258() throws Throwable {
    float float0 = FastMath.signum(275.988F);
    assertEquals(1.0F, float0, 0.01F);
}",0,
project,0,test259259,"public void test259259() throws Throwable {
    double double0 = FastMath.signum(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test260260,"public void test260260() throws Throwable {
    double double0 = FastMath.signum((-1.5707963267948966));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test261261,"public void test261261() throws Throwable {
    double double0 = FastMath.signum(952.592);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test262262,"public void test262262() throws Throwable {
    double double0 = FastMath.atanh(0.031);
    assertEquals(0.031009936063096846, double0, 0.01);
}",0,
project,0,test263263,"public void test263263() throws Throwable {
    double double0 = FastMath.atanh(0.087);
    assertEquals(0.08722050326312049, double0, 0.01);
}",0,
project,0,test264264,"public void test264264() throws Throwable {
    double double0 = FastMath.atanh(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test265265,"public void test265265() throws Throwable {
    double double0 = FastMath.atanh((-690.93434175));
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test266266,"public void test266266() throws Throwable {
    double double0 = FastMath.asinh(0.01165061630308628);
    assertEquals(0.011650352749504758, double0, 0.01);
}",1,
project,0,test267267,"public void test267267() throws Throwable {
    double double0 = FastMath.asinh(0.087);
    assertEquals(0.08689062164014465, double0, 0.01);
}",1,
project,0,test268268,"public void test268268() throws Throwable {
    double double0 = FastMath.asinh(0.1111111111111111);
    assertEquals(0.11088374830128546, double0, 0.01);
}",1,
project,0,test269269,"public void test269269() throws Throwable {
    double double0 = FastMath.asinh(0.0F);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test270270,"public void test270270() throws Throwable {
    double double0 = FastMath.asinh((-1624));
    assertEquals((-8.085794796072742), double0, 0.01);
}",0,
project,0,test271271,"public void test271271() throws Throwable {
    double double0 = FastMath.tanh(20.0);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test272272,"public void test272272() throws Throwable {
    double double0 = FastMath.tanh(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test273273,"public void test273273() throws Throwable {
    double double0 = FastMath.tanh((-1.0129027912496858E-9));
    assertEquals((-1.0129027912496858E-9), double0, 0.01);
}",0,
project,0,test274274,"public void test274274() throws Throwable {
    double double0 = FastMath.tanh(520.11364);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test275275,"public void test275275() throws Throwable {
    double double0 = FastMath.tanh(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test276276,"public void test276276() throws Throwable {
    double double0 = FastMath.tanh((-1521.9));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test277277,"public void test277277() throws Throwable {
    double double0 = FastMath.sinh(0.16666666666666666);
    assertEquals(0.16743934398751595, double0, 0.01);
}",0,
project,0,test278278,"public void test278278() throws Throwable {
    double double0 = FastMath.sinh((-0.5106697435592696));
    assertEquals((-0.5331566755779711), double0, 0.01);
}",0,
project,0,test279279,"public void test279279() throws Throwable {
    double double0 = FastMath.sinh((-388.4587160176364));
    assertEquals((-2.5377382055662134E168), double0, 0.01);
}",0,
project,0,test280280,"public void test280280() throws Throwable {
    double double0 = FastMath.sinh((-2045.146645601));
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test281281,"public void test281281() throws Throwable {
    double double0 = FastMath.sinh(1413.2458);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test282282,"public void test282282() throws Throwable {
    double double0 = FastMath.sinh(0.0F);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test283283,"public void test283283() throws Throwable {
    double double0 = FastMath.sinh(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test284284,"public void test284284() throws Throwable {
    double double0 = FastMath.cosh((-1.0129027912496858E-9));
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test285285,"public void test285285() throws Throwable {
    double double0 = FastMath.cosh((-1068.15));
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test286286,"public void test286286() throws Throwable {
    double double0 = FastMath.cosh((-478.544F));
    assertEquals(3.3728055900968326E207, double0, 0.01);
}",0,
project,0,test287287,"public void test287287() throws Throwable {
    double double0 = FastMath.cosh(313.3895105278287);
    assertEquals(6.343151919338506E135, double0, 0.01);
}",0,
project,0,test288288,"public void test288288() throws Throwable {
    double double0 = FastMath.cosh(0.0);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test289289,"public void test289289() throws Throwable {
    double double0 = FastMath.cosh(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test290290,"public void test290290() throws Throwable {
    double double0 = FastMath.cosh(2.113946677051906E252);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test291291,"public void test291291() throws Throwable {
    double double0 = FastMath.toRadians(2.2737367544323206E-13);
    assertEquals(3.968419268845377E-15, double0, 0.01);
}",0,
project,0,test292292,"public void test292292() throws Throwable {
    double double0 = FastMath.acos((-0.31454662262481564));
    assertEquals(1.890775322604014, double0, 0.01);
}",0,
project,0,test293293,"public void test293293() throws Throwable {
    double double0 = FastMath.random();
    double double1 = FastMath.random();
    assertNotEquals(double1, double0, 0.01);
}",0,
project,0,test294294,"public void test294294() throws Throwable {
    int int0 = FastMath.getExponent(0.0F);
    assertEquals((-127), int0);
}",0,"assertEquals(0, int0)"
project,0,test296295,"public void test296295() throws Throwable {
    double double0 = FastMath.sinh(273L);
    assertEquals(1.8254231919310378E118, double0, 0.01);
}",0,
project,0,test297296,"public void test297296() throws Throwable {
    float float0 = FastMath.nextUp((float) (-14L));
    assertEquals((-13.999999F), float0, 0.01F);
}",0,
project,0,test298297,"public void test298297() throws Throwable {
    double double0 = FastMath.acosh(0.036);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test299298,"public void test299298() throws Throwable {
    double double0 = FastMath.hypot(0.7214844226837158, (-1.0662027949814858E-7));
    assertEquals(0.7214844226837237, double0, 0.01);
}",0,
project,0,test300299,"public void test300299() throws Throwable {
    double double0 = FastMath.expm1(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test301300,"public void test301300() throws Throwable {
    int int0 = FastMath.round((float) 0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test302301,"public void test302301() throws Throwable {
    long long0 = FastMath.round((-13.95));
    assertEquals((-14L), long0);
}",0,"assertEquals(1, long0)"
