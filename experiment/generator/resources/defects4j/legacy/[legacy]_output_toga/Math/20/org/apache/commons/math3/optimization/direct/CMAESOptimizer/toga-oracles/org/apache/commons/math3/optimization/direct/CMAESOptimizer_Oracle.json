[ {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public PointValuePair optimize(int maxEval, FUNC f, GoalType goalType, double[] startPoint, double[] lower, double[] upper)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public PointValuePair optimize(int maxEval, FUNC f, GoalType goalType, double[] startPoint, double[] lower, double[] upper)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public PointValuePair optimize(int maxEval, FUNC f, GoalType goalType, double[] startPoint, double[] lower, double[] upper)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "protected PointValuePair doOptimize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "protected PointValuePair doOptimize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test054"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public CMAESOptimizer(int lambda, double[] inputSigma, int maxIterations, double stopFitness, boolean isActiveCMA, int diagonalOnly, int checkFeasableCount, RandomGenerator random, boolean generateStatistics, ConvergenceChecker<PointValuePair> checker)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test065"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public GoalType getGoalType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(cMAESOptimizer0.getGoalType())",
  "exception" : "",
  "testName" : "test076"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public CMAESOptimizer(int lambda, double[] inputSigma, int maxIterations, double stopFitness, boolean isActiveCMA, int diagonalOnly, int checkFeasableCount, RandomGenerator random, boolean generateStatistics)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test087"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public PointValuePair optimize(int maxEval, FUNC f, GoalType goalType, double[] startPoint, double[] lower, double[] upper)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test118"
} ]