project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    assertNotNull(illinoisSolver0);
}",0,assertNotNull(illinoisSolver0)
project,0,test001,"public void test001() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    assertEquals(0.0, illinoisSolver0.getMax(), 0.01);
}",0,
project,0,test002,"public void test002() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    assertEquals(1.0E-14, illinoisSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test003,"public void test003() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    assertEquals(0.0, illinoisSolver0.getMin(), 0.01);
}",0,
project,0,test004,"public void test004() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test005,"public void test005() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    assertEquals(0.0, illinoisSolver0.getStartValue(), 0.01);
}",0,
project,0,test006,"public void test006() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    assertEquals(1.0E-6, illinoisSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test008,"public void test008() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    Atan atan0 = new Atan();
    double double0 = illinoisSolver0.solve(206, (UnivariateRealFunction) atan0, (-1099.3979317634332), 4.9E-324, 1.3754765451254772E-11);
    assertEquals(1.0E-14, illinoisSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test009,"public void test009() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    Atan atan0 = new Atan();
    double double0 = illinoisSolver0.solve(206, (UnivariateRealFunction) atan0, (-1099.3979317634332), 4.9E-324, 1.3754765451254772E-11);
    assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test0010,"public void test0010() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    Atan atan0 = new Atan();
    double double0 = illinoisSolver0.solve(206, (UnivariateRealFunction) atan0, (-1099.3979317634332), 4.9E-324, 1.3754765451254772E-11);
    assertEquals(1.3754765451254772E-11, illinoisSolver0.getStartValue(), 0.01);
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    Atan atan0 = new Atan();
    double double0 = illinoisSolver0.solve(206, (UnivariateRealFunction) atan0, (-1099.3979317634332), 4.9E-324, 1.3754765451254772E-11);
    assertEquals((-1099.3979317634332), illinoisSolver0.getMin(), 0.01);
}",0,
project,0,test0012,"public void test0012() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    Atan atan0 = new Atan();
    double double0 = illinoisSolver0.solve(206, (UnivariateRealFunction) atan0, (-1099.3979317634332), 4.9E-324, 1.3754765451254772E-11);
    assertEquals(1.0E-6, illinoisSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test0013,"public void test0013() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    Atan atan0 = new Atan();
    double double0 = illinoisSolver0.solve(206, (UnivariateRealFunction) atan0, (-1099.3979317634332), 4.9E-324, 1.3754765451254772E-11);
    assertEquals(4.9E-324, illinoisSolver0.getMax(), 0.01);
}",0,
project,0,test0014,"public void test0014() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    Atan atan0 = new Atan();
    double double0 = illinoisSolver0.solve(206, (UnivariateRealFunction) atan0, (-1099.3979317634332), 4.9E-324, 1.3754765451254772E-11);
    assertEquals((-3.454E-321), double0, 0.01);
}",0,
project,0,test0115,"public void test0115() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    assertNotNull(illinoisSolver0);
}",0,assertNotNull(illinoisSolver0)
project,0,test0116,"public void test0116() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    assertEquals((-3470.627599577), illinoisSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test0117,"public void test0117() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test0118,"public void test0118() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    assertEquals(0.0, illinoisSolver0.getMin(), 0.01);
}",0,
project,0,test0119,"public void test0119() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    assertEquals(1.0E-14, illinoisSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test0120,"public void test0120() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    assertEquals(0.0, illinoisSolver0.getMax(), 0.01);
}",0,
project,0,test0121,"public void test0121() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    assertEquals(0.0, illinoisSolver0.getStartValue(), 0.01);
}",0,
project,0,test0122,"public void test0122() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) 2141536214;
    doubleArray0[3] = (double) 2141536214;
    doubleArray0[4] = (-3470.627599577);
    doubleArray0[7] = (double) 2141536214;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    assertNotNull(polynomialFunction0);
}",1,
project,0,test0123,"public void test0123() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) 2141536214;
    doubleArray0[3] = (double) 2141536214;
    doubleArray0[4] = (-3470.627599577);
    doubleArray0[7] = (double) 2141536214;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    assertEquals(7, polynomialFunction0.degree());
}",0,
project,0,test0124,"public void test0124() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) 2141536214;
    doubleArray0[3] = (double) 2141536214;
    doubleArray0[4] = (-3470.627599577);
    doubleArray0[7] = (double) 2141536214;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    assertArrayEquals(new double[] { 2.141536214E9, 0.0, 0.0, 2.141536214E9, (-3470.627599577), 0.0, 0.0, 2.141536214E9 }, doubleArray0, 0.01);
}",1,
project,0,test0125,"public void test0125() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) 2141536214;
    doubleArray0[3] = (double) 2141536214;
    doubleArray0[4] = (-3470.627599577);
    doubleArray0[7] = (double) 2141536214;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    assertEquals(8, doubleArray0.length);
}",1,
project,0,test0126,"public void test0126() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) 2141536214;
    doubleArray0[3] = (double) 2141536214;
    doubleArray0[4] = (-3470.627599577);
    doubleArray0[7] = (double) 2141536214;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
    assertEquals((-3470.627599577), illinoisSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test0127,"public void test0127() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) 2141536214;
    doubleArray0[3] = (double) 2141536214;
    doubleArray0[4] = (-3470.627599577);
    doubleArray0[7] = (double) 2141536214;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
    assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test0128,"public void test0128() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) 2141536214;
    doubleArray0[3] = (double) 2141536214;
    doubleArray0[4] = (-3470.627599577);
    doubleArray0[7] = (double) 2141536214;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
    assertEquals(1.0707663716862001E9, illinoisSolver0.getStartValue(), 0.01);
}",0,
project,0,test0129,"public void test0129() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) 2141536214;
    doubleArray0[3] = (double) 2141536214;
    doubleArray0[4] = (-3470.627599577);
    doubleArray0[7] = (double) 2141536214;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
    assertEquals((-3470.627599577), illinoisSolver0.getMin(), 0.01);
}",0,
project,0,test0130,"public void test0130() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) 2141536214;
    doubleArray0[3] = (double) 2141536214;
    doubleArray0[4] = (-3470.627599577);
    doubleArray0[7] = (double) 2141536214;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
    assertEquals(1.0E-14, illinoisSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test0131,"public void test0131() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) 2141536214;
    doubleArray0[3] = (double) 2141536214;
    doubleArray0[4] = (-3470.627599577);
    doubleArray0[7] = (double) 2141536214;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
    assertEquals(2.141536214E9, illinoisSolver0.getMax(), 0.01);
}",0,
project,0,test0132,"public void test0132() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) 2141536214;
    doubleArray0[3] = (double) 2141536214;
    doubleArray0[4] = (-3470.627599577);
    doubleArray0[7] = (double) 2141536214;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
    assertEquals(7, polynomialFunction0.degree());
}",0,
project,0,test0133,"public void test0133() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) 2141536214;
    doubleArray0[3] = (double) 2141536214;
    doubleArray0[4] = (-3470.627599577);
    doubleArray0[7] = (double) 2141536214;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
    assertArrayEquals(new double[] { 2.141536214E9, 0.0, 0.0, 2.141536214E9, (-3470.627599577), 0.0, 0.0, 2.141536214E9 }, doubleArray0, 0.01);
}",0,
project,0,test0134,"public void test0134() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) 2141536214;
    doubleArray0[3] = (double) 2141536214;
    doubleArray0[4] = (-3470.627599577);
    doubleArray0[7] = (double) 2141536214;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
    assertEquals((-0.8631463146352865), double0, 0.01);
}",0,
project,0,test0135,"public void test0135() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) 2141536214;
    doubleArray0[3] = (double) 2141536214;
    doubleArray0[4] = (-3470.627599577);
    doubleArray0[7] = (double) 2141536214;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
    assertEquals(8, doubleArray0.length);
}",0,
project,0,test0236,"public void test0236() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertNotNull(pegasusSolver0);
}",0,
project,0,test0237,"public void test0237() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test0238,"public void test0238() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(3128.7, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test0239,"public void test0239() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(2725.29567932, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test0240,"public void test0240() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test0241,"public void test0241() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test0242,"public void test0242() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test0244,"public void test0244() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Floor floor0 = new Floor();
    double double0 = pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, 1.0E-6, (double) 793);
    assertEquals(1.0E-6, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test0245,"public void test0245() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Floor floor0 = new Floor();
    double double0 = pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, 1.0E-6, (double) 793);
    assertEquals(793.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test0246,"public void test0246() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Floor floor0 = new Floor();
    double double0 = pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, 1.0E-6, (double) 793);
    assertEquals(3128.7, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test0247,"public void test0247() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Floor floor0 = new Floor();
    double double0 = pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, 1.0E-6, (double) 793);
    assertEquals(2725.29567932, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test0248,"public void test0248() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Floor floor0 = new Floor();
    double double0 = pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, 1.0E-6, (double) 793);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test0249,"public void test0249() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Floor floor0 = new Floor();
    double double0 = pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, 1.0E-6, (double) 793);
    assertEquals(793.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test0250,"public void test0250() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Floor floor0 = new Floor();
    double double0 = pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, 1.0E-6, (double) 793);
    assertEquals(1.0E-6, double0, 0.01);
}",0,
project,0,test0351,"public void test0351() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertNotNull(pegasusSolver0);
}",0,assertNotNull(pegasusSolver0)
project,0,test0352,"public void test0352() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(1.0E-14, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test0353,"public void test0353() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test0354,"public void test0354() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test0355,"public void test0355() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test0356,"public void test0356() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(0.0, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test0357,"public void test0357() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test0358,"public void test0358() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
    assertNotNull(sigmoid0);
}",0,assertNotNull(sigmoid0)
project,0,test0359,"public void test0359() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
    UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
    assertNotNull(univariateRealFunction0);
}",0,assertNotNull(univariateRealFunction0)
project,0,test0360,"public void test0360() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
    UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
    assertEquals(1.0E-14, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test0361,"public void test0361() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
    UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
    assertEquals((-1221.75060325), pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test0362,"public void test0362() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
    UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test0363,"public void test0363() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
    UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
    assertEquals((-2993.2715265), pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test0364,"public void test0364() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
    UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
    assertEquals(549.77032, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test0365,"public void test0365() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
    UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
    assertEquals(0.0, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test0366,"public void test0366() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
    UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
    assertEquals((-2993.2715265), double0, 0.01);
}",0,
project,0,test0467,"public void test0467() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    assertNotNull(regulaFalsiSolver0);
}",0,assertNotNull(regulaFalsiSolver0)
project,0,test0468,"public void test0468() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    assertEquals(0.0, regulaFalsiSolver0.getMin(), 0.01);
}",0,
project,0,test0469,"public void test0469() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    assertEquals(1.0E-15, regulaFalsiSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test0470,"public void test0470() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    assertEquals(0.0, regulaFalsiSolver0.getStartValue(), 0.01);
}",0,
project,0,test0471,"public void test0471() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    assertEquals(0.0, regulaFalsiSolver0.getMax(), 0.01);
}",0,
project,0,test0472,"public void test0472() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    assertEquals(1.176342548272881E-8, regulaFalsiSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test0473,"public void test0473() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    assertEquals(1.176342548272881E-8, regulaFalsiSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test0474,"public void test0474() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    assertNotNull(harmonicOscillator0);
}",0,assertNotNull(harmonicOscillator0)
project,0,test0475,"public void test0475() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    assertNotNull(univariateRealFunction0);
}",0,assertNotNull(univariateRealFunction0)
project,0,test0476,"public void test0476() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    assertEquals(0.0, regulaFalsiSolver0.getMin(), 0.01);
}",0,
project,0,test0477,"public void test0477() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    assertEquals(1.0E-15, regulaFalsiSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test0478,"public void test0478() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    assertEquals(0.0, regulaFalsiSolver0.getStartValue(), 0.01);
}",0,
project,0,test0479,"public void test0479() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    assertEquals(0.0, regulaFalsiSolver0.getMax(), 0.01);
}",0,
project,0,test0480,"public void test0480() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    assertEquals(1.176342548272881E-8, regulaFalsiSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test0481,"public void test0481() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    assertEquals(1.176342548272881E-8, regulaFalsiSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test0482,"public void test0482() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test0483,"public void test0483() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    double double1 = regulaFalsiSolver0.doSolve();
    assertEquals(double1, double0, 0.01);
}",0,
project,0,test0484,"public void test0484() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    double double1 = regulaFalsiSolver0.doSolve();
    assertEquals(0.0, regulaFalsiSolver0.getMin(), 0.01);
}",0,
project,0,test0485,"public void test0485() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    double double1 = regulaFalsiSolver0.doSolve();
    assertEquals(1.0E-15, regulaFalsiSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test0486,"public void test0486() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    double double1 = regulaFalsiSolver0.doSolve();
    assertEquals(0.0, regulaFalsiSolver0.getStartValue(), 0.01);
}",0,
project,0,test0487,"public void test0487() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    double double1 = regulaFalsiSolver0.doSolve();
    assertEquals(0.0, regulaFalsiSolver0.getMax(), 0.01);
}",0,
project,0,test0488,"public void test0488() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    double double1 = regulaFalsiSolver0.doSolve();
    assertEquals(1.176342548272881E-8, regulaFalsiSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test0489,"public void test0489() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    double double1 = regulaFalsiSolver0.doSolve();
    assertEquals(1.176342548272881E-8, regulaFalsiSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test0490,"public void test0490() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    double double1 = regulaFalsiSolver0.doSolve();
    assertEquals(0.0, double1, 0.01);
}",0,
project,0,test0591,"public void test0591() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertNotNull(pegasusSolver0);
}",0,assertNotNull(pegasusSolver0)
project,0,test0592,"public void test0592() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(0.0, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test0593,"public void test0593() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test0594,"public void test0594() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test0595,"public void test0595() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test0596,"public void test0596() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(1.0E-14, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test0597,"public void test0597() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test0598,"public void test0598() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    assertNotNull(gaussian0);
}",0,
project,0,test0599,"public void test0599() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    assertNotNull(univariateRealFunction0);
}",0,assertNotNull(univariateRealFunction0)
project,0,test05100,"public void test05100() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    assertEquals(2608.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test05101,"public void test05101() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    assertEquals(0.0, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test05102,"public void test05102() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test05103,"public void test05103() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    assertEquals(1.0E-14, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test05104,"public void test05104() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    assertEquals((-1.504961346353674E-8), pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test05105,"public void test05105() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    assertEquals(1303.999999992475, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test05106,"public void test05106() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    assertEquals(8.784354577073827E-9, double0, 0.01);
}",0,
project,0,test05107,"public void test05107() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    double double1 = pegasusSolver0.doSolve();
    assertEquals(double1, double0, 0.01);
}",0,
project,0,test05108,"public void test05108() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    double double1 = pegasusSolver0.doSolve();
    assertEquals(2608.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test05109,"public void test05109() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    double double1 = pegasusSolver0.doSolve();
    assertEquals(0.0, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test05110,"public void test05110() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    double double1 = pegasusSolver0.doSolve();
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test05111,"public void test05111() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    double double1 = pegasusSolver0.doSolve();
    assertEquals(1.0E-14, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test05112,"public void test05112() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    double double1 = pegasusSolver0.doSolve();
    assertEquals((-1.504961346353674E-8), pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test05113,"public void test05113() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    double double1 = pegasusSolver0.doSolve();
    assertEquals(1303.999999992475, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test05114,"public void test05114() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    double double1 = pegasusSolver0.doSolve();
    assertEquals(8.784354577073827E-9, double1, 0.01);
}",0,
project,0,test06115,"public void test06115() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
    assertNotNull(illinoisSolver0);
}",0,assertNotNull(illinoisSolver0)
project,0,test06116,"public void test06116() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
    assertEquals((-69.934811), illinoisSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test06117,"public void test06117() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
    assertEquals(0.0, illinoisSolver0.getMax(), 0.01);
}",0,
project,0,test06118,"public void test06118() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
    assertEquals(0.0, illinoisSolver0.getMin(), 0.01);
}",0,
project,0,test06119,"public void test06119() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
    assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test06120,"public void test06120() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
    assertEquals((-69.934811), illinoisSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test06121,"public void test06121() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
    assertEquals(0.0, illinoisSolver0.getStartValue(), 0.01);
}",0,
project,0,test06123,"public void test06123() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
    Atanh atanh0 = new Atanh();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    // Undeclared exception!
    try {
        illinoisSolver0.solve(1, (UnivariateRealFunction) atanh0, (-2621.940926377), (-269.5762), allowedSolution0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // illegal state: maximal count (1) exceeded: evaluations
        //
        verifyException(""org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver"", e);
    }
}",0,
project,0,test07124,"public void test07124() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertNotNull(pegasusSolver0);
}",0,
project,0,test07125,"public void test07125() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(3128.7, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test07126,"public void test07126() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(2725.29567932, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test07127,"public void test07127() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test07128,"public void test07128() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test07129,"public void test07129() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test07130,"public void test07130() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test07132,"public void test07132() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    // Undeclared exception!
    try {
        pegasusSolver0.solve(11, (UnivariateRealFunction) sinc0, 3128.7, 0.0, allowedSolution0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // endpoints do not specify an interval: [3,128.7, 0]
        //
        verifyException(""org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils"", e);
    }
}",0,
project,0,test08133,"public void test08133() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
    assertNotNull(illinoisSolver0);
}",0,assertNotNull(illinoisSolver0)
project,0,test08134,"public void test08134() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
    assertEquals((-1.5707963267948966), illinoisSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test08135,"public void test08135() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
    assertEquals(0.0, illinoisSolver0.getMin(), 0.01);
}",0,
project,0,test08136,"public void test08136() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
    assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test08137,"public void test08137() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
    assertEquals(0.0, illinoisSolver0.getStartValue(), 0.01);
}",0,
project,0,test08138,"public void test08138() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
    assertEquals(0.0, illinoisSolver0.getMax(), 0.01);
}",0,
project,0,test08139,"public void test08139() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
    assertEquals((-1.5707963267948966), illinoisSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test08141,"public void test08141() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
    Identity identity0 = new Identity();
    // Undeclared exception!
    try {
        illinoisSolver0.solve(2432, (UnivariateRealFunction) identity0, (-1.5707963267948966), 1.4153871807274658, (AllowedSolution) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.analysis.solvers.BaseSecantSolver"", e);
    }
}",0,
project,0,test09142,"public void test09142() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver();
    assertNotNull(pegasusSolver0);
}",0,assertNotNull(pegasusSolver0)
project,0,test09143,"public void test09143() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver();
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test09144,"public void test09144() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver();
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test09145,"public void test09145() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver();
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test09146,"public void test09146() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver();
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test09147,"public void test09147() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver();
    assertEquals(1.0E-6, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test09148,"public void test09148() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver();
    assertEquals(1.0E-14, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test09149,"public void test09149() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver();
    Gaussian gaussian0 = new Gaussian();
    assertNotNull(gaussian0);
}",0,
project,0,test09150,"public void test09150() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver();
    Gaussian gaussian0 = new Gaussian();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    // Undeclared exception!
    try {
        pegasusSolver0.solve((-2943), (UnivariateRealFunction) gaussian0, (-2246.38), (-532.00254439), (-219.1901488425366), allowedSolution0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // illegal state: maximal count (-2,943) exceeded: evaluations
        //
        verifyException(""org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver"", e);
    }
}",0,
project,0,test10151,"public void test10151() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
    assertNotNull(pegasusSolver0);
}",0,
project,0,test10152,"public void test10152() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test10153,"public void test10153() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
    assertEquals((-4.8559), pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test10154,"public void test10154() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test10155,"public void test10155() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
    assertEquals((-4.8559), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test10156,"public void test10156() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test10157,"public void test10157() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test10159,"public void test10159() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    // Undeclared exception!
    try {
        pegasusSolver0.solve(5, (UnivariateRealFunction) cbrt0, (-4.8559), (-465.9968625720741), 1331.339230942915, allowedSolution0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // endpoints do not specify an interval: [-4.856, -465.997]
        //
        verifyException(""org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils"", e);
    }
}",0,
project,0,test11160,"public void test11160() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    assertNotNull(regulaFalsiSolver0);
}",0,assertNotNull(regulaFalsiSolver0)
project,0,test11161,"public void test11161() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    assertEquals(0.0, regulaFalsiSolver0.getStartValue(), 0.01);
}",0,
project,0,test11162,"public void test11162() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    assertEquals(1.0E-15, regulaFalsiSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test11163,"public void test11163() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    assertEquals(0.0, regulaFalsiSolver0.getMax(), 0.01);
}",0,
project,0,test11164,"public void test11164() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    assertEquals(1.0E-6, regulaFalsiSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test11165,"public void test11165() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    assertEquals(0.0, regulaFalsiSolver0.getMin(), 0.01);
}",0,
project,0,test11166,"public void test11166() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    assertEquals(1.0E-14, regulaFalsiSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test11168,"public void test11168() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    Floor floor0 = new Floor();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    // Undeclared exception!
    try {
        regulaFalsiSolver0.solve(2979, (UnivariateRealFunction) floor0, 359.7455671164, (double) 2979, (double) 2979, allowedSolution0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // function values at endpoints do not have different signs, endpoints: [359.746, 2,979], values: [359, 2,979]
        //
        verifyException(""org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils"", e);
    }
}",0,
project,0,test12169,"public void test12169() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertNotNull(pegasusSolver0);
}",0,assertNotNull(pegasusSolver0)
project,0,test12170,"public void test12170() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test12171,"public void test12171() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test12172,"public void test12172() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test12173,"public void test12173() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals(2725.29567932, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test12174,"public void test12174() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals((-360.07737924462), pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test12175,"public void test12175() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test12177,"public void test12177() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    Sinc sinc0 = new Sinc();
    // Undeclared exception!
    try {
        pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, (AllowedSolution) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.analysis.solvers.BaseSecantSolver"", e);
    }
}",0,
project,0,test13178,"public void test13178() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertNotNull(pegasusSolver0);
}",0,assertNotNull(pegasusSolver0)
project,0,test13179,"public void test13179() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(1.0E-14, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test13180,"public void test13180() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test13181,"public void test13181() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test13182,"public void test13182() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test13183,"public void test13183() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test13184,"public void test13184() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    assertEquals(0.0, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test13185,"public void test13185() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    assertNotNull(gaussian0);
}",0,
project,0,test13186,"public void test13186() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    // Undeclared exception!
    try {
        pegasusSolver0.solve((-3237), (UnivariateRealFunction) gaussian0, 6.4281638347818415E-6, 1.9868161777724352E-8, 1055.616);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // illegal state: maximal count (-3,237) exceeded: evaluations
        //
        verifyException(""org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver"", e);
    }
}",0,
project,0,test14187,"public void test14187() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertNotNull(pegasusSolver0);
}",0,
project,0,test14188,"public void test14188() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(3128.7, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test14189,"public void test14189() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(2725.29567932, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test14190,"public void test14190() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test14191,"public void test14191() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test14192,"public void test14192() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test14193,"public void test14193() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test14195,"public void test14195() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Floor floor0 = new Floor();
    // Undeclared exception!
    try {
        pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, (-0.12502530217170715), (double) 793);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // endpoints do not specify an interval: [793, -0.125]
        //
        verifyException(""org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils"", e);
    }
}",0,
project,0,test15196,"public void test15196() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), (-1.0));
    assertNotNull(illinoisSolver0);
}",0,
project,0,test15197,"public void test15197() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), (-1.0));
    assertEquals((-1.0), illinoisSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test15198,"public void test15198() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), (-1.0));
    assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test15199,"public void test15199() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), (-1.0));
    assertEquals(0.0, illinoisSolver0.getMin(), 0.01);
}",0,
project,0,test15200,"public void test15200() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), (-1.0));
    assertEquals(0.0, illinoisSolver0.getMax(), 0.01);
}",0,
project,0,test15201,"public void test15201() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), (-1.0));
    assertEquals(0.0, illinoisSolver0.getStartValue(), 0.01);
}",0,
project,0,test15202,"public void test15202() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), (-1.0));
    assertEquals((-1.0), illinoisSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test15203,"public void test15203() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), (-1.0));
    // Undeclared exception!
    try {
        illinoisSolver0.solve(1023, (UnivariateRealFunction) null, (-2407.914897403), (-2407.728119), (-1.0));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // null is not allowed
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test16204,"public void test16204() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    assertNotNull(pegasusSolver0);
}",0,
project,0,test16205,"public void test16205() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    assertEquals(3128.7, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test16206,"public void test16206() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test16207,"public void test16207() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test16208,"public void test16208() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    assertEquals((-360.07737924462), pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test16209,"public void test16209() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test16210,"public void test16210() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test16211,"public void test16211() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    // Undeclared exception!
    try {
        pegasusSolver0.doSolve();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // illegal state: maximal count (0) exceeded: evaluations
        //
        verifyException(""org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver"", e);
    }
}",0,
project,0,test17212,"public void test17212() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    assertNotNull(illinoisSolver0);
}",0,
project,0,test17213,"public void test17213() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test17214,"public void test17214() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    assertEquals(0.0, illinoisSolver0.getMax(), 0.01);
}",0,
project,0,test17215,"public void test17215() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    assertEquals(0.0, illinoisSolver0.getMin(), 0.01);
}",0,
project,0,test17216,"public void test17216() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    assertEquals(1.0E-6, illinoisSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test17217,"public void test17217() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    assertEquals(0.0, illinoisSolver0.getStartValue(), 0.01);
}",0,
project,0,test17218,"public void test17218() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    assertEquals(1.0E-14, illinoisSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test17220,"public void test17220() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    Cos cos0 = new Cos();
    illinoisSolver0.setup(5, cos0, 5, 0.0, 0.0);
    assertEquals(5.0, illinoisSolver0.getMin(), 0.01);
}",0,
project,0,test17221,"public void test17221() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    Cos cos0 = new Cos();
    illinoisSolver0.setup(5, cos0, 5, 0.0, 0.0);
    assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test17222,"public void test17222() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    Cos cos0 = new Cos();
    illinoisSolver0.setup(5, cos0, 5, 0.0, 0.0);
    assertEquals(0.0, illinoisSolver0.getMax(), 0.01);
}",0,
project,0,test17223,"public void test17223() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    Cos cos0 = new Cos();
    illinoisSolver0.setup(5, cos0, 5, 0.0, 0.0);
    assertEquals(1.0E-6, illinoisSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test17224,"public void test17224() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    Cos cos0 = new Cos();
    illinoisSolver0.setup(5, cos0, 5, 0.0, 0.0);
    assertEquals(0.0, illinoisSolver0.getStartValue(), 0.01);
}",0,
project,0,test17225,"public void test17225() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    Cos cos0 = new Cos();
    illinoisSolver0.setup(5, cos0, 5, 0.0, 0.0);
    assertEquals(1.0E-14, illinoisSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test17226,"public void test17226() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    Cos cos0 = new Cos();
    illinoisSolver0.setup(5, cos0, 5, 0.0, 0.0);
    // Undeclared exception!
    try {
        illinoisSolver0.doSolve();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // endpoints do not specify an interval: [5, 0]
        //
        verifyException(""org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils"", e);
    }
}",0,
project,0,test18227,"public void test18227() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    assertNotNull(regulaFalsiSolver0);
}",0,assertNotNull(regulaFalsiSolver0)
project,0,test18228,"public void test18228() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    assertEquals((-208.0), regulaFalsiSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test18229,"public void test18229() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    assertEquals(0.0, regulaFalsiSolver0.getMin(), 0.01);
}",0,
project,0,test18230,"public void test18230() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    assertEquals(0.0, regulaFalsiSolver0.getMax(), 0.01);
}",0,
project,0,test18231,"public void test18231() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    assertEquals(1.0E-15, regulaFalsiSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test18232,"public void test18232() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    assertEquals((-208.0), regulaFalsiSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test18233,"public void test18233() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    assertEquals(0.0, regulaFalsiSolver0.getStartValue(), 0.01);
}",0,
project,0,test18234,"public void test18234() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
    assertNotNull(logit0);
}",0,assertNotNull(logit0)
project,0,test18235,"public void test18235() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
    UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
    assertNotNull(univariateRealFunction0);
}",0,assertNotNull(univariateRealFunction0)
project,0,test18236,"public void test18236() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
    UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
    regulaFalsiSolver0.setup(282, univariateRealFunction0, (-208.0), (-2.391465199580939E-10), (-208.0));
    assertEquals((-208.0), regulaFalsiSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test18237,"public void test18237() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
    UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
    regulaFalsiSolver0.setup(282, univariateRealFunction0, (-208.0), (-2.391465199580939E-10), (-208.0));
    assertEquals(1.0E-15, regulaFalsiSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test18238,"public void test18238() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
    UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
    regulaFalsiSolver0.setup(282, univariateRealFunction0, (-208.0), (-2.391465199580939E-10), (-208.0));
    assertEquals((-208.0), regulaFalsiSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test18239,"public void test18239() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
    UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
    regulaFalsiSolver0.setup(282, univariateRealFunction0, (-208.0), (-2.391465199580939E-10), (-208.0));
    assertEquals((-208.0), regulaFalsiSolver0.getMin(), 0.01);
}",0,
project,0,test18240,"public void test18240() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
    UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
    regulaFalsiSolver0.setup(282, univariateRealFunction0, (-208.0), (-2.391465199580939E-10), (-208.0));
    assertEquals((-2.391465199580939E-10), regulaFalsiSolver0.getMax(), 0.01);
}",0,
project,0,test18241,"public void test18241() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
    UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
    regulaFalsiSolver0.setup(282, univariateRealFunction0, (-208.0), (-2.391465199580939E-10), (-208.0));
    assertEquals((-208.0), regulaFalsiSolver0.getStartValue(), 0.01);
}",0,
project,0,test18242,"public void test18242() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
    UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
    regulaFalsiSolver0.setup(282, univariateRealFunction0, (-208.0), (-2.391465199580939E-10), (-208.0));
    // Undeclared exception!
    try {
        regulaFalsiSolver0.doSolve();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // function values at endpoints do not have different signs, endpoints: [-208, -0], values: [\u221E, \u221E]
        //
        verifyException(""org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils"", e);
    }
}",0,
project,0,test19243,"public void test19243() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
    assertNotNull(pegasusSolver0);
}",0,
project,0,test19244,"public void test19244() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
    assertEquals(2725.0, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test19245,"public void test19245() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test19246,"public void test19246() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
    assertEquals(1.0E-14, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test19247,"public void test19247() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test19248,"public void test19248() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test19249,"public void test19249() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test19251,"public void test19251() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(14, (UnivariateRealFunction) sinc0, (-1.5707963267948966), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(951.9258407496, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test19252,"public void test19252() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(14, (UnivariateRealFunction) sinc0, (-1.5707963267948966), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals((-1.5707963267948966), pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test19253,"public void test19253() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(14, (UnivariateRealFunction) sinc0, (-1.5707963267948966), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(2725.0, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test19254,"public void test19254() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(14, (UnivariateRealFunction) sinc0, (-1.5707963267948966), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(1.0E-14, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test19255,"public void test19255() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(14, (UnivariateRealFunction) sinc0, (-1.5707963267948966), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test19256,"public void test19256() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(14, (UnivariateRealFunction) sinc0, (-1.5707963267948966), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(951.9258407496, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test19257,"public void test19257() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(14, (UnivariateRealFunction) sinc0, (-1.5707963267948966), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(951.8892378844107, double0, 0.01);
}",0,
project,0,test20258,"public void test20258() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertNotNull(pegasusSolver0);
}",0,
project,0,test20259,"public void test20259() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test20260,"public void test20260() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test20261,"public void test20261() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals((-360.07737924462), pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test20262,"public void test20262() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test20263,"public void test20263() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals(2725.29567932, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test20264,"public void test20264() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test20266,"public void test20266() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
    assertEquals(1.0E-6, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test20267,"public void test20267() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test20268,"public void test20268() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
    assertEquals(5.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test20269,"public void test20269() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
    assertEquals((-360.07737924462), pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test20270,"public void test20270() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
    assertEquals(2725.29567932, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test20271,"public void test20271() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
    assertEquals(5.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test20272,"public void test20272() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
    assertEquals(4.195388262479115, double0, 0.01);
}",0,
project,0,test21273,"public void test21273() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertNotNull(pegasusSolver0);
}",0,
project,0,test21274,"public void test21274() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test21275,"public void test21275() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test21276,"public void test21276() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals(2725.29567932, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test21277,"public void test21277() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test21278,"public void test21278() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals((-360.07737924462), pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test21279,"public void test21279() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test21281,"public void test21281() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(10, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(1.0E-6, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test21282,"public void test21282() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(10, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(951.9258407496, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test21283,"public void test21283() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(10, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(951.9258407496, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test21284,"public void test21284() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(10, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test21285,"public void test21285() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(10, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(2725.29567932, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test21286,"public void test21286() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(10, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals((-360.07737924462), pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test21287,"public void test21287() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(10, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(951.9025767054369, double0, 0.01);
}",0,
project,0,test22288,"public void test22288() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    assertNotNull(pegasusSolver0);
}",0,
project,0,test22289,"public void test22289() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test22290,"public void test22290() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test22291,"public void test22291() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test22292,"public void test22292() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    assertEquals(1.0E-14, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test22293,"public void test22293() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    assertEquals(6.849234071909364E-14, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test22294,"public void test22294() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test22296,"public void test22296() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test22297,"public void test22297() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
    assertEquals(0.5, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test22298,"public void test22298() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
    assertEquals((-732.0), pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test22299,"public void test22299() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
    assertEquals(1.0E-14, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test22300,"public void test22300() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
    assertEquals(3128.7, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test22301,"public void test22301() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
    assertEquals(6.849234071909364E-14, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test22302,"public void test22302() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
    assertEquals((-1.9679668874187844E-14), double0, 0.01);
}",0,
project,0,test22303,"public void test22303() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
    double double1 = pegasusSolver0.doSolve();
    assertEquals(double1, double0, 0.01);
}",0,
project,0,test22304,"public void test22304() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
    double double1 = pegasusSolver0.doSolve();
    assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test22305,"public void test22305() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
    double double1 = pegasusSolver0.doSolve();
    assertEquals(0.5, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test22306,"public void test22306() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
    double double1 = pegasusSolver0.doSolve();
    assertEquals((-732.0), pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test22307,"public void test22307() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
    double double1 = pegasusSolver0.doSolve();
    assertEquals(1.0E-14, pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test22308,"public void test22308() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
    double double1 = pegasusSolver0.doSolve();
    assertEquals(3128.7, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test22309,"public void test22309() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
    double double1 = pegasusSolver0.doSolve();
    assertEquals(6.849234071909364E-14, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test22310,"public void test22310() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
    double double1 = pegasusSolver0.doSolve();
    assertEquals((-1.9679668874187844E-14), double1, 0.01);
}",0,
project,0,test23311,"public void test23311() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertNotNull(pegasusSolver0);
}",0,
project,0,test23312,"public void test23312() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test23313,"public void test23313() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test23314,"public void test23314() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(2725.29567932, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test23315,"public void test23315() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test23316,"public void test23316() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test23317,"public void test23317() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(3128.7, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test23319,"public void test23319() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(2725.29567932, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test23320,"public void test23320() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(951.9258407496, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test23321,"public void test23321() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals((-1.9567994573865304), pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test23322,"public void test23322() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test23323,"public void test23323() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(3128.7, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test23324,"public void test23324() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(951.9258407496, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test23325,"public void test23325() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(951.9258407496, double0, 0.01);
}",0,
project,0,test24326,"public void test24326() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    assertNotNull(regulaFalsiSolver0);
}",0,assertNotNull(regulaFalsiSolver0)
project,0,test24327,"public void test24327() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    assertEquals(1.0E-15, regulaFalsiSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test24328,"public void test24328() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    assertEquals(0.0, regulaFalsiSolver0.getMax(), 0.01);
}",0,
project,0,test24329,"public void test24329() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    assertEquals(0.0, regulaFalsiSolver0.getMin(), 0.01);
}",0,
project,0,test24330,"public void test24330() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    assertEquals(1.0E-14, regulaFalsiSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test24331,"public void test24331() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    assertEquals(1.0E-6, regulaFalsiSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test24332,"public void test24332() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    assertEquals(0.0, regulaFalsiSolver0.getStartValue(), 0.01);
}",0,
project,0,test24334,"public void test24334() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    Sin sin0 = new Sin();
    double double0 = regulaFalsiSolver0.solve(43, (UnivariateRealFunction) sin0, (-2248.6), 3113.5035287079068);
    assertEquals(432.4517643539534, regulaFalsiSolver0.getStartValue(), 0.01);
}",0,
project,0,test24335,"public void test24335() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    Sin sin0 = new Sin();
    double double0 = regulaFalsiSolver0.solve(43, (UnivariateRealFunction) sin0, (-2248.6), 3113.5035287079068);
    assertEquals(1.0E-15, regulaFalsiSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test24336,"public void test24336() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    Sin sin0 = new Sin();
    double double0 = regulaFalsiSolver0.solve(43, (UnivariateRealFunction) sin0, (-2248.6), 3113.5035287079068);
    assertEquals(1.0E-14, regulaFalsiSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test24337,"public void test24337() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    Sin sin0 = new Sin();
    double double0 = regulaFalsiSolver0.solve(43, (UnivariateRealFunction) sin0, (-2248.6), 3113.5035287079068);
    assertEquals((-2248.6), regulaFalsiSolver0.getMin(), 0.01);
}",0,
project,0,test24338,"public void test24338() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    Sin sin0 = new Sin();
    double double0 = regulaFalsiSolver0.solve(43, (UnivariateRealFunction) sin0, (-2248.6), 3113.5035287079068);
    assertEquals(1.0E-6, regulaFalsiSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test24339,"public void test24339() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    Sin sin0 = new Sin();
    double double0 = regulaFalsiSolver0.solve(43, (UnivariateRealFunction) sin0, (-2248.6), 3113.5035287079068);
    assertEquals(3113.5035287079068, regulaFalsiSolver0.getMax(), 0.01);
}",0,
project,0,test24340,"public void test24340() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    Sin sin0 = new Sin();
    double double0 = regulaFalsiSolver0.solve(43, (UnivariateRealFunction) sin0, (-2248.6), 3113.5035287079068);
    assertEquals(3100.751949093126, double0, 0.01);
}",0,
project,0,test25341,"public void test25341() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertNotNull(pegasusSolver0);
}",0,
project,0,test25342,"public void test25342() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test25343,"public void test25343() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(3128.7, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test25344,"public void test25344() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(2725.29567932, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test25345,"public void test25345() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test25346,"public void test25346() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test25347,"public void test25347() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test25349,"public void test25349() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 2725.29567932, 2725.29567932, allowedSolution0);
    assertEquals(2725.29567932, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test25350,"public void test25350() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 2725.29567932, 2725.29567932, allowedSolution0);
    assertEquals(3128.7, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test25351,"public void test25351() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 2725.29567932, 2725.29567932, allowedSolution0);
    assertEquals(2725.29567932, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test25352,"public void test25352() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 2725.29567932, 2725.29567932, allowedSolution0);
    assertEquals((-1.9567994573865304), pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test25353,"public void test25353() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 2725.29567932, 2725.29567932, allowedSolution0);
    assertEquals(2725.29567932, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test25354,"public void test25354() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 2725.29567932, 2725.29567932, allowedSolution0);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test25355,"public void test25355() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 2725.29567932, 2725.29567932, allowedSolution0);
    assertEquals(2723.18494960874, double0, 0.01);
}",0,
project,0,test26356,"public void test26356() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertNotNull(pegasusSolver0);
}",0,
project,0,test26357,"public void test26357() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(2725.29567932, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test26358,"public void test26358() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(3128.7, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test26359,"public void test26359() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test26360,"public void test26360() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test26361,"public void test26361() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test26362,"public void test26362() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test26364,"public void test26364() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1207.0657488), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(2725.29567932, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test26365,"public void test26365() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1207.0657488), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(951.9258407496, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test26366,"public void test26366() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1207.0657488), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(3128.7, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test26367,"public void test26367() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1207.0657488), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals((-1207.0657488), pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test26368,"public void test26368() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1207.0657488), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test26369,"public void test26369() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1207.0657488), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(951.9258407496, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test26370,"public void test26370() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1207.0657488), 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(951.9258407496, double0, 0.01);
}",0,
project,0,test27371,"public void test27371() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertNotNull(pegasusSolver0);
}",0,
project,0,test27372,"public void test27372() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(3128.7, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test27373,"public void test27373() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test27374,"public void test27374() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(2725.29567932, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test27375,"public void test27375() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test27376,"public void test27376() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test27377,"public void test27377() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test27379,"public void test27379() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(6, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(951.9258407496, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test27380,"public void test27380() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(6, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(3128.7, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test27381,"public void test27381() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(6, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test27382,"public void test27382() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(6, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(2725.29567932, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test27383,"public void test27383() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(6, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(1.0E-6, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test27384,"public void test27384() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(6, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(951.9258407496, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test27385,"public void test27385() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(6, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    assertEquals(1.0E-6, double0, 0.01);
}",0,
project,0,test28386,"public void test28386() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
    assertNotNull(pegasusSolver0);
}",0,
project,0,test28387,"public void test28387() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test28388,"public void test28388() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test28389,"public void test28389() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
    assertEquals(1.0, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test28390,"public void test28390() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
    assertEquals((-360.07737924462), pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test28391,"public void test28391() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test28392,"public void test28392() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test28394,"public void test28394() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 952.2252843414894, 952.2252843414894, allowedSolution0);
    assertEquals(1.0, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test28395,"public void test28395() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 952.2252843414894, 952.2252843414894, allowedSolution0);
    assertEquals(952.2252843414894, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test28396,"public void test28396() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 952.2252843414894, 952.2252843414894, allowedSolution0);
    assertEquals((-360.07737924462), pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test28397,"public void test28397() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 952.2252843414894, 952.2252843414894, allowedSolution0);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test28398,"public void test28398() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 952.2252843414894, 952.2252843414894, allowedSolution0);
    assertEquals((-1.9567994573865304), pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test28399,"public void test28399() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 952.2252843414894, 952.2252843414894, allowedSolution0);
    assertEquals(952.2252843414894, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test28400,"public void test28400() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 952.2252843414894, 952.2252843414894, allowedSolution0);
    assertEquals(951.9025808688075, double0, 0.01);
}",0,
project,0,test29401,"public void test29401() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    assertNotNull(pegasusSolver0);
}",0,
project,0,test29402,"public void test29402() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    assertEquals(3128.7, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test29403,"public void test29403() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test29404,"public void test29404() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test29405,"public void test29405() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    assertEquals((-360.07737924462), pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test29406,"public void test29406() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test29407,"public void test29407() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test29409,"public void test29409() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 3128.7, 3128.7, allowedSolution0);
    assertEquals(3128.7, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
}",0,
project,0,test29410,"public void test29410() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 3128.7, 3128.7, allowedSolution0);
    assertEquals((-360.07737924462), pegasusSolver0.getRelativeAccuracy(), 0.01);
}",0,
project,0,test29411,"public void test29411() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 3128.7, 3128.7, allowedSolution0);
    assertEquals(3128.7, pegasusSolver0.getMax(), 0.01);
}",0,
project,0,test29412,"public void test29412() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 3128.7, 3128.7, allowedSolution0);
    assertEquals(3128.7, pegasusSolver0.getStartValue(), 0.01);
}",0,
project,0,test29413,"public void test29413() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 3128.7, 3128.7, allowedSolution0);
    assertEquals((-360.07737924462), pegasusSolver0.getAbsoluteAccuracy(), 0.01);
}",0,
project,0,test29414,"public void test29414() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 3128.7, 3128.7, allowedSolution0);
    assertEquals(1.0E-6, pegasusSolver0.getMin(), 0.01);
}",0,
project,0,test29415,"public void test29415() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 3128.7, 3128.7, allowedSolution0);
    assertEquals(3128.3795084980015, double0, 0.01);
}",0,
project,0,test30416,"public void test30416() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
    Identity identity0 = new Identity();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = illinoisSolver0.solve(2432, (UnivariateRealFunction) identity0, (-1.5707963267948966), 1.4153871807274658, allowedSolution0);
    assertEquals((-0.07770457303371536), illinoisSolver0.getStartValue(), 0.01);
}",0,
project,0,test30417,"public void test30417() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
    Identity identity0 = new Identity();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = illinoisSolver0.solve(2432, (UnivariateRealFunction) identity0, (-1.5707963267948966), 1.4153871807274658, allowedSolution0);
    assertEquals((-2.220446049250313E-16), double0, 0.01);
}",0,
project,0,test31418,"public void test31418() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-2914.8166312), (-585.8036717639643));
    Cos cos0 = new Cos();
    // Undeclared exception!
    try {
        regulaFalsiSolver0.solve(2753, (UnivariateRealFunction) cos0, (-2914.8166312), 2725.29567932, 2725.0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // illegal state: maximal count (2,753) exceeded: evaluations
        //
        verifyException(""org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver"", e);
    }
}",0,
project,0,test32419,"public void test32419() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver(916.737, 916.737);
    Abs abs0 = new Abs();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = illinoisSolver0.solve(750, (UnivariateRealFunction) abs0, 916.737, 0.0, allowedSolution0);
    assertEquals(458.3685, illinoisSolver0.getStartValue(), 0.01);
}",0,
project,0,test32420,"public void test32420() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver(916.737, 916.737);
    Abs abs0 = new Abs();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = illinoisSolver0.solve(750, (UnivariateRealFunction) abs0, 916.737, 0.0, allowedSolution0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test33421,"public void test33421() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver(916.737, 916.737);
    Abs abs0 = new Abs();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = illinoisSolver0.solve(750, (UnivariateRealFunction) abs0, 0.0, 0.0, 916.737, allowedSolution0);
    assertEquals(916.737, illinoisSolver0.getStartValue(), 0.01);
}",0,
project,0,test33422,"public void test33422() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver(916.737, 916.737);
    Abs abs0 = new Abs();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = illinoisSolver0.solve(750, (UnivariateRealFunction) abs0, 0.0, 0.0, 916.737, allowedSolution0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test34423,"public void test34423() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0, 0.0, 0.0);
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    // Undeclared exception!
    try {
        pegasusSolver0.solve(0, (UnivariateRealFunction) null, (double) 0, (-1645.0), allowedSolution0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // null is not allowed
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
