project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(59.48167924, 59.48167924, 97);
    double double0 = poissonDistributionImpl0.cumulativeProbability(0);
    assertEquals(1.4703980961654014E-26, double0, 0.01);
}",0,
project,0,test011,"public void test011() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(0.030589580535888672);
    double double0 = poissonDistributionImpl0.probability(1548);
    assertEquals(0.030589580535888672, poissonDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test012,"public void test012() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(0.030589580535888672);
    double double0 = poissonDistributionImpl0.probability(1548);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test023,"public void test023() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(4.9E-324, 4.9E-324, 32767);
    int int0 = poissonDistributionImpl0.sample();
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test024,"public void test024() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(4.9E-324, 4.9E-324, 32767);
    int int0 = poissonDistributionImpl0.sample();
    assertEquals(4.9E-324, poissonDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test035,"public void test035() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(1151.89, 1151.89);
    double double0 = poissonDistributionImpl0.normalApproximateProbability(0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test036,"public void test036() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(1151.89, 1151.89);
    double double0 = poissonDistributionImpl0.normalApproximateProbability(0);
    assertEquals(1151.89, poissonDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test047,"public void test047() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(4.9E-324, 4.9E-324, 32767);
    try {
        poissonDistributionImpl0.normalApproximateProbability(0);
        fail(""Expecting exception: Exception"");
    } catch (Exception e) {
        //
        // Continued fraction diverged to NaN for value \u221E
        //
        verifyException(""org.apache.commons.math.util.ContinuedFraction"", e);
    }
}",0,
project,0,test068,"public void test068() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(2322.1383677551, (-1425.3620083599687));
    try {
        poissonDistributionImpl0.cumulativeProbability(95);
        fail(""Expecting exception: Exception"");
    } catch (Exception e) {
        //
        // Continued fraction diverged to NaN for value 2,322.138
        //
        verifyException(""org.apache.commons.math.util.ContinuedFraction"", e);
    }
}",0,
project,0,test079,"public void test079() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(5.650007086920087E-9, 5.650007086920087E-9, 0);
    try {
        poissonDistributionImpl0.cumulativeProbability(2396);
        fail(""Expecting exception: Exception"");
    } catch (Exception e) {
        //
        // maximal number of iterations (0) exceeded
        //
        verifyException(""org.apache.commons.math.special.Gamma"", e);
    }
}",0,
project,0,test0810,"public void test0810() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = null;
    try {
        poissonDistributionImpl0 = new PoissonDistributionImpl((-2289.0505632029985), (-36));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // the Poisson mean must be positive (-2,289.051)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",0,
project,0,test0911,"public void test0911() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = null;
    try {
        poissonDistributionImpl0 = new PoissonDistributionImpl(0.0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // the Poisson mean must be positive (0)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",0,
project,0,test1012,"public void test1012() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = null;
    try {
        poissonDistributionImpl0 = new PoissonDistributionImpl((-1067.2315), 0.0, 10000000);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // the Poisson mean must be positive (-1,067.232)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test1113,"public void test1113() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(1427.9729143405275, 1427.9729143405275, 1439);
    double double0 = poissonDistributionImpl0.cumulativeProbability(Integer.MAX_VALUE);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test1114,"public void test1114() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(1427.9729143405275, 1427.9729143405275, 1439);
    double double0 = poissonDistributionImpl0.cumulativeProbability(Integer.MAX_VALUE);
    assertEquals(1427.9729143405275, poissonDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test1215,"public void test1215() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(1427.9729143405275, 1427.9729143405275, 1439);
    double double0 = poissonDistributionImpl0.cumulativeProbability((-603));
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test1216,"public void test1216() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(1427.9729143405275, 1427.9729143405275, 1439);
    double double0 = poissonDistributionImpl0.cumulativeProbability((-603));
    assertEquals(1427.9729143405275, poissonDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test1317,"public void test1317() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl((double) 5775, 5775);
    double double0 = poissonDistributionImpl0.probability(5775);
    assertEquals(0.005249619238996912, double0, 0.01);
}",0,
project,0,test1418,"public void test1418() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(1427.9729143405275, 1427.9729143405275, 1439);
    double double0 = poissonDistributionImpl0.probability(Integer.MAX_VALUE);
    assertEquals(1427.9729143405275, poissonDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test1419,"public void test1419() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(1427.9729143405275, 1427.9729143405275, 1439);
    double double0 = poissonDistributionImpl0.probability(Integer.MAX_VALUE);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test1520,"public void test1520() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(1427.9729143405275, 1427.9729143405275, 1439);
    double double0 = poissonDistributionImpl0.probability(0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test1621,"public void test1621() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(853.1);
    double double0 = poissonDistributionImpl0.probability((-278));
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test1622,"public void test1622() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(853.1);
    double double0 = poissonDistributionImpl0.probability((-278));
    assertEquals(853.1, poissonDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test1723,"public void test1723() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = null;
    try {
        poissonDistributionImpl0 = new PoissonDistributionImpl((-278.599), (-278.599));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // the Poisson mean must be positive (-278.599)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test1824,"public void test1824() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(1427.9729143405275, 1427.9729143405275, 1439);
    double double0 = poissonDistributionImpl0.normalApproximateProbability(1439);
    assertEquals(1427.9729143405275, poissonDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test1825,"public void test1825() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(1427.9729143405275, 1427.9729143405275, 1439);
    double double0 = poissonDistributionImpl0.normalApproximateProbability(1439);
    assertEquals(0.6198328899546514, double0, 0.01);
}",0,
project,0,test2026,"public void test2026() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(1427.9729143405275, 1427.9729143405275, 1439);
    int int0 = poissonDistributionImpl0.getDomainUpperBound(10000000);
    assertEquals(1427.9729143405275, poissonDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test2027,"public void test2027() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(1427.9729143405275, 1427.9729143405275, 1439);
    int int0 = poissonDistributionImpl0.getDomainUpperBound(10000000);
    assertEquals(Integer.MAX_VALUE, int0);
}",0,"assertEquals(1, int0)"
project,0,test2128,"public void test2128() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(1427.9729143405275, 1427.9729143405275, 1439);
    int int0 = poissonDistributionImpl0.sample();
    assertEquals(1427.9729143405275, poissonDistributionImpl0.getMean(), 0.01);
}",0,
project,0,test2129,"public void test2129() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(1427.9729143405275, 1427.9729143405275, 1439);
    int int0 = poissonDistributionImpl0.sample();
    assertEquals(1435, int0);
}",0,"assertEquals(0, int0)"
project,0,test2230,"public void test2230() throws Throwable {
    PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(853.1);
    double double0 = poissonDistributionImpl0.getMean();
    assertEquals(853.1, double0, 0.01);
}",0,
