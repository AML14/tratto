project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    int[] intArray0 = new int[3];
    int int0 = 2618;
    intArray0[0] = 2618;
    int int1 = 2178;
    intArray0[1] = 2178;
    intArray0[2] = 14;
    MathUtils.distance(intArray0, intArray0);
    // Undeclared exception!
    try {
        MathUtils.distanceInf(intArray0, (int[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    MathUtils.binomialCoefficient(4191, 4191);
    MathUtils.factorialDouble(4191);
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = Double.POSITIVE_INFINITY;
    try {
        MathUtils.normalizeArray(doubleArray0, 1457.319362);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // Array contains an infinite element, \u221E at index 0
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test0032,"public void test0032() throws Throwable {
    int[] intArray0 = new int[0];
    MathUtils.distance1(intArray0, intArray0);
    MathUtils.distanceInf(intArray0, intArray0);
    int int0 = 0;
    MathUtils.round(3892.7F, 0, 0);
    MathUtils.pow((long) 0, 0);
    MathUtils.sinh((-6077.737308));
    MathUtils.binomialCoefficientLog(0, 0);
    MathUtils.distance(intArray0, intArray0);
    MathUtils.distanceInf(intArray0, intArray0);
    MathUtils.factorial(0);
    MathUtils.gcd(1726, 1726);
    MathUtils.sign(0);
    MathUtils.indicator((byte) 14);
    int[] intArray1 = new int[7];
    intArray1[0] = 0;
    intArray1[1] = 1726;
    intArray1[2] = (-3471);
    intArray1[3] = 0;
    intArray1[4] = 1726;
    intArray1[5] = (int) (byte) 1;
    intArray1[6] = 0;
    // Undeclared exception!
    try {
        MathUtils.distanceInf(intArray1, intArray0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 0
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test0053,"public void test0053() throws Throwable {
    MathUtils.indicator(2.2250738585072014E-308);
    MathUtils.indicator(1.1102230246251565E-16);
    MathUtils.sign(1770.7891F);
    MathUtils.sign(1030L);
    MathUtils.pow(3, 993L);
    // Undeclared exception!
    try {
        MathUtils.equals(1.1102230246251565E-16, (-2450.7073), 2146779092);
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test0064,"public void test0064() throws Throwable {
    double[] doubleArray0 = null;
    // Undeclared exception!
    try {
        MathUtils.normalizeArray((double[]) null, (-2308.0));
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test0085,"public void test0085() throws Throwable {
    int[] intArray0 = new int[0];
    MathUtils.distance1(intArray0, intArray0);
    MathUtils.distanceInf(intArray0, intArray0);
    MathUtils.round(3892.7F, 0, 0);
    MathUtils.pow((long) 0, 0);
    MathUtils.sinh((-6077.737308));
    MathUtils.binomialCoefficientLog(0, 0);
    MathUtils.distanceInf(intArray0, intArray0);
    MathUtils.factorial(0);
    MathUtils.gcd(1726, 1726);
    MathUtils.sign(0);
    MathUtils.indicator((byte) 14);
    MathUtils.lcm(393, (byte) 1);
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) 0;
    doubleArray0[1] = (double) (byte) 14;
    doubleArray0[2] = (-6077.737308);
    doubleArray0[3] = (double) 0;
    doubleArray0[4] = 0.0;
    doubleArray0[5] = 0.0;
    doubleArray0[6] = (double) 1L;
    doubleArray0[7] = (-1276.21716603516);
    MathUtils.distance1(doubleArray0, doubleArray0);
    // Undeclared exception!
    try {
        MathUtils.mulAndCheck(393, Integer.MIN_VALUE);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: mul
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test0106,"public void test0106() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = (-643.544327393);
    doubleArray0[1] = 828.9892002;
    MathUtils.equals(doubleArray0, doubleArray0);
    MathUtils.equals(828.9892002, Double.NEGATIVE_INFINITY);
    MathUtils.gcd(3, 3);
    double[] doubleArray1 = new double[9];
    doubleArray1[0] = Double.NEGATIVE_INFINITY;
    doubleArray1[1] = Double.NEGATIVE_INFINITY;
    doubleArray1[2] = 828.9892002;
    doubleArray1[3] = 828.9892002;
    doubleArray1[4] = Double.NEGATIVE_INFINITY;
    doubleArray1[5] = (-643.544327393);
    doubleArray1[6] = (double) 3;
    doubleArray1[7] = (double) 3;
    doubleArray1[8] = (double) 3;
    MathUtils.distance1(doubleArray0, doubleArray1);
    MathUtils.equals(doubleArray0, doubleArray0);
    MathUtils.indicator(0);
    byte byte0 = (byte) 0;
    MathUtils.indicator((byte) 0);
    MathUtils.log(1, 828.9892002);
    int int0 = (-1819);
    // Undeclared exception!
    try {
        MathUtils.factorialDouble((-1819));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for n!, got n = -1,819
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test0117,"public void test0117() throws Throwable {
    int int0 = Integer.MIN_VALUE;
    MathUtils.binomialCoefficient(3237, Integer.MIN_VALUE);
    byte byte0 = (byte) 0;
    MathUtils.indicator((byte) 0);
    MathUtils.sign((byte) 1);
    MathUtils.cosh((-1926.605913337));
    // Undeclared exception!
    try {
        MathUtils.round((-1739.42584287), Integer.MIN_VALUE, Integer.MIN_VALUE);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test0158,"public void test0158() throws Throwable {
    int int0 = 2147483624;
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficient(2147483624, 3225);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: multiply
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test0169,"public void test0169() throws Throwable {
    int int0 = (-2147483646);
    // Undeclared exception!
    try {
        MathUtils.addAndCheck((-2147483646), (-2147483646));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: add
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test01911,"public void test01911() throws Throwable {
    MathUtils.subAndCheck((-826L), 2728L);
    MathUtils.equals((-2153.953025617625), (-2153.953025617625), 139);
    int[] intArray0 = new int[9];
    intArray0[0] = 139;
    intArray0[1] = 139;
    intArray0[2] = 139;
    intArray0[3] = 139;
    intArray0[4] = 139;
    intArray0[5] = 139;
    intArray0[6] = 139;
    intArray0[7] = 139;
    intArray0[8] = 139;
    MathUtils.distance1(intArray0, intArray0);
    MathUtils.pow(3025L, (long) 139);
    MathUtils.hash((double) (-3554L));
    try {
        MathUtils.pow(139, (-1639L));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot raise an integral value to a negative power (139^-1,639)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test02313,"public void test02313() throws Throwable {
    MathUtils.round(1.0, 1159);
    MathUtils.cosh(0.0);
    int int0 = 1;
    MathUtils.binomialCoefficient(1159, 1);
    MathUtils.round((-1.0F), (-311));
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficient((-311), 5);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= k for binomial coefficient (n,k), got n = -311, k = 5
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",0,
project,0,test02614,"public void test02614() throws Throwable {
    MathUtils.addAndCheck(2640, 2640);
    MathUtils.pow((long) 5280, (long) 5280);
    MathUtils.pow(0L, 2640);
    MathUtils.equals(0.0, 487.37343307056665, (-2621.877438012606));
    int int0 = 31;
    MathUtils.binomialCoefficientLog(2640, 31);
    MathUtils.log(31, 31);
    MathUtils.indicator((short) 1522);
    MathUtils.pow(1236, 5280);
    MathUtils.round(1252.845186, 0);
    MathUtils.indicator((float) 0L);
    // Undeclared exception!
    try {
        MathUtils.round(0.0, (-369), 1420);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",1,
project,0,test03015,"public void test03015() throws Throwable {
    MathUtils.hash((-2018.9627));
    // Undeclared exception!
    try {
        MathUtils.mulAndCheck((-9223372036854775808L), (long) 244896937);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: multiply
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test03116,"public void test03116() throws Throwable {
    MathUtils.normalizeAngle((-1794.233680471964), (-1794.233680471964));
    MathUtils.log(0.0, (-1794.233680471964));
    MathUtils.lcm((-1), 1);
    MathUtils.round(18.724F, (-1), 1);
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (-1794.233680471964);
    doubleArray0[1] = 0.0;
    doubleArray0[2] = 0.0;
    doubleArray0[3] = 0.0;
    doubleArray0[4] = (double) (-1);
    doubleArray0[5] = (double) 18.724F;
    doubleArray0[6] = (double) 1;
    doubleArray0[7] = (-1794.233680471964);
    MathUtils.distance1(doubleArray0, doubleArray0);
    int[] intArray0 = new int[7];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = (-1);
    intArray0[3] = 1;
    intArray0[4] = (-1);
    intArray0[5] = 1;
    intArray0[6] = 1;
    MathUtils.distance(intArray0, intArray0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    try {
        MathUtils.pow(bigInteger0, (-1));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot raise an integral value to a negative power (0^-1)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test03217,"public void test03217() throws Throwable {
    MathUtils.sign(Float.NaN);
    MathUtils.equals((double) Float.NaN, 0.0);
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = (double) Float.NaN;
    doubleArray0[1] = 0.0;
    MathUtils.distance(doubleArray0, doubleArray0);
    MathUtils.scalb(Float.NaN, Integer.MIN_VALUE);
    MathUtils.sign((byte) 1);
    MathUtils.sign(0.0F);
    int int0 = 0;
    MathUtils.indicator(0);
    try {
        MathUtils.normalizeArray(doubleArray0, Double.NaN);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Cannot normalize to NaN
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test03318,"public void test03318() throws Throwable {
    MathUtils.scalb(6.283185307179586, 2073432487);
    MathUtils.lcm(2073432487, 2073432487);
    int int0 = 3410;
    int int1 = (-143);
    MathUtils.lcm(3410, (-143));
    // Undeclared exception!
    try {
        MathUtils.pow((BigInteger) null, 44330);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test03419,"public void test03419() throws Throwable {
    int int0 = 934;
    // Undeclared exception!
    try {
        MathUtils.factorial(934);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // factorial value is too large to fit in a long
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test03520,"public void test03520() throws Throwable {
    int int0 = (-2503);
    MathUtils.indicator((-2503));
    BigInteger bigInteger0 = BigInteger.TEN;
    BigInteger bigInteger1 = BigInteger.ONE;
    bigInteger1.divide(bigInteger0);
    bigInteger1.floatValue();
    bigInteger0.modInverse(bigInteger1);
    try {
        MathUtils.pow(bigInteger0, (long) (-2503));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot raise an integral value to a negative power (10^-2,503)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test03721,"public void test03721() throws Throwable {
    MathUtils.nextAfter(2760.41998, 2760.41998);
    MathUtils.indicator(200);
    int int0 = 16;
    int int1 = 1;
    MathUtils.mulAndCheck(16, 1);
    MathUtils.mulAndCheck(16, 0);
    double[] doubleArray0 = new double[0];
    MathUtils.hash(doubleArray0);
    // Undeclared exception!
    try {
        MathUtils.factorial(200);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // factorial value is too large to fit in a long
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test03922,"public void test03922() throws Throwable {
    double[] doubleArray0 = null;
    MathUtils.hash((double[]) null);
    MathUtils.log(0, 0);
    int int0 = (-2076);
    // Undeclared exception!
    try {
        MathUtils.equals(0.0, 0.0, (-2076));
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test04223,"public void test04223() throws Throwable {
    double[] doubleArray0 = new double[4];
    doubleArray0[0] = 1.0;
    doubleArray0[1] = 2412.7751;
    doubleArray0[2] = 0.0;
    doubleArray0[3] = (-4.9E-324);
    double[] doubleArray1 = new double[3];
    doubleArray1[0] = (-4.9E-324);
    doubleArray1[1] = 0.0;
    doubleArray1[2] = 1.0;
    // Undeclared exception!
    try {
        MathUtils.distance1(doubleArray0, doubleArray1);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 3
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test04324,"public void test04324() throws Throwable {
    MathUtils.sign(1234.98F);
    MathUtils.lcm(1260, 1260);
    MathUtils.pow(1260, 0);
    MathUtils.indicator(3015);
    MathUtils.binomialCoefficientDouble(0, 0);
    MathUtils.sign(0.0F);
    MathUtils.indicator(1390);
    BigInteger bigInteger0 = BigInteger.ONE;
    bigInteger0.longValueExact();
    // Undeclared exception!
    try {
        MathUtils.pow((BigInteger) null, bigInteger0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test04525,"public void test04525() throws Throwable {
    int[] intArray0 = new int[5];
    intArray0[0] = 0;
    int int0 = 0;
    intArray0[1] = 0;
    intArray0[2] = 4194304;
    intArray0[3] = (-2008);
    intArray0[4] = 196;
    MathUtils.distanceInf(intArray0, intArray0);
    double[] doubleArray0 = new double[3];
    doubleArray0[0] = (double) (-2008);
    doubleArray0[1] = (double) (-2008);
    doubleArray0[2] = (double) 196;
    // Undeclared exception!
    try {
        MathUtils.distance1(doubleArray0, (double[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test05026,"public void test05026() throws Throwable {
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) (-75);
    byteArray0[1] = (byte) 17;
    byteArray0[2] = (byte) 12;
    byteArray0[3] = (byte) (-83);
    byteArray0[4] = (byte) (-1);
    byteArray0[5] = (byte) (-1);
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    try {
        MathUtils.pow(bigInteger0, bigInteger0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot raise an integral value to a negative power (-82,390,144,909,313^-82,390,144,909,313)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test05327,"public void test05327() throws Throwable {
    MathUtils.compareTo(2.0, 2.0, 2.0);
    MathUtils.indicator((short) (-496));
    double[] doubleArray0 = new double[3];
    doubleArray0[0] = (double) (short) (-1);
    doubleArray0[1] = (double) 0;
    doubleArray0[2] = 2.0;
    MathUtils.distanceInf(doubleArray0, doubleArray0);
    MathUtils.distance1(doubleArray0, doubleArray0);
    MathUtils.nextAfter(0, 2.0);
    MathUtils.equals(472.3074991661, 1077.513167, (-1.0));
    // Undeclared exception!
    try {
        MathUtils.equals(2393.71068944, 1.0, 0);
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test05428,"public void test05428() throws Throwable {
    MathUtils.compareTo(0.0, 0.0, 0.0);
    byte byte0 = (byte) (-90);
    MathUtils.indicator((byte) (-90));
    MathUtils.factorialDouble(1433);
    MathUtils.mulAndCheck((int) (byte) (-90), 15);
    try {
        MathUtils.pow((-1), (-1350));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot raise an integral value to a negative power (-1^-1,350)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test05529,"public void test05529() throws Throwable {
    MathUtils.indicator(3535.7);
    try {
        MathUtils.pow(1659, (-2434));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot raise an integral value to a negative power (1,659^-2,434)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test05730,"public void test05730() throws Throwable {
    int int0 = 132;
    MathUtils.lcm(132, 132);
    MathUtils.hash(3541.11136656);
    MathUtils.nextAfter(0.0, 0.0);
    MathUtils.pow(1168244762, (long) 1168244762);
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficientLog(0, 132);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= k for binomial coefficient (n,k), got n = 0, k = 132
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test05931,"public void test05931() throws Throwable {
    int int0 = (-823);
    int int1 = 349;
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficient((-823), 349);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= k for binomial coefficient (n,k), got n = -823, k = 349
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test06032,"public void test06032() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = 10.0;
    MathUtils.equals(doubleArray0, doubleArray0);
    int int0 = 0;
    MathUtils.round(1829.5243766, 0);
    int int1 = 0;
    try {
        MathUtils.pow(0, (-1145L));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot raise an integral value to a negative power (0^-1,145)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",0,
project,0,test06133,"public void test06133() throws Throwable {
    int int0 = 25;
    MathUtils.pow(25, 9);
    int int1 = 0;
    MathUtils.subAndCheck(0, 766306777);
    MathUtils.equals(776.957302461, (-2857.39), 689.267357643664);
    MathUtils.log((-766306777), 0.0);
    MathUtils.sign(0.0);
    MathUtils.indicator((float) (-766306777));
    try {
        MathUtils.pow((long) 9, (-1L));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot raise an integral value to a negative power (9^-1)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test06234,"public void test06234() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.distanceInf((double[]) null, (double[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test06335,"public void test06335() throws Throwable {
    short short0 = (short) 0;
    MathUtils.indicator((short) 0);
    try {
        MathUtils.pow((int) (short) 0, (-1102L));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot raise an integral value to a negative power (0^-1,102)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test06436,"public void test06436() throws Throwable {
    int int0 = 1608;
    MathUtils.pow(1608, (long) 1608);
    try {
        MathUtils.pow((long) 1608, (-1L));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot raise an integral value to a negative power (1,608^-1)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test06837,"public void test06837() throws Throwable {
    int int0 = 6;
    MathUtils.binomialCoefficientDouble(6, 6);
    // Undeclared exception!
    try {
        MathUtils.pow((BigInteger) null, 157);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test06938,"public void test06938() throws Throwable {
    MathUtils.round(0.0F, 0, 0);
    MathUtils.hash((double) 0);
    MathUtils.mulAndCheck((long) 0, 1375L);
    MathUtils.indicator((double) 0);
    double[] doubleArray0 = new double[3];
    doubleArray0[0] = (-497.4288227);
    doubleArray0[1] = (double) 0;
    doubleArray0[2] = (double) 1375L;
    MathUtils.distanceInf(doubleArray0, doubleArray0);
    int[] intArray0 = new int[9];
    intArray0[0] = 0;
    intArray0[1] = 0;
    intArray0[2] = 0;
    intArray0[3] = 0;
    intArray0[4] = 0;
    intArray0[5] = 0;
    intArray0[6] = 0;
    intArray0[7] = 0;
    intArray0[8] = 0;
    int[] intArray1 = new int[1];
    intArray1[0] = 0;
    // Undeclared exception!
    try {
        MathUtils.distance1(intArray0, intArray1);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 1
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test07239,"public void test07239() throws Throwable {
    double[] doubleArray0 = new double[0];
    MathUtils.distanceInf(doubleArray0, doubleArray0);
    MathUtils.equals(0.0, 0.0);
    MathUtils.cosh((-293.882628828));
    MathUtils.compareTo((-293.882628828), 152.86311, 2.1407898231843912E127);
    int int0 = 0;
    MathUtils.factorialDouble(0);
    MathUtils.binomialCoefficientLog(0, 0);
    MathUtils.sinh(0.0);
    MathUtils.sign(0);
    MathUtils.subAndCheck((long) 0, (long) 0);
    MathUtils.indicator((short) (-1383));
    MathUtils.sign(0.0F);
    MathUtils.equals(doubleArray0, doubleArray0);
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficientLog((-1124), (-1854));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for binomial coefficient (n,k), got n = -1,124
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",0,
project,0,test07540,"public void test07540() throws Throwable {
    double[] doubleArray0 = new double[0];
    MathUtils.hash(doubleArray0);
    MathUtils.cosh(2864.62672122);
    int[] intArray0 = new int[2];
    intArray0[0] = 1;
    intArray0[1] = 1;
    MathUtils.distanceInf(intArray0, intArray0);
    double double0 = (-2236.52487723688);
    int int0 = (-67);
    // Undeclared exception!
    try {
        MathUtils.round((-2236.52487723688), (-67), (-2790));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test07641,"public void test07641() throws Throwable {
    int int0 = 0;
    MathUtils.factorialDouble(0);
    int[] intArray0 = null;
    // Undeclared exception!
    try {
        MathUtils.distance1((int[]) null, (int[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test07942,"public void test07942() throws Throwable {
    MathUtils.lcm((-1), (-1));
    MathUtils.binomialCoefficient(3005, 0);
    MathUtils.indicator(0L);
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 1L;
    doubleArray0[2] = (double) 0;
    doubleArray0[3] = (double) 3005;
    doubleArray0[4] = (double) 1L;
    doubleArray0[5] = (double) 1;
    doubleArray0[6] = (double) 0;
    doubleArray0[7] = (double) 1L;
    MathUtils.equals(doubleArray0, doubleArray0);
    MathUtils.pow(3005, 1L);
    MathUtils.binomialCoefficientLog(1, (-1));
    // Undeclared exception!
    try {
        MathUtils.round((float) 3005, (-1), (-1));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // invalid rounding method -1, valid methods: ROUND_CEILING (2), ROUND_DOWN (1), ROUND_FLOOR (3), ROUND_HALF_DOWN (5), ROUND_HALF_EVEN (6), ROUND_HALF_UP (4), ROUND_UNNECESSARY (7), ROUND_UP (0)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",0,
project,0,test08143,"public void test08143() throws Throwable {
    MathUtils.round(599.0209968245006, (-1902), 0);
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = 599.0209968245006;
    doubleArray0[1] = 599.0209968245006;
    doubleArray0[2] = (double) (-1902);
    doubleArray0[3] = 599.0209968245006;
    doubleArray0[4] = Double.POSITIVE_INFINITY;
    doubleArray0[5] = (double) (-1902);
    doubleArray0[6] = Double.POSITIVE_INFINITY;
    doubleArray0[7] = (double) 0;
    try {
        MathUtils.normalizeArray(doubleArray0, Double.POSITIVE_INFINITY);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Cannot normalize to an infinite value
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test08344,"public void test08344() throws Throwable {
    MathUtils.subAndCheck((-908), (-908));
    byte byte0 = (byte) 0;
    MathUtils.sign((byte) 0);
    MathUtils.normalizeAngle((-1.0), (-2013.0));
    MathUtils.sign((int) (byte) 0);
    int int0 = 0;
    MathUtils.round(0.0, 7, 0);
    MathUtils.subAndCheck(0, (-13));
    MathUtils.addAndCheck(0, 5159);
    MathUtils.nextAfter((byte) 0, (-1.0));
    // Undeclared exception!
    try {
        MathUtils.equals((-1.0), (-4.9E-324), (-2531));
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test08745,"public void test08745() throws Throwable {
    MathUtils.sign(0.0);
    MathUtils.normalizeAngle(0.0, 0.0);
    double[] doubleArray0 = new double[9];
    doubleArray0[0] = 0.0;
    doubleArray0[1] = 0.0;
    doubleArray0[2] = 0.0;
    doubleArray0[3] = 0.0;
    doubleArray0[4] = 0.0;
    doubleArray0[5] = 0.0;
    doubleArray0[6] = 0.0;
    doubleArray0[7] = 0.0;
    doubleArray0[8] = 0.0;
    MathUtils.distance1(doubleArray0, doubleArray0);
    MathUtils.normalizeAngle(2883.06, 3276.25503479);
    MathUtils.equals(886.93842, 0.0, 20);
    MathUtils.pow(603L, 0);
    // Undeclared exception!
    try {
        MathUtils.equals((-90.127840696958), 0.0, (-1370));
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test08946,"public void test08946() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = (-4049.55459018);
    doubleArray0[1] = (-1952.7);
    double[] doubleArray1 = new double[6];
    doubleArray1[0] = 0.0;
    doubleArray1[1] = (-1952.7);
    doubleArray1[2] = (-1952.7);
    doubleArray1[3] = (-1952.7);
    doubleArray1[4] = (-1952.7);
    doubleArray1[5] = (-1952.7);
    MathUtils.distanceInf(doubleArray0, doubleArray1);
    MathUtils.round(0.0F, 0);
    MathUtils.equals(doubleArray1, doubleArray1);
    MathUtils.normalizeAngle((-763.86184399), 0.0);
    MathUtils.indicator((long) 0);
    MathUtils.cosh((-1952.7));
    // Undeclared exception!
    try {
        MathUtils.factorialDouble((-955));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for n!, got n = -955
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test09047,"public void test09047() throws Throwable {
    MathUtils.mulAndCheck(0, 0);
    float float0 = 1270.0746F;
    MathUtils.indicator(1270.0746F);
    MathUtils.indicator((double) 0);
    short short0 = (short) (-1);
    MathUtils.sign((short) (-1));
    MathUtils.sinh(0);
    double[] doubleArray0 = null;
    // Undeclared exception!
    try {
        MathUtils.distance((double[]) null, (double[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test09148,"public void test09148() throws Throwable {
    int int0 = (-202);
    MathUtils.round(0.0F, (-202));
    MathUtils.round((double) Float.NaN, 480);
    // Undeclared exception!
    try {
        MathUtils.equals((double) 480, (double) (-202), (-202));
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test09249,"public void test09249() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ZERO;
    BigInteger bigInteger1 = BigInteger.ONE;
    bigInteger0.xor(bigInteger1);
    MathUtils.pow(bigInteger0, bigInteger0);
    int int0 = (-1);
    // Undeclared exception!
    try {
        MathUtils.factorialDouble((-1));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for n!, got n = -1
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test09350,"public void test09350() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.factorialLog((-1193));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for n!, got n = -1,193
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test09451,"public void test09451() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.pow((BigInteger) null, 771L);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test09552,"public void test09552() throws Throwable {
    MathUtils.scalb(0.0, 662);
    MathUtils.sign((short) (-1));
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 0;
    byteArray0[1] = (byte) 0;
    byteArray0[2] = (byte) 0;
    byteArray0[3] = (byte) (-119);
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    BigInteger bigInteger1 = new BigInteger(byteArray0);
    bigInteger0.and(bigInteger1);
    bigInteger0.toString((int) (byte) 0);
    MathUtils.pow(bigInteger0, (int) (byte) 0);
    // Undeclared exception!
    try {
        MathUtils.factorial((-1391));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for n!, got n = -1,391
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test09653,"public void test09653() throws Throwable {
    MathUtils.sinh(2012.178);
    int int0 = (-2602);
    // Undeclared exception!
    try {
        MathUtils.round(2012.178, (-2602), (-2602));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",1,
project,0,test09854,"public void test09854() throws Throwable {
    MathUtils.subAndCheck(0, 0);
    MathUtils.mulAndCheck((-1L), (long) 0);
    int[] intArray0 = new int[1];
    intArray0[0] = 0;
    MathUtils.distanceInf(intArray0, intArray0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 0;
    doubleArray0[1] = (double) 0;
    doubleArray0[2] = (double) 0;
    doubleArray0[3] = (double) 0;
    doubleArray0[4] = (double) (-1L);
    doubleArray0[5] = (double) 0;
    doubleArray0[6] = (double) 0;
    double[] doubleArray1 = new double[2];
    doubleArray1[0] = (double) 0L;
    doubleArray1[1] = (double) 0;
    // Undeclared exception!
    try {
        MathUtils.distanceInf(doubleArray0, doubleArray1);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 2
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test10255,"public void test10255() throws Throwable {
    int int0 = 0;
    MathUtils.pow(0, 0);
    try {
        MathUtils.pow((long) 0, (-1823));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot raise an integral value to a negative power (0^-1,823)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test10356,"public void test10356() throws Throwable {
    MathUtils.sign(0L);
    MathUtils.nextAfter(2.2250738585072014E-308, 0L);
    MathUtils.log(1866.718406, 1866.718406);
    MathUtils.gcd((-1049), 0);
    MathUtils.binomialCoefficientDouble(1049, 0);
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficientDouble(0, 1654);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= k for binomial coefficient (n,k), got n = 0, k = 1,654
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test10657,"public void test10657() throws Throwable {
    long long0 = (-1L);
    MathUtils.sign((-1L));
    double[] doubleArray0 = new double[0];
    try {
        MathUtils.normalizeArray(doubleArray0, (-1L));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // Array sums to zero
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test10758,"public void test10758() throws Throwable {
    MathUtils.sign(3579L);
    short short0 = (short) 1;
    MathUtils.indicator((short) 1);
    MathUtils.sinh(0.0);
    double double0 = 0.0;
    MathUtils.equals(0.0, 0.0, 1.0);
    MathUtils.subAndCheck(1L, (long) (short) 1);
    MathUtils.sinh(1557.348148513444);
    MathUtils.nextAfter(0.0, 0L);
    MathUtils.pow((long) (short) 1, 3579L);
    int[] intArray0 = null;
    // Undeclared exception!
    try {
        MathUtils.distance((int[]) null, (int[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test10859,"public void test10859() throws Throwable {
    MathUtils.factorialDouble(2021);
    int int0 = (-189);
    int int1 = Integer.MIN_VALUE;
    // Undeclared exception!
    try {
        MathUtils.lcm((-189), Integer.MIN_VALUE);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: mul
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test10960,"public void test10960() throws Throwable {
    MathUtils.indicator((short) 2125);
    MathUtils.equals((double) (short) 2125, (double) (short) 2125, 0.0);
    short short0 = (short) 0;
    MathUtils.sign((short) 0);
    int int0 = Integer.MIN_VALUE;
    try {
        MathUtils.pow((long) (short) 1, Integer.MIN_VALUE);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot raise an integral value to a negative power (1^-2,147,483,648)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test11261,"public void test11261() throws Throwable {
    MathUtils.factorialLog(5);
    MathUtils.round((float) 5, 0, 5);
    MathUtils.equals((double) 0, 49.05);
    MathUtils.gcd(0, 1);
    double[] doubleArray0 = new double[0];
    try {
        MathUtils.normalizeArray(doubleArray0, 1);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // Array sums to zero
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test11462,"public void test11462() throws Throwable {
    MathUtils.nextAfter(0.0, 0.0);
    int int0 = 0;
    int int1 = 2;
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficient(0, 2);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= k for binomial coefficient (n,k), got n = 0, k = 2
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test11563,"public void test11563() throws Throwable {
    MathUtils.hash((-1180.46));
    int int0 = 0;
    MathUtils.scalb(0.0, 0);
    int int1 = 0;
    MathUtils.pow(0, 1027L);
    MathUtils.sinh(0);
    MathUtils.pow((-2479L), 0);
    // Undeclared exception!
    try {
        MathUtils.mulAndCheck(Integer.MIN_VALUE, (-894500493));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: mul
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test11664,"public void test11664() throws Throwable {
    MathUtils.normalizeAngle(Double.NEGATIVE_INFINITY, (-3133.1239464));
    long long0 = 5040L;
    int int0 = (-254);
    try {
        MathUtils.pow(5040L, (-254));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot raise an integral value to a negative power (5,040^-254)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test11765,"public void test11765() throws Throwable {
    MathUtils.sign(Double.POSITIVE_INFINITY);
    MathUtils.factorialLog(471);
    MathUtils.indicator(684L);
    MathUtils.indicator((short) (-2005));
    MathUtils.equals(1.0, 0.0, (double) 1L);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 1L;
    doubleArray0[1] = (double) (short) (-1);
    doubleArray0[2] = (double) 1L;
    doubleArray0[3] = 1.0;
    doubleArray0[4] = (double) (short) (-1);
    doubleArray0[5] = 1757.5571;
    doubleArray0[6] = 1.0;
    MathUtils.equals(doubleArray0, doubleArray0);
    MathUtils.sign((long) 471);
    BigInteger bigInteger0 = BigInteger.ZERO;
    BigInteger bigInteger1 = MathUtils.pow(bigInteger0, 1L);
    MathUtils.distance1(doubleArray0, doubleArray0);
    try {
        MathUtils.pow(bigInteger1, (-1));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot raise an integral value to a negative power (0^-1)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test11866,"public void test11866() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ZERO;
    try {
        MathUtils.pow(bigInteger0, (-1189));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot raise an integral value to a negative power (0^-1,189)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test12167,"public void test12167() throws Throwable {
    int int0 = 1;
    MathUtils.pow(1, 646L);
    MathUtils.factorialDouble(1);
    MathUtils.compareTo((-1666.062), (-2577.90655932433), 646L);
    MathUtils.indicator((-262.2159F));
    // Undeclared exception!
    try {
        MathUtils.round(0.0F, 1, (-1346));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // invalid rounding method -1,346, valid methods: ROUND_CEILING (2), ROUND_DOWN (1), ROUND_FLOOR (3), ROUND_HALF_DOWN (5), ROUND_HALF_EVEN (6), ROUND_HALF_UP (4), ROUND_UNNECESSARY (7), ROUND_UP (0)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",0,
project,0,test13068,"public void test13068() throws Throwable {
    MathUtils.cosh(Double.NEGATIVE_INFINITY);
    MathUtils.indicator(1783.7365F);
    MathUtils.hash(Double.POSITIVE_INFINITY);
    MathUtils.addAndCheck((long) 2146435072, 2343L);
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficient((-1297), 2146435072);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= k for binomial coefficient (n,k), got n = -1,297, k = 2,146,435,072
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",0,
project,0,test13169,"public void test13169() throws Throwable {
    MathUtils.nextAfter((-1.0), (-1.0));
    byte byte0 = (byte) 39;
    MathUtils.indicator((byte) 39);
    // Undeclared exception!
    try {
        MathUtils.pow((BigInteger) null, 1L);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test13270,"public void test13270() throws Throwable {
    int[] intArray0 = new int[6];
    intArray0[0] = (-770);
    intArray0[1] = 66;
    intArray0[2] = (-2571);
    intArray0[3] = (-1452);
    intArray0[4] = 1;
    intArray0[5] = 2146932120;
    MathUtils.distance(intArray0, intArray0);
    byte[] byteArray0 = new byte[8];
    byteArray0[0] = (byte) 16;
    byteArray0[1] = (byte) 1;
    byteArray0[2] = (byte) 33;
    byteArray0[3] = (byte) 116;
    byteArray0[4] = (byte) 0;
    byteArray0[5] = (byte) 101;
    byteArray0[6] = (byte) (-13);
    byteArray0[7] = (byte) 1;
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    try {
        MathUtils.pow(bigInteger0, (-770));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot raise an integral value to a negative power (1,153,239,761,690,161,921^-770)
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test13571,"public void test13571() throws Throwable {
    MathUtils.normalizeAngle(2.2250738585072014E-308, 2.2250738585072014E-308);
    MathUtils.sign((-1972.041F));
    int int0 = (-2220);
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficientDouble((-2220), (-2220));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for binomial coefficient (n,k), got n = -2,220
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",0,
project,0,test13772,"public void test13772() throws Throwable {
    float float0 = 0.0F;
    MathUtils.indicator(0.0F);
    MathUtils.sign((double) 1.0F);
    double double0 = 0.0;
    MathUtils.equals(1.0, 0.0);
    byte byte0 = (byte) 1;
    MathUtils.sign((byte) 1);
    long long0 = (-2296L);
    MathUtils.mulAndCheck((-2296L), (-2296L));
    int[] intArray0 = new int[5];
    intArray0[0] = (int) (byte) 1;
    intArray0[1] = (int) (byte) 1;
    intArray0[2] = (int) (byte) 1;
    intArray0[3] = (int) (byte) 1;
    intArray0[4] = (int) (byte) 1;
    MathUtils.distance(intArray0, intArray0);
    int int0 = 0;
    MathUtils.pow(0, (long) 1);
    MathUtils.sign((-1.0F));
    MathUtils.nextAfter(1059.34032908715, 4.9E-324);
    // Undeclared exception!
    try {
        MathUtils.factorial((-447));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for n!, got n = -447
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",1,
project,0,test14075,"public void test14075() throws Throwable {
    MathUtils.indicator((-2757.917F));
    float float0 = MathUtils.round((-2757.917F), (-551), 0);
    assertEquals(Float.NEGATIVE_INFINITY, float0, 0.01F);
}",0,
project,0,test14076,"public void test14076() throws Throwable {
    MathUtils.indicator((-2757.917F));
    float float0 = MathUtils.round((-2757.917F), (-551), 0);
    int int0 = MathUtils.sign((-551));
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test14077,"public void test14077() throws Throwable {
    MathUtils.indicator((-2757.917F));
    float float0 = MathUtils.round((-2757.917F), (-551), 0);
    int int0 = MathUtils.sign((-551));
    int[] intArray0 = new int[4];
    intArray0[0] = 0;
    intArray0[1] = 0;
    intArray0[2] = (-1);
    int int1 = MathUtils.distanceInf(intArray0, intArray0);
    assertEquals(0, int1);
}",0,"assertEquals(1, int1)"
project,0,test14078,"public void test14078() throws Throwable {
    MathUtils.indicator((-2757.917F));
    float float0 = MathUtils.round((-2757.917F), (-551), 0);
    int int0 = MathUtils.sign((-551));
    int[] intArray0 = new int[4];
    intArray0[0] = 0;
    intArray0[1] = 0;
    intArray0[2] = (-1);
    int int1 = MathUtils.distanceInf(intArray0, intArray0);
    double double0 = MathUtils.log(2443.8207085413, (-608.6319869));
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test14079,"public void test14079() throws Throwable {
    MathUtils.indicator((-2757.917F));
    float float0 = MathUtils.round((-2757.917F), (-551), 0);
    int int0 = MathUtils.sign((-551));
    int[] intArray0 = new int[4];
    intArray0[0] = 0;
    intArray0[1] = 0;
    intArray0[2] = (-1);
    int int1 = MathUtils.distanceInf(intArray0, intArray0);
    double double0 = MathUtils.log(2443.8207085413, (-608.6319869));
    byte byte0 = MathUtils.indicator((byte) (-93));
    BigInteger bigInteger0 = MathUtils.pow((BigInteger) null, (long) 0);
    assertNotNull(bigInteger0);
}",1,
project,0,test14080,"public void test14080() throws Throwable {
    MathUtils.indicator((-2757.917F));
    float float0 = MathUtils.round((-2757.917F), (-551), 0);
    int int0 = MathUtils.sign((-551));
    int[] intArray0 = new int[4];
    intArray0[0] = 0;
    intArray0[1] = 0;
    intArray0[2] = (-1);
    int int1 = MathUtils.distanceInf(intArray0, intArray0);
    double double0 = MathUtils.log(2443.8207085413, (-608.6319869));
    byte byte0 = MathUtils.indicator((byte) (-93));
    BigInteger bigInteger0 = MathUtils.pow((BigInteger) null, (long) 0);
    MathUtils.mulAndCheck(0L, 87178291200L);
    byte byte1 = MathUtils.sign((byte) (-93));
    assertTrue(byte1 == byte0);
}",0,
project,0,test14081,"public void test14081() throws Throwable {
    MathUtils.indicator((-2757.917F));
    float float0 = MathUtils.round((-2757.917F), (-551), 0);
    int int0 = MathUtils.sign((-551));
    int[] intArray0 = new int[4];
    intArray0[0] = 0;
    intArray0[1] = 0;
    intArray0[2] = (-1);
    int int1 = MathUtils.distanceInf(intArray0, intArray0);
    double double0 = MathUtils.log(2443.8207085413, (-608.6319869));
    byte byte0 = MathUtils.indicator((byte) (-93));
    BigInteger bigInteger0 = MathUtils.pow((BigInteger) null, (long) 0);
    MathUtils.mulAndCheck(0L, 87178291200L);
    byte byte1 = MathUtils.sign((byte) (-93));
    int int2 = MathUtils.sign(2);
    double double1 = MathUtils.indicator(0.0);
    assertEquals(1.0, double1, 0.01);
}",0,
project,0,test14082,"public void test14082() throws Throwable {
    MathUtils.indicator((-2757.917F));
    float float0 = MathUtils.round((-2757.917F), (-551), 0);
    int int0 = MathUtils.sign((-551));
    int[] intArray0 = new int[4];
    intArray0[0] = 0;
    intArray0[1] = 0;
    intArray0[2] = (-1);
    int int1 = MathUtils.distanceInf(intArray0, intArray0);
    double double0 = MathUtils.log(2443.8207085413, (-608.6319869));
    byte byte0 = MathUtils.indicator((byte) (-93));
    BigInteger bigInteger0 = MathUtils.pow((BigInteger) null, (long) 0);
    MathUtils.mulAndCheck(0L, 87178291200L);
    byte byte1 = MathUtils.sign((byte) (-93));
    int int2 = MathUtils.sign(2);
    double double1 = MathUtils.indicator(0.0);
    MathUtils.indicator((long) 0);
    int int3 = MathUtils.gcd((-1), 1);
    assertTrue(int3 == int2);
}",0,
project,0,test14083,"public void test14083() throws Throwable {
    MathUtils.indicator((-2757.917F));
    float float0 = MathUtils.round((-2757.917F), (-551), 0);
    int int0 = MathUtils.sign((-551));
    int[] intArray0 = new int[4];
    intArray0[0] = 0;
    intArray0[1] = 0;
    intArray0[2] = (-1);
    int int1 = MathUtils.distanceInf(intArray0, intArray0);
    double double0 = MathUtils.log(2443.8207085413, (-608.6319869));
    byte byte0 = MathUtils.indicator((byte) (-93));
    BigInteger bigInteger0 = MathUtils.pow((BigInteger) null, (long) 0);
    MathUtils.mulAndCheck(0L, 87178291200L);
    byte byte1 = MathUtils.sign((byte) (-93));
    int int2 = MathUtils.sign(2);
    double double1 = MathUtils.indicator(0.0);
    MathUtils.indicator((long) 0);
    int int3 = MathUtils.gcd((-1), 1);
    double double2 = MathUtils.scalb((-362.4093135705), 2147483646);
    assertEquals((-90.602328392625), double2, 0.01);
}",0,
project,0,test14084,"public void test14084() throws Throwable {
    MathUtils.indicator((-2757.917F));
    float float0 = MathUtils.round((-2757.917F), (-551), 0);
    int int0 = MathUtils.sign((-551));
    int[] intArray0 = new int[4];
    intArray0[0] = 0;
    intArray0[1] = 0;
    intArray0[2] = (-1);
    int int1 = MathUtils.distanceInf(intArray0, intArray0);
    double double0 = MathUtils.log(2443.8207085413, (-608.6319869));
    byte byte0 = MathUtils.indicator((byte) (-93));
    BigInteger bigInteger0 = MathUtils.pow((BigInteger) null, (long) 0);
    MathUtils.mulAndCheck(0L, 87178291200L);
    byte byte1 = MathUtils.sign((byte) (-93));
    int int2 = MathUtils.sign(2);
    double double1 = MathUtils.indicator(0.0);
    MathUtils.indicator((long) 0);
    int int3 = MathUtils.gcd((-1), 1);
    double double2 = MathUtils.scalb((-362.4093135705), 2147483646);
    long long0 = MathUtils.pow((long) (-1), 2);
    assertEquals(1L, long0);
}",1,
project,0,test14085,"public void test14085() throws Throwable {
    MathUtils.indicator((-2757.917F));
    float float0 = MathUtils.round((-2757.917F), (-551), 0);
    int int0 = MathUtils.sign((-551));
    int[] intArray0 = new int[4];
    intArray0[0] = 0;
    intArray0[1] = 0;
    intArray0[2] = (-1);
    int int1 = MathUtils.distanceInf(intArray0, intArray0);
    double double0 = MathUtils.log(2443.8207085413, (-608.6319869));
    byte byte0 = MathUtils.indicator((byte) (-93));
    BigInteger bigInteger0 = MathUtils.pow((BigInteger) null, (long) 0);
    MathUtils.mulAndCheck(0L, 87178291200L);
    byte byte1 = MathUtils.sign((byte) (-93));
    int int2 = MathUtils.sign(2);
    double double1 = MathUtils.indicator(0.0);
    MathUtils.indicator((long) 0);
    int int3 = MathUtils.gcd((-1), 1);
    double double2 = MathUtils.scalb((-362.4093135705), 2147483646);
    long long0 = MathUtils.pow((long) (-1), 2);
    double double3 = MathUtils.binomialCoefficientLog(2, (-1));
    assertEquals(0.0, double3, 0.01);
}",0,
project,0,test14186,"public void test14186() throws Throwable {
    MathUtils.indicator((byte) (-114));
    double[] doubleArray0 = new double[4];
    doubleArray0[0] = (double) (byte) (-1);
    doubleArray0[1] = (double) (byte) (-114);
    doubleArray0[2] = (double) (byte) (-114);
    doubleArray0[3] = (double) (byte) (-1);
    double[] doubleArray1 = MathUtils.normalizeArray(doubleArray0, (-744.58655));
    MathUtils.distanceInf(doubleArray1, doubleArray0);
    MathUtils.sinh(2123.0);
    MathUtils.gcd(0, 0);
    MathUtils.indicator(2455.788F);
    // Undeclared exception!
    try {
        MathUtils.round((double) (byte) (-114), 0, (int) (byte) (-114));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",1,
project,0,test14287,"public void test14287() throws Throwable {
    int[] intArray0 = new int[0];
    int int0 = MathUtils.distance1(intArray0, intArray0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test14288,"public void test14288() throws Throwable {
    int[] intArray0 = new int[0];
    int int0 = MathUtils.distance1(intArray0, intArray0);
    MathUtils.distanceInf(intArray0, intArray0);
    float float0 = MathUtils.round(3892.7F, 0, 0);
    assertEquals(3893.0F, float0, 0.01F);
}",1,
project,0,test14289,"public void test14289() throws Throwable {
    int[] intArray0 = new int[0];
    int int0 = MathUtils.distance1(intArray0, intArray0);
    MathUtils.distanceInf(intArray0, intArray0);
    float float0 = MathUtils.round(3892.7F, 0, 0);
    long long0 = MathUtils.pow((long) 0, 0);
    assertEquals(1L, long0);
}",1,
project,0,test14290,"public void test14290() throws Throwable {
    int[] intArray0 = new int[0];
    int int0 = MathUtils.distance1(intArray0, intArray0);
    MathUtils.distanceInf(intArray0, intArray0);
    float float0 = MathUtils.round(3892.7F, 0, 0);
    long long0 = MathUtils.pow((long) 0, 0);
    double double0 = MathUtils.sinh((-6077.737308));
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test14291,"public void test14291() throws Throwable {
    int[] intArray0 = new int[0];
    int int0 = MathUtils.distance1(intArray0, intArray0);
    MathUtils.distanceInf(intArray0, intArray0);
    float float0 = MathUtils.round(3892.7F, 0, 0);
    long long0 = MathUtils.pow((long) 0, 0);
    double double0 = MathUtils.sinh((-6077.737308));
    double double1 = MathUtils.binomialCoefficientLog(0, 0);
    assertEquals(0.0, double1, 0.01);
}",0,
project,0,test14292,"public void test14292() throws Throwable {
    int[] intArray0 = new int[0];
    int int0 = MathUtils.distance1(intArray0, intArray0);
    MathUtils.distanceInf(intArray0, intArray0);
    float float0 = MathUtils.round(3892.7F, 0, 0);
    long long0 = MathUtils.pow((long) 0, 0);
    double double0 = MathUtils.sinh((-6077.737308));
    double double1 = MathUtils.binomialCoefficientLog(0, 0);
    MathUtils.distance(intArray0, intArray0);
    MathUtils.distanceInf(intArray0, intArray0);
    MathUtils.factorial(0);
    int int1 = MathUtils.gcd(1726, 1726);
    assertEquals(1726, int1);
}",0,
project,0,test14293,"public void test14293() throws Throwable {
    int[] intArray0 = new int[0];
    int int0 = MathUtils.distance1(intArray0, intArray0);
    MathUtils.distanceInf(intArray0, intArray0);
    float float0 = MathUtils.round(3892.7F, 0, 0);
    long long0 = MathUtils.pow((long) 0, 0);
    double double0 = MathUtils.sinh((-6077.737308));
    double double1 = MathUtils.binomialCoefficientLog(0, 0);
    MathUtils.distance(intArray0, intArray0);
    MathUtils.distanceInf(intArray0, intArray0);
    MathUtils.factorial(0);
    int int1 = MathUtils.gcd(1726, 1726);
    MathUtils.sign(0);
    byte byte0 = MathUtils.indicator((byte) 14);
    assertEquals((byte) 1, byte0);
}",0,assertNotNull(byte0)
project,0,test14394,"public void test14394() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficient(4191, 3092);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: multiply
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test14495,"public void test14495() throws Throwable {
    int int0 = 0;
    int int1 = (-603);
    MathUtils.binomialCoefficientDouble(0, (-603));
    MathUtils.sinh(1.0);
    MathUtils.log(3670.43953, 0);
    MathUtils.indicator((byte) 52);
    double[] doubleArray0 = new double[5];
    doubleArray0[0] = (double) (-603);
    doubleArray0[1] = 1.1752011936438016;
    doubleArray0[2] = (double) (-603);
    doubleArray0[3] = 3670.43953;
    doubleArray0[4] = (double) (-603);
    MathUtils.distance1(doubleArray0, doubleArray0);
    MathUtils.distance(doubleArray0, doubleArray0);
    MathUtils.distanceInf(doubleArray0, doubleArray0);
    MathUtils.equals((-1566.3), 1.0);
    MathUtils.indicator(0);
    int int2 = 1633;
    MathUtils.addAndCheck(20, 1633);
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficientDouble((-603), 1);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= k for binomial coefficient (n,k), got n = -603, k = 1
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",0,
