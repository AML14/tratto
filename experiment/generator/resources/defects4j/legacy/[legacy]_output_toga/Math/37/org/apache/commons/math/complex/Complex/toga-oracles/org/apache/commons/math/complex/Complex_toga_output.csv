project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test060,"public void test060() throws Throwable {
    Complex complex0 = Complex.INF;
    Object object0 = complex0.readResolve();
    complex0.equals(object0);
    Complex complex1 = complex0.conjugate();
    Complex complex2 = complex1.ONE.log();
    Complex complex3 = complex2.pow(1.5129516124725342);
    Complex complex4 = complex2.reciprocal();
    complex4.I.hashCode();
    Complex complex5 = complex1.atan();
    Complex complex6 = Complex.ONE;
    complex0.add(complex6);
    Complex complex7 = complex0.I.reciprocal();
    complex1.divide(complex4);
    Complex complex8 = complex1.divide(1.5129516124725342);
    complex2.divide(1.5129516124725342);
    complex4.cosh();
    complex8.sinh();
    complex2.subtract(complex5);
    complex3.pow((Complex) null);
    complex7.log();
    // Undeclared exception!
    try {
        complex1.negate();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // null is not allowed
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test221,"public void test221() throws Throwable {
    Complex complex0 = Complex.NaN;
    Complex complex1 = complex0.sqrt1z();
    Complex complex2 = complex1.NaN.cos();
    Complex complex3 = complex1.atan();
    complex3.ONE.conjugate();
    complex1.NaN.toString();
    Complex complex4 = complex0.createComplex(0.0, 0.0);
    complex4.NaN.abs();
    complex0.NaN.abs();
    complex0.INF.createComplex(0.0, 0.0);
    complex4.readResolve();
    complex1.ONE.sqrt();
    Complex complex5 = complex0.tan();
    complex5.I.atan();
    complex5.multiply(complex2);
    complex1.NaN.toString();
    complex0.nthRoot((-3728));
    complex3.tanh();
    // Undeclared exception!
    try {
        complex1.getImaginary();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot compute nth root for null or negative n: -3,728
        //
        verifyException(""org.apache.commons.math.complex.Complex"", e);
    }
}",0,
project,0,test882,"public void test882() throws Throwable {
    double double0 = 0.0;
    Complex complex0 = new Complex(0.0);
    Complex complex1 = complex0.INF.negate();
    Complex complex2 = complex1.conjugate();
    Complex complex3 = complex2.INF.pow(complex0);
    Complex complex4 = complex1.divide(0.0);
    complex4.NaN.getField();
    Complex complex5 = complex3.INF.sqrt();
    Complex complex6 = complex3.I.add(Double.NaN);
    complex6.I.toString();
    complex2.tan();
    complex0.nthRoot((-725));
    complex3.cos();
    // Undeclared exception!
    try {
        complex5.asin();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cannot compute nth root for null or negative n: -725
        //
        verifyException(""org.apache.commons.math.complex.Complex"", e);
    }
}",0,
