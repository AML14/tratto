project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test00,"public void test00() throws Throwable {
    SimplexSolver simplexSolver0 = new SimplexSolver(4.903687986212687E-49, 22, 22);
    OptimizationData[] optimizationDataArray0 = new OptimizationData[8];
    double[] doubleArray0 = new double[0];
    InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
    optimizationDataArray0[3] = (OptimizationData) initialGuess0;
    SimpleBounds simpleBounds0 = SimpleBounds.unbounded(3965);
    optimizationDataArray0[7] = (OptimizationData) simpleBounds0;
    // Undeclared exception!
    try {
        simplexSolver0.optimize(optimizationDataArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // 3,965 != 0
        //
        verifyException(""org.apache.commons.math3.optim.BaseMultivariateOptimizer"", e);
    }
}",1,
project,0,test11,"public void test11() throws Throwable {
    SimplexSolver simplexSolver0 = new SimplexSolver(1223.833820786675, (-633066204));
    OptimizationData[] optimizationDataArray0 = new OptimizationData[4];
    // Undeclared exception!
    try {
        simplexSolver0.optimize(optimizationDataArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.Collections$UnmodifiableCollection"", e);
    }
}",1,
project,0,test22,"public void test22() throws Throwable {
    SimplexSolver simplexSolver0 = new SimplexSolver(18.43408335013158);
    ConvergenceChecker<PointValuePair> convergenceChecker0 = simplexSolver0.getConvergenceChecker();
    assertNull(convergenceChecker0);
}",0,assertNotNull(convergenceChecker0)
project,0,test33,"public void test33() throws Throwable {
    BrentOptimizer brentOptimizer0 = new BrentOptimizer(2330.5611073367345, 2330.5611073367345);
    OptimizationData[] optimizationDataArray0 = new OptimizationData[23];
    MaxIter maxIter0 = MaxIter.unlimited();
    optimizationDataArray0[16] = (OptimizationData) maxIter0;
    try {
        brentOptimizer0.optimize(optimizationDataArray0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // illegal state: maximal count (0) exceeded: evaluations
        //
        verifyException(""org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback"", e);
    }
}",1,
project,0,test44,"public void test44() throws Throwable {
    BrentOptimizer brentOptimizer0 = new BrentOptimizer(2330.5611073367345, 2330.5611073367345);
    OptimizationData[] optimizationDataArray0 = new OptimizationData[23];
    MaxEval maxEval0 = MaxEval.unlimited();
    optimizationDataArray0[7] = (OptimizationData) maxEval0;
    // Undeclared exception!
    try {
        brentOptimizer0.optimize(optimizationDataArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.optim.univariate.UnivariateOptimizer"", e);
    }
}",0,
project,0,test55,"public void test55() throws Throwable {
    BrentOptimizer brentOptimizer0 = new BrentOptimizer(2776.7344283859998, 2776.7344283859998);
    int int0 = brentOptimizer0.getMaxEvaluations();
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test66,"public void test66() throws Throwable {
    BrentOptimizer brentOptimizer0 = new BrentOptimizer(2776.7344283859998, 2776.7344283859998);
    int int0 = brentOptimizer0.getMaxIterations();
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test77,"public void test77() throws Throwable {
    BrentOptimizer brentOptimizer0 = new BrentOptimizer(2776.7344283859998, 2776.7344283859998);
    int int0 = brentOptimizer0.getEvaluations();
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test88,"public void test88() throws Throwable {
    BrentOptimizer brentOptimizer0 = new BrentOptimizer(2776.7344283859998, 2776.7344283859998);
    int int0 = brentOptimizer0.getIterations();
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
