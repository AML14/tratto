/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 18:37:40 GMT 2023
 */
package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.solvers.BisectionSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class BisectionSolver_ESTest extends BisectionSolver_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test050() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = null;
        BisectionSolver bisectionSolver0 = null;
        bisectionSolver0 = new BisectionSolver((UnivariateRealFunction) null);
    }

    @Test(timeout = 4000)
    public void test091() throws Throwable {
        BisectionSolver bisectionSolver0 = new BisectionSolver();
        bisectionSolver0.result = (-864.2);
        bisectionSolver0.resetRelativeAccuracy();
        double double0 = 1.0E-15;
        bisectionSolver0.setAbsoluteAccuracy(1.0E-15);
        bisectionSolver0.functionValueAccuracy = (-864.2);
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        double double1 = (-508.649680886601);
        UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        UnivariateRealFunction univariateRealFunction2 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0).when(univariateRealFunction2).value(anyDouble());
        bisectionSolver0.isBracketing((-864.2), (-2348.881511), univariateRealFunction2);
        UnivariateRealFunction univariateRealFunction3 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        bisectionSolver0.solve(univariateRealFunction3, (-864.2), 1.0E-15, 0.0);
        bisectionSolver0.verifyBracketing(double1, double1, univariateRealFunction1);
        double double2 = 1.0;
        bisectionSolver0.resetMaximalIterationCount();
    }

    @Test(timeout = 4000)
    public void test102() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        double double0 = (-2007.8392609);
        bisectionSolver0.solve(univariateRealFunction1, (-2007.8392609), (-2007.8392609));
    }

    @Test(timeout = 4000)
    public void test123() throws Throwable {
        UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
        BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
        bisectionSolver0.setResult((-3567.241), 1.0E-14, 3);
        bisectionSolver0.setResult((-432.6581938845), (-2798));
        UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
        doReturn(0.0, 0.0).when(univariateRealFunction1).value(anyDouble());
        bisectionSolver0.isBracketing(4288.547, 4288.547, univariateRealFunction1);
        double double0 = bisectionSolver0.solve((-432.6581938845), Double.POSITIVE_INFINITY, 0.0);
        UnivariateRealFunction univariateRealFunction2 = null;
        double double1 = 1254.5779;
        bisectionSolver0.solve(univariateRealFunction2, double1, double1);
        double double2 = 156.7199311373;
        bisectionSolver0.solve(double2, double0);
        double double3 = 1.0;
        double double4 = 1293.9865620470193;
        bisectionSolver0.solve(double0, double3, double4);
    }

    @Test(timeout = 4000)
    public void test214() throws Throwable {
        BisectionSolver bisectionSolver0 = new BisectionSolver();
        bisectionSolver0.verifyInterval(3615.837, Double.POSITIVE_INFINITY);
        UnivariateRealFunction univariateRealFunction0 = null;
        double double0 = 0.0;
        double double1 = 470.0;
        bisectionSolver0.solve((UnivariateRealFunction) null, 0.0, 470.0);
        double double2 = 0.0;
        bisectionSolver0.verifyInterval(double0, double2);
    }
}
