project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.stubVoid((String) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test011,"public void test011() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    // Undeclared exception!
    try {
        mockitoCore0.stub(mockSettingsImpl0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test032,"public void test032() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    LinkedList<Object> linkedList0 = new LinkedList<Object>();
    InOrderImpl inOrderImpl0 = new InOrderImpl(linkedList0);
    // Undeclared exception!
    try {
        mockitoCore0.verifyNoMoreInteractionsInOrder(linkedList0, inOrderImpl0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test043,"public void test043() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Class<Object> class0 = Object.class;
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    // Undeclared exception!
    try {
        mockitoCore0.mock(class0, (MockSettings) mockSettingsImpl0);
        fail(""Expecting exception: IncompatibleClassChangeError"");
    } catch (IncompatibleClassChangeError e) {
        //
        // Expected non-static field org.mockito.cglib.proxy.Enhancer.serialVersionUID
        //
        verifyException(""org.mockito.cglib.proxy.Enhancer"", e);
    }
}",0,
project,0,test054,"public void test054() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.when(""InnerClasses"");
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test065,"public void test065() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.getLastInvocation();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.mockito.internal.MockitoCore"", e);
    }
}",0,
project,0,test086,"public void test086() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Only only0 = new Only();
    // Undeclared exception!
    try {
        mockitoCore0.verify((Object) only0, (VerificationMode) only0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test097,"public void test097() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.verify((Object) null, (VerificationMode) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test118,"public void test118() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    ConsecutiveStubbing<Integer>[] consecutiveStubbingArray0 = (ConsecutiveStubbing<Integer>[]) Array.newInstance(ConsecutiveStubbing.class, 1);
    // Undeclared exception!
    try {
        mockitoCore0.reset(consecutiveStubbingArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test129,"public void test129() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[1];
    // Undeclared exception!
    try {
        mockitoCore0.verifyNoMoreInteractions(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test1310,"public void test1310() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[18];
    objectArray0[0] = (Object) mockitoCore0;
    // Undeclared exception!
    try {
        mockitoCore0.verifyNoMoreInteractions(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test1411,"public void test1411() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.verifyNoMoreInteractions((Object[]) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test1512,"public void test1512() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[0];
    // Undeclared exception!
    try {
        mockitoCore0.verifyNoMoreInteractions(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test1613,"public void test1613() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.inOrder((Object[]) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test1714,"public void test1714() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[4];
    // Undeclared exception!
    try {
        mockitoCore0.inOrder(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test1815,"public void test1815() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[0];
    // Undeclared exception!
    try {
        mockitoCore0.inOrder(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test1916,"public void test1916() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[4];
    objectArray0[0] = (Object) mockitoCore0;
    // Undeclared exception!
    try {
        mockitoCore0.inOrder(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
