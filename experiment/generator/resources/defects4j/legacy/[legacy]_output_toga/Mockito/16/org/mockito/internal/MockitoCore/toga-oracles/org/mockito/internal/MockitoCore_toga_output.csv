project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.stubVoid((Object) ""K,8K\""(:g&z4VhOoB"");
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test011,"public void test011() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.stub(""Long"");
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test022,"public void test022() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Class<MockSettingsImpl> class0 = MockSettingsImpl.class;
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    // Undeclared exception!
    try {
        mockitoCore0.mock(class0, (MockSettings) mockSettingsImpl0, true);
        fail(""Expecting exception: IncompatibleClassChangeError"");
    } catch (IncompatibleClassChangeError e) {
        //
        // Expected non-static field org.mockito.cglib.proxy.Enhancer.serialVersionUID
        //
        verifyException(""org.mockito.cglib.proxy.Enhancer"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    ClonesArguments clonesArguments0 = new ClonesArguments();
    Stubber stubber0 = mockitoCore0.doAnswer(clonesArguments0);
    assertNotNull(stubber0);
}",1,
project,0,test044,"public void test044() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object object0 = new Object();
    // Undeclared exception!
    try {
        mockitoCore0.when(object0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test055,"public void test055() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.getLastInvocation();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.mockito.internal.MockitoCore"", e);
    }
}",0,
project,0,test076,"public void test076() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.stub();
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test087,"public void test087() throws Throwable {
    Only only0 = new Only();
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.verify((Object) only0, (VerificationMode) only0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test098,"public void test098() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.verify((Object) null, (VerificationMode) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test119,"public void test119() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Invocation[] invocationArray0 = new Invocation[1];
    // Undeclared exception!
    try {
        mockitoCore0.reset(invocationArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test1210,"public void test1210() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[1];
    // Undeclared exception!
    try {
        mockitoCore0.verifyNoMoreInteractions(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test1311,"public void test1311() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[2];
    objectArray0[0] = (Object) mockitoCore0;
    // Undeclared exception!
    try {
        mockitoCore0.verifyNoMoreInteractions(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test1412,"public void test1412() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.verifyNoMoreInteractions((Object[]) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test1513,"public void test1513() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[0];
    // Undeclared exception!
    try {
        mockitoCore0.verifyNoMoreInteractions(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test1614,"public void test1614() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.inOrder((Object[]) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test1715,"public void test1715() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[2];
    // Undeclared exception!
    try {
        mockitoCore0.inOrder(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test1816,"public void test1816() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[0];
    // Undeclared exception!
    try {
        mockitoCore0.inOrder(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test1917,"public void test1917() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[2];
    objectArray0[0] = (Object) mockitoCore0;
    // Undeclared exception!
    try {
        mockitoCore0.inOrder(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
