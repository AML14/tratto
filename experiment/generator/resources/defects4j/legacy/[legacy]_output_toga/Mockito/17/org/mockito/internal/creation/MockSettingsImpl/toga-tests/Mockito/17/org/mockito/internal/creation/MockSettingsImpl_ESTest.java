/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 05 01:55:15 GMT 2023
 */
package org.mockito.internal.creation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.lang.reflect.Array;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.MockSettings;
import org.mockito.internal.creation.MockSettingsImpl;
import org.mockito.internal.util.MockName;
import org.mockito.stubbing.Answer;
import org.mockito.stubbing.ClonesArguments;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class MockSettingsImpl_ESTest extends MockSettingsImpl_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        MockSettingsImpl mockSettingsImpl1 = (MockSettingsImpl) mockSettingsImpl0.serializable();
        boolean boolean0 = mockSettingsImpl1.isSerializable();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        MockSettings mockSettings0 = mockSettingsImpl0.name("");
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        Class<?>[] classArray0 = mockSettingsImpl0.getExtraInterfaces();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        MockSettings mockSettings0 = mockSettingsImpl0.spiedInstance((Object) null);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        ClonesArguments clonesArguments0 = new ClonesArguments();
        MockSettings mockSettings0 = mockSettingsImpl0.defaultAnswer(clonesArguments0);
    }

    @Test(timeout = 4000)
    public void test065() throws Throwable {
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        Answer<Object> answer0 = mockSettingsImpl0.getDefaultAnswer();
    }

    @Test(timeout = 4000)
    public void test076() throws Throwable {
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        Object object0 = mockSettingsImpl0.getSpiedInstance();
    }

    @Test(timeout = 4000)
    public void test087() throws Throwable {
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        MockName mockName0 = mockSettingsImpl0.getMockName();
        assertNotNull(mockName0);
    }

    @Test(timeout = 4000)
    public void test098() throws Throwable {
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        mockSettingsImpl0.extraInterfaces((Class<?>[]) null);
    }

    @Test(timeout = 4000)
    public void test109() throws Throwable {
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 0);
        mockSettingsImpl0.extraInterfaces(classArray0);
    }

    @Test(timeout = 4000)
    public void test1110() throws Throwable {
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 1);
        mockSettingsImpl0.extraInterfaces(classArray0);
    }

    @Test(timeout = 4000)
    public void test1211() throws Throwable {
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 1);
        Class<String> class0 = String.class;
        classArray0[0] = class0;
        mockSettingsImpl0.extraInterfaces(classArray0);
    }

    @Test(timeout = 4000)
    public void test1312() throws Throwable {
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        boolean boolean0 = mockSettingsImpl0.isSerializable();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1413() throws Throwable {
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        Class<Annotation>[] classArray0 = (Class<Annotation>[]) Array.newInstance(Class.class, 2);
        Class<Annotation> class0 = Annotation.class;
        classArray0[0] = class0;
        classArray0[1] = classArray0[0];
        mockSettingsImpl0.extraInterfaces(classArray0);
        boolean boolean0 = mockSettingsImpl0.isSerializable();
        assertTrue(boolean0);
    }
}
