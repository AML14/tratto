/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 20 04:46:40 GMT 2023
 */
package com.fasterxml.jackson.databind.deser.std;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.annotation.ObjectIdGenerator;
import com.fasterxml.jackson.annotation.SimpleObjectIdResolver;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.json.ReaderBasedJsonParser;
import com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.JsonParserDelegate;
import com.fasterxml.jackson.core.util.JsonParserSequence;
import com.fasterxml.jackson.databind.BeanProperty;
import com.fasterxml.jackson.databind.DeserializationConfig;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.InjectableValues;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.KeyDeserializer;
import com.fasterxml.jackson.databind.Module;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.PropertyMetadata;
import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.cfg.BaseSettings;
import com.fasterxml.jackson.databind.cfg.ConfigOverrides;
import com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig;
import com.fasterxml.jackson.databind.deser.BeanDeserializer;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.deser.NullValueProvider;
import com.fasterxml.jackson.databind.deser.SettableBeanProperty;
import com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer;
import com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer;
import com.fasterxml.jackson.databind.deser.std.NumberDeserializers;
import com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers;
import com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.fasterxml.jackson.databind.deser.std.StringDeserializer;
import com.fasterxml.jackson.databind.introspect.SimpleMixInResolver;
import com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.BinaryNode;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;
import com.fasterxml.jackson.databind.type.PlaceholderForType;
import com.fasterxml.jackson.databind.util.AccessPattern;
import com.fasterxml.jackson.databind.util.Converter;
import com.fasterxml.jackson.databind.util.RootNameLookup;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.time.chrono.ChronoLocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class StdDeserializer_ESTest extends StdDeserializer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        StdDelegatingDeserializer<BinaryNode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BinaryNode>((Converter<?, BinaryNode>) null);
        StdDelegatingDeserializer<BinaryNode> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<BinaryNode>(stdDelegatingDeserializer0);
        stdDelegatingDeserializer1.isCachable();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.primitiveInstance;
        numberDeserializers_FloatDeserializer0._parseLongPrimitive((DeserializationContext) null, (String) null);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        StdDelegatingDeserializer<JavaType> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<JavaType>((Converter<?, JavaType>) null);
        boolean boolean0 = stdDelegatingDeserializer0._hasTextualNull("kVZ;-roJ@");
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.primitiveInstance;
        float float0 = numberDeserializers_FloatDeserializer0._parseFloatPrimitive((DeserializationContext) null, "NaN");
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        numberDeserializers_FloatDeserializer0._failDoubleToIntCoercion((JsonParser) null, defaultDeserializationContext_Impl0, "]uw&4!3Z(%");
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        Converter<BeanDeserializer, JavaType> converter0 = (Converter<BeanDeserializer, JavaType>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<JavaType> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<JavaType>(converter0);
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        stdDelegatingDeserializer0.findDeserializer(defaultDeserializationContext_Impl0, (JavaType) null, beanProperty_Bogus0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
        Class<?> class0 = numberDeserializers_BooleanDeserializer0.getValueClass();
        class0.getModifiers();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        boolean boolean0 = numberDeserializers_FloatDeserializer0.isDefaultKeyDeserializer((KeyDeserializer) null);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        boolean boolean0 = numberDeserializers_FloatDeserializer0.isDefaultDeserializer((JsonDeserializer<?>) null);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        PrimitiveArrayDeserializers.ShortDeser primitiveArrayDeserializers_ShortDeser0 = new PrimitiveArrayDeserializers.ShortDeser();
        ObjectMapper objectMapper0 = new ObjectMapper();
        ObjectReader objectReader0 = objectMapper0.readerForUpdating(primitiveArrayDeserializers_ShortDeser0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        JsonFactory jsonFactory0 = new JsonFactory();
        char[] charArray0 = new char[1];
        JsonParser jsonParser0 = jsonFactory0.createParser(charArray0, (-1), (-1));
        numberDeserializers_FloatDeserializer0._parseBooleanPrimitive(jsonParser0, (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        StringDeserializer stringDeserializer0 = new StringDeserializer();
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
        ConfigOverrides configOverrides0 = new ConfigOverrides();
        DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, (RootNameLookup) null, configOverrides0);
        HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
        InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std(hashMap0);
        char[] charArray0 = new char[6];
        JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
        JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(true, jsonParser0, jsonParser0);
        DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, jsonParser0, injectableValues_Std0);
        boolean boolean0 = stringDeserializer0._parseBooleanFromInt(jsonParserSequence0, defaultDeserializationContext0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        JsonFactory jsonFactory0 = new JsonFactory();
        StringReader stringReader0 = new StringReader("JSON");
        JsonParser jsonParser0 = jsonFactory0.createParser((Reader) stringReader0);
        JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(true, jsonParser0, jsonParser0);
        numberDeserializers_FloatDeserializer0._parseShortPrimitive(jsonParserSequence0, (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        numberDeserializers_FloatDeserializer0._parseIntPrimitive((DeserializationContext) null, "%u");
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        numberDeserializers_FloatDeserializer0._parseIntPrimitive((DeserializationContext) null, "|{`z)Zwixcy'51j");
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        JsonFactory jsonFactory0 = new JsonFactory();
        char[] charArray0 = new char[0];
        JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
        numberDeserializers_FloatDeserializer0._parseLongPrimitive(jsonParser0, (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        PipedReader pipedReader0 = new PipedReader();
        JsonParser jsonParser0 = jsonFactory0.createParser((Reader) pipedReader0);
        numberDeserializers_FloatDeserializer0._parseFloatPrimitive(jsonParser0, (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        AtomicBooleanDeserializer atomicBooleanDeserializer0 = new AtomicBooleanDeserializer();
        float float0 = atomicBooleanDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "-Infinity");
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        float float0 = numberDeserializers_FloatDeserializer0._parseFloatPrimitive((DeserializationContext) null, "Infinity");
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        AtomicBooleanDeserializer atomicBooleanDeserializer0 = new AtomicBooleanDeserializer();
        atomicBooleanDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, ";,TD!5V9[h(6Uk&6dj");
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.primitiveInstance;
        numberDeserializers_FloatDeserializer0._parseFloatPrimitive((DeserializationContext) null, "Invalid delegate-creator definition for %s: value instantiator (%s) returned true for 'canCreateUsingDelegate()', but null for 'getDelegateType()'");
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.primitiveInstance;
        numberDeserializers_FloatDeserializer0._parseFloatPrimitive((DeserializationContext) null, "No vaue type configured for ObjectReade");
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        numberDeserializers_FloatDeserializer0._parseFloatPrimitive((DeserializationContext) null, "-Cl-4SeXPn");
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.primitiveInstance;
        JsonFactory jsonFactory0 = new JsonFactory();
        char[] charArray0 = new char[5];
        JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
        numberDeserializers_FloatDeserializer0._parseDoublePrimitive(jsonParser0, (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        Converter<Double, BinaryNode> converter0 = (Converter<Double, BinaryNode>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<BinaryNode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BinaryNode>(converter0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "-Infini");
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        numberDeserializers_FloatDeserializer0._parseDoublePrimitive((DeserializationContext) null, "Non-standard token '%s': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow");
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StdDelegatingDeserializer<BinaryNode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BinaryNode>((Converter<?, BinaryNode>) null);
        double double0 = stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "Infinity");
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        StdDelegatingDeserializer<BinaryNode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BinaryNode>((Converter<?, BinaryNode>) null);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "Invalid definition for property %s (of type %s): %s");
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        JavaType javaType0 = beanProperty_Bogus0.getType();
        StdDelegatingDeserializer<String> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<String>((Converter<Object, String>) null, javaType0, numberDeserializers_FloatDeserializer0);
        double double0 = stdDelegatingDeserializer0._parseDoublePrimitive((DeserializationContext) null, "NaN");
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        StdDelegatingDeserializer<BinaryNode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BinaryNode>((Converter<?, BinaryNode>) null);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        double double0 = stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "-Infinity");
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.primitiveInstance;
        ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);
        JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);
        ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);
        JsonParser jsonParser0 = objectMapper0.treeAsTokens(arrayNode0);
        numberDeserializers_FloatDeserializer0._parseDate(jsonParser0, (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>((Converter<?, BeanDeserializer>) null);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        stdDelegatingDeserializer0._parseDateFromArray((JsonParser) null, defaultDeserializationContext_Impl0);
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        numberDeserializers_FloatDeserializer0._parseDate("com.fasterxml.jackson.databind.introspect.AnnotatedClass", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        StdDelegatingDeserializer<Boolean> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Boolean>((Converter<?, Boolean>) null);
        Date date0 = stdDelegatingDeserializer0._parseDate("null", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        Converter<ChronoLocalDate, BinaryNode> converter0 = (Converter<ChronoLocalDate, BinaryNode>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<BinaryNode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BinaryNode>(converter0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        double double0 = stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "2.2250738585072012e-308");
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        StdDelegatingDeserializer<String> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<String>((Converter<?, String>) null);
        char[] charArray0 = new char[0];
        JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
        DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
        stdDelegatingDeserializer0._parseString(jsonParser0, deserializationContext0);
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedWriter pipedWriter0 = new PipedWriter();
        PipedReader pipedReader0 = new PipedReader(pipedWriter0);
        ObjectMapper objectMapper0 = new ObjectMapper();
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, pipedReader0, objectMapper0, charsToNameCanonicalizer0);
        numberDeserializers_FloatDeserializer0._deserializeFromEmpty(readerBasedJsonParser0, (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3737() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.primitiveInstance;
        boolean boolean0 = numberDeserializers_FloatDeserializer0._isEmptyOrTextualNull("");
    }

    @Test(timeout = 4000)
    public void test3838() throws Throwable {
        Converter<Object, Boolean> converter0 = (Converter<Object, Boolean>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<Boolean> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Boolean>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._isNegInf("-INF");
    }

    @Test(timeout = 4000)
    public void test3939() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
        StdDelegatingDeserializer<BinaryNode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BinaryNode>((Converter<?, BinaryNode>) null);
        double double0 = stdDelegatingDeserializer0._parseDoublePrimitive(deserializationContext0, "INF");
    }

    @Test(timeout = 4000)
    public void test4040() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        numberDeserializers_FloatDeserializer0._deserializeFromArray((JsonParser) null, defaultDeserializationContext_Impl0);
    }

    @Test(timeout = 4000)
    public void test4141() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
        JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
        DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
        NullifyingDeserializer nullifyingDeserializer0 = new NullifyingDeserializer();
        JsonParserDelegate jsonParserDelegate0 = new JsonParserDelegate(jsonParser0);
        Object object0 = nullifyingDeserializer0._deserializeWrappedValue(jsonParserDelegate0, deserializationContext0);
    }

    @Test(timeout = 4000)
    public void test4242() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        numberDeserializers_FloatDeserializer0._coerceIntegral((JsonParser) null, defaultDeserializationContext_Impl0);
    }

    @Test(timeout = 4000)
    public void test4343() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        Object object0 = numberDeserializers_FloatDeserializer0._coerceNullToken((DeserializationContext) null, false);
    }

    @Test(timeout = 4000)
    public void test4444() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.primitiveInstance;
        numberDeserializers_FloatDeserializer0._coerceNullToken((DeserializationContext) null, true);
    }

    @Test(timeout = 4000)
    public void test4545() throws Throwable {
        Converter<PlaceholderForType, BinaryNode> converter0 = (Converter<PlaceholderForType, BinaryNode>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<BinaryNode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BinaryNode>(converter0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        stdDelegatingDeserializer0._verifyNullForPrimitive(defaultDeserializationContext_Impl0);
        defaultDeserializationContext_Impl0.getDeserializationFeatures();
    }

    @Test(timeout = 4000)
    public void test4646() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
        ConfigOverrides configOverrides0 = new ConfigOverrides();
        DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, (RootNameLookup) null, configOverrides0);
        InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();
        char[] charArray0 = new char[6];
        JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
        DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, jsonParser0, injectableValues_Std0);
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.primitiveInstance;
        numberDeserializers_FloatDeserializer0._verifyNullForScalarCoercion(defaultDeserializationContext0, "-INF");
        numberDeserializers_FloatDeserializer0.isCachable();
    }

    @Test(timeout = 4000)
    public void test4747() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY;
        Converter<JavaType, ObjectIdGenerator<Boolean>> converter0 = (Converter<JavaType, ObjectIdGenerator<Boolean>>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<ObjectIdGenerator<Boolean>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<ObjectIdGenerator<Boolean>>(converter0);
        stdDelegatingDeserializer0._reportFailedNullCoerce(defaultDeserializationContext_Impl0, false, jsonFormat_Feature0, "2eYEQ");
    }

    @Test(timeout = 4000)
    public void test4848() throws Throwable {
        PrimitiveArrayDeserializers.FloatDeser primitiveArrayDeserializers_FloatDeser0 = new PrimitiveArrayDeserializers.FloatDeser();
        ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);
        JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES;
        DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
        primitiveArrayDeserializers_FloatDeser0._reportFailedNullCoerce(deserializationContext0, true, jsonParser_Feature0, "DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS");
    }

    @Test(timeout = 4000)
    public void test4949() throws Throwable {
        Converter<Integer, SimpleObjectIdResolver> converter0 = (Converter<Integer, SimpleObjectIdResolver>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<SimpleObjectIdResolver> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<SimpleObjectIdResolver>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("");
    }

    @Test(timeout = 4000)
    public void test5050() throws Throwable {
        Converter<Byte, SimpleObjectIdResolver> converter0 = (Converter<Byte, SimpleObjectIdResolver>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<SimpleObjectIdResolver> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<SimpleObjectIdResolver>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("57");
    }

    @Test(timeout = 4000)
    public void test5151() throws Throwable {
        Converter<Byte, SimpleObjectIdResolver> converter0 = (Converter<Byte, SimpleObjectIdResolver>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<SimpleObjectIdResolver> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<SimpleObjectIdResolver>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("-Infinity");
    }

    @Test(timeout = 4000)
    public void test5252() throws Throwable {
        Converter<Module, SimpleObjectIdResolver> converter0 = (Converter<Module, SimpleObjectIdResolver>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<SimpleObjectIdResolver> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<SimpleObjectIdResolver>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("+P");
    }

    @Test(timeout = 4000)
    public void test5353() throws Throwable {
        StdDelegatingDeserializer<Long> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Long>((Converter<?, Long>) null);
        boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("'TAYC!fFC");
    }

    @Test(timeout = 4000)
    public void test5454() throws Throwable {
        PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
        NullValueProvider nullValueProvider0 = primitiveArrayDeserializers_BooleanDeser0.findValueNullProvider((DeserializationContext) null, (SettableBeanProperty) null, (PropertyMetadata) null);
    }

    @Test(timeout = 4000)
    public void test5555() throws Throwable {
        Converter<PlaceholderForType, BinaryNode> converter0 = (Converter<PlaceholderForType, BinaryNode>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<BinaryNode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BinaryNode>(converter0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        Class<Float> class0 = Float.class;
        Float float0 = new Float((-3158.41F));
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = new NumberDeserializers.FloatDeserializer(class0, float0);
        StdDelegatingDeserializer stdDelegatingDeserializer1 = (StdDelegatingDeserializer) numberDeserializers_FloatDeserializer0.findContentNullProvider(defaultDeserializationContext_Impl0, (BeanProperty) null, stdDelegatingDeserializer0);
        stdDelegatingDeserializer1.isCachable();
    }

    @Test(timeout = 4000)
    public void test5656() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
        Nulls nulls0 = Nulls.FAIL;
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        NullValueProvider nullValueProvider0 = primitiveArrayDeserializers_BooleanDeser0._findNullProvider((DeserializationContext) null, beanProperty_Bogus0, nulls0, numberDeserializers_FloatDeserializer0);
        nullValueProvider0.getNullAccessPattern();
    }

    @Test(timeout = 4000)
    public void test5757() throws Throwable {
        PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
        PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser1 = new PrimitiveArrayDeserializers.BooleanDeser();
        Nulls nulls0 = Nulls.FAIL;
        primitiveArrayDeserializers_BooleanDeser1._findNullProvider((DeserializationContext) null, (BeanProperty) null, nulls0, primitiveArrayDeserializers_BooleanDeser0);
    }

    @Test(timeout = 4000)
    public void test5858() throws Throwable {
        PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
        PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser1 = new PrimitiveArrayDeserializers.BooleanDeser();
        Nulls nulls0 = Nulls.AS_EMPTY;
        NullValueProvider nullValueProvider0 = primitiveArrayDeserializers_BooleanDeser1._findNullProvider((DeserializationContext) null, (BeanProperty) null, nulls0, primitiveArrayDeserializers_BooleanDeser0);
    }

    @Test(timeout = 4000)
    public void test5859() throws Throwable {
        PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
        PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser1 = new PrimitiveArrayDeserializers.BooleanDeser();
        Nulls nulls0 = Nulls.AS_EMPTY;
        NullValueProvider nullValueProvider0 = primitiveArrayDeserializers_BooleanDeser1._findNullProvider((DeserializationContext) null, (BeanProperty) null, nulls0, primitiveArrayDeserializers_BooleanDeser0);
        nullValueProvider0.getNullAccessPattern();
    }

    @Test(timeout = 4000)
    public void test5960() throws Throwable {
        PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
        Nulls nulls0 = Nulls.AS_EMPTY;
        Converter<Object, PlaceholderForType> converter0 = (Converter<Object, PlaceholderForType>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<PlaceholderForType> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<PlaceholderForType>(converter0, (JavaType) null, primitiveArrayDeserializers_BooleanDeser0);
        NullValueProvider nullValueProvider0 = primitiveArrayDeserializers_BooleanDeser0._findNullProvider((DeserializationContext) null, (BeanProperty) null, nulls0, stdDelegatingDeserializer0);
        nullValueProvider0.getNullAccessPattern();
    }

    @Test(timeout = 4000)
    public void test6061() throws Throwable {
        PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
        PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser1 = new PrimitiveArrayDeserializers.BooleanDeser();
        Nulls nulls0 = Nulls.SKIP;
        NullValueProvider nullValueProvider0 = primitiveArrayDeserializers_BooleanDeser1._findNullProvider((DeserializationContext) null, (BeanProperty) null, nulls0, primitiveArrayDeserializers_BooleanDeser0);
        nullValueProvider0.getNullAccessPattern();
    }

    @Test(timeout = 4000)
    public void test6062() throws Throwable {
        PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
        PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser1 = new PrimitiveArrayDeserializers.BooleanDeser();
        Nulls nulls0 = Nulls.SKIP;
        NullValueProvider nullValueProvider0 = primitiveArrayDeserializers_BooleanDeser1._findNullProvider((DeserializationContext) null, (BeanProperty) null, nulls0, primitiveArrayDeserializers_BooleanDeser0);
    }

    @Test(timeout = 4000)
    public void test6163() throws Throwable {
        StdDelegatingDeserializer<Boolean> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Boolean>((Converter<?, Boolean>) null);
        ArrayList<PropertyName> arrayList0 = new ArrayList<PropertyName>();
        stdDelegatingDeserializer0.handleUnknownProperty((JsonParser) null, (DeserializationContext) null, arrayList0, (String) null);
    }

    @Test(timeout = 4000)
    public void test6264() throws Throwable {
        StdDelegatingDeserializer<Boolean> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Boolean>((Converter<?, Boolean>) null);
        stdDelegatingDeserializer0.handleUnknownProperty((JsonParser) null, (DeserializationContext) null, (Object) null, "NK");
    }

    @Test(timeout = 4000)
    public void test6365() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser((InputStream) null);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>((Converter<?, BeanDeserializer>) null);
        StdDelegatingDeserializer<BinaryNode> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<BinaryNode>((Converter<Object, BinaryNode>) null, (JavaType) null, stdDelegatingDeserializer0);
        stdDelegatingDeserializer1._verifyEndArrayForSingle(jsonParser0, defaultDeserializationContext_Impl0);
    }

    @Test(timeout = 4000)
    public void test6466() throws Throwable {
        boolean boolean0 = StdDeserializer._neitherNull(")H;?>n ", (Object) null);
    }

    @Test(timeout = 4000)
    public void test6567() throws Throwable {
        Converter<BinaryNode, InputStream> converter0 = (Converter<BinaryNode, InputStream>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<InputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<InputStream>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._byteOverflow((-1696));
    }

    @Test(timeout = 4000)
    public void test6668() throws Throwable {
        Converter<BeanDeserializer, InputStream> converter0 = (Converter<BeanDeserializer, InputStream>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<InputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<InputStream>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._byteOverflow(1596);
    }

    @Test(timeout = 4000)
    public void test6769() throws Throwable {
        Converter<BeanDeserializer, InputStream> converter0 = (Converter<BeanDeserializer, InputStream>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<InputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<InputStream>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._byteOverflow(106);
    }

    @Test(timeout = 4000)
    public void test6870() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        boolean boolean0 = numberDeserializers_FloatDeserializer0._shortOverflow((-1884761480));
    }

    @Test(timeout = 4000)
    public void test6971() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        boolean boolean0 = numberDeserializers_FloatDeserializer0._shortOverflow(45);
    }

    @Test(timeout = 4000)
    public void test7072() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        boolean boolean0 = numberDeserializers_FloatDeserializer0._shortOverflow(Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test7173() throws Throwable {
        StdDelegatingDeserializer<BinaryNode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BinaryNode>((Converter<?, BinaryNode>) null);
        boolean boolean0 = stdDelegatingDeserializer0._intOverflow((-9223372036854775808L));
    }

    @Test(timeout = 4000)
    public void test7274() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        StdDelegatingDeserializer<BinaryNode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BinaryNode>((Converter<Object, BinaryNode>) null, (JavaType) null, numberDeserializers_FloatDeserializer0);
        boolean boolean0 = stdDelegatingDeserializer0._intOverflow((-1544L));
    }

    @Test(timeout = 4000)
    public void test7375() throws Throwable {
        StdDelegatingDeserializer<BinaryNode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BinaryNode>((Converter<?, BinaryNode>) null);
        boolean boolean0 = stdDelegatingDeserializer0._intOverflow(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test7476() throws Throwable {
        StdDelegatingDeserializer<String> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<String>((Converter<?, String>) null);
        Number number0 = stdDelegatingDeserializer0._nonNullNumber(7);
    }

    @Test(timeout = 4000)
    public void test7577() throws Throwable {
        Converter<Object, String> converter0 = (Converter<Object, String>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<String> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<String>(converter0);
        Number number0 = stdDelegatingDeserializer0._nonNullNumber((Number) null);
    }

    @Test(timeout = 4000)
    public void test7578() throws Throwable {
        Converter<Object, String> converter0 = (Converter<Object, String>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<String> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<String>(converter0);
        Number number0 = stdDelegatingDeserializer0._nonNullNumber((Number) null);
    }
}
