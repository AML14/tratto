project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test011,"public void test011() throws Throwable {
    Class<Integer> class0 = Integer.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""u@M6`cXJ2oS2"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test022,"public void test022() throws Throwable {
    Class<Long> class0 = Long.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""+vV"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    Class<Float> class0 = Float.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    assertNotNull(stdKeyDeserializer0);
}",1,
project,0,test034,"public void test034() throws Throwable {
    Class<Float> class0 = Float.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    Object object0 = stdKeyDeserializer0.deserializeKey(""76"", (DeserializationContext) null);
    assertEquals(76.0F, object0);
}",0,
project,0,test035,"public void test035() throws Throwable {
    Class<Float> class0 = Float.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    Object object0 = stdKeyDeserializer0.deserializeKey(""76"", (DeserializationContext) null);
    assertNotNull(object0);
}",0,
project,0,test068,"public void test068() throws Throwable {
    Class<JsonFormat.Feature> class0 = JsonFormat.Feature.class;
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    EnumResolver enumResolver0 = EnumResolver.constructUnsafe(class0, annotationIntrospector0);
    StdKeyDeserializer.EnumKD stdKeyDeserializer_EnumKD0 = new StdKeyDeserializer.EnumKD(enumResolver0, (AnnotatedMethod) null);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    ConfigOverrides configOverrides0 = new ConfigOverrides();
    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0, configOverrides0);
    InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();
    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());
    doReturn((Object) null, (Object) null).when(deserializationProblemHandler0).handleWeirdKey(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(java.lang.Class.class), anyString(), anyString());
    DeserializationConfig deserializationConfig1 = deserializationConfig0.withHandler(deserializationProblemHandler0);
    DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig1, (JsonParser) null, injectableValues_Std0);
    Object object0 = stdKeyDeserializer_EnumKD0.deserializeKey(""i+$S%X@;ISpM&eZ;T X"", defaultDeserializationContext0);
    assertNull(object0);
}",0,
project,0,test0911,"public void test0911() throws Throwable {
    Class<String> class0 = String.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    assertEquals(6, StdKeyDeserializer.TYPE_LONG);
}",0,
project,0,test1012,"public void test1012() throws Throwable {
    Class<Object> class0 = Object.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    assertEquals(2, StdKeyDeserializer.TYPE_BYTE);
}",0,
project,0,test1214,"public void test1214() throws Throwable {
    Class<Date> class0 = Date.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""#GjG;;*ZEs2S%%"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test1315,"public void test1315() throws Throwable {
    Class<Calendar> class0 = Calendar.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""6"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test1416,"public void test1416() throws Throwable {
    Class<Boolean> class0 = Boolean.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    Object object0 = stdKeyDeserializer0.deserializeKey(""false"", (DeserializationContext) null);
    assertEquals(false, object0);
}",0,assertTrue(object0)
project,0,test1417,"public void test1417() throws Throwable {
    Class<Boolean> class0 = Boolean.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    Object object0 = stdKeyDeserializer0.deserializeKey(""false"", (DeserializationContext) null);
    assertNotNull(object0);
}",0,
project,0,test1518,"public void test1518() throws Throwable {
    Class<Byte> class0 = Byte.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    assertNotNull(stdKeyDeserializer0);
}",0,
project,0,test1519,"public void test1519() throws Throwable {
    Class<Byte> class0 = Byte.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    Object object0 = stdKeyDeserializer0.deserializeKey(""6"", (DeserializationContext) null);
    assertNotNull(object0);
}",0,
project,0,test1520,"public void test1520() throws Throwable {
    Class<Byte> class0 = Byte.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    Object object0 = stdKeyDeserializer0.deserializeKey(""6"", (DeserializationContext) null);
    assertEquals((byte) 6, object0);
}",0,
project,0,test1621,"public void test1621() throws Throwable {
    Class<Character> class0 = Character.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    Object object0 = stdKeyDeserializer0.deserializeKey(""/"", (DeserializationContext) null);
    assertEquals('/', object0);
}",0,
project,0,test1622,"public void test1622() throws Throwable {
    Class<Character> class0 = Character.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    Object object0 = stdKeyDeserializer0.deserializeKey(""/"", (DeserializationContext) null);
    assertNotNull(object0);
}",0,
project,0,test1723,"public void test1723() throws Throwable {
    Class<Short> class0 = Short.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""36412"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test1824,"public void test1824() throws Throwable {
    Class<Currency> class0 = Currency.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    assertEquals(4, StdKeyDeserializer.TYPE_CHAR);
}",1,
project,0,test1925,"public void test1925() throws Throwable {
    Class<Double> class0 = Double.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    Object object0 = stdKeyDeserializer0.deserializeKey((String) null, (DeserializationContext) null);
    assertNull(object0);
}",0,
project,0,test2026,"public void test2026() throws Throwable {
    Class<URI> class0 = URI.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""S>%!2$BKD$Tdp"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test2127,"public void test2127() throws Throwable {
    Class<URL> class0 = URL.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    try {
        stdKeyDeserializer0._parse("""", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test2228,"public void test2228() throws Throwable {
    Class<Locale> class0 = Locale.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    try {
        stdKeyDeserializer0._parse((String) null, (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std"", e);
    }
}",0,
project,0,test2329,"public void test2329() throws Throwable {
    Class<JavaType> class0 = JavaType.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    assertNull(stdKeyDeserializer0);
}",0,
project,0,test2430,"public void test2430() throws Throwable {
    Class<Byte> class0 = Byte.class;
    FromStringDeserializer<TextNode> fromStringDeserializer0 = (FromStringDeserializer<TextNode>) mock(FromStringDeserializer.class, new ViolatedAssumptionAnswer());
    doReturn((Object) null).when(fromStringDeserializer0)._deserialize(anyString(), any(com.fasterxml.jackson.databind.DeserializationContext.class));
    StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(16, class0, fromStringDeserializer0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""76"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test2531,"public void test2531() throws Throwable {
    Class<JsonFormat.Feature> class0 = JsonFormat.Feature.class;
    FromStringDeserializer<SimpleModule> fromStringDeserializer0 = (FromStringDeserializer<SimpleModule>) mock(FromStringDeserializer.class, new ViolatedAssumptionAnswer());
    doReturn((Object) null).when(fromStringDeserializer0)._deserialize(anyString(), any(com.fasterxml.jackson.databind.DeserializationContext.class));
    StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(16, class0, fromStringDeserializer0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""$d"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test2632,"public void test2632() throws Throwable {
    Class<Double> class0 = Double.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    try {
        stdKeyDeserializer0._parse("")."", (DeserializationContext) null);
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",0,
project,0,test2733,"public void test2733() throws Throwable {
    Class<Byte> class0 = Byte.TYPE;
    StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(15, class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""/N:>Qv~{Ed=vm{Ty{"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test2834,"public void test2834() throws Throwable {
    Class<Date> class0 = Date.class;
    StdKeyDeserializer.StringKD stdKeyDeserializer_StringKD0 = StdKeyDeserializer.StringKD.forType(class0);
    try {
        stdKeyDeserializer_StringKD0._parse(""BNmAFV_PJ=/_zJ<R"", (DeserializationContext) null);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Internal error: unknown key type class java.util.Date
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test2935,"public void test2935() throws Throwable {
    Class<Boolean> class0 = Boolean.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    Object object0 = stdKeyDeserializer0.deserializeKey(""true"", (DeserializationContext) null);
    assertEquals(true, object0);
}",0,
project,0,test3036,"public void test3036() throws Throwable {
    Class<Boolean> class0 = Boolean.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""PUBLIC_ONLY"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test3137,"public void test3137() throws Throwable {
    Class<Byte> class0 = Byte.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""-726"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test3238,"public void test3238() throws Throwable {
    Class<Byte> class0 = Byte.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""3412"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test3339,"public void test3339() throws Throwable {
    Class<Short> class0 = Short.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    assertNotNull(stdKeyDeserializer0);
}",0,
project,0,test3340,"public void test3340() throws Throwable {
    Class<Short> class0 = Short.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    Object object0 = stdKeyDeserializer0.deserializeKey(""6"", (DeserializationContext) null);
    assertEquals((short) 6, object0);
}",0,
project,0,test3441,"public void test3441() throws Throwable {
    Class<Character> class0 = Character.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test3845,"public void test3845() throws Throwable {
    Class<JsonFormat.Feature> class0 = JsonFormat.Feature.class;
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    EnumResolver enumResolver0 = EnumResolver.constructUnsafe(class0, annotationIntrospector0);
    StdKeyDeserializer.EnumKD stdKeyDeserializer_EnumKD0 = new StdKeyDeserializer.EnumKD(enumResolver0, (AnnotatedMethod) null);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    Object object0 = stdKeyDeserializer_EnumKD0.deserializeKey(""ACCEPT_SINGLE_VALUE_AS_ARRAY"", defaultDeserializationContext_Impl0);
    assertEquals(JsonFormat.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY, object0);
}",0,
