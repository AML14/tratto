/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 04 23:19:51 GMT 2023
 */
package com.fasterxml.jackson.databind.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.databind.util.StdDateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class StdDateFormat_ESTest extends StdDateFormat_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.JAPAN;
        StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0);
        StdDateFormat stdDateFormat1 = stdDateFormat0.withTimeZone(timeZone0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        StdDateFormat stdDateFormat1 = stdDateFormat0.clone();
        boolean boolean0 = stdDateFormat0.equals(stdDateFormat1);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();
        MockSimpleDateFormat mockSimpleDateFormat0 = (MockSimpleDateFormat) StdDateFormat.getISO8601Format(timeZone0);
        mockSimpleDateFormat0.toPattern();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
        MockSimpleDateFormat mockSimpleDateFormat0 = (MockSimpleDateFormat) StdDateFormat.getRFC1123Format(timeZone0);
        mockSimpleDateFormat0.toPattern();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        TimeZone timeZone0 = stdDateFormat0.getTimeZone();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        TimeZone timeZone0 = TimeZone.getDefault();
        stdDateFormat0.setTimeZone(timeZone0);
        stdDateFormat0.isLenient();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        StdDateFormat stdDateFormat1 = stdDateFormat0.withTimeZone((TimeZone) null);
    }

    @Test(timeout = 4000)
    public void test087() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        StdDateFormat stdDateFormat1 = stdDateFormat0.withTimeZone(timeZone0);
    }

    @Test(timeout = 4000)
    public void test098() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        Locale locale0 = Locale.CHINESE;
        StdDateFormat stdDateFormat1 = stdDateFormat0.withLocale(locale0);
    }

    @Test(timeout = 4000)
    public void test109() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        Locale locale0 = Locale.US;
        StdDateFormat stdDateFormat1 = stdDateFormat0.withLocale(locale0);
    }

    @Test(timeout = 4000)
    public void test1110() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.instance.setLenient(true);
        stdDateFormat0.isLenient();
    }

    @Test(timeout = 4000)
    public void test1211() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        boolean boolean0 = stdDateFormat0.isLenient();
    }

    @Test(timeout = 4000)
    public void test1312() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parse("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    }

    @Test(timeout = 4000)
    public void test1413() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parse("5Co3-Yg5QBmtVU ");
    }

    @Test(timeout = 4000)
    public void test1514() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        Date date0 = stdDateFormat0.parse("0");
        date0.toString();
    }

    @Test(timeout = 4000)
    public void test1615() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        Date date0 = stdDateFormat0.parse("-1");
        date0.toString();
    }

    @Test(timeout = 4000)
    public void test1716() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parse(".600");
    }

    @Test(timeout = 4000)
    public void test1817() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        Object object0 = stdDateFormat0.parseObject("2014-02-14T20:21:21.320+0000");
        object0.toString();
    }

    @Test(timeout = 4000)
    public void test1918() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseObject("-");
    }

    @Test(timeout = 4000)
    public void test2019() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseObject("00");
    }

    @Test(timeout = 4000)
    public void test2120() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        MockDate mockDate0 = new MockDate();
        String string0 = stdDateFormat0.format((Date) mockDate0);
    }

    @Test(timeout = 4000)
    public void test2221() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        String string0 = stdDateFormat0.toString();
    }

    @Test(timeout = 4000)
    public void test2322() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        boolean boolean0 = stdDateFormat0.equals(stdDateFormat0);
    }

    @Test(timeout = 4000)
    public void test2423() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parse("8K7o8WX1KX>AtvL.q*");
    }

    @Test(timeout = 4000)
    public void test2524() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseObject("00.00O");
    }

    @Test(timeout = 4000)
    public void test2625() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parseAsISO8601("yyyy-MM-dd'T'HH:mm:ss.SSSZ", (ParsePosition) null, false);
    }

    @Test(timeout = 4000)
    public void test2726() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        ParsePosition parsePosition0 = new ParsePosition(118);
        stdDateFormat0.parseAsISO8601("IC6Jbj.L]z:60Z", parsePosition0, false);
    }

    @Test(timeout = 4000)
    public void test2827() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parseAsISO8601("VB7L8D^q/WH-4+:7#", (ParsePosition) null, true);
    }

    @Test(timeout = 4000)
    public void test2928() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        ParsePosition parsePosition0 = new ParsePosition(48);
        stdDateFormat0.parseAsISO8601("kRx4YV=Ju+CU", parsePosition0, false);
    }

    @Test(timeout = 4000)
    public void test3029() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parse("1Uk1-^?M$E");
    }

    @Test(timeout = 4000)
    public void test3130() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseAsISO8601("@PeRA-v-!Xj", (ParsePosition) null, false);
    }

    @Test(timeout = 4000)
    public void test3231() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        ParsePosition parsePosition0 = new ParsePosition(6);
        stdDateFormat0.parseAsISO8601("|gcdUq]-Io", parsePosition0, false);
    }

    @Test(timeout = 4000)
    public void test3332() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseAsISO8601("\"5*Oordy-w%n8", (ParsePosition) null, true);
    }

    @Test(timeout = 4000)
    public void test3433() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseAsISO8601("\"5*LOordy-w%n8K", (ParsePosition) null, true);
    }

    @Test(timeout = 4000)
    public void test3534() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseAsISO8601("\"(w@Rzy7<", (ParsePosition) null, true);
    }

    @Test(timeout = 4000)
    public void test3635() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseAsISO8601("!@:m5K}J7", (ParsePosition) null, false);
    }

    @Test(timeout = 4000)
    public void test3736() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseAsISO8601("P&&H|3y8yO", (ParsePosition) null, false);
    }

    @Test(timeout = 4000)
    public void test3837() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parse("1Uk1-^ME");
    }

    @Test(timeout = 4000)
    public void test3938() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parseAsISO8601("N", (ParsePosition) null, false);
    }

    @Test(timeout = 4000)
    public void test4039() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseAsISO8601("5O+K:*B[", (ParsePosition) null, false);
    }

    @Test(timeout = 4000)
    public void test4140() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parse("YGl3asz|e");
    }
}
