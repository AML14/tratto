project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""lM'8h(1mMLzI:\""'G"");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
    combinedDomainXYPlot0.setRenderer(1607, (XYItemRenderer) xYBubbleRenderer0);
    assertEquals(1608, combinedDomainXYPlot0.getRendererCount());
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.mapDatasetToRangeAxis(1114, 1114);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test0012,"public void test0012() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.mapDatasetToRangeAxis(1114, 1114);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test0013,"public void test0013() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.mapDatasetToRangeAxis(1114, 1114);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test0024,"public void test0024() throws Throwable {
    MockDate mockDate0 = new MockDate();
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1781), ""cQC|40!,Z2D`'!A0{"");
    Minute minute0 = new Minute(mockDate0, simpleTimeZone0);
    PeriodAxis periodAxis0 = new PeriodAxis(""+9lOI"", minute0, minute0);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
    Color color0 = (Color) MeterPlot.DEFAULT_DIAL_BACKGROUND_PAINT;
    CategoryMarker categoryMarker0 = new CategoryMarker(0.0F, periodAxis0.DEFAULT_TICK_MARK_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, color0, periodAxis0.DEFAULT_AXIS_LINE_STROKE, 0.0F);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addRangeMarker((Marker) categoryMarker0, layer0);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test0025,"public void test0025() throws Throwable {
    MockDate mockDate0 = new MockDate();
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1781), ""cQC|40!,Z2D`'!A0{"");
    Minute minute0 = new Minute(mockDate0, simpleTimeZone0);
    PeriodAxis periodAxis0 = new PeriodAxis(""+9lOI"", minute0, minute0);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
    Color color0 = (Color) MeterPlot.DEFAULT_DIAL_BACKGROUND_PAINT;
    CategoryMarker categoryMarker0 = new CategoryMarker(0.0F, periodAxis0.DEFAULT_TICK_MARK_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, color0, periodAxis0.DEFAULT_AXIS_LINE_STROKE, 0.0F);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addRangeMarker((Marker) categoryMarker0, layer0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test0036,"public void test0036() throws Throwable {
    String[] stringArray0 = new String[0];
    SymbolAxis symbolAxis0 = new SymbolAxis(""Requires 'index' >= 0."", stringArray0);
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
    CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
    Layer layer0 = Layer.BACKGROUND;
    combinedDomainXYPlot0.addDomainMarker(500, (Marker) categoryMarker0, layer0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test0037,"public void test0037() throws Throwable {
    String[] stringArray0 = new String[0];
    SymbolAxis symbolAxis0 = new SymbolAxis(""Requires 'index' >= 0."", stringArray0);
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
    CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
    Layer layer0 = Layer.BACKGROUND;
    combinedDomainXYPlot0.addDomainMarker(500, (Marker) categoryMarker0, layer0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test0048,"public void test0048() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
    RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
    Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
    combinedRangeXYPlot0.zoomDomainAxes(1098.1, 1098.1, plotRenderingInfo0, point2D0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test0049,"public void test0049() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
    RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
    Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
    combinedRangeXYPlot0.zoomDomainAxes(1098.1, 1098.1, plotRenderingInfo0, point2D0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test00410,"public void test00410() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
    RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
    Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
    combinedRangeXYPlot0.zoomDomainAxes(1098.1, 1098.1, plotRenderingInfo0, point2D0);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test00511,"public void test00511() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    combinedDomainXYPlot0.handleClick(5, 500, plotRenderingInfo0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test00512,"public void test00512() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    combinedDomainXYPlot0.handleClick(5, 500, plotRenderingInfo0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test00613,"public void test00613() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getRangeAxis();
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test00614,"public void test00614() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getRangeAxis();
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test00715,"public void test00715() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Point2D point2D0 = RectangleAnchor.coordinates((Rectangle2D) null, (RectangleAnchor) null);
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.zoomRangeAxes(0.0, 735.223704, (PlotRenderingInfo) null, point2D0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'info' argument.
        //
        verifyException(""org.jfree.chart.plot.CombinedDomainXYPlot"", e);
    }
}",0,
project,0,test00816,"public void test00816() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    NumberAxis3D numberAxis3D0 = new NumberAxis3D("""");
    // Undeclared exception!
    try {
        xYPlot0.setDomainAxis((-1), (ValueAxis) numberAxis3D0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Requires index >= 0.
        //
        verifyException(""org.jfree.chart.util.AbstractObjectList"", e);
    }
}",0,
project,0,test00917,"public void test00917() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.addRangeMarker(4893, (Marker) null, (Layer) null, true);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test01018,"public void test01018() throws Throwable {
    XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
    PeriodAxis periodAxis0 = new PeriodAxis(""N~IO2 dKo1e4%9%$Iz9"");
    StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
    XYPlot xYPlot0 = null;
    try {
        xYPlot0 = new XYPlot(xYIntervalSeriesCollection0, periodAxis0, periodAxis0, stackedXYAreaRenderer2_0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jfree.data.xy.XYIntervalSeriesCollection cannot be cast to org.jfree.data.xy.TableXYDataset
        //
        verifyException(""org.jfree.chart.renderer.xy.StackedXYAreaRenderer2"", e);
    }
}",0,
project,0,test01119,"public void test01119() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    XYPlot xYPlot1 = (XYPlot) xYPlot0.clone();
    assertTrue(xYPlot1.isDomainCrosshairLockedOnData());
}",0,assertFalse(xYPlot1.isDomainCrosshairLockedOnData())
project,0,test01120,"public void test01120() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    XYPlot xYPlot1 = (XYPlot) xYPlot0.clone();
    assertEquals(1, xYPlot1.getWeight());
}",0,
project,0,test01221,"public void test01221() throws Throwable {
    Year year0 = new Year();
    DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, (-70), year0);
    String[] stringArray0 = new String[3];
    SymbolAxis symbolAxis0 = new SymbolAxis(""Z>,0][>mO{["", stringArray0);
    StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
    StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(4, standardXYZToolTipGenerator0, (XYURLGenerator) null);
    XYPlot xYPlot0 = new XYPlot(dynamicTimeSeriesCollection0, symbolAxis0, symbolAxis0, standardXYItemRenderer0);
    StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    Point point0 = new Point(0, 10);
    xYPlot0.zoomRangeAxes((double) 3, plotRenderingInfo0, (Point2D) point0, false);
    assertEquals((-3.5), symbolAxis0.getLowerBound(), 0.01);
}",0,
project,0,test01222,"public void test01222() throws Throwable {
    Year year0 = new Year();
    DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, (-70), year0);
    String[] stringArray0 = new String[3];
    SymbolAxis symbolAxis0 = new SymbolAxis(""Z>,0][>mO{["", stringArray0);
    StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
    StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(4, standardXYZToolTipGenerator0, (XYURLGenerator) null);
    XYPlot xYPlot0 = new XYPlot(dynamicTimeSeriesCollection0, symbolAxis0, symbolAxis0, standardXYItemRenderer0);
    StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    Point point0 = new Point(0, 10);
    xYPlot0.zoomRangeAxes((double) 3, plotRenderingInfo0, (Point2D) point0, false);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test01323,"public void test01323() throws Throwable {
    PeriodAxis periodAxis0 = new PeriodAxis((String) null);
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
    combinedDomainXYPlot0.setFixedRangeAxisSpace((AxisSpace) null, true);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test01324,"public void test01324() throws Throwable {
    PeriodAxis periodAxis0 = new PeriodAxis((String) null);
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
    combinedDomainXYPlot0.setFixedRangeAxisSpace((AxisSpace) null, true);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test01425,"public void test01425() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setRangeCrosshairValue(0.2, false);
    assertEquals(0.2, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
}",0,
project,0,test01526,"public void test01526() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""}1e(abVox"");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    combinedDomainXYPlot0.setDomainCrosshairValue(3252.212, true);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test01527,"public void test01527() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""}1e(abVox"");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    combinedDomainXYPlot0.setDomainCrosshairValue(3252.212, true);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test01628,"public void test01628() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2455.0, ""Null 'insets' argument."");
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(cyclicNumberAxis0, defaultKeyedValuesDataset0);
    combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test01629,"public void test01629() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2455.0, ""Null 'insets' argument."");
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(cyclicNumberAxis0, defaultKeyedValuesDataset0);
    combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test01730,"public void test01730() throws Throwable {
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    NumberAxis numberAxis0 = new NumberAxis(""fcs[#>"");
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
    xYPlot0.getDataRange((ValueAxis) null);
    assertEquals((-5.0E-9), numberAxis0.getLowerBound(), 0.01);
}",0,
project,0,test01731,"public void test01731() throws Throwable {
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    NumberAxis numberAxis0 = new NumberAxis(""fcs[#>"");
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
    xYPlot0.getDataRange((ValueAxis) null);
    assertEquals(5.0E-9, numberAxis0.getUpperBound(), 0.01);
}",0,
project,0,test01832,"public void test01832() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getDataRange((ValueAxis) null);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test01833,"public void test01833() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getDataRange((ValueAxis) null);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test01934,"public void test01934() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("""");
    int int0 = combinedRangeXYPlot0.getRangeAxisIndex(logarithmicAxis0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test02035,"public void test02035() throws Throwable {
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    NumberAxis numberAxis0 = new NumberAxis(""fcs[#>"");
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
    int int0 = xYPlot0.getDomainAxisIndex(numberAxis0);
    assertEquals((-5.0E-9), numberAxis0.getLowerBound(), 0.01);
}",0,
project,0,test02036,"public void test02036() throws Throwable {
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    NumberAxis numberAxis0 = new NumberAxis(""fcs[#>"");
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
    int int0 = xYPlot0.getDomainAxisIndex(numberAxis0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test02137,"public void test02137() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    NumberAxis3D numberAxis3D0 = new NumberAxis3D();
    int int0 = combinedDomainXYPlot0.getDomainAxisIndex(numberAxis3D0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test02138,"public void test02138() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    NumberAxis3D numberAxis3D0 = new NumberAxis3D();
    int int0 = combinedDomainXYPlot0.getDomainAxisIndex(numberAxis3D0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test02139,"public void test02139() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    NumberAxis3D numberAxis3D0 = new NumberAxis3D();
    int int0 = combinedDomainXYPlot0.getDomainAxisIndex(numberAxis3D0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test02240,"public void test02240() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
    XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.4, 10, 0.35, 10, (-904.71297004), jFreeChart0);
    boolean boolean0 = xYPlot0.removeAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test02241,"public void test02241() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
    XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.4, 10, 0.35, 10, (-904.71297004), jFreeChart0);
    boolean boolean0 = xYPlot0.removeAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test02242,"public void test02242() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
    XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.4, 10, 0.35, 10, (-904.71297004), jFreeChart0);
    boolean boolean0 = xYPlot0.removeAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02343,"public void test02343() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
    Layer layer0 = Layer.FOREGROUND;
    combinedRangeXYPlot0.addRangeMarker(163, (Marker) categoryMarker0, layer0, false);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test02444,"public void test02444() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Layer layer0 = Layer.FOREGROUND;
    IntervalMarker intervalMarker0 = new IntervalMarker((-980.914558), 0.0);
    boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker(817, (Marker) intervalMarker0, layer0, true);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test02445,"public void test02445() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Layer layer0 = Layer.FOREGROUND;
    IntervalMarker intervalMarker0 = new IntervalMarker((-980.914558), 0.0);
    boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker(817, (Marker) intervalMarker0, layer0, true);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test02446,"public void test02446() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Layer layer0 = Layer.FOREGROUND;
    IntervalMarker intervalMarker0 = new IntervalMarker((-980.914558), 0.0);
    boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker(817, (Marker) intervalMarker0, layer0, true);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02547,"public void test02547() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ValueMarker valueMarker0 = new ValueMarker(Double.POSITIVE_INFINITY, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.removeDomainMarker(10, (Marker) valueMarker0, layer0, false);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test02548,"public void test02548() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ValueMarker valueMarker0 = new ValueMarker(Double.POSITIVE_INFINITY, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.removeDomainMarker(10, (Marker) valueMarker0, layer0, false);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test02649,"public void test02649() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.getRenderer(0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test02650,"public void test02650() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.getRenderer(0);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test02751,"public void test02751() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Vector<XYErrorRenderer> vector0 = new Vector<XYErrorRenderer>();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.mapDatasetToDomainAxes(0, vector0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Empty list not permitted.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test02852,"public void test02852() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
    combinedRangeXYPlot0.setDataset(0, (XYDataset) simpleHistogramDataset0);
    assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
}",0,"assertEquals(1, combinedRangeXYPlot0.getDatasetCount())"
project,0,test02853,"public void test02853() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
    combinedRangeXYPlot0.setDataset(0, (XYDataset) simpleHistogramDataset0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test02954,"public void test02954() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection((MatrixSeries) null);
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setDataset((-2861), (XYDataset) matrixSeriesCollection0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Requires index >= 0.
        //
        verifyException(""org.jfree.chart.util.AbstractObjectList"", e);
    }
}",0,
project,0,test03055,"public void test03055() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation(459);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test03056,"public void test03056() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation(459);
    assertNotNull(axisLocation0);
}",0,
project,0,test03157,"public void test03157() throws Throwable {
    NumberAxis3D numberAxis3D0 = new NumberAxis3D();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
    combinedDomainXYPlot0.setRangeAxis(500, (ValueAxis) null, false);
    assertEquals(501, combinedDomainXYPlot0.getRangeAxisCount());
}",0,"assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount())"
project,0,test03258,"public void test03258() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.getRangeAxis((-1611));
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test03359,"public void test03359() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
    combinedDomainXYPlot0.setDomainAxisLocation(200, axisLocation0, true);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test03360,"public void test03360() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
    combinedDomainXYPlot0.setDomainAxisLocation(200, axisLocation0, true);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test03461,"public void test03461() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, (-1956.2458428825128));
    combinedRangeXYPlot0.setDomainAxis(10, (ValueAxis) cyclicNumberAxis0, true);
    assertEquals((-9.0), cyclicNumberAxis0.getLowerBound(), 0.01);
}",0,
project,0,test03462,"public void test03462() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, (-1956.2458428825128));
    combinedRangeXYPlot0.setDomainAxis(10, (ValueAxis) cyclicNumberAxis0, true);
    assertEquals(11, combinedRangeXYPlot0.getDomainAxisCount());
}",0,"assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount())"
project,0,test03563,"public void test03563() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, (-1956.2458428825128));
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.setDomainAxis((-3602), (ValueAxis) cyclicNumberAxis0, true);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Requires index >= 0.
        //
        verifyException(""org.jfree.chart.util.AbstractObjectList"", e);
    }
}",0,
project,0,test03664,"public void test03664() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""="");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
    combinedRangeXYPlot0.getDomainAxis(0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test03765,"public void test03765() throws Throwable {
    NumberAxis numberAxis0 = new NumberAxis(""DHoDLjC].,yo"");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
    combinedRangeXYPlot0.isDomainZoomable();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test03766,"public void test03766() throws Throwable {
    NumberAxis numberAxis0 = new NumberAxis(""DHoDLjC].,yo"");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
    combinedRangeXYPlot0.isDomainZoomable();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test03867,"public void test03867() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.setRenderer((-93), (XYItemRenderer) xYBoxAndWhiskerRenderer0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Requires index >= 0.
        //
        verifyException(""org.jfree.chart.util.AbstractObjectList"", e);
    }
}",0,
project,0,test03968,"public void test03968() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.mapDatasetToRangeAxis((-1), (-1));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Requires 'index' >= 0.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test04069,"public void test04069() throws Throwable {
    PeriodAxis periodAxis0 = new PeriodAxis((String) null);
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
    AxisSpace axisSpace0 = combinedDomainXYPlot0.getFixedRangeAxisSpace();
    assertNull(axisSpace0);
}",0,
project,0,test04170,"public void test04170() throws Throwable {
    MockDate mockDate0 = new MockDate();
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1781), ""cQC|40!,Z2D`'!A0{"");
    Minute minute0 = new Minute(mockDate0, simpleTimeZone0);
    PeriodAxis periodAxis0 = new PeriodAxis(""+9lOI"", minute0, minute0);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
    combinedRangeXYPlot0.getDomainAxis();
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test04271,"public void test04271() throws Throwable {
    DateAxis dateAxis0 = new DateAxis();
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
    combinedRangeXYPlot0.getFixedLegendItems();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test04372,"public void test04372() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getRangeAxisEdge();
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,
project,0,test04373,"public void test04373() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getRangeAxisEdge();
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test04474,"public void test04474() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.0);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
    combinedRangeXYPlot0.getFixedDomainAxisSpace();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test04475,"public void test04475() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.0);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
    combinedRangeXYPlot0.getFixedDomainAxisSpace();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test04576,"public void test04576() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    int int0 = combinedDomainXYPlot0.getRendererCount();
    assertEquals(1, int0);
}",0,
project,0,test04677,"public void test04677() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    boolean boolean0 = combinedDomainXYPlot0.isRangeZoomable();
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test04678,"public void test04678() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    boolean boolean0 = combinedDomainXYPlot0.isRangeZoomable();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test04679,"public void test04679() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    boolean boolean0 = combinedDomainXYPlot0.isRangeZoomable();
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test04780,"public void test04780() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.0, ""f<oJ!XU,"");
    combinedRangeXYPlot0.setDomainAxis(2, (ValueAxis) cyclicNumberAxis0);
    assertEquals(3, combinedRangeXYPlot0.getDomainAxisCount());
}",0,"assertEquals(0, combinedRangeXYPlot0.getDomainAxisCount())"
project,0,test04881,"public void test04881() throws Throwable {
    LogAxis logAxis0 = new LogAxis("", "");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    combinedDomainXYPlot0.getRenderer();
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test04882,"public void test04882() throws Throwable {
    LogAxis logAxis0 = new LogAxis("", "");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    combinedDomainXYPlot0.getRenderer();
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test04983,"public void test04983() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.0);
    Layer layer0 = Layer.BACKGROUND;
    boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker((-270), (Marker) intervalMarker0, layer0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test04984,"public void test04984() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.0);
    Layer layer0 = Layer.BACKGROUND;
    boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker((-270), (Marker) intervalMarker0, layer0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test04985,"public void test04985() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.0);
    Layer layer0 = Layer.BACKGROUND;
    boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker((-270), (Marker) intervalMarker0, layer0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test04986,"public void test04986() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.0);
    Layer layer0 = Layer.BACKGROUND;
    boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker((-270), (Marker) intervalMarker0, layer0);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test05087,"public void test05087() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    IntervalMarker intervalMarker0 = new IntervalMarker(0.05, (-1494.001655), combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
    Layer layer0 = Layer.FOREGROUND;
    combinedRangeXYPlot0.addRangeMarker(2, (Marker) intervalMarker0, layer0);
    assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
}",0,
project,0,test05188,"public void test05188() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.getDatasetCount();
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertFalse(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test05289,"public void test05289() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ValueAxis valueAxis0 = combinedRangeXYPlot0.getRangeAxis();
    assertNotNull(valueAxis0);
}",0,
project,0,test05290,"public void test05290() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ValueAxis valueAxis0 = combinedRangeXYPlot0.getRangeAxis();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,
project,0,test05291,"public void test05291() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ValueAxis valueAxis0 = combinedRangeXYPlot0.getRangeAxis();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test05392,"public void test05392() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
    xYPlot0.getIndexOf(xYDotRenderer0);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test05393,"public void test05393() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
    xYPlot0.getIndexOf(xYDotRenderer0);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test05494,"public void test05494() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""="");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
    combinedRangeXYPlot0.clearSelection();
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test05495,"public void test05495() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""="");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
    combinedRangeXYPlot0.clearSelection();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test05596,"public void test05596() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    GeneralPath generalPath0 = new GeneralPath(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
    Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(459, Float.POSITIVE_INFINITY, 264.31018F, (-61.768425F));
    ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
    combinedDomainXYPlot0.select(generalPath0, (Rectangle2D) rectangle2D_Float0, (RenderingSource) chartPanel0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test05597,"public void test05597() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    GeneralPath generalPath0 = new GeneralPath(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
    Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(459, Float.POSITIVE_INFINITY, 264.31018F, (-61.768425F));
    ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
    combinedDomainXYPlot0.select(generalPath0, (Rectangle2D) rectangle2D_Float0, (RenderingSource) chartPanel0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test05698,"public void test05698() throws Throwable {
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    NumberAxis numberAxis0 = new NumberAxis(""fcs[#>"");
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
    xYPlot0.getLegendItems();
    assertEquals((-5.0E-9), numberAxis0.getLowerBound(), 0.01);
}",0,
project,0,test05699,"public void test05699() throws Throwable {
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    NumberAxis numberAxis0 = new NumberAxis(""fcs[#>"");
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
    xYPlot0.getLegendItems();
    assertEquals(5.0E-9, numberAxis0.getUpperBound(), 0.01);
}",0,
project,0,test057100,"public void test057100() throws Throwable {
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    NumberAxis numberAxis0 = new NumberAxis(""fcs[#>"");
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
    int int0 = xYPlot0.getSeriesCount();
    assertEquals((-5.0E-9), numberAxis0.getLowerBound(), 0.01);
}",0,
project,0,test057101,"public void test057101() throws Throwable {
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    NumberAxis numberAxis0 = new NumberAxis(""fcs[#>"");
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
    int int0 = xYPlot0.getSeriesCount();
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test058102,"public void test058102() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Point2D.Double point2D_Double0 = new Point2D.Double((-2311.4268), 0.1);
    combinedDomainXYPlot0.zoomDomainAxes(0.0, (PlotRenderingInfo) null, (Point2D) point2D_Double0, false);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test058103,"public void test058103() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Point2D.Double point2D_Double0 = new Point2D.Double((-2311.4268), 0.1);
    combinedDomainXYPlot0.zoomDomainAxes(0.0, (PlotRenderingInfo) null, (Point2D) point2D_Double0, false);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test059104,"public void test059104() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Color color0 = Color.getColor(""Requires 'count' > 0."", 445);
    combinedRangeXYPlot0.setRangeCrosshairPaint(color0);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,
project,0,test060105,"public void test060105() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.setRangeCrosshairStroke((Stroke) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'stroke' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test061106,"public void test061106() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    BasicStroke basicStroke0 = (BasicStroke) PolarPlot.DEFAULT_GRIDLINE_STROKE;
    combinedRangeXYPlot0.setRangeCrosshairStroke(basicStroke0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test061107,"public void test061107() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    BasicStroke basicStroke0 = (BasicStroke) PolarPlot.DEFAULT_GRIDLINE_STROKE;
    combinedRangeXYPlot0.setRangeCrosshairStroke(basicStroke0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test062108,"public void test062108() throws Throwable {
    LogAxis logAxis0 = new LogAxis("", "");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test062109,"public void test062109() throws Throwable {
    LogAxis logAxis0 = new LogAxis("", "");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    combinedDomainXYPlot0.setRangeCrosshairLockedOnData(true);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test063110,"public void test063110() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setRangeCrosshairVisible(true);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairVisible());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairVisible())
project,0,test064111,"public void test064111() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""lM'8h(1mMLzI:\""'G"");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    combinedDomainXYPlot0.setRangeCrosshairVisible(false);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test064112,"public void test064112() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""lM'8h(1mMLzI:\""'G"");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    combinedDomainXYPlot0.setRangeCrosshairVisible(false);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test065113,"public void test065113() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.setDomainCrosshairPaint(xYPlot0.DEFAULT_GRIDLINE_PAINT);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test065114,"public void test065114() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.setDomainCrosshairPaint(xYPlot0.DEFAULT_GRIDLINE_PAINT);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,
project,0,test066115,"public void test066115() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, "")CCY],<-DU#:@<Az"");
    combinedRangeXYPlot0.setDomainCrosshairStroke(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test067116,"public void test067116() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test067117,"public void test067117() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setDomainCrosshairLockedOnData(true);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,
project,0,test068118,"public void test068118() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.setDomainCrosshairVisible(false);
    assertEquals(1, xYPlot0.getWeight());
}",0,
project,0,test069119,"public void test069119() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""="");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(timeZone0, false);
    combinedRangeXYPlot0.rendererChanged(rendererChangeEvent0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test069120,"public void test069120() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""="");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(timeZone0, false);
    combinedRangeXYPlot0.rendererChanged(rendererChangeEvent0);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test069121,"public void test069121() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""="");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(timeZone0, false);
    combinedRangeXYPlot0.rendererChanged(rendererChangeEvent0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test070122,"public void test070122() throws Throwable {
    MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
    PeriodAxis periodAxis0 = new PeriodAxis(""Null 'offset' argument."");
    Color color0 = (Color) Axis.DEFAULT_AXIS_LINE_PAINT;
    XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer(color0, periodAxis0.DEFAULT_TICK_MARK_PAINT, true);
    XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, periodAxis0, periodAxis0, xYDifferenceRenderer0);
    XYPlot xYPlot1 = (XYPlot) xYPlot0.clone();
    assertTrue(xYPlot1.isDomainCrosshairLockedOnData());
}",0,
project,0,test071123,"public void test071123() throws Throwable {
    String[] stringArray0 = new String[0];
    SymbolAxis symbolAxis0 = new SymbolAxis(""Requires 'index' >= 0."", stringArray0);
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
    Layer layer0 = Layer.BACKGROUND;
    combinedDomainXYPlot0.getRangeMarkers(0, layer0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test072124,"public void test072124() throws Throwable {
    TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
    StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, (ValueAxis) null, (ValueAxis) null, stackedXYAreaRenderer2_0);
    Layer layer0 = Layer.BACKGROUND;
    xYPlot0.getDomainMarkers(0, layer0);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test072125,"public void test072125() throws Throwable {
    TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
    StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, (ValueAxis) null, (ValueAxis) null, stackedXYAreaRenderer2_0);
    Layer layer0 = Layer.BACKGROUND;
    xYPlot0.getDomainMarkers(0, layer0);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test073126,"public void test073126() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Hashtable<AttributedCharacterIterator.Attribute, XIntervalSeriesCollection> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, XIntervalSeriesCollection>();
    Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
    JFreeChart jFreeChart0 = new JFreeChart("""", font0, combinedDomainXYPlot0, true);
    ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
    ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    short[][] shortArray0 = new short[4][7];
    ShortLookupTable shortLookupTable0 = new ShortLookupTable(1, shortArray0);
    LookupOp lookupOp0 = new LookupOp(shortLookupTable0, ((SunGraphics2D) graphics2D0).hints);
    Rectangle2D rectangle2D0 = lookupOp0.getBounds2D(bufferedImage0);
    Vector<Integer> vector0 = new Vector<Integer>();
    combinedDomainXYPlot0.drawDomainGridlines(graphics2D0, rectangle2D0, vector0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test073127,"public void test073127() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Hashtable<AttributedCharacterIterator.Attribute, XIntervalSeriesCollection> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, XIntervalSeriesCollection>();
    Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
    JFreeChart jFreeChart0 = new JFreeChart("""", font0, combinedDomainXYPlot0, true);
    ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
    ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    short[][] shortArray0 = new short[4][7];
    ShortLookupTable shortLookupTable0 = new ShortLookupTable(1, shortArray0);
    LookupOp lookupOp0 = new LookupOp(shortLookupTable0, ((SunGraphics2D) graphics2D0).hints);
    Rectangle2D rectangle2D0 = lookupOp0.getBounds2D(bufferedImage0);
    Vector<Integer> vector0 = new Vector<Integer>();
    combinedDomainXYPlot0.drawDomainGridlines(graphics2D0, rectangle2D0, vector0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test073128,"public void test073128() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Hashtable<AttributedCharacterIterator.Attribute, XIntervalSeriesCollection> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, XIntervalSeriesCollection>();
    Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
    JFreeChart jFreeChart0 = new JFreeChart("""", font0, combinedDomainXYPlot0, true);
    ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
    ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    short[][] shortArray0 = new short[4][7];
    ShortLookupTable shortLookupTable0 = new ShortLookupTable(1, shortArray0);
    LookupOp lookupOp0 = new LookupOp(shortLookupTable0, ((SunGraphics2D) graphics2D0).hints);
    Rectangle2D rectangle2D0 = lookupOp0.getBounds2D(bufferedImage0);
    Vector<Integer> vector0 = new Vector<Integer>();
    combinedDomainXYPlot0.drawDomainGridlines(graphics2D0, rectangle2D0, vector0);
    assertTrue(chartPanel0.isDomainZoomable());
}",0,assertTrue(chartPanel0.isDomainZoomable())
project,0,test073129,"public void test073129() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Hashtable<AttributedCharacterIterator.Attribute, XIntervalSeriesCollection> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, XIntervalSeriesCollection>();
    Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
    JFreeChart jFreeChart0 = new JFreeChart("""", font0, combinedDomainXYPlot0, true);
    ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
    ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    short[][] shortArray0 = new short[4][7];
    ShortLookupTable shortLookupTable0 = new ShortLookupTable(1, shortArray0);
    LookupOp lookupOp0 = new LookupOp(shortLookupTable0, ((SunGraphics2D) graphics2D0).hints);
    Rectangle2D rectangle2D0 = lookupOp0.getBounds2D(bufferedImage0);
    Vector<Integer> vector0 = new Vector<Integer>();
    combinedDomainXYPlot0.drawDomainGridlines(graphics2D0, rectangle2D0, vector0);
    assertTrue(chartPanel0.isRangeZoomable());
}",0,assertTrue(chartPanel0.isRangeZoomable())
project,0,test074130,"public void test074130() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.getRangeAxisForDataset((-1949));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Index -1949 out of bounds.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test075131,"public void test075131() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.PRC;
    DateAxis dateAxis0 = new DateAxis(""]a/9S,W^5 a3i%"", timeZone0, locale0);
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.getDomainAxisForDataset(4);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Index 4 out of bounds.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test076132,"public void test076132() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""="");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.getDomainAxisForDataset((-1517));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Index -1517 out of bounds.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test077133,"public void test077133() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
    JFreeChart jFreeChart0 = new JFreeChart(""Null 'location' for index 0 not permitted."", font0, xYPlot0, true);
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    jFreeChart0.createBufferedImage(10, 10, 1, chartRenderingInfo0);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test077134,"public void test077134() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
    JFreeChart jFreeChart0 = new JFreeChart(""Null 'location' for index 0 not permitted."", font0, xYPlot0, true);
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    jFreeChart0.createBufferedImage(10, 10, 1, chartRenderingInfo0);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test078135,"public void test078135() throws Throwable {
    String[] stringArray0 = new String[0];
    SymbolAxis symbolAxis0 = new SymbolAxis(""Requires 'index' >= 0."", stringArray0);
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
    XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, symbolAxis0.DEFAULT_TICK_MARK_PAINT, symbolAxis0.DEFAULT_AXIS_LINE_PAINT);
    combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test079136,"public void test079136() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    Layer layer0 = Layer.FOREGROUND;
    // Undeclared exception!
    try {
        xYPlot0.removeRangeMarker(84, (Marker) null, layer0, false);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'marker' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test080137,"public void test080137() throws Throwable {
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    NumberAxis numberAxis0 = new NumberAxis(""fcs[#>"");
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
    xYPlot0.clearRangeMarkers((-1443));
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertFalse(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test080138,"public void test080138() throws Throwable {
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    NumberAxis numberAxis0 = new NumberAxis(""fcs[#>"");
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
    xYPlot0.clearRangeMarkers((-1443));
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertFalse(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test080139,"public void test080139() throws Throwable {
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    NumberAxis numberAxis0 = new NumberAxis(""fcs[#>"");
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
    xYPlot0.clearRangeMarkers((-1443));
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test081140,"public void test081140() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
    Paint paint0 = xYBoxAndWhiskerRenderer0.getBoxPaint();
    ValueMarker valueMarker0 = new ValueMarker(6715.1971257, paint0, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addRangeMarker(6, (Marker) valueMarker0, layer0, false);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test082141,"public void test082141() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.clearRangeMarkers();
    assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
}",0,
project,0,test083142,"public void test083142() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(false);
    Layer layer0 = Layer.BACKGROUND;
    xYPlot0.addDomainMarker(3665, (Marker) categoryMarker0, layer0, false);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertFalse(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test083143,"public void test083143() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(false);
    Layer layer0 = Layer.BACKGROUND;
    xYPlot0.addDomainMarker(3665, (Marker) categoryMarker0, layer0, false);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test084144,"public void test084144() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    IntervalMarker intervalMarker0 = new IntervalMarker((-208), 0.0, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.addDomainMarker((-208), (Marker) intervalMarker0, (Layer) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'layer' not permitted.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test085145,"public void test085145() throws Throwable {
    LogAxis logAxis0 = new LogAxis("", "");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    combinedDomainXYPlot0.clearDomainMarkers(353);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test086146,"public void test086146() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.clearDomainMarkers();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test086147,"public void test086147() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.clearDomainMarkers();
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test087148,"public void test087148() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
    combinedRangeXYPlot0.setQuadrantPaint(2, (Paint) null);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test087149,"public void test087149() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
    combinedRangeXYPlot0.setQuadrantPaint(2, (Paint) null);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test088150,"public void test088150() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation(""Null 'order' argument."", 10.0, (-30.0), (-2151));
    Paint paint0 = xYPointerAnnotation0.getOutlinePaint();
    // Undeclared exception!
    try {
        xYPlot0.setQuadrantPaint((-2727), paint0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The index value (-2727) should be in the range 0 to 3.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test089151,"public void test089151() throws Throwable {
    String[] stringArray0 = new String[0];
    SymbolAxis symbolAxis0 = new SymbolAxis(""Requires 'index' >= 0."", stringArray0);
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.getQuadrantPaint((-16));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The index value (-16) should be in the range 0 to 3.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test090152,"public void test090152() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setRangeZeroBaselinePaint(combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
}",0,"assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount())"
project,0,test091153,"public void test091153() throws Throwable {
    ThermometerPlot thermometerPlot0 = new ThermometerPlot();
    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
    combinedDomainXYPlot0.setRangeZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test092154,"public void test092154() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Color color0 = (Color) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
    combinedRangeXYPlot0.setDomainZeroBaselinePaint(color0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test093155,"public void test093155() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setDomainZeroBaselineStroke((Stroke) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'stroke' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test094156,"public void test094156() throws Throwable {
    LogAxis logAxis0 = new LogAxis("", "");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    combinedDomainXYPlot0.setDomainZeroBaselineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertFalse(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test094157,"public void test094157() throws Throwable {
    LogAxis logAxis0 = new LogAxis("", "");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    combinedDomainXYPlot0.setDomainZeroBaselineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertFalse(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test095158,"public void test095158() throws Throwable {
    NumberAxis numberAxis0 = new NumberAxis((String) null);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
    combinedRangeXYPlot0.setRangeMinorGridlinePaint(numberAxis0.DEFAULT_TICK_MARK_PAINT);
    assertEquals(1.0E-8, numberAxis0.getAutoRangeMinimumSize(), 0.01);
}",0,
project,0,test096159,"public void test096159() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
    Stroke stroke0 = defaultPolarItemRenderer0.getBaseStroke();
    combinedDomainXYPlot0.setRangeMinorGridlineStroke(stroke0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test096160,"public void test096160() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
    Stroke stroke0 = defaultPolarItemRenderer0.getBaseStroke();
    combinedDomainXYPlot0.setRangeMinorGridlineStroke(stroke0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test097161,"public void test097161() throws Throwable {
    DateAxis dateAxis0 = new DateAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test097162,"public void test097162() throws Throwable {
    DateAxis dateAxis0 = new DateAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test098163,"public void test098163() throws Throwable {
    LogAxis logAxis0 = new LogAxis("", "");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    combinedDomainXYPlot0.setRangeGridlineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,
project,0,test098164,"public void test098164() throws Throwable {
    LogAxis logAxis0 = new LogAxis("", "");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    combinedDomainXYPlot0.setRangeGridlineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test098165,"public void test098165() throws Throwable {
    LogAxis logAxis0 = new LogAxis("", "");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    combinedDomainXYPlot0.setRangeGridlineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test099166,"public void test099166() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setRangeGridlinesVisible(false);
    assertFalse(combinedDomainXYPlot0.isRangeGridlinesVisible());
}",0,assertFalse(combinedDomainXYPlot0.isRangeGridlinesVisible())
project,0,test100167,"public void test100167() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-436.367), (String) null);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
    combinedRangeXYPlot0.setRangeGridlinesVisible(true);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test100168,"public void test100168() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-436.367), (String) null);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
    combinedRangeXYPlot0.setRangeGridlinesVisible(true);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test101169,"public void test101169() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.setDomainMinorGridlinePaint((Paint) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'paint' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test102170,"public void test102170() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    SystemColor systemColor0 = SystemColor.windowText;
    combinedDomainXYPlot0.setDomainMinorGridlinePaint(systemColor0);
    assertEquals(""Combined_Domain_XYPlot"", combinedDomainXYPlot0.getPlotType());
}",0,assertNotNull(combinedDomainXYPlot0.getPlotType())
project,0,test103171,"public void test103171() throws Throwable {
    LogAxis logAxis0 = new LogAxis("""");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setDomainGridlinePaint(logAxis0.DEFAULT_TICK_MARK_PAINT);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test103172,"public void test103172() throws Throwable {
    LogAxis logAxis0 = new LogAxis("""");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setDomainGridlinePaint(logAxis0.DEFAULT_TICK_MARK_PAINT);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test103173,"public void test103173() throws Throwable {
    LogAxis logAxis0 = new LogAxis("""");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setDomainGridlinePaint(logAxis0.DEFAULT_TICK_MARK_PAINT);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test104174,"public void test104174() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
    xYPlot0.setDomainMinorGridlineStroke(xYDotRenderer0.DEFAULT_OUTLINE_STROKE);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test104175,"public void test104175() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
    xYPlot0.setDomainMinorGridlineStroke(xYDotRenderer0.DEFAULT_OUTLINE_STROKE);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test105176,"public void test105176() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), (-1218.73699));
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
    combinedRangeXYPlot0.setDomainGridlineStroke(cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test105177,"public void test105177() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), (-1218.73699));
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
    combinedRangeXYPlot0.setDomainGridlineStroke(cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test105178,"public void test105178() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), (-1218.73699));
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
    combinedRangeXYPlot0.setDomainGridlineStroke(cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test106179,"public void test106179() throws Throwable {
    NumberAxis3D numberAxis3D0 = new NumberAxis3D();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
    combinedDomainXYPlot0.setDomainMinorGridlinesVisible(true);
    assertTrue(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
}",0,assertTrue(combinedDomainXYPlot0.isDomainMinorGridlinesVisible())
project,0,test107180,"public void test107180() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setDomainMinorGridlinesVisible(false);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test108181,"public void test108181() throws Throwable {
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    NumberAxis numberAxis0 = new NumberAxis(""fcs[#>"");
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
    xYPlot0.setDomainGridlinesVisible(false);
    assertEquals((-5.0E-9), numberAxis0.getLowerBound(), 0.01);
}",0,
project,0,test108182,"public void test108182() throws Throwable {
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    NumberAxis numberAxis0 = new NumberAxis(""fcs[#>"");
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
    xYPlot0.setDomainGridlinesVisible(false);
    assertFalse(xYPlot0.isDomainGridlinesVisible());
}",0,assertFalse(xYPlot0.isDomainGridlinesVisible())
project,0,test109183,"public void test109183() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.setDomainGridlinesVisible(true);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test109184,"public void test109184() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.setDomainGridlinesVisible(true);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test109185,"public void test109185() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.setDomainGridlinesVisible(true);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test110186,"public void test110186() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
    combinedRangeXYPlot0.getRendererForDataset(defaultWindDataset0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test111187,"public void test111187() throws Throwable {
    NumberAxis numberAxis0 = new NumberAxis(""DHoDLjC].,yo"");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
    SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
    combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test111188,"public void test111188() throws Throwable {
    NumberAxis numberAxis0 = new NumberAxis(""DHoDLjC].,yo"");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
    SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
    combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test112189,"public void test112189() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'order' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test113190,"public void test113190() throws Throwable {
    LogAxis logAxis0 = new LogAxis(""Xl{g(M':lrZ"");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
    DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
    combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test114191,"public void test114191() throws Throwable {
    ThermometerPlot thermometerPlot0 = new ThermometerPlot();
    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
    XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[8];
    combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
    assertEquals(8, combinedDomainXYPlot0.getRendererCount());
}",0,"assertEquals(0, combinedDomainXYPlot0.getRendererCount())"
project,0,test115192,"public void test115192() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    LinkedList<Rectangle2D.Float> linkedList0 = new LinkedList<Rectangle2D.Float>();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.mapDatasetToRangeAxes(6, linkedList0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Empty list not permitted.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test116193,"public void test116193() throws Throwable {
    NumberAxis numberAxis0 = new NumberAxis(""DHoDLjC].,yo"");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.mapDatasetToRangeAxes(500, (List) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test117194,"public void test117194() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Vector<GradientPaint> vector0 = new Vector<GradientPaint>();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.mapDatasetToRangeAxes((-476), vector0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Requires 'index' >= 0.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test118195,"public void test118195() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    int int0 = xYPlot0.indexOf((XYDataset) null);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test118196,"public void test118196() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    int int0 = xYPlot0.indexOf((XYDataset) null);
    assertEquals(0, int0);
}",0,
project,0,test118197,"public void test118197() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    int int0 = xYPlot0.indexOf((XYDataset) null);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test119198,"public void test119198() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
    int int0 = combinedRangeXYPlot0.indexOf(xIntervalSeriesCollection0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,
project,0,test119199,"public void test119199() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
    int int0 = combinedRangeXYPlot0.indexOf(xIntervalSeriesCollection0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test119200,"public void test119200() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
    int int0 = combinedRangeXYPlot0.indexOf(xIntervalSeriesCollection0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test120201,"public void test120201() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""lM'8h(1mMLzI:\""'G"");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    combinedDomainXYPlot0.mapDatasetToDomainAxis(3489, 1607);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test120202,"public void test120202() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""lM'8h(1mMLzI:\""'G"");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    combinedDomainXYPlot0.mapDatasetToDomainAxis(3489, 1607);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test121203,"public void test121203() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
    xYPlot0.setRangeAxisLocation(0, axisLocation0, false);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test122204,"public void test122204() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    RectangleEdge rectangleEdge0 = combinedRangeXYPlot0.getRangeAxisEdge(0);
    assertEquals(""RectangleEdge.LEFT"", rectangleEdge0.toString());
}",0,
project,0,test122205,"public void test122205() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    RectangleEdge rectangleEdge0 = combinedRangeXYPlot0.getRangeAxisEdge(0);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test123206,"public void test123206() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.clearRangeAxes();
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test123207,"public void test123207() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.clearRangeAxes();
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test124208,"public void test124208() throws Throwable {
    NumberAxis3D numberAxis3D0 = new NumberAxis3D();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
    combinedDomainXYPlot0.setRangeAxis(0, (ValueAxis) numberAxis3D0);
    assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
}",0,"assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount())"
project,0,test124209,"public void test124209() throws Throwable {
    NumberAxis3D numberAxis3D0 = new NumberAxis3D();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
    combinedDomainXYPlot0.setRangeAxis(0, (ValueAxis) numberAxis3D0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test125210,"public void test125210() throws Throwable {
    NumberAxis3D numberAxis3D0 = new NumberAxis3D(""nQa@N;O{9g>Dy:47t4"");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
    ValueAxis[] valueAxisArray0 = new ValueAxis[2];
    combinedRangeXYPlot0.setRangeAxes(valueAxisArray0);
    assertEquals(2, combinedRangeXYPlot0.getRangeAxisCount());
}",0,"assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount())"
project,0,test126211,"public void test126211() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.getRangeAxis(10);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test126212,"public void test126212() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.getRangeAxis(10);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test126213,"public void test126213() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.getRangeAxis(10);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test127214,"public void test127214() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3900.162748021003, """");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
    combinedDomainXYPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
    assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
}",0,
project,0,test128215,"public void test128215() throws Throwable {
    Month month0 = new Month();
    XYSeries xYSeries0 = new XYSeries(month0, true);
    XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
    XYBarDataset xYBarDataset0 = new XYBarDataset(xYSeriesCollection0, 1086);
    CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(0);
    XYPlot xYPlot0 = new XYPlot(xYBarDataset0, (ValueAxis) null, (ValueAxis) null, cyclicXYItemRenderer0);
    xYPlot0.setRangeAxis((ValueAxis) null);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test129216,"public void test129216() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    RectangleEdge rectangleEdge0 = xYPlot0.getDomainAxisEdge((-1));
    assertEquals(""RectangleEdge.TOP"", rectangleEdge0.toString());
}",0,assertNotNull(rectangleEdge0.toString())
project,0,test129217,"public void test129217() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    RectangleEdge rectangleEdge0 = xYPlot0.getDomainAxisEdge((-1));
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test129218,"public void test129218() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    RectangleEdge rectangleEdge0 = xYPlot0.getDomainAxisEdge((-1));
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test130219,"public void test130219() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    AxisLocation axisLocation0 = xYPlot0.getDomainAxisLocation(0);
    assertEquals(""AxisLocation.BOTTOM_OR_LEFT"", axisLocation0.toString());
}",0,assertNotNull(axisLocation0.toString())
project,0,test130220,"public void test130220() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    AxisLocation axisLocation0 = xYPlot0.getDomainAxisLocation(0);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test130221,"public void test130221() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    AxisLocation axisLocation0 = xYPlot0.getDomainAxisLocation(0);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test131222,"public void test131222() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(3);
    assertNotNull(axisLocation0);
}",0,
project,0,test131223,"public void test131223() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(3);
    combinedRangeXYPlot0.setRangeAxisLocation(3, axisLocation0);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(1, combinedRangeXYPlot0.getWeight())"
project,0,test131224,"public void test131224() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(3);
    combinedRangeXYPlot0.setRangeAxisLocation(3, axisLocation0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test132225,"public void test132225() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.clearDomainAxes();
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test132226,"public void test132226() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.clearDomainAxes();
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test133227,"public void test133227() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    ValueAxis[] valueAxisArray0 = new ValueAxis[0];
    combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test133228,"public void test133228() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    ValueAxis[] valueAxisArray0 = new ValueAxis[0];
    combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test134229,"public void test134229() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.setDomainAxis((-3602), (ValueAxis) null, true);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Requires index >= 0.
        //
        verifyException(""org.jfree.chart.util.AbstractObjectList"", e);
    }
}",0,
project,0,test135230,"public void test135230() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    ModuloAxis moduloAxis0 = new ModuloAxis(""<P~<bw./oaEx]Ct"", (Range) null);
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setDomainAxis((ValueAxis) moduloAxis0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'range' argument.
        //
        verifyException(""org.jfree.chart.axis.ValueAxis"", e);
    }
}",0,
project,0,test136231,"public void test136231() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getDomainAxis(1);
    assertEquals(1, xYPlot0.getWeight());
}",0,
project,0,test136232,"public void test136232() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getDomainAxis(1);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test137233,"public void test137233() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setAxisOffset(combinedRangeXYPlot0.DEFAULT_INSETS);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test137234,"public void test137234() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setAxisOffset(combinedRangeXYPlot0.DEFAULT_INSETS);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test138235,"public void test138235() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setOrientation((PlotOrientation) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'orientation' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test139236,"public void test139236() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    PlotOrientation plotOrientation0 = combinedRangeXYPlot0.getOrientation();
    combinedRangeXYPlot0.setOrientation(plotOrientation0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test139237,"public void test139237() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    PlotOrientation plotOrientation0 = combinedRangeXYPlot0.getOrientation();
    combinedRangeXYPlot0.setOrientation(plotOrientation0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test141239,"public void test141239() throws Throwable {
    NumberAxis numberAxis0 = new NumberAxis((String) null);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
    combinedRangeXYPlot0.setDomainTickBandPaint(numberAxis0.DEFAULT_TICK_MARK_PAINT);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test141240,"public void test141240() throws Throwable {
    NumberAxis numberAxis0 = new NumberAxis((String) null);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
    combinedRangeXYPlot0.setDomainTickBandPaint(numberAxis0.DEFAULT_TICK_MARK_PAINT);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test141241,"public void test141241() throws Throwable {
    NumberAxis numberAxis0 = new NumberAxis((String) null);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
    combinedRangeXYPlot0.setDomainTickBandPaint(numberAxis0.DEFAULT_TICK_MARK_PAINT);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test142242,"public void test142242() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    boolean boolean0 = combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test142243,"public void test142243() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    boolean boolean0 = combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test142244,"public void test142244() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    boolean boolean0 = combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test143245,"public void test143245() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    double[] doubleArray0 = new double[0];
    XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
    combinedRangeXYPlot0.addAnnotation((XYAnnotation) xYPolygonAnnotation0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test143246,"public void test143246() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    double[] doubleArray0 = new double[0];
    XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
    combinedRangeXYPlot0.addAnnotation((XYAnnotation) xYPolygonAnnotation0);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test144247,"public void test144247() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
    xYPlot0.setDomainAxisLocation(axisLocation0);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test145248,"public void test145248() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setRangePannable(false);
    assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
}",0,
project,0,test146249,"public void test146249() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    int int0 = xYPlot0.getWeight();
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test147250,"public void test147250() throws Throwable {
    XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection((XYSeries) null);
    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
    XYPlot xYPlot0 = null;
    try {
        xYPlot0 = new XYPlot(xYSeriesCollection0, logarithmicAxis0, logarithmicAxis0, (XYItemRenderer) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test148251,"public void test148251() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
    boolean boolean0 = combinedDomainXYPlot0.removeDomainMarker((Marker) categoryMarker0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test148252,"public void test148252() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
    boolean boolean0 = combinedDomainXYPlot0.removeDomainMarker((Marker) categoryMarker0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test149253,"public void test149253() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.isRangeZeroBaselineVisible();
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test150254,"public void test150254() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getDataset();
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,
project,0,test150255,"public void test150255() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getDataset();
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test150256,"public void test150256() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getDataset();
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test151257,"public void test151257() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.isDomainGridlinesVisible();
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test151258,"public void test151258() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.isDomainGridlinesVisible();
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test152259,"public void test152259() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-308.3487655), 0.0);
    XYPlot xYPlot0 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, (XYItemRenderer) null);
    xYPlot0.getRangeMinorGridlinePaint();
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test152260,"public void test152260() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-308.3487655), 0.0);
    XYPlot xYPlot0 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, (XYItemRenderer) null);
    xYPlot0.getRangeMinorGridlinePaint();
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test153261,"public void test153261() throws Throwable {
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    NumberAxis numberAxis0 = new NumberAxis(""fcs[#>"");
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
    xYPlot0.getDomainMinorGridlinePaint();
    assertEquals(5.0E-9, numberAxis0.getUpperBound(), 0.01);
}",0,
project,0,test153262,"public void test153262() throws Throwable {
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    NumberAxis numberAxis0 = new NumberAxis(""fcs[#>"");
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer0);
    xYPlot0.getDomainMinorGridlinePaint();
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test154263,"public void test154263() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Color color0 = (Color) combinedDomainXYPlot0.getDomainCrosshairPaint();
    ValueMarker valueMarker0 = new ValueMarker(1663.66881479802, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, color0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 0.0F);
    Layer layer0 = Layer.BACKGROUND;
    combinedDomainXYPlot0.removeRangeMarker(0, (Marker) valueMarker0, layer0, true);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test154264,"public void test154264() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Color color0 = (Color) combinedDomainXYPlot0.getDomainCrosshairPaint();
    ValueMarker valueMarker0 = new ValueMarker(1663.66881479802, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, color0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 0.0F);
    Layer layer0 = Layer.BACKGROUND;
    combinedDomainXYPlot0.removeRangeMarker(0, (Marker) valueMarker0, layer0, true);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test155266,"public void test155266() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Layer layer0 = Layer.FOREGROUND;
    combinedDomainXYPlot0.getDomainMarkers(layer0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test155267,"public void test155267() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Layer layer0 = Layer.FOREGROUND;
    combinedDomainXYPlot0.getDomainMarkers(layer0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test156268,"public void test156268() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.getDomainAxisCount();
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test157269,"public void test157269() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Color color0 = (Color) combinedRangeXYPlot0.getRangeGridlinePaint();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test157270,"public void test157270() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Color color0 = (Color) combinedRangeXYPlot0.getRangeGridlinePaint();
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test157271,"public void test157271() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Color color0 = (Color) combinedRangeXYPlot0.getRangeGridlinePaint();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test158273,"public void test158273() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    LegendItemCollection legendItemCollection0 = combinedDomainXYPlot0.getLegendItems();
    combinedDomainXYPlot0.setFixedLegendItems(legendItemCollection0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test159274,"public void test159274() throws Throwable {
    LogAxis logAxis0 = new LogAxis("", "");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    combinedDomainXYPlot0.getRangeGridlineStroke();
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test160275,"public void test160275() throws Throwable {
    Year year0 = new Year();
    DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, (-70), year0);
    String[] stringArray0 = new String[3];
    SymbolAxis symbolAxis0 = new SymbolAxis(""Z>,0][>mO{["", stringArray0);
    StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
    StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(4, standardXYZToolTipGenerator0, (XYURLGenerator) null);
    XYPlot xYPlot0 = new XYPlot(dynamicTimeSeriesCollection0, symbolAxis0, symbolAxis0, standardXYItemRenderer0);
    CategoryMarker categoryMarker0 = new CategoryMarker(true);
    xYPlot0.addDomainMarker((Marker) categoryMarker0);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test160276,"public void test160276() throws Throwable {
    Year year0 = new Year();
    DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, (-70), year0);
    String[] stringArray0 = new String[3];
    SymbolAxis symbolAxis0 = new SymbolAxis(""Z>,0][>mO{["", stringArray0);
    StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
    StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(4, standardXYZToolTipGenerator0, (XYURLGenerator) null);
    XYPlot xYPlot0 = new XYPlot(dynamicTimeSeriesCollection0, symbolAxis0, symbolAxis0, standardXYItemRenderer0);
    CategoryMarker categoryMarker0 = new CategoryMarker(true);
    xYPlot0.addDomainMarker((Marker) categoryMarker0);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test161278,"public void test161278() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    BasicStroke basicStroke0 = (BasicStroke) combinedDomainXYPlot0.getDomainZeroBaselineStroke();
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(1, combinedDomainXYPlot0.getWeight())"
project,0,test161279,"public void test161279() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    BasicStroke basicStroke0 = (BasicStroke) combinedDomainXYPlot0.getDomainZeroBaselineStroke();
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test162280,"public void test162280() throws Throwable {
    String[] stringArray0 = new String[0];
    SymbolAxis symbolAxis0 = new SymbolAxis(""Requires 'index' >= 0."", stringArray0);
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
    combinedDomainXYPlot0.setRangeCrosshairValue(0.35);
    assertEquals(0.35, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
}",0,
project,0,test163281,"public void test163281() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
    StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(0, standardXYZToolTipGenerator0);
    combinedDomainXYPlot0.setRenderer((XYItemRenderer) standardXYItemRenderer0);
    assertEquals(1, combinedDomainXYPlot0.getRendererCount());
}",0,"assertEquals(1, combinedDomainXYPlot0.getRendererCount())"
project,0,test164282,"public void test164282() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getAnnotations();
    assertEquals(1, xYPlot0.getWeight());
}",0,
project,0,test164283,"public void test164283() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getAnnotations();
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test165284,"public void test165284() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ValueMarker valueMarker0 = new ValueMarker(10);
    combinedRangeXYPlot0.removeRangeMarker((Marker) valueMarker0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test166285,"public void test166285() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Layer layer0 = Layer.FOREGROUND;
    combinedDomainXYPlot0.getRangeMarkers(layer0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test167286,"public void test167286() throws Throwable {
    LogAxis logAxis0 = new LogAxis("", "");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
    combinedDomainXYPlot0.setDomainAxisLocation(500, axisLocation0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test168287,"public void test168287() throws Throwable {
    LogAxis logAxis0 = new LogAxis("", "");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    boolean boolean0 = combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test168288,"public void test168288() throws Throwable {
    LogAxis logAxis0 = new LogAxis("", "");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    boolean boolean0 = combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test169289,"public void test169289() throws Throwable {
    MockDate mockDate0 = new MockDate();
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(mockDate0);
    PeriodAxis periodAxis0 = new PeriodAxis(""mfaJ[$`'["", fixedMillisecond0, fixedMillisecond0);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
    combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test170290,"public void test170290() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    LookupPaintScale lookupPaintScale0 = new LookupPaintScale(Double.NaN, 10, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
    PeriodAxis periodAxis0 = new PeriodAxis("""");
    PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, periodAxis0);
    AxisLocation axisLocation0 = paintScaleLegend0.getAxisLocation();
    combinedRangeXYPlot0.setRangeAxisLocation(axisLocation0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test170291,"public void test170291() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    LookupPaintScale lookupPaintScale0 = new LookupPaintScale(Double.NaN, 10, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
    PeriodAxis periodAxis0 = new PeriodAxis("""");
    PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, periodAxis0);
    AxisLocation axisLocation0 = paintScaleLegend0.getAxisLocation();
    combinedRangeXYPlot0.setRangeAxisLocation(axisLocation0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test171292,"public void test171292() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    SeriesRenderingOrder seriesRenderingOrder0 = combinedDomainXYPlot0.getSeriesRenderingOrder();
    assertEquals(""SeriesRenderingOrder.REVERSE"", seriesRenderingOrder0.toString());
}",0,assertNotNull(seriesRenderingOrder0.toString())
project,0,test172293,"public void test172293() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    BasicStroke basicStroke0 = (BasicStroke) combinedRangeXYPlot0.getRangeZeroBaselineStroke();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test172294,"public void test172294() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    BasicStroke basicStroke0 = (BasicStroke) combinedRangeXYPlot0.getRangeZeroBaselineStroke();
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test173296,"public void test173296() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setRangeZeroBaselineVisible(false);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test174297,"public void test174297() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(false);
    xYPlot0.addRangeMarker((Marker) categoryMarker0);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test175298,"public void test175298() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
    // Undeclared exception!
    try {
        xYPlot0.setRangeAxisLocation((-62), axisLocation0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Requires index >= 0.
        //
        verifyException(""org.jfree.chart.util.AbstractObjectList"", e);
    }
}",1,
project,0,test176299,"public void test176299() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""="");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
    combinedRangeXYPlot0.isDomainZeroBaselineVisible();
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test176300,"public void test176300() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""="");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
    combinedRangeXYPlot0.isDomainZeroBaselineVisible();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test177301,"public void test177301() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getDatasetRenderingOrder();
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test177302,"public void test177302() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getDatasetRenderingOrder();
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test178303,"public void test178303() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
    assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
}",0,
project,0,test178304,"public void test178304() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
    assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
}",0,
project,0,test178305,"public void test178305() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test178306,"public void test178306() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
    assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
}",0,
project,0,test178307,"public void test178307() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test178308,"public void test178308() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
    assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
}",0,
project,0,test179309,"public void test179309() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    Point2D.Float point2D_Float0 = new Point2D.Float(10, 0.0F);
    combinedRangeXYPlot0.zoomRangeAxes(1.0, plotRenderingInfo0, (Point2D) point2D_Float0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test180310,"public void test180310() throws Throwable {
    LogAxis logAxis0 = new LogAxis();
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
    combinedRangeXYPlot0.setDomainAxis((ValueAxis) logAxis0);
    assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
}",0,"assertEquals(0, combinedRangeXYPlot0.getDomainAxisCount())"
project,0,test181311,"public void test181311() throws Throwable {
    ThermometerPlot thermometerPlot0 = new ThermometerPlot();
    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
    BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
    Paint paint0 = boxAndWhiskerRenderer0.getArtifactPaint();
    combinedDomainXYPlot0.setRangeTickBandPaint(paint0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test181312,"public void test181312() throws Throwable {
    ThermometerPlot thermometerPlot0 = new ThermometerPlot();
    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
    BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
    Paint paint0 = boxAndWhiskerRenderer0.getArtifactPaint();
    combinedDomainXYPlot0.setRangeTickBandPaint(paint0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test182313,"public void test182313() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.0);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
    combinedRangeXYPlot0.isDomainMinorGridlinesVisible();
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test182314,"public void test182314() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.0);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
    combinedRangeXYPlot0.isDomainMinorGridlinesVisible();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test183315,"public void test183315() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.setFixedRangeAxisSpace((AxisSpace) null);
    assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
}",0,
project,0,test184316,"public void test184316() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.isRangePannable();
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test184317,"public void test184317() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.isRangePannable();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test184318,"public void test184318() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.isRangePannable();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test185319,"public void test185319() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
    Layer layer0 = Layer.FOREGROUND;
    combinedDomainXYPlot0.removeRangeMarker((Marker) categoryMarker0, layer0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test186320,"public void test186320() throws Throwable {
    NumberAxis3D numberAxis3D0 = new NumberAxis3D();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
    BasicStroke basicStroke0 = (BasicStroke) combinedDomainXYPlot0.getRangeCrosshairStroke();
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test186321,"public void test186321() throws Throwable {
    NumberAxis3D numberAxis3D0 = new NumberAxis3D();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
    BasicStroke basicStroke0 = (BasicStroke) combinedDomainXYPlot0.getRangeCrosshairStroke();
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test187323,"public void test187323() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.getDomainAxisEdge();
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test188324,"public void test188324() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    JFreeChart jFreeChart0 = new JFreeChart("""", combinedRangeXYPlot0);
    ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
    ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
    GridBagLayout gridBagLayout0 = new GridBagLayout();
    Point point0 = gridBagLayout0.getLayoutOrigin();
    combinedRangeXYPlot0.zoomRangeAxes(10.0, 57.52977, plotRenderingInfo0, (Point2D) point0);
    assertTrue(chartPanel0.getRefreshBuffer());
}",0,assertTrue(chartPanel0.getRefreshBuffer())
project,0,test188325,"public void test188325() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    JFreeChart jFreeChart0 = new JFreeChart("""", combinedRangeXYPlot0);
    ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
    ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
    GridBagLayout gridBagLayout0 = new GridBagLayout();
    Point point0 = gridBagLayout0.getLayoutOrigin();
    combinedRangeXYPlot0.zoomRangeAxes(10.0, 57.52977, plotRenderingInfo0, (Point2D) point0);
    assertTrue(combinedRangeXYPlot0.isRangeZoomable());
}",0,assertFalse(combinedRangeXYPlot0.isRangeZoomable())
project,0,test189326,"public void test189326() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""(6k{sdDj#~V:Q!"");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
    double double0 = combinedRangeXYPlot0.getRangeCrosshairValue();
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test190327,"public void test190327() throws Throwable {
    MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
    PeriodAxis periodAxis0 = new PeriodAxis(""Null 'offset' argument."");
    Color color0 = (Color) Axis.DEFAULT_AXIS_LINE_PAINT;
    XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer(color0, periodAxis0.DEFAULT_TICK_MARK_PAINT, true);
    XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, periodAxis0, periodAxis0, xYDifferenceRenderer0);
    AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
    xYPlot0.setDomainAxisLocation(axisLocation0, false);
    assertFalse(xYPlot0.isRangeZeroBaselineVisible());
}",0,assertFalse(xYPlot0.isRangeZeroBaselineVisible())
project,0,test191328,"public void test191328() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
    DateAxis dateAxis0 = new DateAxis(""XY_Plot"");
    XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
    XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, dateAxis0, dateAxis0, xYLineAndShapeRenderer0);
    // Undeclared exception!
    try {
        xYPlot0.setDomainAxes((ValueAxis[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test192329,"public void test192329() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.setWeight(335);
    assertEquals(335, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test193330,"public void test193330() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    Color color0 = (Color) xYPlot0.getRangeCrosshairPaint();
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test194332,"public void test194332() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.clearAnnotations();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test194333,"public void test194333() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.clearAnnotations();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test195334,"public void test195334() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1, 1746);
    combinedRangeXYPlot0.setDataset((XYDataset) dynamicTimeSeriesCollection0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test195335,"public void test195335() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1, 1746);
    combinedRangeXYPlot0.setDataset((XYDataset) dynamicTimeSeriesCollection0);
    assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
}",0,"assertEquals(0, combinedRangeXYPlot0.getDatasetCount())"
project,0,test196336,"public void test196336() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Color color0 = (Color) combinedDomainXYPlot0.getRangeZeroBaselinePaint();
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test196337,"public void test196337() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Color color0 = (Color) combinedDomainXYPlot0.getRangeZeroBaselinePaint();
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test197339,"public void test197339() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""lM'8h(1mMLzI:\""'G"");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    combinedDomainXYPlot0.isRangeMinorGridlinesVisible();
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test197340,"public void test197340() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""lM'8h(1mMLzI:\""'G"");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    combinedDomainXYPlot0.isRangeMinorGridlinesVisible();
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test198341,"public void test198341() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
    Layer layer0 = Layer.FOREGROUND;
    combinedDomainXYPlot0.addDomainMarker((Marker) categoryMarker0, layer0);
    boolean boolean0 = combinedDomainXYPlot0.removeDomainMarker((Marker) categoryMarker0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,
project,0,test198342,"public void test198342() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
    Layer layer0 = Layer.FOREGROUND;
    combinedDomainXYPlot0.addDomainMarker((Marker) categoryMarker0, layer0);
    boolean boolean0 = combinedDomainXYPlot0.removeDomainMarker((Marker) categoryMarker0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test199343,"public void test199343() throws Throwable {
    MockDate mockDate0 = new MockDate();
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(mockDate0);
    PeriodAxis periodAxis0 = new PeriodAxis(""mfaJ[$`'["", fixedMillisecond0, fixedMillisecond0);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
    combinedRangeXYPlot0.getRangeAxisCount();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test199344,"public void test199344() throws Throwable {
    MockDate mockDate0 = new MockDate();
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(mockDate0);
    PeriodAxis periodAxis0 = new PeriodAxis(""mfaJ[$`'["", fixedMillisecond0, fixedMillisecond0);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
    combinedRangeXYPlot0.getRangeAxisCount();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test200345,"public void test200345() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, (-850.8));
    XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
    XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYErrorRenderer0);
    xYPlot0.setDomainCrosshairValue(0.05);
    assertEquals(1.05, cyclicNumberAxis0.getPeriod(), 0.01);
}",0,
project,0,test200346,"public void test200346() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, (-850.8));
    XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
    XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYErrorRenderer0);
    xYPlot0.setDomainCrosshairValue(0.05);
    assertEquals((-5.0E-9), cyclicNumberAxis0.getLowerBound(), 0.01);
}",0,
project,0,test201347,"public void test201347() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.removeDomainMarker((Marker) categoryMarker0, layer0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,
project,0,test201348,"public void test201348() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.removeDomainMarker((Marker) categoryMarker0, layer0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test202349,"public void test202349() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.canSelectByRegion();
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test203350,"public void test203350() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getDomainZeroBaselinePaint();
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test203351,"public void test203351() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getDomainZeroBaselinePaint();
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test204352,"public void test204352() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation();
    assertNotNull(axisLocation0);
}",0,
project,0,test204353,"public void test204353() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test205354,"public void test205354() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.getRangeAxisForDataset(355);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Index 355 out of bounds.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test206355,"public void test206355() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation(1.0F, 0.0, (-1566.47034), 0.0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
    boolean boolean0 = combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYLineAnnotation0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test207356,"public void test207356() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Layer layer0 = Layer.FOREGROUND;
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.addRangeMarker((Marker) null, layer0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test208357,"public void test208357() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.getDomainMinorGridlineStroke();
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test208358,"public void test208358() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.getDomainMinorGridlineStroke();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test208359,"public void test208359() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.getDomainMinorGridlineStroke();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test209360,"public void test209360() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    DateAxis dateAxis0 = new DateAxis();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.setRangeAxis((-693), (ValueAxis) dateAxis0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Requires index >= 0.
        //
        verifyException(""org.jfree.chart.util.AbstractObjectList"", e);
    }
}",0,
project,0,test210361,"public void test210361() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    double double0 = combinedRangeXYPlot0.getDomainCrosshairValue();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test210362,"public void test210362() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    double double0 = combinedRangeXYPlot0.getDomainCrosshairValue();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test210363,"public void test210363() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    double double0 = combinedRangeXYPlot0.getDomainCrosshairValue();
    assertEquals(0.0, double0, 0.01);
}",0,
