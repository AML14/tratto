project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    // Undeclared exception!
    try {
        defaultKeyedValues2D0.removeRow((Comparable) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'key' argument.
        //
        verifyException(""org.jfree.data.DefaultKeyedValues2D"", e);
    }
}",1,
project,0,test011,"public void test011() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    // Undeclared exception!
    try {
        defaultKeyedValues2D0.removeColumn(0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",1,
project,0,test022,"public void test022() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    // Undeclared exception!
    try {
        defaultKeyedValues2D0.removeRow((-139));
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test033,"public void test033() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    defaultKeyedValues2D0.clear();
    assertEquals(0, defaultKeyedValues2D0.getColumnCount());
}",0,
project,0,test044,"public void test044() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    // Undeclared exception!
    try {
        defaultKeyedValues2D0.getRowKey((-1136));
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test065,"public void test065() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Double double0 = new Double((-1.0F));
    defaultKeyedValues2D0.setValue(double0, double0, double0);
    Float float0 = new Float((-1.0F));
    defaultKeyedValues2D0.setValue(float0, float0, float0);
    Object object0 = defaultKeyedValues2D0.clone();
    boolean boolean0 = defaultKeyedValues2D0.equals(object0);
    assertEquals(2, defaultKeyedValues2D0.getColumnCount());
}",0,
project,0,test066,"public void test066() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Double double0 = new Double((-1.0F));
    defaultKeyedValues2D0.setValue(double0, double0, double0);
    Float float0 = new Float((-1.0F));
    defaultKeyedValues2D0.setValue(float0, float0, float0);
    Object object0 = defaultKeyedValues2D0.clone();
    boolean boolean0 = defaultKeyedValues2D0.equals(object0);
    assertTrue(boolean0);
}",0,
project,0,test077,"public void test077() throws Throwable {
    Float float0 = new Float(0.0F);
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D(true);
    defaultKeyedValues2D0.setValue(float0, float0, float0);
    assertEquals(1, defaultKeyedValues2D0.getColumnCount());
}",0,
project,0,test088,"public void test088() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Float float0 = new Float(0.0F);
    int int0 = defaultKeyedValues2D0.getColumnIndex(float0);
    assertEquals((-1), int0);
}",1,
project,0,test099,"public void test099() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    // Undeclared exception!
    try {
        defaultKeyedValues2D0.getColumnIndex((Comparable) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'key' argument.
        //
        verifyException(""org.jfree.data.DefaultKeyedValues2D"", e);
    }
}",1,
project,0,test1010,"public void test1010() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Double double0 = new Double((-1.0F));
    Float float0 = new Float((-1.0F));
    // Undeclared exception!
    try {
        defaultKeyedValues2D0.getValue((Comparable) float0, (Comparable) double0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Unrecognised columnKey: -1.0
        //
        verifyException(""org.jfree.data.DefaultKeyedValues2D"", e);
    }
}",1,
project,0,test1111,"public void test1111() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    // Undeclared exception!
    try {
        defaultKeyedValues2D0.getValue((Comparable) null, (Comparable) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'rowKey' argument.
        //
        verifyException(""org.jfree.data.DefaultKeyedValues2D"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    // Undeclared exception!
    try {
        defaultKeyedValues2D0.getValue((Comparable) 871, (Comparable) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'columnKey' argument.
        //
        verifyException(""org.jfree.data.DefaultKeyedValues2D"", e);
    }
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Double double0 = new Double((-1.0F));
    defaultKeyedValues2D0.setValue(double0, double0, double0);
    Float float0 = new Float((-1.0F));
    // Undeclared exception!
    try {
        defaultKeyedValues2D0.getValue((Comparable) float0, (Comparable) double0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Unrecognised rowKey: -1.0
        //
        verifyException(""org.jfree.data.DefaultKeyedValues2D"", e);
    }
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Double double0 = new Double((-1.0F));
    defaultKeyedValues2D0.setValue(double0, double0, double0);
    Float float0 = new Float((-1.0F));
    defaultKeyedValues2D0.setValue(float0, float0, float0);
    Number number0 = defaultKeyedValues2D0.getValue((Comparable) float0, (Comparable) double0);
    assertNull(number0);
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Float float0 = new Float(0.0F);
    defaultKeyedValues2D0.setValue(float0, float0, float0);
    Number number0 = defaultKeyedValues2D0.getValue((Comparable) float0, (Comparable) float0);
    assertEquals(0.0F, number0);
}",0,
project,0,test1616,"public void test1616() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Long long0 = new Long((-2546L));
    defaultKeyedValues2D0.setValue(long0, long0, long0);
    Float float0 = new Float((float) (-2546L));
    defaultKeyedValues2D0.removeValue(long0, float0);
    assertEquals(1, defaultKeyedValues2D0.getColumnCount());
}",0,"assertEquals(0, defaultKeyedValues2D0.getColumnCount())"
project,0,test1717,"public void test1717() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Float float0 = new Float(2915.86213);
    defaultKeyedValues2D0.setValue(float0, float0, float0);
    Float float1 = Float.valueOf((-2643.3962F));
    defaultKeyedValues2D0.removeValue(float1, float1);
    assertEquals(1, defaultKeyedValues2D0.getColumnCount());
}",0,"assertEquals(0, defaultKeyedValues2D0.getColumnCount())"
project,0,test1818,"public void test1818() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Float float0 = new Float(8.42F);
    defaultKeyedValues2D0.setValue(float0, float0, float0);
    defaultKeyedValues2D0.removeValue(1, float0);
    assertEquals(1, defaultKeyedValues2D0.getRowCount());
}",0,"assertEquals(0, defaultKeyedValues2D0.getRowCount())"
project,0,test1919,"public void test1919() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    boolean boolean0 = defaultKeyedValues2D0.equals((Object) null);
    assertFalse(boolean0);
}",0,
project,0,test2020,"public void test2020() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    boolean boolean0 = defaultKeyedValues2D0.equals(defaultKeyedValues2D0);
    assertTrue(boolean0);
}",0,
project,0,test2121,"public void test2121() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    boolean boolean0 = defaultKeyedValues2D0.equals(""YW*-M"");
    assertFalse(boolean0);
}",0,
project,0,test2222,"public void test2222() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    DefaultKeyedValues2D defaultKeyedValues2D1 = (DefaultKeyedValues2D) defaultKeyedValues2D0.clone();
    assertTrue(defaultKeyedValues2D1.equals((Object) defaultKeyedValues2D0));
}",0,
project,0,test2223,"public void test2223() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    DefaultKeyedValues2D defaultKeyedValues2D1 = (DefaultKeyedValues2D) defaultKeyedValues2D0.clone();
    Short short0 = new Short((short) 2440);
    defaultKeyedValues2D1.addValue(short0, short0, short0);
    boolean boolean0 = defaultKeyedValues2D1.equals(defaultKeyedValues2D0);
    assertFalse(defaultKeyedValues2D1.equals((Object) defaultKeyedValues2D0));
}",0,
project,0,test2224,"public void test2224() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    DefaultKeyedValues2D defaultKeyedValues2D1 = (DefaultKeyedValues2D) defaultKeyedValues2D0.clone();
    Short short0 = new Short((short) 2440);
    defaultKeyedValues2D1.addValue(short0, short0, short0);
    boolean boolean0 = defaultKeyedValues2D1.equals(defaultKeyedValues2D0);
    assertFalse(boolean0);
}",0,
project,0,test2325,"public void test2325() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Float float0 = new Float((-51.948048F));
    defaultKeyedValues2D0.setValue(float0, float0, float0);
    DefaultKeyedValues2D defaultKeyedValues2D1 = (DefaultKeyedValues2D) defaultKeyedValues2D0.clone();
    defaultKeyedValues2D1.removeColumn((Comparable) float0);
    boolean boolean0 = defaultKeyedValues2D0.equals(defaultKeyedValues2D1);
    assertEquals(1, defaultKeyedValues2D0.getColumnCount());
}",0,"assertEquals(0, defaultKeyedValues2D0.getColumnCount())"
project,0,test2326,"public void test2326() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Float float0 = new Float((-51.948048F));
    defaultKeyedValues2D0.setValue(float0, float0, float0);
    DefaultKeyedValues2D defaultKeyedValues2D1 = (DefaultKeyedValues2D) defaultKeyedValues2D0.clone();
    defaultKeyedValues2D1.removeColumn((Comparable) float0);
    boolean boolean0 = defaultKeyedValues2D0.equals(defaultKeyedValues2D1);
    assertFalse(boolean0);
}",0,
project,0,test2427,"public void test2427() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Float float0 = new Float(0.0F);
    defaultKeyedValues2D0.setValue(float0, float0, float0);
    DefaultKeyedValues2D defaultKeyedValues2D1 = (DefaultKeyedValues2D) defaultKeyedValues2D0.clone();
    assertTrue(defaultKeyedValues2D1.equals((Object) defaultKeyedValues2D0));
}",0,
project,0,test2428,"public void test2428() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Float float0 = new Float(0.0F);
    defaultKeyedValues2D0.setValue(float0, float0, float0);
    DefaultKeyedValues2D defaultKeyedValues2D1 = (DefaultKeyedValues2D) defaultKeyedValues2D0.clone();
    defaultKeyedValues2D1.addValue((Number) null, float0, float0);
    boolean boolean0 = defaultKeyedValues2D1.equals(defaultKeyedValues2D0);
    assertFalse(defaultKeyedValues2D1.equals((Object) defaultKeyedValues2D0));
}",0,
project,0,test2429,"public void test2429() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Float float0 = new Float(0.0F);
    defaultKeyedValues2D0.setValue(float0, float0, float0);
    DefaultKeyedValues2D defaultKeyedValues2D1 = (DefaultKeyedValues2D) defaultKeyedValues2D0.clone();
    defaultKeyedValues2D1.addValue((Number) null, float0, float0);
    boolean boolean0 = defaultKeyedValues2D1.equals(defaultKeyedValues2D0);
    assertFalse(boolean0);
}",0,
project,0,test2530,"public void test2530() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Float float0 = new Float(0.0F);
    defaultKeyedValues2D0.setValue(float0, float0, float0);
    DefaultKeyedValues2D defaultKeyedValues2D1 = (DefaultKeyedValues2D) defaultKeyedValues2D0.clone();
    assertTrue(defaultKeyedValues2D1.equals((Object) defaultKeyedValues2D0));
}",0,
project,0,test2531,"public void test2531() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Float float0 = new Float(0.0F);
    defaultKeyedValues2D0.setValue(float0, float0, float0);
    DefaultKeyedValues2D defaultKeyedValues2D1 = (DefaultKeyedValues2D) defaultKeyedValues2D0.clone();
    defaultKeyedValues2D1.addValue((Number) null, float0, float0);
    boolean boolean0 = defaultKeyedValues2D0.equals(defaultKeyedValues2D1);
    assertFalse(boolean0);
}",0,
project,0,test2532,"public void test2532() throws Throwable {
    DefaultKeyedValues2D defaultKeyedValues2D0 = new DefaultKeyedValues2D();
    Float float0 = new Float(0.0F);
    defaultKeyedValues2D0.setValue(float0, float0, float0);
    DefaultKeyedValues2D defaultKeyedValues2D1 = (DefaultKeyedValues2D) defaultKeyedValues2D0.clone();
    defaultKeyedValues2D1.addValue((Number) null, float0, float0);
    boolean boolean0 = defaultKeyedValues2D0.equals(defaultKeyedValues2D1);
    assertFalse(defaultKeyedValues2D1.equals((Object) defaultKeyedValues2D0));
}",0,
