project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    RectangleInsets rectangleInsets0 = combinedRangeXYPlot0.getAxisOffset();
    assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
}",0,
project,0,test0001,"public void test0001() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    RectangleInsets rectangleInsets0 = combinedRangeXYPlot0.getAxisOffset();
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test0002,"public void test0002() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    RectangleInsets rectangleInsets0 = combinedRangeXYPlot0.getAxisOffset();
    assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
}",0,
project,0,test0003,"public void test0003() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    RectangleInsets rectangleInsets0 = combinedRangeXYPlot0.getAxisOffset();
    assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
}",0,
project,0,test0004,"public void test0004() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    RectangleInsets rectangleInsets0 = combinedRangeXYPlot0.getAxisOffset();
    assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
}",0,
project,0,test0005,"public void test0005() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    RectangleInsets rectangleInsets0 = combinedRangeXYPlot0.getAxisOffset();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,
project,0,test0016,"public void test0016() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    DateAxis dateAxis0 = new DateAxis(""R"");
    xYPlot0.setRangeAxis(1058, (ValueAxis) dateAxis0);
    DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
    xYPlot0.setDataset(500, (XYDataset) defaultXYZDataset0);
    assertEquals(501, xYPlot0.getDatasetCount());
}",0,"assertEquals(0, xYPlot0.getDatasetCount())"
project,0,test0027,"public void test0027() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setRangeAxisLocation((-1492), (AxisLocation) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Requires index >= 0.
        //
        verifyException(""org.jfree.chart.util.AbstractObjectList"", e);
    }
}",0,
project,0,test0038,"public void test0038() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(false);
    combinedRangeXYPlot0.addRangeMarker((Marker) categoryMarker0);
    CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
    boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
    assertTrue(combinedRangeXYPlot1.isRangeCrosshairLockedOnData());
}",0,
project,0,test0039,"public void test0039() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(false);
    combinedRangeXYPlot0.addRangeMarker((Marker) categoryMarker0);
    CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
    boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test00410,"public void test00410() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
    boolean boolean0 = combinedRangeXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test00511,"public void test00511() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Color color0 = (Color) combinedRangeXYPlot0.getDomainZeroBaselinePaint();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test00512,"public void test00512() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Color color0 = (Color) combinedRangeXYPlot0.getDomainZeroBaselinePaint();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test00614,"public void test00614() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setRangeZeroBaselineVisible(true);
    assertTrue(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
}",0,assertTrue(combinedDomainXYPlot0.isRangeZeroBaselineVisible())
project,0,test00715,"public void test00715() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    BasicStroke basicStroke0 = (BasicStroke) combinedDomainXYPlot0.getRangeZeroBaselineStroke();
    combinedDomainXYPlot0.setRangeZeroBaselineStroke(basicStroke0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test00716,"public void test00716() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    BasicStroke basicStroke0 = (BasicStroke) combinedDomainXYPlot0.getRangeZeroBaselineStroke();
    combinedDomainXYPlot0.setRangeZeroBaselineStroke(basicStroke0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,
project,0,test00919,"public void test00919() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
    assertNotNull(axisLocation0);
}",0,assertNotNull(axisLocation0)
project,0,test00920,"public void test00920() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
    combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test00921,"public void test00921() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
    combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test01022,"public void test01022() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test01023,"public void test01023() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test01024,"public void test01024() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test01125,"public void test01125() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setDomainCrosshairValue(359.3);
    assertEquals(359.3, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
}",0,
project,0,test01226,"public void test01226() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
    combinedDomainXYPlot0.setDomainAxisLocation(231, axisLocation0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertFalse(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test01227,"public void test01227() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
    combinedDomainXYPlot0.setDomainAxisLocation(231, axisLocation0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test01228,"public void test01228() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
    combinedDomainXYPlot0.setDomainAxisLocation(231, axisLocation0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test01430,"public void test01430() throws Throwable {
    PeriodAxis periodAxis0 = new PeriodAxis("""");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
    combinedRangeXYPlot0.getRangeAxisCount();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test01431,"public void test01431() throws Throwable {
    PeriodAxis periodAxis0 = new PeriodAxis("""");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
    combinedRangeXYPlot0.getRangeAxisCount();
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test01532,"public void test01532() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.getRangeMarkers((Layer) null);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test01533,"public void test01533() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.getRangeMarkers((Layer) null);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test01534,"public void test01534() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.getRangeMarkers((Layer) null);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test01635,"public void test01635() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.removeRangeMarker((Marker) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'marker' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test01736,"public void test01736() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.getAnnotations();
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test01737,"public void test01737() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.getAnnotations();
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test01738,"public void test01738() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.getAnnotations();
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test01839,"public void test01839() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.499586611593534, 10.499586611593534);
    XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500);
    HistogramDataset histogramDataset0 = new HistogramDataset();
    XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYAreaRenderer0);
    xYPlot0.setDomainZeroBaselineVisible(true);
    JFreeChart jFreeChart0 = new JFreeChart("""", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, xYPlot0, true);
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    jFreeChart0.createBufferedImage(212, 232, 1, chartRenderingInfo0);
    assertTrue(xYPlot0.isDomainZeroBaselineVisible());
}",0,assertTrue(xYPlot0.isDomainZeroBaselineVisible())
project,0,test01940,"public void test01940() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Color color0 = (Color) combinedDomainXYPlot0.getRangeZeroBaselinePaint();
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,
project,0,test01941,"public void test01941() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Color color0 = (Color) combinedDomainXYPlot0.getRangeZeroBaselinePaint();
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test01943,"public void test01943() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Color color0 = (Color) combinedDomainXYPlot0.getRangeZeroBaselinePaint();
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test02044,"public void test02044() throws Throwable {
    SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(0);
    StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, (ValueAxis) null, (ValueAxis) null, stackedXYAreaRenderer2_0);
    xYPlot0.setDataset((XYDataset) simpleHistogramDataset0);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test02045,"public void test02045() throws Throwable {
    SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(0);
    StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, (ValueAxis) null, (ValueAxis) null, stackedXYAreaRenderer2_0);
    xYPlot0.setDataset((XYDataset) simpleHistogramDataset0);
    assertEquals(1, xYPlot0.getDatasetCount());
}",0,"assertEquals(0, xYPlot0.getDatasetCount())"
project,0,test02146,"public void test02146() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setRangeCrosshairValue((double) 10);
    assertEquals(10.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
}",0,
project,0,test02247,"public void test02247() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.clearAnnotations();
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,
project,0,test02248,"public void test02248() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.clearAnnotations();
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test02349,"public void test02349() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    Color color0 = (Color) xYPlot0.getRangeCrosshairPaint();
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test02451,"public void test02451() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(9.172840998556316);
    XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500);
    HistogramDataset histogramDataset0 = new HistogramDataset();
    XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYAreaRenderer0);
    LegendItemCollection legendItemCollection0 = xYAreaRenderer0.getLegendItems();
    assertEquals(0, legendItemCollection0.getItemCount());
}",0,"assertEquals(1, legendItemCollection0.getItemCount())"
project,0,test02552,"public void test02552() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(7.321617752650613);
    XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500);
    HistogramDataset histogramDataset0 = new HistogramDataset();
    XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYAreaRenderer0);
    XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(xYPlot0.DEFAULT_LEGEND_ITEM_BOX);
    Layer layer0 = Layer.BACKGROUND;
    xYAreaRenderer0.addAnnotation((XYAnnotation) xYShapeAnnotation0, layer0);
    assertTrue(xYAreaRenderer0.getAutoPopulateSeriesPaint());
}",0,assertTrue(xYAreaRenderer0.getAutoPopulateSeriesPaint())
project,0,test02653,"public void test02653() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
    combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, false);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test02654,"public void test02654() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
    combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, false);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test02755,"public void test02755() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
    combinedDomainXYPlot0.getDomainAxisCount();
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test02756,"public void test02756() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
    combinedDomainXYPlot0.getDomainAxisCount();
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test02857,"public void test02857() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Layer layer0 = Layer.FOREGROUND;
    combinedDomainXYPlot0.getDomainMarkers(layer0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test02858,"public void test02858() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Layer layer0 = Layer.FOREGROUND;
    combinedDomainXYPlot0.getDomainMarkers(layer0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(1, combinedDomainXYPlot0.getWeight())"
project,0,test02959,"public void test02959() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(9.17284099856);
    XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500);
    HistogramDataset histogramDataset0 = new HistogramDataset();
    XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYAreaRenderer0);
    xYPlot0.setDomainCrosshairVisible(true);
    JFreeChart jFreeChart0 = new JFreeChart(""=lkzadc9)#w"", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, xYPlot0, true);
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    jFreeChart0.createBufferedImage(500, 500, 1, chartRenderingInfo0);
    assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
}",0,
project,0,test03060,"public void test03060() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    BasicStroke basicStroke0 = (BasicStroke) xYPlot0.getRangeCrosshairStroke();
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test03061,"public void test03061() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    BasicStroke basicStroke0 = (BasicStroke) xYPlot0.getRangeCrosshairStroke();
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test03163,"public void test03163() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    Point2D.Double point2D_Double0 = new Point2D.Double();
    xYPlot0.zoomDomainAxes(374.055222837, plotRenderingInfo0, (Point2D) point2D_Double0);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test03164,"public void test03164() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    Point2D.Double point2D_Double0 = new Point2D.Double();
    xYPlot0.zoomDomainAxes(374.055222837, plotRenderingInfo0, (Point2D) point2D_Double0);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test03265,"public void test03265() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""@(cL"");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    Point2D.Double point2D_Double0 = (Point2D.Double) combinedDomainXYPlot0.getQuadrantOrigin();
    assertEquals(0.0, point2D_Double0.y, 0.01);
}",0,
project,0,test03266,"public void test03266() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""@(cL"");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    Point2D.Double point2D_Double0 = (Point2D.Double) combinedDomainXYPlot0.getQuadrantOrigin();
    assertEquals(0.0, point2D_Double0.x, 0.01);
}",0,
project,0,test03267,"public void test03267() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""@(cL"");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    Point2D.Double point2D_Double0 = (Point2D.Double) combinedDomainXYPlot0.getQuadrantOrigin();
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test03268,"public void test03268() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""@(cL"");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    Point2D.Double point2D_Double0 = (Point2D.Double) combinedDomainXYPlot0.getQuadrantOrigin();
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test03269,"public void test03269() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""@(cL"");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
    Point2D.Double point2D_Double0 = (Point2D.Double) combinedDomainXYPlot0.getQuadrantOrigin();
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test03370,"public void test03370() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    int int0 = combinedDomainXYPlot0.getSeriesCount();
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test03371,"public void test03371() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    int int0 = combinedDomainXYPlot0.getSeriesCount();
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test03372,"public void test03372() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    int int0 = combinedDomainXYPlot0.getSeriesCount();
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test03373,"public void test03373() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    int int0 = combinedDomainXYPlot0.getSeriesCount();
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test03474,"public void test03474() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getPlotType();
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test03475,"public void test03475() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getPlotType();
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test03476,"public void test03476() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.getPlotType();
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test03577,"public void test03577() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.removeDomainMarker((Marker) categoryMarker0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test03678,"public void test03678() throws Throwable {
    DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
    XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(1205);
    NumberAxis numberAxis0 = new NumberAxis(""Z]wbb3qfX<"");
    XYPlot xYPlot0 = new XYPlot(defaultXYZDataset0, (ValueAxis) null, numberAxis0, xYAreaRenderer0);
    int int0 = xYPlot0.getWeight();
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test03679,"public void test03679() throws Throwable {
    DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
    XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(1205);
    NumberAxis numberAxis0 = new NumberAxis(""Z]wbb3qfX<"");
    XYPlot xYPlot0 = new XYPlot(defaultXYZDataset0, (ValueAxis) null, numberAxis0, xYAreaRenderer0);
    int int0 = xYPlot0.getWeight();
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test03680,"public void test03680() throws Throwable {
    DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
    XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(1205);
    NumberAxis numberAxis0 = new NumberAxis(""Z]wbb3qfX<"");
    XYPlot xYPlot0 = new XYPlot(defaultXYZDataset0, (ValueAxis) null, numberAxis0, xYAreaRenderer0);
    int int0 = xYPlot0.getWeight();
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test03882,"public void test03882() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
    StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(458, 10, (double) 10, (double) 10, chartRenderingInfo0);
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
    AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D_Float0);
    combinedDomainXYPlot0.setFixedRangeAxisSpace(axisSpace0);
    CombinedDomainXYPlot combinedDomainXYPlot1 = (CombinedDomainXYPlot) combinedDomainXYPlot0.clone();
    assertTrue(combinedDomainXYPlot1.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot1.isDomainCrosshairLockedOnData())
project,0,test03883,"public void test03883() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
    StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(458, 10, (double) 10, (double) 10, chartRenderingInfo0);
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
    AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D_Float0);
    combinedDomainXYPlot0.setFixedRangeAxisSpace(axisSpace0);
    CombinedDomainXYPlot combinedDomainXYPlot1 = (CombinedDomainXYPlot) combinedDomainXYPlot0.clone();
    assertTrue(combinedDomainXYPlot1.isRangeCrosshairLockedOnData());
}",0,
project,0,test03984,"public void test03984() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
    combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,
project,0,test04085,"public void test04085() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
    combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test04086,"public void test04086() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
    combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test04287,"public void test04287() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
    jFreeChart0.createBufferedImage(10, 10, (-249.2377048665138), (double) 1.0F, chartRenderingInfo0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,
project,0,test04288,"public void test04288() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
    jFreeChart0.createBufferedImage(10, 10, (-249.2377048665138), (double) 1.0F, chartRenderingInfo0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test04389,"public void test04389() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.zoomRangeAxes((-3651.1937073819), (PlotRenderingInfo) null, (Point2D) null);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test04390,"public void test04390() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.zoomRangeAxes((-3651.1937073819), (PlotRenderingInfo) null, (Point2D) null);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test04491,"public void test04491() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    XYSeries xYSeries0 = new XYSeries(false, false);
    XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, (-669.2495376363));
    DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
    PolarPlot polarPlot0 = new PolarPlot(xYSeriesCollection0, cyclicNumberAxis0, defaultPolarItemRenderer0);
    PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
    combinedRangeXYPlot0.setOrientation(plotOrientation0);
    CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
    boolean boolean0 = combinedRangeXYPlot1.equals(combinedRangeXYPlot0);
    assertEquals(1, combinedRangeXYPlot1.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot1.getWeight())"
project,0,test04492,"public void test04492() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    XYSeries xYSeries0 = new XYSeries(false, false);
    XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, (-669.2495376363));
    DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
    PolarPlot polarPlot0 = new PolarPlot(xYSeriesCollection0, cyclicNumberAxis0, defaultPolarItemRenderer0);
    PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
    combinedRangeXYPlot0.setOrientation(plotOrientation0);
    CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
    boolean boolean0 = combinedRangeXYPlot1.equals(combinedRangeXYPlot0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test04493,"public void test04493() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    XYSeries xYSeries0 = new XYSeries(false, false);
    XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, (-669.2495376363));
    DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
    PolarPlot polarPlot0 = new PolarPlot(xYSeriesCollection0, cyclicNumberAxis0, defaultPolarItemRenderer0);
    PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
    combinedRangeXYPlot0.setOrientation(plotOrientation0);
    CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
    boolean boolean0 = combinedRangeXYPlot1.equals(combinedRangeXYPlot0);
    assertTrue(combinedRangeXYPlot1.isRangeCrosshairLockedOnData());
}",0,assertFalse(combinedRangeXYPlot1.isRangeCrosshairLockedOnData())
project,0,test04594,"public void test04594() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setOrientation((PlotOrientation) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'orientation' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test04695,"public void test04695() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
    combinedRangeXYPlot0.setOrientation(plotOrientation0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test04696,"public void test04696() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
    combinedRangeXYPlot0.setOrientation(plotOrientation0);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test04797,"public void test04797() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setAxisOffset((RectangleInsets) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'offset' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test04898,"public void test04898() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.clearDomainAxes();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test04999,"public void test04999() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.clearDomainAxes();
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,
project,0,test049100,"public void test049100() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.clearDomainAxes();
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test050101,"public void test050101() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-48.9523527142181), (-48.9523527142181));
    XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500);
    HistogramDataset histogramDataset0 = new HistogramDataset();
    XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYAreaRenderer0);
    JFreeChart jFreeChart0 = new JFreeChart("""", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, xYPlot0, true);
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    ValueAxis[] valueAxisArray0 = new ValueAxis[2];
    ZoneInfo zoneInfo0 = (ZoneInfo) SegmentedTimeline.DEFAULT_TIME_ZONE;
    DateAxis dateAxis0 = new DateAxis(""/jfU@$R]U5;RDcJ"", zoneInfo0);
    valueAxisArray0[1] = (ValueAxis) dateAxis0;
    xYPlot0.setDomainAxes(valueAxisArray0);
    // Undeclared exception!
    try {
        jFreeChart0.createBufferedImage(140, 500, 1, chartRenderingInfo0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test051102,"public void test051102() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setDomainAxisLocation((AxisLocation) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'location' for index 0 not permitted.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test052103,"public void test052103() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    DateAxis dateAxis0 = new DateAxis();
    xYPlot0.setRangeAxis((ValueAxis) dateAxis0);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test053104,"public void test053104() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    XYPlot xYPlot0 = new XYPlot();
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test053105,"public void test053105() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    XYPlot xYPlot0 = new XYPlot();
    combinedRangeXYPlot0.add(xYPlot0, 10);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test054106,"public void test054106() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0, 0, (String) null);
    combinedRangeXYPlot0.setRangeAxis(0, (ValueAxis) cyclicNumberAxis0);
    assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
}",0,"assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount())"
project,0,test054107,"public void test054107() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0, 0, (String) null);
    combinedRangeXYPlot0.setRangeAxis(0, (ValueAxis) cyclicNumberAxis0);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test054108,"public void test054108() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0, 0, (String) null);
    combinedRangeXYPlot0.setRangeAxis(0, (ValueAxis) cyclicNumberAxis0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test055109,"public void test055109() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setRangeAxis(3, (ValueAxis) null, false);
    assertEquals(4, combinedRangeXYPlot0.getRangeAxisCount());
}",0,"assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount())"
project,0,test056110,"public void test056110() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    ValueAxis[] valueAxisArray0 = new ValueAxis[1];
    combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test056111,"public void test056111() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    ValueAxis[] valueAxisArray0 = new ValueAxis[1];
    combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
    assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
}",0,"assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount())"
project,0,test057112,"public void test057112() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.clearRangeAxes();
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test058113,"public void test058113() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.clearRangeAxes();
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test058114,"public void test058114() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.clearRangeAxes();
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test058115,"public void test058115() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.clearRangeAxes();
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test059116,"public void test059116() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation(52);
    assertNotNull(axisLocation0);
}",0,
project,0,test059117,"public void test059117() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation(52);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test059118,"public void test059118() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation(52);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test060119,"public void test060119() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setRangeAxisLocation((AxisLocation) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'location' for index 0 not permitted.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test061120,"public void test061120() throws Throwable {
    TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.setDataset(500, (XYDataset) timeSeriesCollection0);
    JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
    jFreeChart0.createBufferedImage(1, 10);
    assertEquals(501, xYPlot0.getDatasetCount());
}",0,"assertEquals(0, xYPlot0.getDatasetCount())"
project,0,test062121,"public void test062121() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setDataset(0, (XYDataset) null);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test062122,"public void test062122() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setDataset(0, (XYDataset) null);
    assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
}",0,"assertEquals(0, combinedDomainXYPlot0.getDatasetCount())"
project,0,test062123,"public void test062123() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setDataset(0, (XYDataset) null);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test063124,"public void test063124() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedDataset combinedDataset0 = new CombinedDataset();
    int int0 = combinedRangeXYPlot0.indexOf(combinedDataset0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test063125,"public void test063125() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedDataset combinedDataset0 = new CombinedDataset();
    int int0 = combinedRangeXYPlot0.indexOf(combinedDataset0);
    assertEquals((-1), int0);
}",0,
project,0,test063126,"public void test063126() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedDataset combinedDataset0 = new CombinedDataset();
    int int0 = combinedRangeXYPlot0.indexOf(combinedDataset0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test063127,"public void test063127() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedDataset combinedDataset0 = new CombinedDataset();
    int int0 = combinedRangeXYPlot0.indexOf(combinedDataset0);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test064128,"public void test064128() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    int int0 = combinedDomainXYPlot0.indexOf((XYDataset) null);
    assertEquals(0, int0);
}",0,
project,0,test064129,"public void test064129() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    int int0 = combinedDomainXYPlot0.indexOf((XYDataset) null);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test065130,"public void test065130() throws Throwable {
    ThermometerPlot thermometerPlot0 = new ThermometerPlot();
    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
    SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(3);
    StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, valueAxis0, valueAxis0, stackedXYAreaRenderer2_0);
    xYPlot0.setRenderer((XYItemRenderer) stackedXYAreaRenderer2_0);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test066131,"public void test066131() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[1];
    combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test066132,"public void test066132() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[1];
    combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test066133,"public void test066133() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[1];
    combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test067134,"public void test067134() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    DatasetRenderingOrder datasetRenderingOrder0 = combinedDomainXYPlot0.getDatasetRenderingOrder();
    combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test067135,"public void test067135() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    DatasetRenderingOrder datasetRenderingOrder0 = combinedDomainXYPlot0.getDatasetRenderingOrder();
    combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,
project,0,test068136,"public void test068136() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'order' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test069137,"public void test069137() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    SeriesRenderingOrder seriesRenderingOrder0 = combinedDomainXYPlot0.getSeriesRenderingOrder();
    combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test069138,"public void test069138() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    SeriesRenderingOrder seriesRenderingOrder0 = combinedDomainXYPlot0.getSeriesRenderingOrder();
    combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test070139,"public void test070139() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.setSeriesRenderingOrder((SeriesRenderingOrder) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'order' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test071140,"public void test071140() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2137, ""org.jfree.chart.labels.AbstractXYItemLabelGenerator"");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(simpleTimeZone0);
    combinedDomainXYPlot0.getRendererForDataset(timeSeriesCollection0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test071141,"public void test071141() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2137, ""org.jfree.chart.labels.AbstractXYItemLabelGenerator"");
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(simpleTimeZone0);
    combinedDomainXYPlot0.getRendererForDataset(timeSeriesCollection0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test073143,"public void test073143() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setDomainGridlinesVisible(true);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test073144,"public void test073144() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setDomainGridlinesVisible(true);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test073145,"public void test073145() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setDomainGridlinesVisible(true);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test074146,"public void test074146() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setDomainGridlinesVisible(false);
    assertFalse(combinedDomainXYPlot0.isDomainGridlinesVisible());
}",0,assertFalse(combinedDomainXYPlot0.isDomainGridlinesVisible())
project,0,test075147,"public void test075147() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    BasicStroke basicStroke0 = (BasicStroke) PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
    combinedDomainXYPlot0.setDomainGridlineStroke(basicStroke0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test075148,"public void test075148() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    BasicStroke basicStroke0 = (BasicStroke) PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
    combinedDomainXYPlot0.setDomainGridlineStroke(basicStroke0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test075149,"public void test075149() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    BasicStroke basicStroke0 = (BasicStroke) PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
    combinedDomainXYPlot0.setDomainGridlineStroke(basicStroke0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test076150,"public void test076150() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setDomainGridlineStroke((Stroke) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'stroke' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test077151,"public void test077151() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    SystemColor systemColor0 = SystemColor.control;
    combinedRangeXYPlot0.setDomainGridlinePaint(systemColor0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test077152,"public void test077152() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    SystemColor systemColor0 = SystemColor.control;
    combinedRangeXYPlot0.setDomainGridlinePaint(systemColor0);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test077153,"public void test077153() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    SystemColor systemColor0 = SystemColor.control;
    combinedRangeXYPlot0.setDomainGridlinePaint(systemColor0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test078154,"public void test078154() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setDomainGridlinePaint((Paint) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'paint' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test079155,"public void test079155() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setRangeGridlinesVisible(true);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test079156,"public void test079156() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setRangeGridlinesVisible(true);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test080157,"public void test080157() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    BasicStroke basicStroke0 = new BasicStroke();
    combinedDomainXYPlot0.setRangeGridlineStroke(basicStroke0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test080158,"public void test080158() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    BasicStroke basicStroke0 = new BasicStroke();
    combinedDomainXYPlot0.setRangeGridlineStroke(basicStroke0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test080159,"public void test080159() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    BasicStroke basicStroke0 = new BasicStroke();
    combinedDomainXYPlot0.setRangeGridlineStroke(basicStroke0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test081160,"public void test081160() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setRangeGridlineStroke((Stroke) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'stroke' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test082161,"public void test082161() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setRangeGridlinePaint(combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test082162,"public void test082162() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setRangeGridlinePaint(combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test083163,"public void test083163() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.setRangeGridlinePaint((Paint) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'paint' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test084164,"public void test084164() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Stroke stroke0 = combinedDomainXYPlot0.getDomainCrosshairStroke();
    combinedDomainXYPlot0.setDomainZeroBaselineStroke(stroke0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test085165,"public void test085165() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setDomainZeroBaselineStroke((Stroke) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'stroke' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test086166,"public void test086166() throws Throwable {
    TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1449.3398049104687));
    CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
    XYPlot xYPlot0 = new XYPlot(timeSeriesCollection0, cyclicNumberAxis0, cyclicNumberAxis0, cyclicXYItemRenderer0);
    xYPlot0.setDomainZeroBaselinePaint(cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test087167,"public void test087167() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.setDomainZeroBaselinePaint((Paint) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'paint' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test088168,"public void test088168() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.setRangeZeroBaselineStroke((Stroke) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'stroke' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test089169,"public void test089169() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.setRangeZeroBaselinePaint((Paint) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'paint' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test090170,"public void test090170() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Point2D.Double point2D_Double0 = new Point2D.Double();
    combinedRangeXYPlot0.setQuadrantOrigin(point2D_Double0);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test091171,"public void test091171() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    // Undeclared exception!
    try {
        xYPlot0.setQuadrantOrigin((Point2D) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'origin' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test092172,"public void test092172() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    // Undeclared exception!
    try {
        xYPlot0.getQuadrantPaint((-2808));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The index value (-2808) should be in the range 0 to 3.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test093173,"public void test093173() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.getQuadrantPaint(0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,
project,0,test093174,"public void test093174() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.getQuadrantPaint(0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test094175,"public void test094175() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.getQuadrantPaint(10);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The index value (10) should be in the range 0 to 3.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test095176,"public void test095176() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Color color0 = Color.black;
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setQuadrantPaint((-754), color0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The index value (-754) should be in the range 0 to 3.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test096177,"public void test096177() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Color color0 = Color.orange;
    combinedDomainXYPlot0.setQuadrantPaint(1, color0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(1, combinedDomainXYPlot0.getWeight())"
project,0,test096178,"public void test096178() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Color color0 = Color.orange;
    combinedDomainXYPlot0.setQuadrantPaint(1, color0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,
project,0,test097179,"public void test097179() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Color color0 = (Color) FastScatterPlot.DEFAULT_GRIDLINE_PAINT;
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setQuadrantPaint(493, color0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The index value (493) should be in the range 0 to 3.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test098180,"public void test098180() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addDomainMarker(10, (Marker) intervalMarker0, layer0, false);
    combinedRangeXYPlot0.clearDomainMarkers();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test099181,"public void test099181() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    ValueMarker valueMarker0 = new ValueMarker(10, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, 0);
    combinedDomainXYPlot0.addDomainMarker((Marker) valueMarker0);
    combinedDomainXYPlot0.clearDomainMarkers();
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test099182,"public void test099182() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    ValueMarker valueMarker0 = new ValueMarker(10, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, 0);
    combinedDomainXYPlot0.addDomainMarker((Marker) valueMarker0);
    combinedDomainXYPlot0.clearDomainMarkers();
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test100183,"public void test100183() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.addDomainMarker((Marker) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'marker' not permitted.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test101184,"public void test101184() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(10);
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.addDomainMarker(10, (Marker) categoryMarker0, (Layer) null, false);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'layer' not permitted.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test102185,"public void test102185() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    IntervalMarker intervalMarker0 = new IntervalMarker(14.0, 0);
    Layer layer0 = Layer.FOREGROUND;
    combinedDomainXYPlot0.addDomainMarker((Marker) intervalMarker0, layer0);
    combinedDomainXYPlot0.addDomainMarker(0, (Marker) intervalMarker0, layer0, false);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test103186,"public void test103186() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addDomainMarker((-2080), (Marker) intervalMarker0, layer0, false);
    combinedRangeXYPlot0.addDomainMarker((-2080), (Marker) intervalMarker0, layer0, false);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test103187,"public void test103187() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addDomainMarker((-2080), (Marker) intervalMarker0, layer0, false);
    combinedRangeXYPlot0.addDomainMarker((-2080), (Marker) intervalMarker0, layer0, false);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test103188,"public void test103188() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addDomainMarker((-2080), (Marker) intervalMarker0, layer0, false);
    combinedRangeXYPlot0.addDomainMarker((-2080), (Marker) intervalMarker0, layer0, false);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test104189,"public void test104189() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    IntervalMarker intervalMarker0 = new IntervalMarker(0.5F, 15);
    ValueMarker valueMarker0 = new ValueMarker(1236.10482);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addDomainMarker((Marker) intervalMarker0, layer0);
    combinedRangeXYPlot0.removeDomainMarker(0, (Marker) valueMarker0, layer0, false);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test104190,"public void test104190() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    IntervalMarker intervalMarker0 = new IntervalMarker(0.5F, 15);
    ValueMarker valueMarker0 = new ValueMarker(1236.10482);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addDomainMarker((Marker) intervalMarker0, layer0);
    combinedRangeXYPlot0.removeDomainMarker(0, (Marker) valueMarker0, layer0, false);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test104191,"public void test104191() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    IntervalMarker intervalMarker0 = new IntervalMarker(0.5F, 15);
    ValueMarker valueMarker0 = new ValueMarker(1236.10482);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addDomainMarker((Marker) intervalMarker0, layer0);
    combinedRangeXYPlot0.removeDomainMarker(0, (Marker) valueMarker0, layer0, false);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test105192,"public void test105192() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""Z]wbb3qfX<"");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
    ValueMarker valueMarker0 = new ValueMarker(688.32824277761);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addDomainMarker((Marker) valueMarker0, layer0);
    boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker(0, (Marker) valueMarker0, layer0, false);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,
project,0,test105193,"public void test105193() throws Throwable {
    DateAxis dateAxis0 = new DateAxis(""Z]wbb3qfX<"");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
    ValueMarker valueMarker0 = new ValueMarker(688.32824277761);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addDomainMarker((Marker) valueMarker0, layer0);
    boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker(0, (Marker) valueMarker0, layer0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test106194,"public void test106194() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ValueMarker valueMarker0 = new ValueMarker(2.0);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addDomainMarker((Marker) valueMarker0, layer0);
    combinedRangeXYPlot0.removeDomainMarker(0, (Marker) valueMarker0, layer0, true);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test106195,"public void test106195() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ValueMarker valueMarker0 = new ValueMarker(2.0);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addDomainMarker((Marker) valueMarker0, layer0);
    combinedRangeXYPlot0.removeDomainMarker(0, (Marker) valueMarker0, layer0, true);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test106196,"public void test106196() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ValueMarker valueMarker0 = new ValueMarker(2.0);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addDomainMarker((Marker) valueMarker0, layer0);
    combinedRangeXYPlot0.removeDomainMarker(0, (Marker) valueMarker0, layer0, true);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,
project,0,test107197,"public void test107197() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addRangeMarker(10, (Marker) categoryMarker0, layer0);
    combinedRangeXYPlot0.clearRangeMarkers();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test107198,"public void test107198() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot0.addRangeMarker(10, (Marker) categoryMarker0, layer0);
    combinedRangeXYPlot0.clearRangeMarkers();
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test108199,"public void test108199() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    ValueMarker valueMarker0 = new ValueMarker(1.0F);
    combinedDomainXYPlot0.addRangeMarker((Marker) valueMarker0);
    combinedDomainXYPlot0.clearRangeMarkers();
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test109200,"public void test109200() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    IntervalMarker intervalMarker0 = new IntervalMarker(482.0, 942.9754205);
    combinedDomainXYPlot0.addRangeMarker((Marker) intervalMarker0);
    CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
    combinedDomainXYPlot0.addRangeMarker((Marker) categoryMarker0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test109201,"public void test109201() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    IntervalMarker intervalMarker0 = new IntervalMarker(482.0, 942.9754205);
    combinedDomainXYPlot0.addRangeMarker((Marker) intervalMarker0);
    CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
    combinedDomainXYPlot0.addRangeMarker((Marker) categoryMarker0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test110202,"public void test110202() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.addRangeMarker(10, (Marker) null, (Layer) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test111203,"public void test111203() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Layer layer0 = Layer.BACKGROUND;
    IntervalMarker intervalMarker0 = new IntervalMarker(2730.74, 10);
    combinedRangeXYPlot0.addRangeMarker(3, (Marker) intervalMarker0, layer0);
    combinedRangeXYPlot0.addRangeMarker(3, (Marker) intervalMarker0, layer0, false);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test111204,"public void test111204() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Layer layer0 = Layer.BACKGROUND;
    IntervalMarker intervalMarker0 = new IntervalMarker(2730.74, 10);
    combinedRangeXYPlot0.addRangeMarker(3, (Marker) intervalMarker0, layer0);
    combinedRangeXYPlot0.addRangeMarker(3, (Marker) intervalMarker0, layer0, false);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test112205,"public void test112205() throws Throwable {
    Layer layer0 = Layer.BACKGROUND;
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ValueMarker valueMarker0 = new ValueMarker((-5141.2983), combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
    combinedRangeXYPlot0.addRangeMarker(10, (Marker) valueMarker0, layer0);
    ValueMarker valueMarker1 = new ValueMarker(10);
    boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker(10, (Marker) valueMarker1, (Layer) null, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test113206,"public void test113206() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
    Layer layer0 = Layer.BACKGROUND;
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.addRangeMarker(10, (Marker) valueMarker0, layer0);
    boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker(10, (Marker) valueMarker0, layer0, false);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test113207,"public void test113207() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
    Layer layer0 = Layer.BACKGROUND;
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.addRangeMarker(10, (Marker) valueMarker0, layer0);
    boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker(10, (Marker) valueMarker0, layer0, false);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test113208,"public void test113208() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
    Layer layer0 = Layer.BACKGROUND;
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.addRangeMarker(10, (Marker) valueMarker0, layer0);
    boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker(10, (Marker) valueMarker0, layer0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test114209,"public void test114209() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(10);
    Layer layer0 = Layer.FOREGROUND;
    combinedRangeXYPlot0.addRangeMarker(389, (Marker) categoryMarker0, layer0);
    boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker(389, (Marker) categoryMarker0, layer0, true);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test114210,"public void test114210() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(10);
    Layer layer0 = Layer.FOREGROUND;
    combinedRangeXYPlot0.addRangeMarker(389, (Marker) categoryMarker0, layer0);
    boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker(389, (Marker) categoryMarker0, layer0, true);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,
project,0,test114211,"public void test114211() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(10);
    Layer layer0 = Layer.FOREGROUND;
    combinedRangeXYPlot0.addRangeMarker(389, (Marker) categoryMarker0, layer0);
    boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker(389, (Marker) categoryMarker0, layer0, true);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test115212,"public void test115212() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.addAnnotation((XYAnnotation) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'annotation' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test116213,"public void test116213() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
    combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
    boolean boolean0 = combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test116214,"public void test116214() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
    combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
    boolean boolean0 = combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0, false);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test116215,"public void test116215() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
    combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
    boolean boolean0 = combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0, false);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test117216,"public void test117216() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.removeAnnotation((XYAnnotation) null, false);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'annotation' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test118217,"public void test118217() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
    combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
    combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0, true);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test118218,"public void test118218() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
    combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
    combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0, true);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test118219,"public void test118219() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
    combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
    combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0, true);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test119220,"public void test119220() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.calculateDomainAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.axis.ValueAxis"", e);
    }
}",0,
project,0,test120221,"public void test120221() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    DefaultCaret defaultCaret0 = new DefaultCaret();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.calculateRangeAxisSpace((Graphics2D) null, defaultCaret0, (AxisSpace) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.axis.ValueAxis"", e);
    }
}",0,
project,0,test121222,"public void test121222() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
    // Undeclared exception!
    try {
        jFreeChart0.createBufferedImage(62, 62);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test122223,"public void test122223() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
    jFreeChart0.createBufferedImage(335, 10, 10, chartRenderingInfo0);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test122224,"public void test122224() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
    jFreeChart0.createBufferedImage(335, 10, 10, chartRenderingInfo0);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test123225,"public void test123225() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-13.322859994304387), (-13.322859994304387));
    XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500);
    HistogramDataset histogramDataset0 = new HistogramDataset();
    XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYAreaRenderer0);
    JFreeChart jFreeChart0 = new JFreeChart((String) null, cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, xYPlot0, false);
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 15, 10, chartRenderingInfo0);
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
    Dimension dimension0 = chartPanel0.getPreferredSize();
    Rectangle rectangle0 = new Rectangle(dimension0);
    Point point0 = new Point(0, 0);
    PlotState plotState0 = new PlotState();
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    xYPlot0.draw(graphics2D0, rectangle0, point0, plotState0, plotRenderingInfo0);
    assertEquals(8, rectangle0.x);
}",0,
project,0,test124227,"public void test124227() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-48.9523527142181), (-48.9523527142181));
    XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500);
    HistogramDataset histogramDataset0 = new HistogramDataset();
    XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYAreaRenderer0);
    xYPlot0.setRangeCrosshairLockedOnData(false);
    JFreeChart jFreeChart0 = new JFreeChart("""", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, xYPlot0, true);
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    jFreeChart0.createBufferedImage(140, 500, 1, chartRenderingInfo0);
    assertTrue(xYPlot0.isDomainGridlinesVisible());
}",0,assertFalse(xYPlot0.isDomainGridlinesVisible())
project,0,test126229,"public void test126229() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
    xYPlot0.drawAxes((Graphics2D) null, rectangle2D_Float0, rectangle2D_Float0, plotRenderingInfo0);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test126230,"public void test126230() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
    xYPlot0.drawAxes((Graphics2D) null, rectangle2D_Float0, rectangle2D_Float0, plotRenderingInfo0);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test127231,"public void test127231() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-48.9523527142181), (-48.9523527142181));
    XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500);
    HistogramDataset histogramDataset0 = new HistogramDataset();
    XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYAreaRenderer0);
    JFreeChart jFreeChart0 = new JFreeChart("""", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, xYPlot0, true);
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    ValueAxis[] valueAxisArray0 = new ValueAxis[2];
    valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
    ZoneInfo zoneInfo0 = (ZoneInfo) SegmentedTimeline.DEFAULT_TIME_ZONE;
    DateAxis dateAxis0 = new DateAxis(""/jfU@$R]U5;RDcJ"", zoneInfo0);
    valueAxisArray0[1] = (ValueAxis) dateAxis0;
    xYPlot0.setDomainAxes(valueAxisArray0);
    jFreeChart0.createBufferedImage(140, 500, 1, chartRenderingInfo0);
    assertEquals(2, xYPlot0.getDomainAxisCount());
}",0,"assertEquals(0, xYPlot0.getDomainAxisCount())"
project,0,test127232,"public void test127232() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-48.9523527142181), (-48.9523527142181));
    XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500);
    HistogramDataset histogramDataset0 = new HistogramDataset();
    XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYAreaRenderer0);
    JFreeChart jFreeChart0 = new JFreeChart("""", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, xYPlot0, true);
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    ValueAxis[] valueAxisArray0 = new ValueAxis[2];
    valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
    ZoneInfo zoneInfo0 = (ZoneInfo) SegmentedTimeline.DEFAULT_TIME_ZONE;
    DateAxis dateAxis0 = new DateAxis(""/jfU@$R]U5;RDcJ"", zoneInfo0);
    valueAxisArray0[1] = (ValueAxis) dateAxis0;
    xYPlot0.setDomainAxes(valueAxisArray0);
    jFreeChart0.createBufferedImage(140, 500, 1, chartRenderingInfo0);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test129234,"public void test129234() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.getDomainAxisForDataset((-1120));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Index -1120 out of bounds.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test130235,"public void test130235() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.getDomainAxisForDataset(345);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Index 345 out of bounds.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test131236,"public void test131236() throws Throwable {
    TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1449.3398049104687));
    CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
    XYPlot xYPlot0 = new XYPlot(timeSeriesCollection0, cyclicNumberAxis0, cyclicNumberAxis0, cyclicXYItemRenderer0);
    xYPlot0.setDataset(500, (XYDataset) timeSeriesCollection0);
    xYPlot0.getDomainAxisForDataset(4);
    assertEquals(501, xYPlot0.getDatasetCount());
}",0,"assertEquals(0, xYPlot0.getDatasetCount())"
project,0,test132237,"public void test132237() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.getRangeAxisForDataset((-2459));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Index -2459 out of bounds.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test133238,"public void test133238() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.getRangeAxisForDataset(255);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Index 255 out of bounds.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test134239,"public void test134239() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
    combinedDomainXYPlot0.setDataset(4, (XYDataset) categoryTableXYDataset0);
    combinedDomainXYPlot0.getRangeAxisForDataset(3);
    assertEquals(5, combinedDomainXYPlot0.getDatasetCount());
}",0,"assertEquals(0, combinedDomainXYPlot0.getDatasetCount())"
project,0,test135240,"public void test135240() throws Throwable {
    DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
    XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultXYZDataset0, (ValueAxis) null, (ValueAxis) null, xYLine3DRenderer0);
    BufferedImage bufferedImage0 = new BufferedImage(500, 979, 10);
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    LinkedList<DefaultIntervalXYDataset> linkedList0 = new LinkedList<DefaultIntervalXYDataset>();
    xYPlot0.drawRangeGridlines(graphics2D0, (Rectangle2D) null, linkedList0);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test135241,"public void test135241() throws Throwable {
    DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
    XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultXYZDataset0, (ValueAxis) null, (ValueAxis) null, xYLine3DRenderer0);
    BufferedImage bufferedImage0 = new BufferedImage(500, 979, 10);
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    LinkedList<DefaultIntervalXYDataset> linkedList0 = new LinkedList<DefaultIntervalXYDataset>();
    xYPlot0.drawRangeGridlines(graphics2D0, (Rectangle2D) null, linkedList0);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test135242,"public void test135242() throws Throwable {
    DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
    XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
    XYPlot xYPlot0 = new XYPlot(defaultXYZDataset0, (ValueAxis) null, (ValueAxis) null, xYLine3DRenderer0);
    BufferedImage bufferedImage0 = new BufferedImage(500, 979, 10);
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    LinkedList<DefaultIntervalXYDataset> linkedList0 = new LinkedList<DefaultIntervalXYDataset>();
    xYPlot0.drawRangeGridlines(graphics2D0, (Rectangle2D) null, linkedList0);
    assertTrue(xYPlot0.isRangeGridlinesVisible());
}",0,assertTrue(xYPlot0.isRangeGridlinesVisible())
project,0,test137244,"public void test137244() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.getDomainMarkers(1944, (Layer) null);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test137245,"public void test137245() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.getDomainMarkers(1944, (Layer) null);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test137246,"public void test137246() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.getDomainMarkers(1944, (Layer) null);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test138247,"public void test138247() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
    Layer layer0 = Layer.FOREGROUND;
    xYPlot0.addRangeMarker((-1088), (Marker) categoryMarker0, layer0, true);
    Collection collection0 = xYPlot0.getRangeMarkers((-1088), layer0);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test138248,"public void test138248() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
    Layer layer0 = Layer.FOREGROUND;
    xYPlot0.addRangeMarker((-1088), (Marker) categoryMarker0, layer0, true);
    Collection collection0 = xYPlot0.getRangeMarkers((-1088), layer0);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(1, xYPlot0.getWeight())"
project,0,test138249,"public void test138249() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
    Layer layer0 = Layer.FOREGROUND;
    xYPlot0.addRangeMarker((-1088), (Marker) categoryMarker0, layer0, true);
    Collection collection0 = xYPlot0.getRangeMarkers((-1088), layer0);
    assertNotNull(collection0);
}",0,
project,0,test139250,"public void test139250() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    DefaultCaret defaultCaret0 = new DefaultCaret();
    Color color0 = Color.YELLOW;
    Stroke stroke0 = combinedRangeXYPlot0.getDomainZeroBaselineStroke();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.drawHorizontalLine((Graphics2D) null, defaultCaret0, 0, stroke0, color0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test140251,"public void test140251() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ThermometerPlot thermometerPlot0 = new ThermometerPlot();
    DefaultCaret defaultCaret0 = new DefaultCaret();
    combinedRangeXYPlot0.drawHorizontalLine((Graphics2D) null, defaultCaret0, 2, thermometerPlot0.DEFAULT_OUTLINE_STROKE, thermometerPlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test140252,"public void test140252() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ThermometerPlot thermometerPlot0 = new ThermometerPlot();
    DefaultCaret defaultCaret0 = new DefaultCaret();
    combinedRangeXYPlot0.drawHorizontalLine((Graphics2D) null, defaultCaret0, 2, thermometerPlot0.DEFAULT_OUTLINE_STROKE, thermometerPlot0.DEFAULT_OUTLINE_PAINT);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test141253,"public void test141253() throws Throwable {
    ThermometerPlot thermometerPlot0 = new ThermometerPlot();
    PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
    LogAxis logAxis0 = new LogAxis(""{0}: ({1}, {2})"");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
    combinedRangeXYPlot0.drawDomainCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 10, logAxis0, logAxis0.DEFAULT_AXIS_LINE_STROKE, logAxis0.DEFAULT_TICK_LABEL_PAINT);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test141254,"public void test141254() throws Throwable {
    ThermometerPlot thermometerPlot0 = new ThermometerPlot();
    PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
    LogAxis logAxis0 = new LogAxis(""{0}: ({1}, {2})"");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
    combinedRangeXYPlot0.drawDomainCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 10, logAxis0, logAxis0.DEFAULT_AXIS_LINE_STROKE, logAxis0.DEFAULT_TICK_LABEL_PAINT);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test141255,"public void test141255() throws Throwable {
    ThermometerPlot thermometerPlot0 = new ThermometerPlot();
    PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
    LogAxis logAxis0 = new LogAxis(""{0}: ({1}, {2})"");
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
    combinedRangeXYPlot0.drawDomainCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 10, logAxis0, logAxis0.DEFAULT_AXIS_LINE_STROKE, logAxis0.DEFAULT_TICK_LABEL_PAINT);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test142256,"public void test142256() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F);
    BufferedImage bufferedImage0 = new BufferedImage(500, 235, 10);
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.drawDomainCrosshair(graphics2D0, (Rectangle2D) null, plotOrientation0, 0.0, cyclicNumberAxis0, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.axis.CyclicNumberAxis"", e);
    }
}",0,
project,0,test143257,"public void test143257() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
    combinedRangeXYPlot0.setOrientation(plotOrientation0);
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.drawVerticalLine((Graphics2D) null, (Rectangle2D) null, 1.0F, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.axis.NumberAxis"", e);
    }
}",0,
project,0,test144258,"public void test144258() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Rectangle rectangle0 = new Rectangle();
    BasicStroke basicStroke0 = (BasicStroke) XYPlot.DEFAULT_CROSSHAIR_STROKE;
    Color color0 = (Color) PeriodAxisLabelInfo.DEFAULT_LABEL_PAINT;
    combinedDomainXYPlot0.drawVerticalLine((Graphics2D) null, rectangle0, (-435.203067591), basicStroke0, color0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test144259,"public void test144259() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Rectangle rectangle0 = new Rectangle();
    BasicStroke basicStroke0 = (BasicStroke) XYPlot.DEFAULT_CROSSHAIR_STROKE;
    Color color0 = (Color) PeriodAxisLabelInfo.DEFAULT_LABEL_PAINT;
    combinedDomainXYPlot0.drawVerticalLine((Graphics2D) null, rectangle0, (-435.203067591), basicStroke0, color0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test144260,"public void test144260() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Rectangle rectangle0 = new Rectangle();
    BasicStroke basicStroke0 = (BasicStroke) XYPlot.DEFAULT_CROSSHAIR_STROKE;
    Color color0 = (Color) PeriodAxisLabelInfo.DEFAULT_LABEL_PAINT;
    combinedDomainXYPlot0.drawVerticalLine((Graphics2D) null, rectangle0, (-435.203067591), basicStroke0, color0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test145261,"public void test145261() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
    PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
    PeriodAxis periodAxis0 = new PeriodAxis(""Z_ p$}NnIA"");
    combinedDomainXYPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 1.0F, periodAxis0, periodAxis0.DEFAULT_TICK_MARK_STROKE, periodAxis0.DEFAULT_AXIS_LABEL_PAINT);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test145262,"public void test145262() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
    PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
    PeriodAxis periodAxis0 = new PeriodAxis(""Z_ p$}NnIA"");
    combinedDomainXYPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 1.0F, periodAxis0, periodAxis0.DEFAULT_TICK_MARK_STROKE, periodAxis0.DEFAULT_AXIS_LABEL_PAINT);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test146263,"public void test146263() throws Throwable {
    String[] stringArray0 = new String[6];
    SymbolAxis symbolAxis0 = new SymbolAxis(""VD*UDSt"", stringArray0);
    XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
    BufferedImage bufferedImage0 = new BufferedImage(500, 500, 10);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0E-8, 1.0F, 3, 15);
    PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
    combinedDomainXYPlot0.drawRangeCrosshair(graphics2D0, rectangle2D_Double0, plotOrientation0, 0.05, symbolAxis0, xYAreaRenderer2_0.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test146264,"public void test146264() throws Throwable {
    String[] stringArray0 = new String[6];
    SymbolAxis symbolAxis0 = new SymbolAxis(""VD*UDSt"", stringArray0);
    XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
    BufferedImage bufferedImage0 = new BufferedImage(500, 500, 10);
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0E-8, 1.0F, 3, 15);
    PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
    combinedDomainXYPlot0.drawRangeCrosshair(graphics2D0, rectangle2D_Double0, plotOrientation0, 0.05, symbolAxis0, xYAreaRenderer2_0.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test147265,"public void test147265() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    BorderLayout borderLayout0 = new BorderLayout(468, 4);
    byte[] byteArray0 = new byte[1];
    ImageIcon imageIcon0 = new ImageIcon(byteArray0, (String) null);
    JMenuItem jMenuItem0 = new JMenuItem(imageIcon0);
    Dimension dimension0 = borderLayout0.minimumLayoutSize(jMenuItem0);
    Rectangle rectangle0 = new Rectangle(dimension0);
    SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("")*}P<*X]s$["");
    CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
    PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
    NumberAxis3D numberAxis3D0 = new NumberAxis3D();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.drawRangeCrosshair((Graphics2D) null, rectangle0, plotOrientation0, 0.2, numberAxis3D0, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE, subCategoryAxis0.DEFAULT_TICK_MARK_PAINT);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test148266,"public void test148266() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    xYPlot0.handleClick(10, 10, plotRenderingInfo0);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test148267,"public void test148267() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    xYPlot0.handleClick(10, 10, plotRenderingInfo0);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test149268,"public void test149268() throws Throwable {
    TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1452.3506622));
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.setDomainAxis(2, (ValueAxis) cyclicNumberAxis0);
    xYPlot0.setDataset(500, (XYDataset) timeSeriesCollection0);
    assertEquals(3, xYPlot0.getDomainAxisCount());
}",0,"assertEquals(1, xYPlot0.getDomainAxisCount())"
project,0,test150269,"public void test150269() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
    combinedRangeXYPlot0.setParent(spiderWebPlot0);
    DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
    DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(spiderWebPlot0, defaultCategoryDataset0);
    combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test150270,"public void test150270() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
    combinedRangeXYPlot0.setParent(spiderWebPlot0);
    DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
    DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(spiderWebPlot0, defaultCategoryDataset0);
    combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test150271,"public void test150271() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
    combinedRangeXYPlot0.setParent(spiderWebPlot0);
    DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
    DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(spiderWebPlot0, defaultCategoryDataset0);
    combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test151272,"public void test151272() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setDomainCrosshairVisible(false);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,
project,0,test151273,"public void test151273() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setDomainCrosshairVisible(false);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test151274,"public void test151274() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setDomainCrosshairVisible(false);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test152275,"public void test152275() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test152276,"public void test152276() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.setDomainCrosshairLockedOnData(true);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test152277,"public void test152277() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.setDomainCrosshairLockedOnData(true);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test153278,"public void test153278() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,
project,0,test153279,"public void test153279() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    xYPlot0.setDomainCrosshairLockedOnData(false);
    assertFalse(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertFalse(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test154280,"public void test154280() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.9613068442834365, 1.9613068442834365);
    XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500);
    HistogramDataset histogramDataset0 = new HistogramDataset();
    XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYAreaRenderer0);
    xYPlot0.setDomainCrosshairVisible(true);
    xYPlot0.setDomainCrosshairValue(1759.407012544, true);
    assertTrue(xYPlot0.isDomainCrosshairVisible());
}",0,assertTrue(xYPlot0.isDomainCrosshairVisible())
project,0,test155281,"public void test155281() throws Throwable {
    XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setDomainCrosshairStroke(xYAreaRenderer2_0.DEFAULT_STROKE);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test155282,"public void test155282() throws Throwable {
    XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setDomainCrosshairStroke(xYAreaRenderer2_0.DEFAULT_STROKE);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test156283,"public void test156283() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setDomainCrosshairStroke((Stroke) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'stroke' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test157284,"public void test157284() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setDomainCrosshairPaint((Paint) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'paint' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test158285,"public void test158285() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setRangeCrosshairVisible(false);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test158286,"public void test158286() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setRangeCrosshairVisible(false);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot0.getWeight())"
project,0,test158287,"public void test158287() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setRangeCrosshairVisible(false);
    assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData())
project,0,test159288,"public void test159288() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setRangeCrosshairVisible(true);
    combinedDomainXYPlot0.setRangeCrosshairValue((double) 2.0F, true);
    assertEquals(2.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
}",0,
project,0,test160289,"public void test160289() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(9.17284099856);
    XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500);
    HistogramDataset histogramDataset0 = new HistogramDataset();
    XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYAreaRenderer0);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test160290,"public void test160290() throws Throwable {
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(9.17284099856);
    XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500);
    HistogramDataset histogramDataset0 = new HistogramDataset();
    XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYAreaRenderer0);
    xYPlot0.setRangeCrosshairLockedOnData(true);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test161291,"public void test161291() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setRangeCrosshairVisible(true);
    combinedDomainXYPlot0.setRangeCrosshairValue((-411.2747621676), false);
    assertEquals((-411.2747621676), combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
}",0,
project,0,test162292,"public void test162292() throws Throwable {
    YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
    String[] stringArray0 = new String[6];
    SymbolAxis symbolAxis0 = new SymbolAxis(""VD*UDSt"", stringArray0);
    XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(yIntervalSeriesCollection0, symbolAxis0, symbolAxis0, xYAreaRenderer2_0);
    xYPlot0.setRangeCrosshairStroke(xYAreaRenderer2_0.DEFAULT_OUTLINE_STROKE);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test162293,"public void test162293() throws Throwable {
    YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
    String[] stringArray0 = new String[6];
    SymbolAxis symbolAxis0 = new SymbolAxis(""VD*UDSt"", stringArray0);
    XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(yIntervalSeriesCollection0, symbolAxis0, symbolAxis0, xYAreaRenderer2_0);
    xYPlot0.setRangeCrosshairStroke(xYAreaRenderer2_0.DEFAULT_OUTLINE_STROKE);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test163294,"public void test163294() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setRangeCrosshairStroke((Stroke) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'stroke' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",1,
project,0,test164295,"public void test164295() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Color color0 = (Color) SpiderWebPlot.DEFAULT_LABEL_BACKGROUND_PAINT;
    combinedDomainXYPlot0.setRangeCrosshairPaint(color0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test164296,"public void test164296() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Color color0 = (Color) SpiderWebPlot.DEFAULT_LABEL_BACKGROUND_PAINT;
    combinedDomainXYPlot0.setRangeCrosshairPaint(color0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test164297,"public void test164297() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Color color0 = (Color) SpiderWebPlot.DEFAULT_LABEL_BACKGROUND_PAINT;
    combinedDomainXYPlot0.setRangeCrosshairPaint(color0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test165298,"public void test165298() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.setRangeCrosshairPaint((Paint) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'paint' argument.
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test166299,"public void test166299() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test166300,"public void test166300() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test166301,"public void test166301() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test167302,"public void test167302() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setFixedRangeAxisSpace((AxisSpace) null, false);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test167303,"public void test167303() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.setFixedRangeAxisSpace((AxisSpace) null, false);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test168304,"public void test168304() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Point point0 = new Point(10, 10);
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 10, (String) null);
    combinedRangeXYPlot0.setDomainAxis(10, (ValueAxis) cyclicNumberAxis0);
    PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
    combinedRangeXYPlot0.zoomDomainAxes((-1129.3725111716747), plotRenderingInfo0, (Point2D) point0, true);
    assertEquals(11, combinedRangeXYPlot0.getDomainAxisCount());
}",0,"assertEquals(0, combinedRangeXYPlot0.getDomainAxisCount())"
project,0,test169305,"public void test169305() throws Throwable {
    Point point0 = new Point();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.zoomDomainAxes((double) 0, (PlotRenderingInfo) null, (Point2D) point0, false);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test169306,"public void test169306() throws Throwable {
    Point point0 = new Point();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    combinedDomainXYPlot0.zoomDomainAxes((double) 0, (PlotRenderingInfo) null, (Point2D) point0, false);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(0, combinedDomainXYPlot0.getWeight())"
project,0,test170307,"public void test170307() throws Throwable {
    Point point0 = new Point();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
    combinedDomainXYPlot0.setOrientation(plotOrientation0);
    // Undeclared exception!
    try {
        combinedDomainXYPlot0.zoomDomainAxes((double) 0, (PlotRenderingInfo) null, (Point2D) point0, true);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test171308,"public void test171308() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
    Point2D.Double point2D_Double0 = new Point2D.Double();
    combinedDomainXYPlot0.zoomDomainAxes((-3959.811535), 0.4, plotRenderingInfo0, (Point2D) point2D_Double0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test171309,"public void test171309() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
    Point2D.Double point2D_Double0 = new Point2D.Double();
    combinedDomainXYPlot0.zoomDomainAxes((-3959.811535), 0.4, plotRenderingInfo0, (Point2D) point2D_Double0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test171310,"public void test171310() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
    Point2D.Double point2D_Double0 = new Point2D.Double();
    combinedDomainXYPlot0.zoomDomainAxes((-3959.811535), 0.4, plotRenderingInfo0, (Point2D) point2D_Double0);
    assertEquals(1, combinedDomainXYPlot0.getWeight());
}",0,"assertEquals(1, combinedDomainXYPlot0.getWeight())"
project,0,test172311,"public void test172311() throws Throwable {
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
    GridBagLayout gridBagLayout0 = new GridBagLayout();
    Point point0 = gridBagLayout0.location(10, (-4139));
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
    combinedDomainXYPlot0.zoomDomainAxes((double) 1.0F, 1523.770865133526, plotRenderingInfo0, (Point2D) point0);
    assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData())
project,0,test172312,"public void test172312() throws Throwable {
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
    GridBagLayout gridBagLayout0 = new GridBagLayout();
    Point point0 = gridBagLayout0.location(10, (-4139));
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
    combinedDomainXYPlot0.zoomDomainAxes((double) 1.0F, 1523.770865133526, plotRenderingInfo0, (Point2D) point0);
    assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData())
project,0,test173313,"public void test173313() throws Throwable {
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    XYPlot xYPlot0 = new XYPlot();
    PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
    Point2D.Float point2D_Float0 = new Point2D.Float();
    xYPlot0.zoomRangeAxes((-3040.783315968), plotRenderingInfo0, (Point2D) point2D_Float0, true);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test173314,"public void test173314() throws Throwable {
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    XYPlot xYPlot0 = new XYPlot();
    PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
    Point2D.Float point2D_Float0 = new Point2D.Float();
    xYPlot0.zoomRangeAxes((-3040.783315968), plotRenderingInfo0, (Point2D) point2D_Float0, true);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test174315,"public void test174315() throws Throwable {
    Point point0 = new Point();
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.zoomRangeAxes((double) 0, (PlotRenderingInfo) null, (Point2D) point0, true);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test175316,"public void test175316() throws Throwable {
    Point point0 = new Point();
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
    combinedRangeXYPlot0.setOrientation(plotOrientation0);
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.zoomRangeAxes((double) 0, (PlotRenderingInfo) null, (Point2D) point0, true);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.plot.XYPlot"", e);
    }
}",0,
project,0,test176317,"public void test176317() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    Arc2D.Double arc2D_Double0 = new Arc2D.Double();
    Point2D point2D0 = arc2D_Double0.getStartPoint();
    xYPlot0.zoomRangeAxes(419.976, 386.30961646692634, plotRenderingInfo0, point2D0);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test176318,"public void test176318() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    Arc2D.Double arc2D_Double0 = new Arc2D.Double();
    Point2D point2D0 = arc2D_Double0.getStartPoint();
    xYPlot0.zoomRangeAxes(419.976, 386.30961646692634, plotRenderingInfo0, point2D0);
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test176319,"public void test176319() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    Arc2D.Double arc2D_Double0 = new Arc2D.Double();
    Point2D point2D0 = arc2D_Double0.getStartPoint();
    xYPlot0.zoomRangeAxes(419.976, 386.30961646692634, plotRenderingInfo0, point2D0);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test177320,"public void test177320() throws Throwable {
    Point point0 = new Point();
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
    // Undeclared exception!
    try {
        combinedRangeXYPlot0.zoomRangeAxes(481.0, 1.0E-5, plotRenderingInfo0, (Point2D) point0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Range(double, double): require lower (505.05) <= upper (1.0500000000000001E-5).
        //
        verifyException(""org.jfree.data.Range"", e);
    }
}",0,
project,0,test178321,"public void test178321() throws Throwable {
    ThermometerPlot thermometerPlot0 = new ThermometerPlot();
    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
    SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(3);
    StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, valueAxis0, valueAxis0, stackedXYAreaRenderer2_0);
    int int0 = xYPlot0.getSeriesCount();
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(1, xYPlot0.getWeight())"
project,0,test178322,"public void test178322() throws Throwable {
    ThermometerPlot thermometerPlot0 = new ThermometerPlot();
    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
    SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(3);
    StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, valueAxis0, valueAxis0, stackedXYAreaRenderer2_0);
    int int0 = xYPlot0.getSeriesCount();
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test178323,"public void test178323() throws Throwable {
    ThermometerPlot thermometerPlot0 = new ThermometerPlot();
    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
    SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(3);
    StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, valueAxis0, valueAxis0, stackedXYAreaRenderer2_0);
    int int0 = xYPlot0.getSeriesCount();
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test179324,"public void test179324() throws Throwable {
    SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
    StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, (ValueAxis) null, (ValueAxis) null, stackedXYAreaRenderer2_0);
    MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
    LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
    xYPlot0.setFixedLegendItems(legendItemCollection0);
    xYPlot0.getLegendItems();
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test179325,"public void test179325() throws Throwable {
    SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
    StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, (ValueAxis) null, (ValueAxis) null, stackedXYAreaRenderer2_0);
    MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
    LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
    xYPlot0.setFixedLegendItems(legendItemCollection0);
    xYPlot0.getLegendItems();
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test180326,"public void test180326() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
    StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, (ValueAxis) null, (ValueAxis) null, stackedXYAreaRenderer2_0);
    combinedDomainXYPlot0.setRenderer(10, (XYItemRenderer) stackedXYAreaRenderer2_0, false);
    LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
    assertNotNull(legendItemCollection0);
}",0,
project,0,test180327,"public void test180327() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
    StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, (ValueAxis) null, (ValueAxis) null, stackedXYAreaRenderer2_0);
    combinedDomainXYPlot0.setRenderer(10, (XYItemRenderer) stackedXYAreaRenderer2_0, false);
    LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
    assertEquals(1, xYPlot0.getWeight());
}",0,
project,0,test180328,"public void test180328() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
    StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, (ValueAxis) null, (ValueAxis) null, stackedXYAreaRenderer2_0);
    combinedDomainXYPlot0.setRenderer(10, (XYItemRenderer) stackedXYAreaRenderer2_0, false);
    LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
    assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isDomainCrosshairLockedOnData())
project,0,test180329,"public void test180329() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
    StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, (ValueAxis) null, (ValueAxis) null, stackedXYAreaRenderer2_0);
    combinedDomainXYPlot0.setRenderer(10, (XYItemRenderer) stackedXYAreaRenderer2_0, false);
    LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
    assertEquals(0, legendItemCollection0.getItemCount());
}",0,
project,0,test181330,"public void test181330() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 10, (String) null);
    combinedRangeXYPlot0.setDomainAxis(10, (ValueAxis) cyclicNumberAxis0);
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
    XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, (XYItemRenderer) null);
    combinedRangeXYPlot0.setDomainAxis(10, (ValueAxis) cyclicNumberAxis0);
    assertEquals(11, combinedRangeXYPlot0.getDomainAxisCount());
}",0,"assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount())"
project,0,test182331,"public void test182331() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
    boolean boolean0 = xYPlot0.equals(legendItemCollection0);
    assertEquals(1, xYPlot0.getWeight());
}",0,"assertEquals(0, xYPlot0.getWeight())"
project,0,test182332,"public void test182332() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
    boolean boolean0 = xYPlot0.equals(legendItemCollection0);
    assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot0.isRangeCrosshairLockedOnData())
project,0,test182333,"public void test182333() throws Throwable {
    XYPlot xYPlot0 = new XYPlot();
    LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
    boolean boolean0 = xYPlot0.equals(legendItemCollection0);
    assertFalse(boolean0);
}",0,
project,0,test183334,"public void test183334() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,
project,0,test183335,"public void test183335() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    combinedRangeXYPlot1.add((XYPlot) combinedRangeXYPlot0, 10);
    combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
    assertEquals(1, combinedRangeXYPlot1.getWeight());
}",0,
project,0,test184336,"public void test184336() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    boolean boolean0 = combinedRangeXYPlot1.equals(combinedRangeXYPlot0);
    assertTrue(combinedRangeXYPlot1.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot1.isRangeCrosshairLockedOnData())
project,0,test184337,"public void test184337() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    boolean boolean0 = combinedRangeXYPlot1.equals(combinedRangeXYPlot0);
    assertTrue(combinedRangeXYPlot1.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot1.isDomainCrosshairLockedOnData())
project,0,test184338,"public void test184338() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    boolean boolean0 = combinedRangeXYPlot1.equals(combinedRangeXYPlot0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test185339,"public void test185339() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Object object0 = combinedRangeXYPlot0.clone();
    assertTrue(object0.equals((Object) combinedRangeXYPlot0));
}",0,
project,0,test185340,"public void test185340() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Object object0 = combinedRangeXYPlot0.clone();
    combinedRangeXYPlot0.setRangeGridlinesVisible(false);
    boolean boolean0 = combinedRangeXYPlot0.equals(object0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test186341,"public void test186341() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setDomainZeroBaselineVisible(true);
    CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
    boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
    assertTrue(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
}",0,assertTrue(combinedRangeXYPlot0.isDomainZeroBaselineVisible())
project,0,test186342,"public void test186342() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    combinedRangeXYPlot0.setDomainZeroBaselineVisible(true);
    CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
    boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test187343,"public void test187343() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
    assertTrue(combinedRangeXYPlot1.equals((Object) combinedRangeXYPlot0));
}",0,
project,0,test187344,"public void test187344() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
    combinedRangeXYPlot1.setAxisOffset(combinedRangeXYPlot0.DEFAULT_INSETS);
    combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test188345,"public void test188345() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    assertTrue(combinedRangeXYPlot1.equals((Object) combinedRangeXYPlot0));
}",0,
project,0,test188346,"public void test188346() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    combinedRangeXYPlot1.setRenderer((XYItemRenderer) stackedXYAreaRenderer0);
    boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
    assertFalse(combinedRangeXYPlot1.equals((Object) combinedRangeXYPlot0));
}",0,
project,0,test188347,"public void test188347() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
    combinedRangeXYPlot1.setRenderer((XYItemRenderer) stackedXYAreaRenderer0);
    boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test189348,"public void test189348() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot((ValueAxis) null);
    boolean boolean0 = combinedRangeXYPlot1.equals(combinedRangeXYPlot0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test190349,"public void test190349() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
    assertTrue(combinedRangeXYPlot1.equals((Object) combinedRangeXYPlot0));
}",0,
project,0,test190350,"public void test190350() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
    combinedRangeXYPlot1.mapDatasetToRangeAxis(10, 10);
    boolean boolean0 = combinedRangeXYPlot1.equals(combinedRangeXYPlot0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test191351,"public void test191351() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    assertTrue(combinedRangeXYPlot1.equals((Object) combinedRangeXYPlot0));
}",0,
project,0,test191352,"public void test191352() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    combinedRangeXYPlot1.setRangeZeroBaselinePaint(combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
    combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,
project,0,test192353,"public void test192353() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    assertTrue(combinedRangeXYPlot1.equals((Object) combinedRangeXYPlot0));
}",0,
project,0,test192354,"public void test192354() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    combinedRangeXYPlot1.setDomainCrosshairPaint(combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
    boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
    assertFalse(combinedRangeXYPlot1.equals((Object) combinedRangeXYPlot0));
}",0,
project,0,test192355,"public void test192355() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    combinedRangeXYPlot1.setDomainCrosshairPaint(combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
    boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test193356,"public void test193356() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Object object0 = combinedRangeXYPlot0.clone();
    assertTrue(object0.equals((Object) combinedRangeXYPlot0));
}",0,
project,0,test193357,"public void test193357() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    Object object0 = combinedRangeXYPlot0.clone();
    CategoryMarker categoryMarker0 = new CategoryMarker(10);
    combinedRangeXYPlot0.addDomainMarker((Marker) categoryMarker0);
    combinedRangeXYPlot0.equals(object0);
    assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData())
project,0,test194358,"public void test194358() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    ValueMarker valueMarker0 = new ValueMarker(10);
    Layer layer0 = Layer.BACKGROUND;
    combinedRangeXYPlot1.addRangeMarker(10, (Marker) valueMarker0, layer0, false);
    boolean boolean0 = combinedRangeXYPlot1.equals(combinedRangeXYPlot0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test195359,"public void test195359() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    assertTrue(combinedRangeXYPlot1.equals((Object) combinedRangeXYPlot0));
}",0,
project,0,test195360,"public void test195360() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    combinedRangeXYPlot1.setDomainTickBandPaint(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
    combinedRangeXYPlot1.equals(combinedRangeXYPlot0);
    assertEquals(1, combinedRangeXYPlot0.getWeight());
}",0,
project,0,test196361,"public void test196361() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    CombinedDomainXYPlot combinedDomainXYPlot1 = (CombinedDomainXYPlot) combinedDomainXYPlot0.clone();
    assertTrue(combinedDomainXYPlot1.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot1.isDomainCrosshairLockedOnData())
project,0,test196362,"public void test196362() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    CombinedDomainXYPlot combinedDomainXYPlot1 = (CombinedDomainXYPlot) combinedDomainXYPlot0.clone();
    assertTrue(combinedDomainXYPlot1.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedDomainXYPlot1.isRangeCrosshairLockedOnData())
project,0,test196363,"public void test196363() throws Throwable {
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    CombinedDomainXYPlot combinedDomainXYPlot1 = (CombinedDomainXYPlot) combinedDomainXYPlot0.clone();
    assertEquals(1, combinedDomainXYPlot1.getDomainAxisCount());
}",0,"assertEquals(1, combinedDomainXYPlot1.getDomainAxisCount())"
project,0,test197364,"public void test197364() throws Throwable {
    CombinedDataset combinedDataset0 = new CombinedDataset();
    ThermometerPlot thermometerPlot0 = new ThermometerPlot();
    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
    XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(combinedDataset0, valueAxis0, valueAxis0, xYAreaRenderer2_0);
    XYPlot xYPlot1 = (XYPlot) xYPlot0.clone();
    assertTrue(xYPlot1.isRangeCrosshairLockedOnData());
}",0,assertTrue(xYPlot1.isRangeCrosshairLockedOnData())
project,0,test197365,"public void test197365() throws Throwable {
    CombinedDataset combinedDataset0 = new CombinedDataset();
    ThermometerPlot thermometerPlot0 = new ThermometerPlot();
    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
    XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
    XYPlot xYPlot0 = new XYPlot(combinedDataset0, valueAxis0, valueAxis0, xYAreaRenderer2_0);
    XYPlot xYPlot1 = (XYPlot) xYPlot0.clone();
    assertTrue(xYPlot1.equals((Object) xYPlot0));
}",0,
project,0,test198366,"public void test198366() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    AxisSpace axisSpace0 = new AxisSpace();
    combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0, true);
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    assertTrue(combinedRangeXYPlot1.isDomainCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot1.isDomainCrosshairLockedOnData())
project,0,test198367,"public void test198367() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    AxisSpace axisSpace0 = new AxisSpace();
    combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0, true);
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    assertEquals(1, combinedRangeXYPlot1.getRangeAxisCount());
}",0,"assertEquals(1, combinedRangeXYPlot1.getRangeAxisCount())"
project,0,test198368,"public void test198368() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    AxisSpace axisSpace0 = new AxisSpace();
    combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0, true);
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    assertTrue(combinedRangeXYPlot1.isRangeCrosshairLockedOnData());
}",0,assertTrue(combinedRangeXYPlot1.isRangeCrosshairLockedOnData())
project,0,test198369,"public void test198369() throws Throwable {
    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
    AxisSpace axisSpace0 = new AxisSpace();
    combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0, true);
    CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
    assertEquals(1, combinedRangeXYPlot1.getWeight());
}",0,"assertEquals(0, combinedRangeXYPlot1.getWeight())"
