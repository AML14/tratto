/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 01:54:38 GMT 2023
 */
package org.jfree.chart.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.util.ShapeList;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class ShapeList_ESTest extends ShapeList_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        ShapeList shapeList0 = new ShapeList();
        Polygon polygon0 = new Polygon();
        shapeList0.setShape(0, polygon0);
        shapeList0.getShape(0);
        shapeList0.size();
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        ShapeList shapeList0 = new ShapeList();
        Dimension dimension0 = new Dimension();
        Rectangle rectangle0 = new Rectangle(dimension0);
        shapeList0.setShape((-1386), rectangle0);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        ShapeList shapeList0 = new ShapeList();
        shapeList0.set(570, shapeList0);
        shapeList0.getShape(570);
    }

    @Test(timeout = 4000)
    public void test43() throws Throwable {
        ShapeList shapeList0 = new ShapeList();
        boolean boolean0 = shapeList0.equals(shapeList0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test54() throws Throwable {
        ShapeList shapeList0 = new ShapeList();
        Dimension dimension0 = new Dimension((-1999), 8);
        Rectangle rectangle0 = new Rectangle(dimension0);
        boolean boolean0 = shapeList0.equals(rectangle0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test65() throws Throwable {
        ShapeList shapeList0 = new ShapeList();
        Shape shape0 = shapeList0.getShape((-1999));
    }
}
