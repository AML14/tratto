project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(0.0, 255.0);
    GrayPaintScale grayPaintScale1 = new GrayPaintScale();
    boolean boolean0 = grayPaintScale1.equals(grayPaintScale0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test001,"public void test001() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(0.0, 255.0);
    GrayPaintScale grayPaintScale1 = new GrayPaintScale();
    boolean boolean0 = grayPaintScale1.equals(grayPaintScale0);
    assertEquals(0.0, grayPaintScale1.getLowerBound(), 0.01);
}",1,
project,0,test002,"public void test002() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(0.0, 255.0);
    GrayPaintScale grayPaintScale1 = new GrayPaintScale();
    boolean boolean0 = grayPaintScale1.equals(grayPaintScale0);
    assertFalse(grayPaintScale0.equals((Object) grayPaintScale1));
}",0,
project,0,test013,"public void test013() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale((-1479.849912401), (-1062.40207109));
    GrayPaintScale grayPaintScale1 = new GrayPaintScale();
    boolean boolean0 = grayPaintScale0.equals(grayPaintScale1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test014,"public void test014() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale((-1479.849912401), (-1062.40207109));
    GrayPaintScale grayPaintScale1 = new GrayPaintScale();
    boolean boolean0 = grayPaintScale0.equals(grayPaintScale1);
    assertEquals(0.0, grayPaintScale1.getLowerBound(), 0.01);
}",0,
project,0,test025,"public void test025() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(177.0, 1937.46546);
    // Undeclared exception!
    try {
        grayPaintScale0.getPaint(0.0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Color parameter outside of expected range: Red Green Blue
        //
        verifyException(""java.awt.Color"", e);
    }
}",0,
project,0,test036,"public void test036() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale((-1227.8371), 0.0);
    double double0 = grayPaintScale0.getUpperBound();
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test037,"public void test037() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale((-1227.8371), 0.0);
    double double0 = grayPaintScale0.getUpperBound();
    assertEquals((-1227.8371), grayPaintScale0.getLowerBound(), 0.01);
}",0,
project,0,test048,"public void test048() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale((-1479.849912401), (-1062.40207109));
    double double0 = grayPaintScale0.getUpperBound();
    assertEquals((-1479.849912401), grayPaintScale0.getLowerBound(), 0.01);
}",0,
project,0,test049,"public void test049() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale((-1479.849912401), (-1062.40207109));
    double double0 = grayPaintScale0.getUpperBound();
    assertEquals((-1062.40207109), double0, 0.01);
}",0,
project,0,test0510,"public void test0510() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    assertEquals(2908.0, grayPaintScale0.getUpperBound(), 0.01);
}",0,
project,0,test0511,"public void test0511() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    Color color0 = (Color) grayPaintScale0.getPaint(2908.0);
    assertEquals(562.6361001936054, grayPaintScale0.getLowerBound(), 0.01);
}",0,
project,0,test0613,"public void test0613() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale();
    double double0 = grayPaintScale0.getLowerBound();
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test0614,"public void test0614() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale();
    double double0 = grayPaintScale0.getLowerBound();
    assertEquals(1.0, grayPaintScale0.getUpperBound(), 0.01);
}",0,
project,0,test0715,"public void test0715() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale((-1479.849912401), (-1062.40207109));
    double double0 = grayPaintScale0.getLowerBound();
    assertEquals((-1479.849912401), double0, 0.01);
}",0,
project,0,test0716,"public void test0716() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale((-1479.849912401), (-1062.40207109));
    double double0 = grayPaintScale0.getLowerBound();
    assertEquals((-1062.40207109), grayPaintScale0.getUpperBound(), 0.01);
}",0,
project,0,test0817,"public void test0817() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(0.0, 255.0);
    GrayPaintScale grayPaintScale1 = new GrayPaintScale();
    boolean boolean0 = grayPaintScale0.equals(grayPaintScale1);
    assertEquals(0.0, grayPaintScale1.getLowerBound(), 0.01);
}",1,
project,0,test0818,"public void test0818() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(0.0, 255.0);
    GrayPaintScale grayPaintScale1 = new GrayPaintScale();
    boolean boolean0 = grayPaintScale0.equals(grayPaintScale1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0819,"public void test0819() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(0.0, 255.0);
    GrayPaintScale grayPaintScale1 = new GrayPaintScale();
    boolean boolean0 = grayPaintScale0.equals(grayPaintScale1);
    assertEquals(1.0, grayPaintScale1.getUpperBound(), 0.01);
}",1,
project,0,test0820,"public void test0820() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(0.0, 255.0);
    GrayPaintScale grayPaintScale1 = new GrayPaintScale();
    boolean boolean0 = grayPaintScale0.equals(grayPaintScale1);
    assertFalse(grayPaintScale1.equals((Object) grayPaintScale0));
}",0,
project,0,test0921,"public void test0921() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    Object object0 = new Object();
    boolean boolean0 = grayPaintScale0.equals(object0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0922,"public void test0922() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    Object object0 = new Object();
    boolean boolean0 = grayPaintScale0.equals(object0);
    assertEquals(562.6361001936054, grayPaintScale0.getLowerBound(), 0.01);
}",0,
project,0,test0923,"public void test0923() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    Object object0 = new Object();
    boolean boolean0 = grayPaintScale0.equals(object0);
    assertEquals(2908.0, grayPaintScale0.getUpperBound(), 0.01);
}",0,
project,0,test1024,"public void test1024() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    boolean boolean0 = grayPaintScale0.equals(grayPaintScale0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test1025,"public void test1025() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    boolean boolean0 = grayPaintScale0.equals(grayPaintScale0);
    assertEquals(2908.0, grayPaintScale0.getUpperBound(), 0.01);
}",0,
project,0,test1026,"public void test1026() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    boolean boolean0 = grayPaintScale0.equals(grayPaintScale0);
    assertEquals(562.6361001936054, grayPaintScale0.getLowerBound(), 0.01);
}",0,
project,0,test1127,"public void test1127() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    GrayPaintScale grayPaintScale1 = new GrayPaintScale();
    boolean boolean0 = grayPaintScale0.equals(grayPaintScale1);
    assertEquals(0.0, grayPaintScale1.getLowerBound(), 0.01);
}",0,
project,0,test1128,"public void test1128() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    GrayPaintScale grayPaintScale1 = new GrayPaintScale();
    boolean boolean0 = grayPaintScale0.equals(grayPaintScale1);
    assertEquals(1.0, grayPaintScale1.getUpperBound(), 0.01);
}",0,
project,0,test1129,"public void test1129() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    GrayPaintScale grayPaintScale1 = new GrayPaintScale();
    boolean boolean0 = grayPaintScale0.equals(grayPaintScale1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1230,"public void test1230() throws Throwable {
    GrayPaintScale grayPaintScale0 = null;
    try {
        grayPaintScale0 = new GrayPaintScale(0.0, (-1.0));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Requires lowerBound < upperBound.
        //
        verifyException(""org.jfree.chart.renderer.GrayPaintScale"", e);
    }
}",1,
project,0,test1331,"public void test1331() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    double double0 = grayPaintScale0.getUpperBound();
    assertEquals(562.6361001936054, grayPaintScale0.getLowerBound(), 0.01);
}",0,
project,0,test1332,"public void test1332() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    double double0 = grayPaintScale0.getUpperBound();
    assertEquals(2908.0, double0, 0.01);
}",0,
project,0,test1433,"public void test1433() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    GrayPaintScale grayPaintScale1 = (GrayPaintScale) grayPaintScale0.clone();
    boolean boolean0 = grayPaintScale1.equals(grayPaintScale0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test1434,"public void test1434() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    GrayPaintScale grayPaintScale1 = (GrayPaintScale) grayPaintScale0.clone();
    boolean boolean0 = grayPaintScale1.equals(grayPaintScale0);
    assertEquals(562.6361001936054, grayPaintScale1.getLowerBound(), 0.01);
}",0,
project,0,test1435,"public void test1435() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    GrayPaintScale grayPaintScale1 = (GrayPaintScale) grayPaintScale0.clone();
    boolean boolean0 = grayPaintScale1.equals(grayPaintScale0);
    assertEquals(2908.0, grayPaintScale1.getUpperBound(), 0.01);
}",0,
project,0,test1536,"public void test1536() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    double double0 = grayPaintScale0.getLowerBound();
    assertEquals(562.6361001936054, double0, 0.01);
}",0,
project,0,test1537,"public void test1537() throws Throwable {
    GrayPaintScale grayPaintScale0 = new GrayPaintScale(562.6361001936054, 2908.0);
    double double0 = grayPaintScale0.getLowerBound();
    assertEquals(2908.0, grayPaintScale0.getUpperBound(), 0.01);
}",0,
