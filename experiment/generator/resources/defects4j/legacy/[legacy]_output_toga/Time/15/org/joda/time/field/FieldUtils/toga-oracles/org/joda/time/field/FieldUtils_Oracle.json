[ {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int getWrappedValue(int value, int minValue, int maxValue)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int getWrappedValue(int currentValue, int wrapValue, int minValue, int maxValue)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int getWrappedValue(int currentValue, int wrapValue, int minValue, int maxValue)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static void verifyValueBounds(String fieldName, int value, int lowerBound, int upperBound)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test043"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test054"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeMultiply(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test075"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeMultiply(long val1, int val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test086"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeMultiply(int val1, int val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test097"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeMultiply(int val1, int val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test108"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeSubtract(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test119"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeAdd(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1210"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeAdd(int val1, int val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1311"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeToInt(long value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1412"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeToInt(long value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1513"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeSubtract(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, long0)",
  "exception" : "",
  "testName" : "test1614"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeNegate(int value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1715"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeNegate(int value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1816"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeMultiplyToInt(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test1917"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeMultiplyToInt(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test2018"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeMultiply(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2119"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeMultiply(long val1, int val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, long0)",
  "exception" : "",
  "testName" : "test2220"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeMultiply(int val1, int val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2321"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeAdd(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test2422"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeAdd(int val1, int val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test2523"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int getWrappedValue(int currentValue, int wrapValue, int minValue, int maxValue)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test2624"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int getWrappedValue(int currentValue, int wrapValue, int minValue, int maxValue)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test2725"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int getWrappedValue(int value, int minValue, int maxValue)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2826"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int getWrappedValue(int value, int minValue, int maxValue)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2927"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int getWrappedValue(int value, int minValue, int maxValue)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3028"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int getWrappedValue(int value, int minValue, int maxValue)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3129"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeToInt(long value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3230"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeToInt(long value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3331"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeMultiply(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3432"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeMultiply(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3533"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeMultiply(long val1, int val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test3634"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static boolean equals(Object object1, Object object2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test3735"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static boolean equals(Object object1, Object object2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test3836"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static boolean equals(Object object1, Object object2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test3937"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static boolean equals(Object object1, Object object2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test4038"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int getWrappedValue(int value, int minValue, int maxValue)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4139"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static void verifyValueBounds(String fieldName, int value, int lowerBound, int upperBound)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4240"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static void verifyValueBounds(String fieldName, int value, int lowerBound, int upperBound)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4441"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static void verifyValueBounds(DateTimeFieldType fieldType, int value, int lowerBound, int upperBound)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4542"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test4643"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static void verifyValueBounds(DateTimeFieldType fieldType, int value, int lowerBound, int upperBound)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4744"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4845"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5046"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeMultiplyToInt(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5147"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeToInt(long value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5248"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeMultiply(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5349"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeMultiply(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5450"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeMultiply(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5551"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeMultiply(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5652"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeMultiply(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5753"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeMultiplyToInt(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test5854"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeMultiply(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5955"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeMultiply(long val1, int val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6056"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeMultiply(long val1, int val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test6157"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeMultiply(long val1, int val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test6258"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public long add(long instant, long duration, int scalar)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6359"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeMultiply(int val1, int val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6460"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeMultiply(int val1, int val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6561"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeSubtract(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6662"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeSubtract(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, long0)",
  "exception" : "",
  "testName" : "test6763"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeSubtract(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, long0)",
  "exception" : "",
  "testName" : "test6864"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeAdd(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6965"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeAdd(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test7066"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static long safeAdd(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test7167"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeAdd(int val1, int val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test7268"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeAdd(int val1, int val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test7369"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeAdd(int val1, int val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test7470"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeNegate(int value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test7571"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeNegate(int value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test7672"
}, {
  "className" : "org.joda.time.field.FieldUtils",
  "methodSignature" : "public static int safeMultiplyToInt(long val1, long val2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test7773"
} ]