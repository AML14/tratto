[ {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public static GJChronology getInstance(DateTimeZone zone, long gregorianCutover, int minDaysInFirstWeek)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public static GJChronology getInstance(DateTimeZone zone, long gregorianCutover, int minDaysInFirstWeek)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test021"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long gregorianToJulianByYear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test092"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long gregorianToJulianByWeekyear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test103"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public static synchronized GJChronology getInstance(DateTimeZone zone, ReadableInstant gregorianCutover, int minDaysInFirstWeek)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test114"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "protected void assemble(Fields fields)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test125"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test146"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test157"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test178"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public static synchronized GJChronology getInstance(DateTimeZone zone, ReadableInstant gregorianCutover, int minDaysInFirstWeek)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test219"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public static synchronized GJChronology getInstance(DateTimeZone zone, ReadableInstant gregorianCutover, int minDaysInFirstWeek)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2210"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2311"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long set(ReadablePartial partial, long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3212"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4113"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test4214"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long add(ReadablePeriod period, long instant, int scalar)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test4215"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test4316"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long gregorianToJulianByWeekyear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test4417"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test4418"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test4519"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4620"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public Chronology withUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4621"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long gregorianToJulianByYear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test4722"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test4723"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test4824"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long julianToGregorianByYear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test4825"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int[] get(ReadablePeriod period, long startInstant, long endInstant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4926"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4927"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5028"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long julianToGregorianByWeekyear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test5029"
} ]