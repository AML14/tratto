[ {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setDateTime(final int year, final int monthOfYear, final int dayOfMonth, final int hourOfDay, final int minuteOfHour, final int secondOfMinute, final int millisOfSecond)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0000"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setDateTime(final int year, final int monthOfYear, final int dayOfMonth, final int hourOfDay, final int minuteOfHour, final int secondOfMinute, final int millisOfSecond)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0011"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test0022"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test0033"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0044"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test0055"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test0066"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test0077"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setZoneRetainFields(DateTimeZone newZone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01111"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setZoneRetainFields(DateTimeZone newZone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01112"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01213"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test01314"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01415"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test01516"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public static MutableDateTime parse(String str, DateTimeFormatter formatter)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01617"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test01718"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test01819"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public static MutableDateTime now(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01920"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public static MutableDateTime now(Chronology chronology)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02021"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public static MutableDateTime now(Chronology chronology)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02122"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public static MutableDateTime now()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02223"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public int getRoundingMode()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getRoundingMode())",
  "exception" : "",
  "testName" : "test02324"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public int getRoundingMode()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getRoundingMode())",
  "exception" : "",
  "testName" : "test02425"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02526"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public MutableDateTime copy()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02627"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setYear(final int year)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02728"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setWeekOfWeekyear(final int weekOfWeekyear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02829"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setSecondOfMinute(final int secondOfMinute)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02930"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setRounding(DateTimeField field, int mode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03031"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setMinuteOfHour(final int minuteOfHour)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03132"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setMinuteOfDay(final int minuteOfDay)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03233"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setMillisOfSecond(final int millisOfSecond)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03334"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setMillisOfDay(final int millisOfDay)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03435"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setHourOfDay(final int hourOfDay)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03536"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setDayOfYear(final int dayOfYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03637"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setDayOfWeek(final int dayOfWeek)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03738"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setDate(final ReadableInstant instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03839"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setDate(final int year, final int monthOfYear, final int dayOfMonth)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03940"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void set(DateTimeFieldType type, int value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04041"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public static MutableDateTime parse(String str, DateTimeFormatter formatter)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04142"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public static MutableDateTime parse(String str, DateTimeFormatter formatter)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04243"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public static MutableDateTime parse(String str, DateTimeFormatter formatter)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04344"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public static MutableDateTime parse(String str)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04445"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public static MutableDateTime parse(String str)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04546"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void add(DurationFieldType type, int amount)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04647"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public MutableDateTime(Object instant, Chronology chronology)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04748"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public MutableDateTime(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04849"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04950"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test05051"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test05152"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public MutableDateTime(Object instant, DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05253"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test05354"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public MutableDateTime(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond, Chronology chronology)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05455"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test05556"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test05657"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public MutableDateTime(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond, DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05758"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public Property property(DateTimeFieldType type)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05859"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public Property property(DateTimeFieldType type)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05960"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test06061"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test06162"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test06263"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void add(DurationFieldType type, int amount)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06364"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06465"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void set(DateTimeFieldType type, int value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06566"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06667"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06768"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06869"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setZone(DateTimeZone newZone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06970"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void add(ReadablePeriod period, int scalar)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07071"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void add(ReadableDuration duration, int scalar)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07172"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public int getRoundingMode()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07273"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07374"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setRounding(DateTimeField field, int mode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07475"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test07576"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test07677"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public int getRoundingMode()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getRoundingMode())",
  "exception" : "",
  "testName" : "test07678"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setRounding(DateTimeField field, int mode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07779"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setRounding(DateTimeField field, int mode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07880"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test07981"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public int getRoundingMode()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getRoundingMode())",
  "exception" : "",
  "testName" : "test07982"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public static MutableDateTime now(Chronology chronology)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08083"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public static MutableDateTime now(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08184"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public Property year()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(mutableDateTime_Property0)",
  "exception" : "",
  "testName" : "test08285"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public Property dayOfYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(mutableDateTime_Property0)",
  "exception" : "",
  "testName" : "test08386"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public Property dayOfMonth()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(mutableDateTime_Property0)",
  "exception" : "",
  "testName" : "test08487"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test08588"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test08689"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public MutableDateTime(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond, Chronology chronology)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08790"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test08891"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test08992"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09093"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setMonthOfYear(final int monthOfYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09194"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public Property monthOfYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(mutableDateTime_Property0)",
  "exception" : "",
  "testName" : "test09295"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public MutableDateTime(Object instant, DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09396"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public Property weekyear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(mutableDateTime_Property0)",
  "exception" : "",
  "testName" : "test09497"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public MutableDateTime copy()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09598"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test09699"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test097100"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public Property secondOfDay()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(mutableDateTime_Property0)",
  "exception" : "",
  "testName" : "test098101"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test099102"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test100103"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test101104"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test102105"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test103106"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setDayOfMonth(final int dayOfMonth)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test104107"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public int getRoundingMode()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test105108"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test106109"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public Property hourOfDay()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test107110"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test108111"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test109112"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test110113"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public MutableDateTime(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond, DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test111114"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test112115"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test113116"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test114117"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test115118"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public Property secondOfMinute()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(mutableDateTime_Property0)",
  "exception" : "",
  "testName" : "test116119"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test117120"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public Property centuryOfEra()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(mutableDateTime_Property0)",
  "exception" : "",
  "testName" : "test118121"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setWeekyear(final int weekyear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test119122"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test120123"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public Object clone()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test121124"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setDate(final long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test122125"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setTime(final int hour, final int minuteOfHour, final int secondOfMinute, final int millisOfSecond)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test123126"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public Property weekOfWeekyear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(mutableDateTime_Property0)",
  "exception" : "",
  "testName" : "test124127"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public DateTimeField getRoundingField()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test125128"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public Property yearOfCentury()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(mutableDateTime_Property0)",
  "exception" : "",
  "testName" : "test126129"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public MutableDateTime(Object instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test127130"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test128131"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setChronology(Chronology chronology)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test129132"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test130133"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public int getRoundingMode()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test130134"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test131135"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public void setSecondOfDay(final int secondOfDay)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test132136"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test133137"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test135139"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test137141"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test138142"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test139143"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test142146"
}, {
  "className" : "org.joda.time.MutableDateTime",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test145149"
} ]