[ {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int[] get(ReadablePeriod period, long startInstant, long endInstant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test001"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test012"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public static GJChronology getInstance(DateTimeZone zone, long gregorianCutover, int minDaysInFirstWeek)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test023"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test034"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long julianToGregorianByYear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test045"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test046"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long julianToGregorianByWeekyear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test057"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test058"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test069"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long gregorianToJulianByYear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0610"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0711"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long gregorianToJulianByWeekyear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test0712"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, instant0.getMillis())",
  "exception" : "",
  "testName" : "test0813"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test0814"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public static synchronized GJChronology getInstance(DateTimeZone zone, ReadableInstant gregorianCutover, int minDaysInFirstWeek)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0915"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "protected void assemble(Fields fields)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1016"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long set(ReadablePartial partial, long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test1117"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1218"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test1319"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test1320"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public Chronology withZone(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1421"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1522"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public static DateTimeZone forID(String id)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1623"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test1724"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public Chronology withUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1825"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1826"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1927"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test2028"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test2129"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int[] get(ReadablePeriod period, long startInstant, long endInstant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2130"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int[] get(ReadablePeriod period, long startInstant, long endInstant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2231"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test2232"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test2333"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateMidnight3.getMillis())",
  "exception" : "",
  "testName" : "test2334"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public DateTime withWeekyear(int weekyear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2435"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2536"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2637"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2738"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2739"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test2840"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, gJChronology1.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test2941"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test3042"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3143"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test3244"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long add(ReadablePeriod period, long instant, int scalar)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test3245"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test3346"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getEndMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, interval0.getEndMillis())",
  "exception" : "",
  "testName" : "test3347"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMonths()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, months0.getMonths())",
  "exception" : "",
  "testName" : "test3348"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public boolean equals(Object partial)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3449"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test3450"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3551"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3652"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3753"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long julianToGregorianByYear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test3754"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test3855"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test3956"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test4057"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long julianToGregorianByWeekyear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test4058"
} ]