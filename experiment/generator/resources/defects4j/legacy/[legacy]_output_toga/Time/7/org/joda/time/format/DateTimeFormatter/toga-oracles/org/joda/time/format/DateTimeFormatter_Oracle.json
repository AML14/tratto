[ {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public Chronology getChronolgy()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0000"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(StringBuffer buf, ReadablePartial partial)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0181"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalDateTime withYear(int year)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0262"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public String print(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0324"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTime toDateTimeAtCurrentTime(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0395"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withChronology(Chronology chrono)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0498"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int parseInto(ReadWritableInstant instant, String text, int position)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0539"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public static final void setCurrentMillisOffset(long offsetMillis) throws SecurityException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05510"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalTime parseLocalTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05811"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Writer out, ReadableInstant instant) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05912"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTime getUpperLimit()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06313"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06514"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public Locale getLocale()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06615"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public MutableDateTime parseMutableDateTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06817"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Appendable appendable, ReadablePartial partial) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07018"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Writer out, long instant) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07319"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public static EthiopicChronology getInstance(DateTimeZone zone, int minDaysInFirstWeek)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07420"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTime minusYears(int years)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08623"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalDate withMonthOfYear(int monthOfYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09224"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public Partial minus(ReadablePeriod period)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09626"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalTime parseLocalTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test10027"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalDate(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test10128"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeParser getParser()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test10629"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public Period(int years, int months, int weeks, int days, int hours, int minutes, int seconds, int millis, PeriodType type)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test10830"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalDateTime minusHours(int hours)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test11132"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public static final void setCurrentMillisProvider(MillisProvider millisProvider) throws SecurityException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test11334"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public Period minusMillis(int millis)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test11535"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public Period(int years, int months, int weeks, int days, int hours, int minutes, int seconds, int millis, PeriodType type)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test11736"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public static final void setCurrentMillisProvider(MillisProvider millisProvider) throws SecurityException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test11837"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalDateTime withHourOfDay(int hour)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test12438"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTime parseDateTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test12740"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test13142"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public MutableDateTime parseMutableDateTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test13343"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isPrinter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test13544"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test14145"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int parseInto(ReadWritableInstant instant, String text, int position)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test14946"
} ]