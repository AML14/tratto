project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    stopWatch0.start();
    stopWatch0.split();
    stopWatch0.suspend();
    stopWatch0.unsplit();
    String string0 = stopWatch0.toString();
    assertNotNull(string0);
}",0,
project,0,test021,"public void test021() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    stopWatch0.start();
    stopWatch0.suspend();
    // Undeclared exception!
    try {
        stopWatch0.start();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Stopwatch already started.
        //
        verifyException(""org.apache.commons.lang.time.StopWatch"", e);
    }
}",1,
project,0,test032,"public void test032() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    stopWatch0.start();
    System.setCurrentTimeMillis((-503L));
    long long0 = stopWatch0.getTime();
    assertEquals((-1392409281823L), long0);
}",0,"assertEquals(0, long0)"
project,0,test043,"public void test043() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    stopWatch0.start();
    stopWatch0.split();
    stopWatch0.suspend();
    stopWatch0.resume();
    long long0 = stopWatch0.getSplitTime();
    assertEquals((-1392409281321L), long0);
}",0,
project,0,test054,"public void test054() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    stopWatch0.start();
    stopWatch0.split();
    long long0 = stopWatch0.getSplitTime();
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
project,0,test065,"public void test065() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    // Undeclared exception!
    try {
        stopWatch0.getSplitTime();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Stopwatch must be split to get the split time.
        //
        verifyException(""org.apache.commons.lang.time.StopWatch"", e);
    }
}",0,
project,0,test076,"public void test076() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    stopWatch0.start();
    long long0 = stopWatch0.getTime();
    assertEquals(0L, long0);
}",0,
project,0,test087,"public void test087() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    stopWatch0.start();
    stopWatch0.stop();
    long long0 = stopWatch0.getTime();
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
project,0,test098,"public void test098() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    long long0 = stopWatch0.getTime();
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
project,0,test109,"public void test109() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    stopWatch0.start();
    stopWatch0.suspend();
    long long0 = stopWatch0.getTime();
    assertEquals(0L, long0);
}",0,
project,0,test1110,"public void test1110() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    stopWatch0.start();
    stopWatch0.split();
    String string0 = stopWatch0.toSplitString();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test1211,"public void test1211() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    // Undeclared exception!
    try {
        stopWatch0.resume();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Stopwatch must be suspended to resume.
        //
        verifyException(""org.apache.commons.lang.time.StopWatch"", e);
    }
}",0,
project,0,test1312,"public void test1312() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    // Undeclared exception!
    try {
        stopWatch0.suspend();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Stopwatch must be running to suspend.
        //
        verifyException(""org.apache.commons.lang.time.StopWatch"", e);
    }
}",1,
project,0,test1413,"public void test1413() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    // Undeclared exception!
    try {
        stopWatch0.unsplit();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Stopwatch has not been split.
        //
        verifyException(""org.apache.commons.lang.time.StopWatch"", e);
    }
}",0,
project,0,test1514,"public void test1514() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    // Undeclared exception!
    try {
        stopWatch0.split();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Stopwatch is not running.
        //
        verifyException(""org.apache.commons.lang.time.StopWatch"", e);
    }
}",0,
project,0,test1715,"public void test1715() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    // Undeclared exception!
    try {
        stopWatch0.stop();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Stopwatch is not running.
        //
        verifyException(""org.apache.commons.lang.time.StopWatch"", e);
    }
}",1,
project,0,test1816,"public void test1816() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    stopWatch0.start();
    stopWatch0.stop();
    // Undeclared exception!
    try {
        stopWatch0.start();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Stopwatch must be reset before being restarted.
        //
        verifyException(""org.apache.commons.lang.time.StopWatch"", e);
    }
}",1,
project,0,test1917,"public void test1917() throws Throwable {
    StopWatch stopWatch0 = new StopWatch();
    // Undeclared exception!
    try {
        stopWatch0.toSplitString();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Stopwatch must be split to get the split time.
        //
        verifyException(""org.apache.commons.lang.time.StopWatch"", e);
    }
}",0,
