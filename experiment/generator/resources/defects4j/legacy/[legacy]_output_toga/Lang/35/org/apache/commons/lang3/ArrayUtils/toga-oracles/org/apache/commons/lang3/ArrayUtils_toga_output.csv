project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    char[] charArray0 = new char[2];
    // Undeclared exception!
    try {
        ArrayUtils.remove(charArray0, 2);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 2, Length: 2
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    // Undeclared exception!
    try {
        ArrayUtils.add((char[]) null, (-783), '&');
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -783, Length: 0
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test0022,"public void test0022() throws Throwable {
    float[] floatArray0 = new float[9];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, 0.0F, 0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test0033,"public void test0033() throws Throwable {
    float[] floatArray0 = new float[7];
    int int0 = ArrayUtils.indexOf(floatArray0, 0.0F, 735);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test0044,"public void test0044() throws Throwable {
    double[] doubleArray0 = new double[5];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 94.0, 5, 551.91);
    assertEquals(4, int0);
}",0,
project,0,test0055,"public void test0055() throws Throwable {
    double[] doubleArray0 = new double[8];
    doubleArray0[2] = (double) (-3328);
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1.0));
    assertEquals((-1), int0);
}",0,
project,0,test0066,"public void test0066() throws Throwable {
    double[] doubleArray0 = new double[1];
    int int0 = ArrayUtils.indexOf(doubleArray0, 1516.4349, 459, 1516.4349);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test0077,"public void test0077() throws Throwable {
    char[] charArray0 = new char[5];
    charArray0[4] = '\\';
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'B');
    assertEquals((-1), int0);
}",0,
project,0,test0088,"public void test0088() throws Throwable {
    char[] charArray0 = new char[0];
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'c', 0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test0099,"public void test0099() throws Throwable {
    char[] charArray0 = new char[6];
    charArray0[0] = 's';
    char[] charArray1 = ArrayUtils.removeElement(charArray0, 'a');
    assertEquals(6, charArray1.length);
}",0,
project,0,test01010,"public void test01010() throws Throwable {
    short[] shortArray0 = new short[7];
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 939, 7);
    assertEquals((-1), int0);
}",0,
project,0,test01111,"public void test01111() throws Throwable {
    int[] intArray0 = new int[8];
    intArray0[0] = (-806);
    int int0 = ArrayUtils.lastIndexOf(intArray0, (-562), 11);
    assertEquals((-1), int0);
}",0,
project,0,test01212,"public void test01212() throws Throwable {
    long[] longArray0 = new long[6];
    int int0 = ArrayUtils.lastIndexOf(longArray0, 1849L);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test01313,"public void test01313() throws Throwable {
    Object[] objectArray0 = new Object[5];
    Object object0 = new Object();
    objectArray0[2] = object0;
    objectArray0[1] = objectArray0[2];
    int int0 = ArrayUtils.lastIndexOf(objectArray0, objectArray0[0], 2);
    assertEquals(0, int0);
}",0,
project,0,test01414,"public void test01414() throws Throwable {
    Object[] objectArray0 = new Object[5];
    Object object0 = new Object();
    int int0 = ArrayUtils.lastIndexOf(objectArray0, object0, 0);
    assertEquals((-1), int0);
}",0,
project,0,test01515,"public void test01515() throws Throwable {
    float[] floatArray0 = new float[0];
    ArrayUtils.reverse(floatArray0);
    assertEquals(0, floatArray0.length);
}",0,
project,0,test01616,"public void test01616() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    ArrayUtils.reverse(arrayUtils0.EMPTY_DOUBLE_ARRAY);
    assertEquals((-1), ArrayUtils.INDEX_NOT_FOUND);
}",0,
project,0,test01717,"public void test01717() throws Throwable {
    char[] charArray0 = new char[0];
    ArrayUtils.reverse(charArray0);
    assertEquals(0, charArray0.length);
}",0,
project,0,test01818,"public void test01818() throws Throwable {
    short[] shortArray0 = new short[3];
    ArrayUtils.reverse(shortArray0);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test01919,"public void test01919() throws Throwable {
    int[] intArray0 = new int[3];
    ArrayUtils.reverse(intArray0);
    assertArrayEquals(new int[] { 0, 0, 0 }, intArray0);
}",0,
project,0,test02020,"public void test02020() throws Throwable {
    long[] longArray0 = new long[1];
    ArrayUtils.reverse(longArray0);
    assertArrayEquals(new long[] { 0L }, longArray0);
}",0,
project,0,test02121,"public void test02121() throws Throwable {
    Integer[] integerArray0 = new Integer[9];
    ArrayUtils.reverse((Object[]) integerArray0);
    assertEquals(9, integerArray0.length);
}",0,
project,0,test02222,"public void test02222() throws Throwable {
    double[] doubleArray0 = new double[1];
    double[] doubleArray1 = new double[6];
    boolean boolean0 = ArrayUtils.isSameLength(doubleArray0, doubleArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02323,"public void test02323() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    byte[] byteArray0 = new byte[3];
    boolean boolean0 = ArrayUtils.isSameLength(arrayUtils0.EMPTY_BYTE_ARRAY, byteArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02424,"public void test02424() throws Throwable {
    int[] intArray0 = new int[5];
    int[] intArray1 = new int[0];
    boolean boolean0 = ArrayUtils.isSameLength(intArray0, intArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02525,"public void test02525() throws Throwable {
    long[] longArray0 = new long[8];
    long[] longArray1 = new long[0];
    boolean boolean0 = ArrayUtils.isSameLength(longArray0, longArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02626,"public void test02626() throws Throwable {
    boolean[] booleanArray0 = new boolean[7];
    boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, (-6108), 0);
    assertEquals(0, booleanArray1.length);
}",0,
project,0,test02727,"public void test02727() throws Throwable {
    boolean[] booleanArray0 = new boolean[8];
    boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 0, 48);
    assertNotSame(booleanArray1, booleanArray0);
}",0,
project,0,test02728,"public void test02728() throws Throwable {
    boolean[] booleanArray0 = new boolean[8];
    boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 0, 48);
    assertEquals(8, booleanArray1.length);
}",0,
project,0,test02829,"public void test02829() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.subarray(floatArray0, 1, 0);
    assertNotSame(floatArray0, floatArray1);
}",0,
project,0,test02930,"public void test02930() throws Throwable {
    float[] floatArray0 = new float[3];
    float[] floatArray1 = ArrayUtils.subarray(floatArray0, (int) (short) 0, 57);
    assertNotSame(floatArray1, floatArray0);
}",0,
project,0,test02931,"public void test02931() throws Throwable {
    float[] floatArray0 = new float[3];
    float[] floatArray1 = ArrayUtils.subarray(floatArray0, (int) (short) 0, 57);
    assertEquals(3, floatArray1.length);
}",0,
project,0,test03032,"public void test03032() throws Throwable {
    double[] doubleArray0 = new double[9];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, 1, 1);
    assertEquals(0, doubleArray1.length);
}",0,
project,0,test03133,"public void test03133() throws Throwable {
    char[] charArray0 = new char[3];
    char[] charArray1 = ArrayUtils.subarray(charArray0, 2, 2);
    assertEquals(0, charArray1.length);
}",0,
project,0,test03335,"public void test03335() throws Throwable {
    short[] shortArray0 = new short[5];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (short) 0, (int) (short) 64);
    assertNotSame(shortArray1, shortArray0);
}",0,
project,0,test03336,"public void test03336() throws Throwable {
    short[] shortArray0 = new short[5];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (short) 0, (int) (short) 64);
    assertEquals(5, shortArray1.length);
}",0,
project,0,test03437,"public void test03437() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.subarray(intArray0, 0, 0);
    assertArrayEquals(new int[] {}, intArray1);
}",0,
project,0,test03538,"public void test03538() throws Throwable {
    long[] longArray0 = new long[9];
    long[] longArray1 = ArrayUtils.subarray(longArray0, 5, 5);
    assertNotNull(longArray1);
}",0,"assertEquals(longArray0, longArray1)"
project,0,test03539,"public void test03539() throws Throwable {
    long[] longArray0 = new long[9];
    long[] longArray1 = ArrayUtils.subarray(longArray0, 5, 5);
    assertEquals(0, longArray1.length);
}",0,
project,0,test03640,"public void test03640() throws Throwable {
    String[] stringArray0 = new String[0];
    String[] stringArray1 = ArrayUtils.subarray(stringArray0, 106, 3);
    assertNotSame(stringArray1, stringArray0);
}",0,
project,0,test03641,"public void test03641() throws Throwable {
    String[] stringArray0 = new String[0];
    String[] stringArray1 = ArrayUtils.subarray(stringArray0, 106, 3);
    assertNotNull(stringArray1);
}",0,
project,0,test03642,"public void test03642() throws Throwable {
    String[] stringArray0 = new String[0];
    String[] stringArray1 = ArrayUtils.subarray(stringArray0, 106, 3);
    assertEquals(0, stringArray1.length);
}",0,
project,0,test03743,"public void test03743() throws Throwable {
    String[] stringArray0 = ArrayUtils.toArray((String[]) null);
    assertNull(stringArray0);
}",0,
project,0,test03844,"public void test03844() throws Throwable {
    Integer[] integerArray0 = new Integer[3];
    Integer[] integerArray1 = ArrayUtils.toArray(integerArray0);
    assertSame(integerArray0, integerArray1);
}",0,
project,0,test03945,"public void test03945() throws Throwable {
    short[] shortArray0 = new short[1];
    shortArray0[0] = (short) (-1116);
    short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) (-1116));
    assertEquals(0, shortArray1.length);
}",0,
project,0,test04046,"public void test04046() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    Object[] objectArray0 = ArrayUtils.removeElement((Object[]) arrayUtils0.EMPTY_BYTE_OBJECT_ARRAY, (Object) arrayUtils0.INDEX_NOT_FOUND);
    assertEquals(0, objectArray0.length);
}",0,
project,0,test04147,"public void test04147() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    long[] longArray0 = ArrayUtils.removeElement(arrayUtils0.EMPTY_LONG_ARRAY, 2723L);
    assertEquals(0, longArray0.length);
}",0,
project,0,test04248,"public void test04248() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.removeElement(intArray0, 0);
    assertArrayEquals(new int[] {}, intArray1);
}",0,
project,0,test04349,"public void test04349() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.removeElement(floatArray0, 0.0F);
    assertNotSame(floatArray0, floatArray1);
}",0,
project,0,test04450,"public void test04450() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 2519.472655);
    assertNotSame(doubleArray0, doubleArray1);
}",0,
project,0,test04551,"public void test04551() throws Throwable {
    char[] charArray0 = ArrayUtils.removeElement((char[]) null, 'X');
    assertNull(charArray0);
}",0,assertNotNull(charArray0)
project,0,test04652,"public void test04652() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    char[] charArray0 = ArrayUtils.removeElement(arrayUtils0.EMPTY_CHAR_ARRAY, 'R');
    assertArrayEquals(new char[] {}, charArray0);
}",0,
project,0,test04753,"public void test04753() throws Throwable {
    byte[] byteArray0 = ArrayUtils.removeElement((byte[]) null, (byte) 98);
    assertNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test04854,"public void test04854() throws Throwable {
    boolean[] booleanArray0 = new boolean[4];
    boolean[] booleanArray1 = ArrayUtils.remove(booleanArray0, 3);
    assertEquals(3, booleanArray1.length);
}",0,
project,0,test04955,"public void test04955() throws Throwable {
    long[] longArray0 = new long[4];
    long[] longArray1 = ArrayUtils.remove(longArray0, 0);
    assertEquals(3, longArray1.length);
}",0,
project,0,test05056,"public void test05056() throws Throwable {
    long[] longArray0 = new long[1];
    long[] longArray1 = ArrayUtils.remove(longArray0, 0);
    assertEquals(0, longArray1.length);
}",0,
project,0,test05157,"public void test05157() throws Throwable {
    int[] intArray0 = new int[9];
    int[] intArray1 = ArrayUtils.remove(intArray0, 2);
    assertEquals(8, intArray1.length);
}",0,
project,0,test05258,"public void test05258() throws Throwable {
    float[] floatArray0 = new float[4];
    float[] floatArray1 = ArrayUtils.remove(floatArray0, 3);
    assertEquals(3, floatArray1.length);
}",0,
project,0,test05359,"public void test05359() throws Throwable {
    char[] charArray0 = new char[5];
    char[] charArray1 = ArrayUtils.remove(charArray0, 2);
    assertEquals(4, charArray1.length);
}",0,
project,0,test05460,"public void test05460() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    booleanArray0[0] = true;
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 0);
    assertEquals(0, int0);
}",0,
project,0,test05561,"public void test05561() throws Throwable {
    boolean[] booleanArray0 = new boolean[4];
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, false);
    assertEquals(3, int0);
}",0,"assertEquals(0, int0)"
project,0,test05662,"public void test05662() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, true);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test05763,"public void test05763() throws Throwable {
    short[] shortArray0 = new short[9];
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 0, 0);
    assertEquals(0, int0);
}",0,
project,0,test05864,"public void test05864() throws Throwable {
    short[] shortArray0 = new short[3];
    shortArray0[0] = (short) 64;
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 64);
    assertEquals(0, int0);
}",0,
project,0,test05965,"public void test05965() throws Throwable {
    short[] shortArray0 = new short[7];
    shortArray0[4] = (short) (-1);
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) (-1));
    assertEquals(4, int0);
}",0,"assertEquals(0, int0)"
project,0,test06066,"public void test06066() throws Throwable {
    Object[] objectArray0 = new Object[5];
    int int0 = ArrayUtils.lastIndexOf(objectArray0, objectArray0[0]);
    assertEquals(4, int0);
}",0,"assertEquals(0, int0)"
project,0,test06167,"public void test06167() throws Throwable {
    long[] longArray0 = new long[1];
    int int0 = ArrayUtils.lastIndexOf(longArray0, 0L, (int) '=');
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test06268,"public void test06268() throws Throwable {
    long[] longArray0 = new long[1];
    int int0 = ArrayUtils.lastIndexOf(longArray0, (long) 0);
    assertEquals(0, int0);
}",0,
project,0,test06369,"public void test06369() throws Throwable {
    long[] longArray0 = new long[3];
    int int0 = ArrayUtils.lastIndexOf(longArray0, 0L);
    assertEquals(2, int0);
}",0,"assertEquals(0, int0)"
project,0,test06470,"public void test06470() throws Throwable {
    int[] intArray0 = new int[3];
    intArray0[0] = (-672);
    int int0 = ArrayUtils.lastIndexOf(intArray0, (-672));
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test06571,"public void test06571() throws Throwable {
    int[] intArray0 = new int[7];
    intArray0[1] = (-1);
    int int0 = ArrayUtils.lastIndexOf(intArray0, (-1));
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test06672,"public void test06672() throws Throwable {
    float[] floatArray0 = new float[9];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, 0.0F, 64);
    assertEquals(8, int0);
}",0,"assertEquals(0, int0)"
project,0,test06773,"public void test06773() throws Throwable {
    float[] floatArray0 = new float[1];
    floatArray0[0] = (-98.0F);
    int int0 = ArrayUtils.lastIndexOf(floatArray0, (-98.0F));
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test06874,"public void test06874() throws Throwable {
    double[] doubleArray0 = new double[21];
    doubleArray0[0] = 938.37784;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 938.37784, 1811, 1.0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test06975,"public void test06975() throws Throwable {
    double[] doubleArray0 = new double[1];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test07076,"public void test07076() throws Throwable {
    double[] doubleArray0 = new double[1];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 0.0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test07177,"public void test07177() throws Throwable {
    double[] doubleArray0 = new double[0];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 0.0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test07278,"public void test07278() throws Throwable {
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) (-1);
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1.0));
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test07379,"public void test07379() throws Throwable {
    double[] doubleArray0 = new double[4];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0);
    assertEquals(3, int0);
}",0,"assertEquals(0, int0)"
project,0,test07480,"public void test07480() throws Throwable {
    char[] charArray0 = new char[3];
    charArray0[2] = 'R';
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'R', (int) (byte) 5);
    assertEquals(2, int0);
}",0,
project,0,test07581,"public void test07581() throws Throwable {
    char[] charArray0 = new char[3];
    charArray0[0] = '~';
    int int0 = ArrayUtils.lastIndexOf(charArray0, '~');
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test07682,"public void test07682() throws Throwable {
    char[] charArray0 = new char[5];
    charArray0[4] = '4';
    int int0 = ArrayUtils.lastIndexOf(charArray0, '4');
    assertEquals(4, int0);
}",0,
project,0,test07783,"public void test07783() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[1] = (byte) 82;
    byteArray0[2] = (byte) 19;
    byteArray0[3] = (byte) 5;
    byteArray0[4] = (byte) 5;
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 0, (int) (byte) 82);
    assertEquals(0, int0);
}",0,
project,0,test07884,"public void test07884() throws Throwable {
    byte[] byteArray0 = new byte[1];
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test07985,"public void test07985() throws Throwable {
    Integer integer0 = new Integer(0);
    boolean boolean0 = ArrayUtils.isSameType(integer0, integer0);
    assertTrue(boolean0);
}",1,
project,0,test08086,"public void test08086() throws Throwable {
    Object object0 = new Object();
    boolean boolean0 = ArrayUtils.isEquals(""java.awt.graphicsenv"", object0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test08187,"public void test08187() throws Throwable {
    boolean[] booleanArray0 = new boolean[4];
    booleanArray0[1] = true;
    int int0 = ArrayUtils.indexOf(booleanArray0, true, (int) (short) 0);
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test08288,"public void test08288() throws Throwable {
    boolean[] booleanArray0 = new boolean[4];
    booleanArray0[0] = true;
    int int0 = ArrayUtils.indexOf(booleanArray0, false);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test08389,"public void test08389() throws Throwable {
    short[] shortArray0 = new short[7];
    shortArray0[0] = (short) 2997;
    int int0 = ArrayUtils.indexOf(shortArray0, (short) 2997);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test08490,"public void test08490() throws Throwable {
    short[] shortArray0 = new short[5];
    shortArray0[3] = (short) (-2811);
    int int0 = ArrayUtils.indexOf(shortArray0, (short) (-2811));
    assertEquals(3, int0);
}",0,"assertEquals(1, int0)"
project,0,test08591,"public void test08591() throws Throwable {
    Object[] objectArray0 = new Object[3];
    Object object0 = new Object();
    objectArray0[1] = object0;
    int int0 = ArrayUtils.indexOf(objectArray0, object0);
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test08692,"public void test08692() throws Throwable {
    long[] longArray0 = new long[4];
    int int0 = ArrayUtils.indexOf(longArray0, 0L);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test08793,"public void test08793() throws Throwable {
    long[] longArray0 = new long[5];
    longArray0[1] = (long) (-1);
    int int0 = ArrayUtils.indexOf(longArray0, (long) (-1));
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test08894,"public void test08894() throws Throwable {
    int[] intArray0 = new int[5];
    intArray0[2] = 58;
    int int0 = ArrayUtils.indexOf(intArray0, 58, (-2996));
    assertEquals(2, int0);
}",0,
project,0,test08995,"public void test08995() throws Throwable {
    int[] intArray0 = new int[5];
    intArray0[1] = (-1990);
    int int0 = ArrayUtils.indexOf(intArray0, (-1990));
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test09096,"public void test09096() throws Throwable {
    float[] floatArray0 = new float[3];
    floatArray0[2] = (-1.0F);
    int int0 = ArrayUtils.indexOf(floatArray0, (-1.0F));
    assertEquals(2, int0);
}",0,"assertEquals(1, int0)"
project,0,test09197,"public void test09197() throws Throwable {
    double[] doubleArray0 = new double[7];
    doubleArray0[2] = 435.264886227;
    int int0 = ArrayUtils.indexOf(doubleArray0, 435.264886227, (int) (byte) 0, (double) (byte) 0);
    assertEquals(2, int0);
}",0,
project,0,test09298,"public void test09298() throws Throwable {
    int int0 = ArrayUtils.indexOf((double[]) null, 1235.3909518515, 26.20243310753);
    assertEquals((-1), int0);
}",0,
project,0,test09399,"public void test09399() throws Throwable {
    double[] doubleArray0 = new double[9];
    doubleArray0[3] = (double) (byte) 109;
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) (byte) 109);
    assertEquals(3, int0);
}",0,"assertEquals(1, int0)"
project,0,test094100,"public void test094100() throws Throwable {
    char[] charArray0 = new char[5];
    charArray0[1] = 'U';
    int int0 = ArrayUtils.indexOf(charArray0, 'U', (-1));
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test095101,"public void test095101() throws Throwable {
    char[] charArray0 = new char[4];
    charArray0[0] = 'y';
    int int0 = ArrayUtils.indexOf(charArray0, 'y');
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test096102,"public void test096102() throws Throwable {
    byte[] byteArray0 = new byte[7];
    byteArray0[4] = (byte) 5;
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) 5, 0);
    assertEquals(4, int0);
}",0,"assertEquals(0, int0)"
project,0,test097103,"public void test097103() throws Throwable {
    byte[] byteArray0 = new byte[5];
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) 0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test098104,"public void test098104() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[2] = (byte) 19;
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) 19);
    assertEquals(2, int0);
}",0,"assertEquals(1, int0)"
project,0,test099105,"public void test099105() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
    assertEquals(1, booleanArray1.length);
}",0,
project,0,test100106,"public void test100106() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.clone(shortArray0);
    assertEquals(0, shortArray1.length);
}",0,
project,0,test101107,"public void test101107() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    Integer[] integerArray0 = ArrayUtils.clone(arrayUtils0.EMPTY_INTEGER_OBJECT_ARRAY);
    assertEquals(0, integerArray0.length);
}",0,
project,0,test102108,"public void test102108() throws Throwable {
    long[] longArray0 = new long[4];
    long[] longArray1 = ArrayUtils.clone(longArray0);
    assertEquals(4, longArray1.length);
}",0,
project,0,test103109,"public void test103109() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.clone(intArray0);
    assertNotSame(intArray0, intArray1);
}",0,
project,0,test105111,"public void test105111() throws Throwable {
    char[] charArray0 = new char[5];
    char[] charArray1 = ArrayUtils.clone(charArray0);
    assertEquals(5, charArray1.length);
}",0,
project,0,test106112,"public void test106112() throws Throwable {
    byte[] byteArray0 = new byte[7];
    byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    assertEquals(7, byteArray1.length);
}",0,
project,0,test107113,"public void test107113() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    assertNotSame(booleanArray1, booleanArray0);
}",0,
project,0,test108114,"public void test108114() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    assertNotSame(shortArray1, shortArray0);
}",0,
project,0,test109115,"public void test109115() throws Throwable {
    AbstractMap.SimpleEntry<Object, String>[] abstractMap_SimpleEntryArray0 = (AbstractMap.SimpleEntry<Object, String>[]) Array.newInstance(AbstractMap.SimpleEntry.class, 0);
    AbstractMap.SimpleEntry<Object, String>[] abstractMap_SimpleEntryArray1 = ArrayUtils.addAll(abstractMap_SimpleEntryArray0, abstractMap_SimpleEntryArray0);
    assertNotSame(abstractMap_SimpleEntryArray1, abstractMap_SimpleEntryArray0);
}",0,
project,0,test110116,"public void test110116() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    assertNotSame(intArray1, intArray0);
}",0,
project,0,test111117,"public void test111117() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    assertNotSame(floatArray1, floatArray0);
}",0,
project,0,test112118,"public void test112118() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    assertNotSame(doubleArray1, doubleArray0);
}",0,
project,0,test113119,"public void test113119() throws Throwable {
    char[] charArray0 = new char[0];
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    assertNotSame(charArray1, charArray0);
}",0,
project,0,test115121,"public void test115121() throws Throwable {
    float[] floatArray0 = new float[2];
    float[] floatArray1 = ArrayUtils.add(floatArray0, 1, 0.0F);
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F }, floatArray1, 0.01F);
}",0,
project,0,test116122,"public void test116122() throws Throwable {
    double[] doubleArray0 = new double[8];
    double[] doubleArray1 = ArrayUtils.add(doubleArray0, 0, (-1.0));
    assertArrayEquals(new double[] { (-1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray1, 0.01);
}",1,
project,0,test117123,"public void test117123() throws Throwable {
    char[] charArray0 = new char[2];
    char[] charArray1 = ArrayUtils.add(charArray0, (int) (byte) 0, ')');
    assertArrayEquals(new char[] { ')', '\u0000', '\u0000' }, charArray1);
}",0,
project,0,test118124,"public void test118124() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[8];
    // Undeclared exception!
    try {
        ArrayUtils.toPrimitive(booleanArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test119125,"public void test119125() throws Throwable {
    short[] shortArray0 = new short[8];
    // Undeclared exception!
    try {
        ArrayUtils.remove(shortArray0, (-1));
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -1, Length: 8
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test120126,"public void test120126() throws Throwable {
    // Undeclared exception!
    try {
        ArrayUtils.remove((Integer[]) null, (-246));
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -246, Length: 0
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test121127,"public void test121127() throws Throwable {
    double[] doubleArray0 = new double[5];
    // Undeclared exception!
    try {
        ArrayUtils.remove(doubleArray0, 415);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 415, Length: 5
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test122128,"public void test122128() throws Throwable {
    byte[] byteArray0 = new byte[9];
    // Undeclared exception!
    try {
        ArrayUtils.remove(byteArray0, (int) (byte) (-1));
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -1, Length: 9
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test123129,"public void test123129() throws Throwable {
    short[] shortArray0 = new short[6];
    // Undeclared exception!
    try {
        ArrayUtils.add(shortArray0, (int) (short) 2847, (short) 2847);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 2847, Length: 6
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test124130,"public void test124130() throws Throwable {
    Object object0 = new Object();
    ArrayUtils arrayUtils0 = new ArrayUtils();
    // Undeclared exception!
    try {
        ArrayUtils.add((Object[]) arrayUtils0.EMPTY_CLASS_ARRAY, object0);
        fail(""Expecting exception: ArrayStoreException"");
    } catch (ArrayStoreException e) {
        //
        // java.lang.Object
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test125131,"public void test125131() throws Throwable {
    // Undeclared exception!
    try {
        ArrayUtils.add((int[]) null, (int) (short) 224, 36);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 224, Length: 0
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test126132,"public void test126132() throws Throwable {
    byte[] byteArray0 = new byte[8];
    // Undeclared exception!
    try {
        ArrayUtils.add(byteArray0, (int) (byte) 49, (byte) 4);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 49, Length: 8
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test127133,"public void test127133() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    boolean boolean0 = ArrayUtils.isEmpty(booleanArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test128134,"public void test128134() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((boolean[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test129135,"public void test129135() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean boolean0 = ArrayUtils.isEmpty(booleanArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test130136,"public void test130136() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((float[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test131137,"public void test131137() throws Throwable {
    float[] floatArray0 = new float[0];
    boolean boolean0 = ArrayUtils.isEmpty(floatArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test132138,"public void test132138() throws Throwable {
    float[] floatArray0 = new float[4];
    boolean boolean0 = ArrayUtils.isEmpty(floatArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test133139,"public void test133139() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((double[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test134140,"public void test134140() throws Throwable {
    double[] doubleArray0 = new double[1];
    boolean boolean0 = ArrayUtils.isEmpty(doubleArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test135141,"public void test135141() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, false, 2286);
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test136142,"public void test136142() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    booleanArray0[0] = true;
    int int0 = ArrayUtils.indexOf(booleanArray0, true, (-1903));
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test137143,"public void test137143() throws Throwable {
    boolean[] booleanArray0 = new boolean[6];
    int int0 = ArrayUtils.indexOf(booleanArray0, false, 1881);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test138144,"public void test138144() throws Throwable {
    int int0 = ArrayUtils.indexOf((boolean[]) null, false, (int) (short) (-1697));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test139145,"public void test139145() throws Throwable {
    float[] floatArray0 = new float[1];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, (float) 48, 48);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test140146,"public void test140146() throws Throwable {
    float[] floatArray0 = new float[0];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, (float) (short) 2, (-1867));
    assertEquals((-1), int0);
}",0,
project,0,test141147,"public void test141147() throws Throwable {
    float[] floatArray0 = new float[8];
    floatArray0[4] = (float) (byte) 19;
    int int0 = ArrayUtils.indexOf(floatArray0, 19.0F, (int) (byte) 0);
    assertEquals(4, int0);
}",0,"assertEquals(0, int0)"
project,0,test142148,"public void test142148() throws Throwable {
    float[] floatArray0 = new float[8];
    int int0 = ArrayUtils.indexOf(floatArray0, 19.0F, (int) (byte) 0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test143149,"public void test143149() throws Throwable {
    float[] floatArray0 = new float[0];
    int int0 = ArrayUtils.indexOf(floatArray0, (float) 1, 1);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test144150,"public void test144150() throws Throwable {
    double[] doubleArray0 = new double[21];
    doubleArray0[1] = 2250.7;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 938.37784, 1811, 1.0);
    assertEquals((-1), int0);
}",0,
project,0,test145151,"public void test145151() throws Throwable {
    double[] doubleArray0 = new double[7];
    int int0 = ArrayUtils.indexOf(doubleArray0, (-1753.527353), 2, (-674.23487837027));
    assertEquals((-1), int0);
}",0,
project,0,test146152,"public void test146152() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = (-1.0);
    int int0 = ArrayUtils.indexOf(doubleArray0, (-1.0), 0);
    assertEquals(0, int0);
}",0,
project,0,test147153,"public void test147153() throws Throwable {
    double[] doubleArray0 = new double[1];
    int int0 = ArrayUtils.indexOf(doubleArray0, 435.264886227, 2168);
    assertEquals((-1), int0);
}",0,
project,0,test148154,"public void test148154() throws Throwable {
    int int0 = ArrayUtils.indexOf((double[]) null, 155.64351735, 48);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test149155,"public void test149155() throws Throwable {
    byte[] byteArray0 = new byte[5];
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 0, (int) (byte) 82);
    assertEquals(4, int0);
}",0,
project,0,test150156,"public void test150156() throws Throwable {
    byte[] byteArray0 = new byte[5];
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 26, 5);
    assertEquals((-1), int0);
}",0,
project,0,test151157,"public void test151157() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byteArray0[0] = (byte) 2;
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) 0, (-3328));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test152158,"public void test152158() throws Throwable {
    byte[] byteArray0 = new byte[4];
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) (-109), (int) (byte) 68);
    assertEquals((-1), int0);
}",0,
project,0,test153159,"public void test153159() throws Throwable {
    char[] charArray0 = new char[5];
    int int0 = ArrayUtils.indexOf(charArray0, '2', 17);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test154160,"public void test154160() throws Throwable {
    int int0 = ArrayUtils.indexOf((char[]) null, ' ', 2145847248);
    assertEquals((-1), int0);
}",0,
project,0,test155161,"public void test155161() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((short[]) null, (short) 1960, (int) (short) 0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test156162,"public void test156162() throws Throwable {
    short[] shortArray0 = new short[5];
    shortArray0[1] = (short) 2;
    int int0 = ArrayUtils.indexOf(shortArray0, (short) (byte) 2, (-931));
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test157163,"public void test157163() throws Throwable {
    short[] shortArray0 = new short[8];
    int int0 = ArrayUtils.indexOf(shortArray0, (short) 37, (int) (short) 539);
    assertEquals((-1), int0);
}",0,
project,0,test158164,"public void test158164() throws Throwable {
    int[] intArray0 = new int[5];
    int int0 = ArrayUtils.indexOf(intArray0, 58, (-2996));
    assertEquals((-1), int0);
}",0,
project,0,test159165,"public void test159165() throws Throwable {
    int[] intArray0 = new int[1];
    int int0 = ArrayUtils.indexOf(intArray0, 2735, 53);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test160166,"public void test160166() throws Throwable {
    long[] longArray0 = new long[1];
    int int0 = ArrayUtils.indexOf(longArray0, (-1127L), 2145847248);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test161167,"public void test161167() throws Throwable {
    int int0 = ArrayUtils.indexOf((long[]) null, (long) (-1), 2);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test162168,"public void test162168() throws Throwable {
    Object[] objectArray0 = new Object[2];
    Object object0 = new Object();
    objectArray0[0] = object0;
    int int0 = ArrayUtils.lastIndexOf(objectArray0, object0, 58);
    assertEquals(0, int0);
}",0,
project,0,test163169,"public void test163169() throws Throwable {
    Object[] objectArray0 = new Object[6];
    Object object0 = new Object();
    objectArray0[0] = object0;
    int int0 = ArrayUtils.indexOf(objectArray0, objectArray0[0], 548);
    assertEquals((-1), int0);
}",0,
project,0,test164170,"public void test164170() throws Throwable {
    Object[] objectArray0 = new Object[8];
    Object object0 = new Object();
    objectArray0[2] = object0;
    objectArray0[4] = objectArray0[2];
    int int0 = ArrayUtils.indexOf(objectArray0, objectArray0[4], 0);
    assertEquals(2, int0);
}",0,
project,0,test165171,"public void test165171() throws Throwable {
    Object[] objectArray0 = new Object[8];
    int int0 = ArrayUtils.indexOf(objectArray0, objectArray0[4], 0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test166172,"public void test166172() throws Throwable {
    Integer integer0 = new Integer((-2141337091));
    int int0 = ArrayUtils.indexOf((Object[]) null, (Object) integer0, 2);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test167173,"public void test167173() throws Throwable {
    Object object0 = new Object();
    // Undeclared exception!
    try {
        ArrayUtils.getLength(object0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Argument is not an array
        //
        verifyException(""java.lang.reflect.Array"", e);
    }
}",0,
project,0,test168174,"public void test168174() throws Throwable {
    boolean[] booleanArray0 = ArrayUtils.clone((boolean[]) null);
    assertNull(booleanArray0);
}",0,assertTrue(booleanArray0)
project,0,test169175,"public void test169175() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
    assertEquals(0, booleanArray1.length);
}",0,
project,0,test170176,"public void test170176() throws Throwable {
    float[] floatArray0 = ArrayUtils.clone((float[]) null);
    assertNull(floatArray0);
}",0,
project,0,test171177,"public void test171177() throws Throwable {
    double[] doubleArray0 = ArrayUtils.clone((double[]) null);
    assertNull(doubleArray0);
}",0,
project,0,test172178,"public void test172178() throws Throwable {
    char[] charArray0 = new char[0];
    char[] charArray1 = ArrayUtils.clone(charArray0);
    assertEquals(0, charArray1.length);
}",0,
project,0,test173179,"public void test173179() throws Throwable {
    short[] shortArray0 = ArrayUtils.clone((short[]) null);
    assertNull(shortArray0);
}",0,
project,0,test174180,"public void test174180() throws Throwable {
    int[] intArray0 = new int[5];
    int[] intArray1 = ArrayUtils.clone(intArray0);
    assertEquals(5, intArray1.length);
}",0,
project,0,test175181,"public void test175181() throws Throwable {
    int[] intArray0 = ArrayUtils.clone((int[]) null);
    assertNull(intArray0);
}",0,"assertEquals(1, intArray0)"
project,0,test176182,"public void test176182() throws Throwable {
    long[] longArray0 = ArrayUtils.clone((long[]) null);
    assertNull(longArray0);
}",0,
project,0,test177183,"public void test177183() throws Throwable {
    String[] stringArray0 = new String[8];
    String[] stringArray1 = ArrayUtils.clone(stringArray0);
    assertEquals(8, stringArray1.length);
}",0,
project,0,test178184,"public void test178184() throws Throwable {
    Object[] objectArray0 = ArrayUtils.clone((Object[]) null);
    assertNull(objectArray0);
}",0,assertNotNull(objectArray0)
project,0,test179185,"public void test179185() throws Throwable {
    int[] intArray0 = new int[4];
    String string0 = ArrayUtils.toString((Object) intArray0[1], ""', is neither of type Map.Entry nor an Array"");
    assertEquals(""0"", string0);
}",0,
project,0,test180186,"public void test180186() throws Throwable {
    float[] floatArray0 = new float[3];
    int int0 = ArrayUtils.indexOf(floatArray0, (-1.0F));
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test181187,"public void test181187() throws Throwable {
    char[] charArray0 = new char[4];
    int int0 = ArrayUtils.indexOf(charArray0, 'y');
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test182188,"public void test182188() throws Throwable {
    float[] floatArray0 = new float[1];
    // Undeclared exception!
    try {
        ArrayUtils.remove(floatArray0, (-77));
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -77, Length: 1
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test183189,"public void test183189() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byte[] byteArray1 = ArrayUtils.remove(byteArray0, 0);
    assertEquals(4, byteArray1.length);
}",0,
project,0,test184190,"public void test184190() throws Throwable {
    int int0 = ArrayUtils.indexOf((boolean[]) null, true);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test185191,"public void test185191() throws Throwable {
    double[] doubleArray0 = new double[4];
    double[] doubleArray1 = ArrayUtils.remove(doubleArray0, 2);
    assertEquals(3, doubleArray1.length);
}",0,
project,0,test186192,"public void test186192() throws Throwable {
    long[] longArray0 = new long[4];
    int int0 = ArrayUtils.indexOf(longArray0, (-3L));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test187193,"public void test187193() throws Throwable {
    short[] shortArray0 = new short[3];
    short[] shortArray1 = ArrayUtils.remove(shortArray0, (int) (short) 2);
    assertEquals(2, shortArray1.length);
}",0,
project,0,test188194,"public void test188194() throws Throwable {
    int int0 = ArrayUtils.indexOf((int[]) null, Integer.MAX_VALUE);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test189195,"public void test189195() throws Throwable {
    double[] doubleArray0 = new double[4];
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) (-1));
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test190196,"public void test190196() throws Throwable {
    short[] shortArray0 = new short[5];
    int int0 = ArrayUtils.indexOf(shortArray0, (short) (-2811));
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test191197,"public void test191197() throws Throwable {
    String[] stringArray0 = new String[8];
    String[] stringArray1 = ArrayUtils.remove(stringArray0, 1);
    assertEquals(7, stringArray1.length);
}",0,
project,0,test192198,"public void test192198() throws Throwable {
    int[] intArray0 = new int[3];
    // Undeclared exception!
    try {
        ArrayUtils.remove(intArray0, (int) (byte) 64);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 64, Length: 3
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test193199,"public void test193199() throws Throwable {
    long[] longArray0 = new long[6];
    long[] longArray1 = ArrayUtils.removeElement(longArray0, 0L);
    assertEquals(5, longArray1.length);
}",0,
project,0,test194200,"public void test194200() throws Throwable {
    int[] intArray0 = new int[7];
    intArray0[0] = 1;
    int[] intArray1 = ArrayUtils.removeElement(intArray0, 1);
    assertArrayEquals(new int[] { 1, 0, 0, 0, 0, 0, 0 }, intArray0);
}",0,
project,0,test194201,"public void test194201() throws Throwable {
    int[] intArray0 = new int[7];
    intArray0[0] = 1;
    int[] intArray1 = ArrayUtils.removeElement(intArray0, 1);
    assertArrayEquals(new int[] { 0, 0, 0, 0, 0, 0 }, intArray1);
}",0,
project,0,test195202,"public void test195202() throws Throwable {
    double[] doubleArray0 = new double[1];
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 118.04661);
    assertEquals(1, doubleArray1.length);
}",0,
project,0,test196203,"public void test196203() throws Throwable {
    char[] charArray0 = new char[8];
    charArray0[2] = 'A';
    char[] charArray1 = ArrayUtils.removeElement(charArray0, 'A');
    assertArrayEquals(new char[] { '\u0000', '\u0000', 'A', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test196204,"public void test196204() throws Throwable {
    char[] charArray0 = new char[8];
    charArray0[2] = 'A';
    char[] charArray1 = ArrayUtils.removeElement(charArray0, 'A');
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000' }, charArray1);
}",0,
project,0,test197205,"public void test197205() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    byte[] byteArray0 = ArrayUtils.removeElement(arrayUtils0.EMPTY_BYTE_ARRAY, (byte) 0);
    assertArrayEquals(new byte[] {}, byteArray0);
}",0,
project,0,test198206,"public void test198206() throws Throwable {
    // Undeclared exception!
    try {
        ArrayUtils.add((long[]) null, 58, 1233L);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 58, Length: 0
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test199207,"public void test199207() throws Throwable {
    Integer[] integerArray0 = new Integer[4];
    Integer integer0 = new Integer(1286);
    // Undeclared exception!
    try {
        ArrayUtils.add(integerArray0, 8, integer0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 8, Length: 4
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test200208,"public void test200208() throws Throwable {
    Integer integer0 = new Integer(2);
    Object[] objectArray0 = ArrayUtils.add((Object[]) null, 0, (Object) integer0);
    assertNotNull(objectArray0);
}",0,
project,0,test200209,"public void test200209() throws Throwable {
    Integer integer0 = new Integer(2);
    Object[] objectArray0 = ArrayUtils.add((Object[]) null, 0, (Object) integer0);
    assertEquals(1, objectArray0.length);
}",0,
project,0,test201210,"public void test201210() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    String[] stringArray0 = ArrayUtils.add(arrayUtils0.EMPTY_STRING_ARRAY, ""Array element "");
    assertEquals(1, stringArray0.length);
}",0,
project,0,test202211,"public void test202211() throws Throwable {
    float[] floatArray0 = ArrayUtils.addAll((float[]) null, (float[]) null);
    assertNull(floatArray0);
}",0,
project,0,test203212,"public void test203212() throws Throwable {
    float[] floatArray0 = new float[3];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    assertEquals(6, floatArray1.length);
}",0,
project,0,test204213,"public void test204213() throws Throwable {
    long[] longArray0 = ArrayUtils.addAll((long[]) null, (long[]) null);
    assertNull(longArray0);
}",0,assertNotNull(longArray0)
project,0,test205214,"public void test205214() throws Throwable {
    long[] longArray0 = new long[5];
    long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    assertEquals(10, longArray1.length);
}",0,
project,0,test206215,"public void test206215() throws Throwable {
    int[] intArray0 = new int[8];
    int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    assertEquals(16, intArray1.length);
}",0,
project,0,test207216,"public void test207216() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    assertEquals(2, shortArray1.length);
}",0,
project,0,test208217,"public void test208217() throws Throwable {
    byte[] byteArray0 = ArrayUtils.addAll((byte[]) null, (byte[]) null);
    assertNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test209218,"public void test209218() throws Throwable {
    byte[] byteArray0 = new byte[3];
    byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    assertEquals(6, byteArray1.length);
}",0,
project,0,test210219,"public void test210219() throws Throwable {
    char[] charArray0 = ArrayUtils.addAll((char[]) null, (char[]) null);
    assertNull(charArray0);
}",0,
project,0,test211220,"public void test211220() throws Throwable {
    boolean[] booleanArray0 = ArrayUtils.addAll((boolean[]) null, (boolean[]) null);
    assertNull(booleanArray0);
}",0,assertTrue(booleanArray0)
project,0,test212221,"public void test212221() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    assertEquals(6, booleanArray1.length);
}",0,
project,0,test213222,"public void test213222() throws Throwable {
    Double[] doubleArray0 = new Double[3];
    Object[] objectArray0 = ArrayUtils.addAll((Object[]) doubleArray0, (Object[]) null);
    assertNotNull(objectArray0);
}",0,
project,0,test213223,"public void test213223() throws Throwable {
    Double[] doubleArray0 = new Double[3];
    Object[] objectArray0 = ArrayUtils.addAll((Object[]) doubleArray0, (Object[]) null);
    assertEquals(3, objectArray0.length);
}",0,
project,0,test214224,"public void test214224() throws Throwable {
    float[] floatArray0 = new float[0];
    boolean boolean0 = ArrayUtils.contains(floatArray0, 1852.25F);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test215225,"public void test215225() throws Throwable {
    byte[] byteArray0 = new byte[0];
    boolean boolean0 = ArrayUtils.isEmpty(byteArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test216226,"public void test216226() throws Throwable {
    byte[] byteArray0 = new byte[5];
    boolean boolean0 = ArrayUtils.isEmpty(byteArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test217227,"public void test217227() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((byte[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test218228,"public void test218228() throws Throwable {
    char[] charArray0 = new char[7];
    boolean boolean0 = ArrayUtils.isEmpty(charArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test219229,"public void test219229() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    boolean boolean0 = ArrayUtils.isEmpty(arrayUtils0.EMPTY_CHAR_ARRAY);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test220230,"public void test220230() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((char[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test221231,"public void test221231() throws Throwable {
    short[] shortArray0 = new short[0];
    boolean boolean0 = ArrayUtils.isEmpty(shortArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test222232,"public void test222232() throws Throwable {
    short[] shortArray0 = new short[7];
    boolean boolean0 = ArrayUtils.isEmpty(shortArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test223233,"public void test223233() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((short[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test224234,"public void test224234() throws Throwable {
    int[] intArray0 = new int[6];
    boolean boolean0 = ArrayUtils.isEmpty(intArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test225235,"public void test225235() throws Throwable {
    int[] intArray0 = new int[0];
    boolean boolean0 = ArrayUtils.isEmpty(intArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test226236,"public void test226236() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((int[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test227237,"public void test227237() throws Throwable {
    long[] longArray0 = new long[4];
    boolean boolean0 = ArrayUtils.isEmpty(longArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test228238,"public void test228238() throws Throwable {
    long[] longArray0 = new long[0];
    boolean boolean0 = ArrayUtils.isEmpty(longArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test229239,"public void test229239() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((long[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test230240,"public void test230240() throws Throwable {
    String[] stringArray0 = new String[0];
    boolean boolean0 = ArrayUtils.isEmpty(stringArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test231241,"public void test231241() throws Throwable {
    String[] stringArray0 = new String[8];
    boolean boolean0 = ArrayUtils.isEmpty(stringArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test232242,"public void test232242() throws Throwable {
    boolean[] booleanArray0 = new boolean[7];
    booleanArray0[0] = true;
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    assertEquals(7, booleanArray1.length);
}",0,
project,0,test233243,"public void test233243() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    assertEquals(0, booleanArray1.length);
}",0,
project,0,test234244,"public void test234244() throws Throwable {
    Boolean[] booleanArray0 = ArrayUtils.toObject((boolean[]) null);
    assertNull(booleanArray0);
}",0,
project,0,test237247,"public void test237247() throws Throwable {
    boolean[] booleanArray0 = ArrayUtils.toPrimitive((Boolean[]) null, false);
    assertNull(booleanArray0);
}",0,
project,0,test238248,"public void test238248() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[0];
    boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
    assertEquals(0, booleanArray1.length);
}",0,
project,0,test239249,"public void test239249() throws Throwable {
    boolean[] booleanArray0 = ArrayUtils.toPrimitive((Boolean[]) null);
    assertNull(booleanArray0);
}",0,
project,0,test240250,"public void test240250() throws Throwable {
    float[] floatArray0 = new float[0];
    Float[] floatArray1 = ArrayUtils.toObject(floatArray0);
    assertEquals(0, floatArray1.length);
}",0,
project,0,test241251,"public void test241251() throws Throwable {
    Float[] floatArray0 = new Float[7];
    Float float0 = new Float((float) 0);
    floatArray0[0] = float0;
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, (float) 0);
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, floatArray1, 0.01F);
}",0,
project,0,test242252,"public void test242252() throws Throwable {
    Float[] floatArray0 = new Float[0];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, 0.0F);
    assertEquals(0, floatArray1.length);
}",0,
project,0,test243253,"public void test243253() throws Throwable {
    float[] floatArray0 = ArrayUtils.toPrimitive((Float[]) null, (-1.0F));
    assertNull(floatArray0);
}",0,
project,0,test244254,"public void test244254() throws Throwable {
    Float[] floatArray0 = new Float[6];
    Float float0 = new Float((-1.0F));
    floatArray0[0] = float0;
    floatArray0[1] = float0;
    floatArray0[2] = floatArray0[0];
    floatArray0[3] = floatArray0[1];
    floatArray0[4] = float0;
    floatArray0[5] = float0;
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    assertNotNull(floatArray1);
}",1,
project,0,test244255,"public void test244255() throws Throwable {
    Float[] floatArray0 = new Float[6];
    Float float0 = new Float((-1.0F));
    floatArray0[0] = float0;
    floatArray0[1] = float0;
    floatArray0[2] = floatArray0[0];
    floatArray0[3] = floatArray0[1];
    floatArray0[4] = float0;
    floatArray0[5] = float0;
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    assertArrayEquals(new float[] { (-1.0F), (-1.0F), (-1.0F), (-1.0F), (-1.0F), (-1.0F) }, floatArray1, 0.01F);
}",1,
project,0,test245256,"public void test245256() throws Throwable {
    Float[] floatArray0 = new Float[9];
    // Undeclared exception!
    try {
        ArrayUtils.toPrimitive(floatArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test246257,"public void test246257() throws Throwable {
    Double[] doubleArray0 = new Double[12];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0, 2552.4325229722544);
    assertEquals(12, doubleArray1.length);
}",0,
project,0,test247258,"public void test247258() throws Throwable {
    Double[] doubleArray0 = new Double[0];
    double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0, 26.20243310753);
    assertEquals(0, doubleArray1.length);
}",1,
project,0,test248259,"public void test248259() throws Throwable {
    double[] doubleArray0 = ArrayUtils.toPrimitive((Double[]) null, 457.141);
    assertNull(doubleArray0);
}",0,
project,0,test249260,"public void test249260() throws Throwable {
    Double[] doubleArray0 = new Double[1];
    doubleArray0[0] = (Double) (-1.0);
    double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0);
    assertArrayEquals(new double[] { (-1.0) }, doubleArray1, 0.01);
}",1,
project,0,test250261,"public void test250261() throws Throwable {
    double[] doubleArray0 = ArrayUtils.toPrimitive((Double[]) null);
    assertNull(doubleArray0);
}",1,
project,0,test251262,"public void test251262() throws Throwable {
    Double[] doubleArray0 = new Double[1];
    // Undeclared exception!
    try {
        ArrayUtils.toPrimitive(doubleArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test252263,"public void test252263() throws Throwable {
    byte[] byteArray0 = new byte[7];
    Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
    assertEquals(7, byteArray1.length);
}",0,
project,0,test253264,"public void test253264() throws Throwable {
    Byte[] byteArray0 = ArrayUtils.toObject((byte[]) null);
    assertNull(byteArray0);
}",0,
project,0,test254265,"public void test254265() throws Throwable {
    Byte[] byteArray0 = new Byte[3];
    Byte byte0 = new Byte((byte) 120);
    byteArray0[0] = byte0;
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, (byte) 0);
    assertArrayEquals(new byte[] { (byte) 120, (byte) 0, (byte) 0 }, byteArray1);
}",0,
project,0,test255266,"public void test255266() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    byte[] byteArray0 = ArrayUtils.toPrimitive(arrayUtils0.EMPTY_BYTE_OBJECT_ARRAY, (byte) 66);
    assertArrayEquals(new byte[] {}, byteArray0);
}",0,
project,0,test256267,"public void test256267() throws Throwable {
    byte[] byteArray0 = ArrayUtils.toPrimitive((Byte[]) null, (byte) 5);
    assertNull(byteArray0);
}",0,
project,0,test257268,"public void test257268() throws Throwable {
    Byte[] byteArray0 = new Byte[2];
    Byte byte0 = new Byte((byte) (-34));
    byteArray0[0] = byte0;
    byteArray0[1] = byte0;
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0);
    assertArrayEquals(new byte[] { (byte) (-34), (byte) (-34) }, byteArray1);
}",0,
project,0,test258269,"public void test258269() throws Throwable {
    byte[] byteArray0 = ArrayUtils.EMPTY_BYTE_ARRAY;
    Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
    byte[] byteArray2 = ArrayUtils.toPrimitive(byteArray1);
    assertSame(byteArray2, byteArray0);
}",1,
project,0,test258270,"public void test258270() throws Throwable {
    byte[] byteArray0 = ArrayUtils.EMPTY_BYTE_ARRAY;
    Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
    byte[] byteArray2 = ArrayUtils.toPrimitive(byteArray1);
    assertNotNull(byteArray2);
}",1,
project,0,test259271,"public void test259271() throws Throwable {
    byte[] byteArray0 = ArrayUtils.toPrimitive((Byte[]) null);
    assertNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test260272,"public void test260272() throws Throwable {
    Byte[] byteArray0 = new Byte[2];
    // Undeclared exception!
    try {
        ArrayUtils.toPrimitive(byteArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",1,
project,0,test261273,"public void test261273() throws Throwable {
    short[] shortArray0 = new short[0];
    Short[] shortArray1 = ArrayUtils.toObject(shortArray0);
    assertEquals(0, shortArray1.length);
}",0,
project,0,test262274,"public void test262274() throws Throwable {
    Short[] shortArray0 = ArrayUtils.toObject((short[]) null);
    assertNull(shortArray0);
}",1,
project,0,test263275,"public void test263275() throws Throwable {
    short[] shortArray0 = new short[2];
    Short[] shortArray1 = ArrayUtils.toObject(shortArray0);
    assertNotNull(shortArray1);
}",0,
project,0,test263276,"public void test263276() throws Throwable {
    short[] shortArray0 = new short[2];
    Short[] shortArray1 = ArrayUtils.toObject(shortArray0);
    assertEquals(2, shortArray1.length);
}",0,
project,0,test264277,"public void test264277() throws Throwable {
    Short[] shortArray0 = new Short[2];
    Short short0 = Short.decode(""6"");
    shortArray0[0] = short0;
    short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0, (short) short0);
    assertArrayEquals(new short[] { (short) 6, (short) 6 }, shortArray1);
}",0,
project,0,test265278,"public void test265278() throws Throwable {
    short[] shortArray0 = ArrayUtils.toPrimitive((Short[]) null, (short) (byte) (-1));
    assertNull(shortArray0);
}",0,
project,0,test266279,"public void test266279() throws Throwable {
    Short[] shortArray0 = new Short[4];
    Short short0 = new Short((short) 26214);
    shortArray0[0] = short0;
    shortArray0[1] = short0;
    shortArray0[2] = short0;
    shortArray0[3] = short0;
    short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
    assertNotNull(shortArray1);
}",0,
project,0,test266280,"public void test266280() throws Throwable {
    Short[] shortArray0 = new Short[4];
    Short short0 = new Short((short) 26214);
    shortArray0[0] = short0;
    shortArray0[1] = short0;
    shortArray0[2] = short0;
    shortArray0[3] = short0;
    short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
    assertArrayEquals(new short[] { (short) 26214, (short) 26214, (short) 26214, (short) 26214 }, shortArray1);
}",0,
project,0,test267281,"public void test267281() throws Throwable {
    Short[] shortArray0 = new Short[0];
    short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
    assertEquals(0, shortArray1.length);
}",0,
project,0,test268282,"public void test268282() throws Throwable {
    Short[] shortArray0 = new Short[4];
    // Undeclared exception!
    try {
        ArrayUtils.toPrimitive(shortArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test269283,"public void test269283() throws Throwable {
    int[] intArray0 = new int[0];
    Integer[] integerArray0 = ArrayUtils.toObject(intArray0);
    assertEquals(0, integerArray0.length);
}",0,
project,0,test270284,"public void test270284() throws Throwable {
    Integer[] integerArray0 = ArrayUtils.toObject((int[]) null);
    assertNull(integerArray0);
}",0,
project,0,test271285,"public void test271285() throws Throwable {
    Integer[] integerArray0 = new Integer[9];
    Integer integer0 = new Integer((-392));
    integerArray0[0] = integer0;
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, 1);
    assertNotNull(intArray0);
}",0,"assertEquals(1, intArray0)"
project,0,test271286,"public void test271286() throws Throwable {
    Integer[] integerArray0 = new Integer[9];
    Integer integer0 = new Integer((-392));
    integerArray0[0] = integer0;
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, 1);
    assertArrayEquals(new int[] { (-392), 1, 1, 1, 1, 1, 1, 1, 1 }, intArray0);
}",0,
project,0,test272287,"public void test272287() throws Throwable {
    Integer[] integerArray0 = new Integer[0];
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, (-851));
    assertEquals(0, intArray0.length);
}",0,
project,0,test273288,"public void test273288() throws Throwable {
    Integer[] integerArray0 = new Integer[0];
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0);
    assertEquals(0, intArray0.length);
}",0,
project,0,test274289,"public void test274289() throws Throwable {
    int[] intArray0 = new int[8];
    Integer[] integerArray0 = ArrayUtils.toObject(intArray0);
    int[] intArray1 = ArrayUtils.toPrimitive(integerArray0);
    assertNotNull(intArray1);
}",1,
project,0,test274290,"public void test274290() throws Throwable {
    int[] intArray0 = new int[8];
    Integer[] integerArray0 = ArrayUtils.toObject(intArray0);
    int[] intArray1 = ArrayUtils.toPrimitive(integerArray0);
    assertEquals(8, intArray1.length);
}",1,
project,0,test275291,"public void test275291() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    Long[] longArray0 = ArrayUtils.toObject(arrayUtils0.EMPTY_LONG_ARRAY);
    assertEquals(0, longArray0.length);
}",0,
project,0,test276292,"public void test276292() throws Throwable {
    Long[] longArray0 = ArrayUtils.toObject((long[]) null);
    assertNull(longArray0);
}",0,
project,0,test277293,"public void test277293() throws Throwable {
    long[] longArray0 = ArrayUtils.add((long[]) null, 0L);
    Long[] longArray1 = ArrayUtils.toObject(longArray0);
    assertNotNull(longArray1);
}",0,
project,0,test277294,"public void test277294() throws Throwable {
    long[] longArray0 = ArrayUtils.add((long[]) null, 0L);
    Long[] longArray1 = ArrayUtils.toObject(longArray0);
    assertEquals(1, longArray1.length);
}",0,
project,0,test278295,"public void test278295() throws Throwable {
    Long[] longArray0 = new Long[0];
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0, (-2360L));
    assertEquals(0, longArray1.length);
}",0,
project,0,test279296,"public void test279296() throws Throwable {
    long[] longArray0 = ArrayUtils.toPrimitive((Long[]) null, 2465L);
    assertNull(longArray0);
}",0,
project,0,test280297,"public void test280297() throws Throwable {
    Long[] longArray0 = new Long[1];
    Long long0 = new Long(375L);
    longArray0[0] = long0;
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0, (long) longArray0[0]);
    assertArrayEquals(new long[] { 375L }, longArray1);
}",0,
project,0,test280298,"public void test280298() throws Throwable {
    Long[] longArray0 = new Long[1];
    Long long0 = new Long(375L);
    longArray0[0] = long0;
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0, (long) longArray0[0]);
    assertNotNull(longArray1);
}",0,
project,0,test281299,"public void test281299() throws Throwable {
    Long[] longArray0 = new Long[2];
    Long long0 = new Long(1L);
    longArray0[0] = long0;
    longArray0[1] = longArray0[0];
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    assertNotNull(longArray1);
}",0,
project,0,test281300,"public void test281300() throws Throwable {
    Long[] longArray0 = new Long[2];
    Long long0 = new Long(1L);
    longArray0[0] = long0;
    longArray0[1] = longArray0[0];
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    assertArrayEquals(new long[] { 1L, 1L }, longArray1);
}",0,
project,0,test282301,"public void test282301() throws Throwable {
    Long[] longArray0 = new Long[0];
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    assertEquals(0, longArray1.length);
}",0,
project,0,test283302,"public void test283302() throws Throwable {
    Long[] longArray0 = new Long[2];
    // Undeclared exception!
    try {
        ArrayUtils.toPrimitive(longArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test284303,"public void test284303() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    Character[] characterArray0 = ArrayUtils.toObject(arrayUtils0.EMPTY_CHAR_ARRAY);
    assertEquals(0, characterArray0.length);
}",0,
project,0,test285304,"public void test285304() throws Throwable {
    Character[] characterArray0 = ArrayUtils.toObject((char[]) null);
    assertNull(characterArray0);
}",0,
project,0,test286305,"public void test286305() throws Throwable {
    Character[] characterArray0 = new Character[2];
    Character character0 = new Character('`');
    characterArray0[0] = character0;
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0, '&');
    assertArrayEquals(new char[] { '`', '&' }, charArray0);
}",1,
project,0,test287306,"public void test287306() throws Throwable {
    char[] charArray0 = ArrayUtils.toPrimitive((Character[]) null, 'a');
    assertNull(charArray0);
}",0,
project,0,test288307,"public void test288307() throws Throwable {
    Character[] characterArray0 = new Character[1];
    characterArray0[0] = (Character) 'G';
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    assertArrayEquals(new char[] { 'G' }, charArray0);
}",0,
project,0,test289308,"public void test289308() throws Throwable {
    Character[] characterArray0 = new Character[0];
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    assertEquals(0, charArray0.length);
}",1,
project,0,test290309,"public void test290309() throws Throwable {
    char[] charArray0 = ArrayUtils.toPrimitive((Character[]) null);
    assertNull(charArray0);
}",0,assertNotNull(charArray0)
project,0,test291310,"public void test291310() throws Throwable {
    Character[] characterArray0 = new Character[1];
    // Undeclared exception!
    try {
        ArrayUtils.toPrimitive(characterArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",1,
project,0,test292311,"public void test292311() throws Throwable {
    boolean[] booleanArray0 = new boolean[5];
    boolean boolean0 = ArrayUtils.contains(booleanArray0, false);
    assertTrue(boolean0);
}",1,
project,0,test293312,"public void test293312() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean boolean0 = ArrayUtils.contains(booleanArray0, true);
    assertFalse(boolean0);
}",1,
project,0,test294313,"public void test294313() throws Throwable {
    boolean[] booleanArray0 = new boolean[7];
    booleanArray0[0] = true;
    booleanArray0[1] = true;
    booleanArray0[2] = true;
    booleanArray0[3] = true;
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, false, 3);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test295314,"public void test295314() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, false, (-3397));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test296315,"public void test296315() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((boolean[]) null, false, 118);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test297316,"public void test297316() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    int int0 = ArrayUtils.indexOf(booleanArray0, true, (-1903));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test298317,"public void test298317() throws Throwable {
    float[] floatArray0 = new float[5];
    floatArray0[3] = (float) (short) (-1);
    boolean boolean0 = ArrayUtils.contains(floatArray0, (-1.0F));
    assertTrue(boolean0);
}",1,
project,0,test299318,"public void test299318() throws Throwable {
    float[] floatArray0 = new float[7];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, (-1152.65F), 2);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test300319,"public void test300319() throws Throwable {
    float[] floatArray0 = new float[4];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, 0.0F, (-943));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test301320,"public void test301320() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((float[]) null, (float) (byte) 64);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test302321,"public void test302321() throws Throwable {
    float[] floatArray0 = new float[4];
    int int0 = ArrayUtils.indexOf(floatArray0, 3301.3457F, (-3067));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test303322,"public void test303322() throws Throwable {
    double[] doubleArray0 = new double[9];
    doubleArray0[4] = (double) (short) 2168;
    boolean boolean0 = ArrayUtils.contains(doubleArray0, 2168.0, (double) 4);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test304323,"public void test304323() throws Throwable {
    double[] doubleArray0 = new double[8];
    boolean boolean0 = ArrayUtils.contains(doubleArray0, (double) (short) 26214, 939.37784);
    assertFalse(boolean0);
}",1,
project,0,test305324,"public void test305324() throws Throwable {
    double[] doubleArray0 = new double[5];
    doubleArray0[4] = 852.772538765;
    boolean boolean0 = ArrayUtils.contains(doubleArray0, 852.772538765);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test306325,"public void test306325() throws Throwable {
    double[] doubleArray0 = new double[3];
    doubleArray0[2] = 2269.0511557721948;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 1.0, 1.0);
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test307326,"public void test307326() throws Throwable {
    double[] doubleArray0 = new double[6];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-32.706932), (int) (short) 1, 1310.6);
    assertEquals(1, int0);
}",0,
project,0,test308327,"public void test308327() throws Throwable {
    double[] doubleArray0 = new double[9];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 554.94136, (-3084), (double) (byte) (-49));
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test309328,"public void test309328() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((double[]) null, (double) 0.0F, (int) (byte) 0, (-1476.73027527364));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test310329,"public void test310329() throws Throwable {
    double[] doubleArray0 = new double[2];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 48);
    assertEquals(1, int0);
}",0,
project,0,test311330,"public void test311330() throws Throwable {
    double[] doubleArray0 = new double[6];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (double) (-330.81F), 2);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test312331,"public void test312331() throws Throwable {
    double[] doubleArray0 = new double[7];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1178.3237168008875), (-1717986918));
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test313332,"public void test313332() throws Throwable {
    double[] doubleArray0 = new double[0];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (double) (-1), 3282);
    assertEquals((-1), int0);
}",0,
project,0,test314333,"public void test314333() throws Throwable {
    double[] doubleArray0 = new double[4];
    doubleArray0[0] = 603.0;
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) 0L, 0.0);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test315334,"public void test315334() throws Throwable {
    double[] doubleArray0 = new double[9];
    int int0 = ArrayUtils.indexOf(doubleArray0, 0.0, (-875), 1.5);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test316335,"public void test316335() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    int int0 = ArrayUtils.indexOf(arrayUtils0.EMPTY_DOUBLE_ARRAY, 1.5, (-370), 1.0);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test317336,"public void test317336() throws Throwable {
    double[] doubleArray0 = new double[5];
    int int0 = ArrayUtils.indexOf(doubleArray0, (-1.0), (-449));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test318337,"public void test318337() throws Throwable {
    byte[] byteArray0 = new byte[9];
    byteArray0[3] = (byte) 4;
    boolean boolean0 = ArrayUtils.contains(byteArray0, (byte) 4);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test319338,"public void test319338() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byteArray0[0] = (byte) 2;
    boolean boolean0 = ArrayUtils.contains(byteArray0, (byte) 0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test320339,"public void test320339() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[2] = (byte) 19;
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 19);
    assertEquals(2, int0);
}",0,"assertEquals(0, int0)"
project,0,test321340,"public void test321340() throws Throwable {
    byte[] byteArray0 = new byte[2];
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 0, (-1768));
    assertEquals((-1), int0);
}",0,
project,0,test322341,"public void test322341() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((byte[]) null, (byte) 0, 0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test323342,"public void test323342() throws Throwable {
    byte[] byteArray0 = new byte[1];
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) 0, (-3328));
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test324343,"public void test324343() throws Throwable {
    int int0 = ArrayUtils.indexOf((byte[]) null, (byte) 33, (-650));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test325344,"public void test325344() throws Throwable {
    char[] charArray0 = new char[8];
    charArray0[6] = ']';
    boolean boolean0 = ArrayUtils.contains(charArray0, ']');
    assertTrue(boolean0);
}",1,
project,0,test326345,"public void test326345() throws Throwable {
    char[] charArray0 = new char[1];
    charArray0[0] = '7';
    int int0 = ArrayUtils.lastIndexOf(charArray0, '7', 1);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test327346,"public void test327346() throws Throwable {
    char[] charArray0 = new char[4];
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'I', 2);
    assertEquals((-1), int0);
}",0,
project,0,test328347,"public void test328347() throws Throwable {
    char[] charArray0 = new char[6];
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'v', (-1));
    assertEquals((-1), int0);
}",0,
project,0,test329348,"public void test329348() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((char[]) null, '!', 2);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test330349,"public void test330349() throws Throwable {
    char[] charArray0 = new char[2];
    charArray0[0] = '>';
    int int0 = ArrayUtils.indexOf(charArray0, '>', (int) (short) (-2181));
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test331350,"public void test331350() throws Throwable {
    boolean boolean0 = ArrayUtils.contains((char[]) null, 'T');
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test332351,"public void test332351() throws Throwable {
    short[] shortArray0 = new short[7];
    shortArray0[0] = (short) (-26);
    boolean boolean0 = ArrayUtils.contains(shortArray0, (short) (-26));
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test333352,"public void test333352() throws Throwable {
    short[] shortArray0 = new short[2];
    boolean boolean0 = ArrayUtils.contains(shortArray0, (short) (-64));
    assertFalse(boolean0);
}",1,
project,0,test334353,"public void test334353() throws Throwable {
    short[] shortArray0 = new short[2];
    shortArray0[1] = (short) 2168;
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 2168, 13);
    assertEquals(1, int0);
}",0,
project,0,test335354,"public void test335354() throws Throwable {
    short[] shortArray0 = new short[9];
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 1, (-648));
    assertEquals((-1), int0);
}",0,
project,0,test336355,"public void test336355() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((short[]) null, (short) (-1697));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test337356,"public void test337356() throws Throwable {
    int[] intArray0 = new int[5];
    intArray0[3] = 57;
    boolean boolean0 = ArrayUtils.contains(intArray0, 57);
    assertTrue(boolean0);
}",1,
project,0,test338357,"public void test338357() throws Throwable {
    int[] intArray0 = new int[1];
    boolean boolean0 = ArrayUtils.contains(intArray0, (-1408));
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test339358,"public void test339358() throws Throwable {
    int[] intArray0 = new int[8];
    intArray0[2] = (-562);
    int int0 = ArrayUtils.lastIndexOf(intArray0, (-562), 11);
    assertEquals(2, int0);
}",0,
project,0,test340359,"public void test340359() throws Throwable {
    int[] intArray0 = new int[8];
    int int0 = ArrayUtils.lastIndexOf(intArray0, 5, (-1));
    assertEquals((-1), int0);
}",0,
project,0,test341360,"public void test341360() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((int[]) null, (-4227), 69);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test342361,"public void test342361() throws Throwable {
    int[] intArray0 = new int[1];
    int int0 = ArrayUtils.indexOf(intArray0, 0, (-1596));
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test343362,"public void test343362() throws Throwable {
    int int0 = ArrayUtils.indexOf((int[]) null, 18, (int) (byte) 0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test344363,"public void test344363() throws Throwable {
    long[] longArray0 = new long[2];
    longArray0[0] = (-221L);
    boolean boolean0 = ArrayUtils.contains(longArray0, (-221L));
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test345364,"public void test345364() throws Throwable {
    long[] longArray0 = new long[9];
    longArray0[1] = (-1894L);
    int int0 = ArrayUtils.lastIndexOf(longArray0, (-1894L), Integer.MAX_VALUE);
    assertEquals(1, int0);
}",0,
project,0,test346365,"public void test346365() throws Throwable {
    long[] longArray0 = new long[6];
    int int0 = ArrayUtils.lastIndexOf(longArray0, (-1L), 3);
    assertEquals((-1), int0);
}",0,
project,0,test347366,"public void test347366() throws Throwable {
    long[] longArray0 = new long[6];
    int int0 = ArrayUtils.lastIndexOf(longArray0, 317L, (-1));
    assertEquals((-1), int0);
}",0,
project,0,test348367,"public void test348367() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((long[]) null, 1L, 0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test349368,"public void test349368() throws Throwable {
    long[] longArray0 = new long[9];
    longArray0[5] = 1L;
    int int0 = ArrayUtils.indexOf(longArray0, 1L, (-1073741824));
    assertEquals(5, int0);
}",0,"assertEquals(1, int0)"
project,0,test350369,"public void test350369() throws Throwable {
    Object[] objectArray0 = new Object[7];
    boolean boolean0 = ArrayUtils.contains(objectArray0, objectArray0[0]);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test351370,"public void test351370() throws Throwable {
    Object[] objectArray0 = new Object[1];
    Object object0 = new Object();
    boolean boolean0 = ArrayUtils.contains(objectArray0, object0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test352371,"public void test352371() throws Throwable {
    char[] charArray0 = new char[6];
    Character[] characterArray0 = ArrayUtils.toObject(charArray0);
    assertNotNull(characterArray0);
}",0,
project,0,test352372,"public void test352372() throws Throwable {
    char[] charArray0 = new char[6];
    Character[] characterArray0 = ArrayUtils.toObject(charArray0);
    Integer integer0 = new Integer(55);
    int int0 = ArrayUtils.lastIndexOf((Object[]) characterArray0, (Object) integer0, 647);
    assertEquals(6, characterArray0.length);
}",0,
project,0,test352373,"public void test352373() throws Throwable {
    char[] charArray0 = new char[6];
    Character[] characterArray0 = ArrayUtils.toObject(charArray0);
    Integer integer0 = new Integer(55);
    int int0 = ArrayUtils.lastIndexOf((Object[]) characterArray0, (Object) integer0, 647);
    assertEquals((-1), int0);
}",0,
project,0,test353374,"public void test353374() throws Throwable {
    Object[] objectArray0 = new Object[4];
    objectArray0[3] = (Object) 'i';
    int int0 = ArrayUtils.lastIndexOf(objectArray0, objectArray0[2], (int) 'U');
    assertEquals(2, int0);
}",0,
project,0,test354375,"public void test354375() throws Throwable {
    Object[] objectArray0 = new Object[5];
    objectArray0[0] = (Object) (short) 0;
    int int0 = ArrayUtils.lastIndexOf(objectArray0, objectArray0[0]);
    assertEquals(0, int0);
}",1,
project,0,test355376,"public void test355376() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    int int0 = ArrayUtils.lastIndexOf((Object[]) arrayUtils0.EMPTY_STRING_ARRAY, (Object) arrayUtils0, (-1));
    assertEquals((-1), int0);
}",0,
project,0,test356377,"public void test356377() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((Object[]) null, (Object) ""org.apache.commons.lang3.ArrayUtils"", Integer.MAX_VALUE);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test357378,"public void test357378() throws Throwable {
    Object[] objectArray0 = new Object[2];
    Object object0 = new Object();
    objectArray0[0] = object0;
    int int0 = ArrayUtils.indexOf(objectArray0, object0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test358379,"public void test358379() throws Throwable {
    Object[] objectArray0 = new Object[2];
    int int0 = ArrayUtils.indexOf(objectArray0, (Object) ""gp^{:T6UR^jb1"");
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test359380,"public void test359380() throws Throwable {
    Object[] objectArray0 = new Object[8];
    Object object0 = new Object();
    objectArray0[0] = object0;
    objectArray0[1] = objectArray0[0];
    objectArray0[2] = objectArray0[1];
    objectArray0[3] = objectArray0[1];
    objectArray0[4] = objectArray0[0];
    objectArray0[5] = objectArray0[0];
    objectArray0[6] = objectArray0[0];
    objectArray0[7] = objectArray0[1];
    int int0 = ArrayUtils.indexOf(objectArray0, (Object) null, (-348));
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test362382,"public void test362382() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    ArrayUtils.reverse(booleanArray0);
    assertEquals(0, booleanArray0.length);
}",0,
project,0,test364383,"public void test364383() throws Throwable {
    float[] floatArray0 = new float[7];
    ArrayUtils.reverse(floatArray0);
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test365384,"public void test365384() throws Throwable {
    double[] doubleArray0 = new double[9];
    ArrayUtils.reverse(doubleArray0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test366385,"public void test366385() throws Throwable {
    byte[] byteArray0 = new byte[4];
    ArrayUtils.reverse(byteArray0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test368386,"public void test368386() throws Throwable {
    byte[] byteArray0 = ArrayUtils.add((byte[]) null, (byte) 0);
    assertNotNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test368387,"public void test368387() throws Throwable {
    byte[] byteArray0 = ArrayUtils.add((byte[]) null, (byte) 0);
    ArrayUtils.reverse(byteArray0);
    assertArrayEquals(new byte[] { (byte) 0 }, byteArray0);
}",0,
project,0,test370388,"public void test370388() throws Throwable {
    char[] charArray0 = new char[3];
    ArrayUtils.reverse(charArray0);
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test371389,"public void test371389() throws Throwable {
    short[] shortArray0 = new short[2];
    ArrayUtils.reverse(shortArray0);
    assertArrayEquals(new short[] { (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test373390,"public void test373390() throws Throwable {
    int[] intArray0 = new int[4];
    ArrayUtils.reverse(intArray0);
    assertArrayEquals(new int[] { 0, 0, 0, 0 }, intArray0);
}",0,
project,0,test375391,"public void test375391() throws Throwable {
    long[] longArray0 = new long[4];
    ArrayUtils.reverse(longArray0);
    assertEquals(4, longArray0.length);
}",0,
project,0,test376392,"public void test376392() throws Throwable {
    Byte[] byteArray0 = new Byte[2];
    ArrayUtils.reverse((Object[]) byteArray0);
    assertEquals(2, byteArray0.length);
}",0,
project,0,test377393,"public void test377393() throws Throwable {
    Object object0 = new Object();
    boolean boolean0 = ArrayUtils.isSameType(""Array element "", object0);
    assertFalse(boolean0);
}",1,
project,0,test378394,"public void test378394() throws Throwable {
    // Undeclared exception!
    try {
        ArrayUtils.isSameType((Object) null, ""jzYHQb-AJ"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",1,
project,0,test379395,"public void test379395() throws Throwable {
    // Undeclared exception!
    try {
        ArrayUtils.remove((boolean[]) null, (-1));
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -1, Length: 0
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test380396,"public void test380396() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    boolean[] booleanArray1 = new boolean[8];
    boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test381397,"public void test381397() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[4];
    Boolean boolean0 = Boolean.TRUE;
    booleanArray0[0] = boolean0;
    booleanArray0[1] = boolean0;
    booleanArray0[2] = booleanArray0[0];
    booleanArray0[3] = booleanArray0[0];
    boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
    boolean boolean1 = ArrayUtils.isSameLength((boolean[]) null, booleanArray1);
    assertFalse(boolean1);
}",0,assertTrue(boolean1)
project,0,test382399,"public void test382399() throws Throwable {
    boolean boolean0 = ArrayUtils.isSameLength((boolean[]) null, (boolean[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test383400,"public void test383400() throws Throwable {
    boolean[] booleanArray0 = new boolean[9];
    boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test384401,"public void test384401() throws Throwable {
    float[] floatArray0 = new float[7];
    float[] floatArray1 = new float[3];
    boolean boolean0 = ArrayUtils.isSameLength(floatArray0, floatArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test385402,"public void test385402() throws Throwable {
    float[] floatArray0 = new float[1];
    boolean boolean0 = ArrayUtils.isSameLength((float[]) null, floatArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test386403,"public void test386403() throws Throwable {
    boolean boolean0 = ArrayUtils.isSameLength((float[]) null, (float[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test387404,"public void test387404() throws Throwable {
    float[] floatArray0 = new float[2];
    boolean boolean0 = ArrayUtils.isSameLength(floatArray0, floatArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test388405,"public void test388405() throws Throwable {
    double[] doubleArray0 = new double[8];
    double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    boolean boolean0 = ArrayUtils.isSameLength(doubleArray1, doubleArray0);
    assertEquals(16, doubleArray1.length);
}",0,
project,0,test388406,"public void test388406() throws Throwable {
    double[] doubleArray0 = new double[8];
    double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    boolean boolean0 = ArrayUtils.isSameLength(doubleArray1, doubleArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test389407,"public void test389407() throws Throwable {
    double[] doubleArray0 = new double[0];
    boolean boolean0 = ArrayUtils.isSameLength(doubleArray0, doubleArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test390408,"public void test390408() throws Throwable {
    byte[] byteArray0 = new byte[9];
    byte[] byteArray1 = new byte[5];
    boolean boolean0 = ArrayUtils.isSameLength(byteArray0, byteArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test391409,"public void test391409() throws Throwable {
    byte[] byteArray0 = new byte[9];
    boolean boolean0 = ArrayUtils.isSameLength(byteArray0, byteArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test392410,"public void test392410() throws Throwable {
    char[] charArray0 = new char[6];
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    boolean boolean0 = ArrayUtils.isSameLength(charArray1, charArray0);
    assertEquals(12, charArray1.length);
}",0,
project,0,test392411,"public void test392411() throws Throwable {
    char[] charArray0 = new char[6];
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    boolean boolean0 = ArrayUtils.isSameLength(charArray1, charArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test393412,"public void test393412() throws Throwable {
    boolean boolean0 = ArrayUtils.isSameLength((char[]) null, (char[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test394413,"public void test394413() throws Throwable {
    char[] charArray0 = new char[6];
    boolean boolean0 = ArrayUtils.isSameLength(charArray0, charArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test395414,"public void test395414() throws Throwable {
    short[] shortArray0 = new short[7];
    short[] shortArray1 = new short[4];
    boolean boolean0 = ArrayUtils.isSameLength(shortArray1, shortArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test396415,"public void test396415() throws Throwable {
    boolean boolean0 = ArrayUtils.isSameLength((short[]) null, (short[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test397416,"public void test397416() throws Throwable {
    short[] shortArray0 = new short[4];
    boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test398417,"public void test398417() throws Throwable {
    boolean boolean0 = ArrayUtils.isSameLength((int[]) null, (int[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test399418,"public void test399418() throws Throwable {
    int[] intArray0 = new int[1];
    boolean boolean0 = ArrayUtils.isSameLength(intArray0, intArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test400419,"public void test400419() throws Throwable {
    long[] longArray0 = new long[5];
    long[] longArray1 = new long[8];
    boolean boolean0 = ArrayUtils.isSameLength(longArray0, longArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test401420,"public void test401420() throws Throwable {
    boolean boolean0 = ArrayUtils.isSameLength((long[]) null, (long[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test402421,"public void test402421() throws Throwable {
    long[] longArray0 = new long[2];
    boolean boolean0 = ArrayUtils.isSameLength(longArray0, longArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test403422,"public void test403422() throws Throwable {
    Object[] objectArray0 = new Object[7];
    boolean boolean0 = ArrayUtils.isSameLength(objectArray0, objectArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test404423,"public void test404423() throws Throwable {
    boolean[] booleanArray0 = new boolean[9];
    boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 1479, 1479);
    assertEquals(0, booleanArray1.length);
}",0,
project,0,test405424,"public void test405424() throws Throwable {
    boolean[] booleanArray0 = ArrayUtils.subarray((boolean[]) null, 1, 1);
    assertNull(booleanArray0);
}",0,
project,0,test406425,"public void test406425() throws Throwable {
    float[] floatArray0 = new float[4];
    float[] floatArray1 = ArrayUtils.subarray(floatArray0, (-265), (-1));
    assertEquals(0, floatArray1.length);
}",0,
project,0,test407426,"public void test407426() throws Throwable {
    float[] floatArray0 = ArrayUtils.subarray((float[]) null, 0, Integer.MAX_VALUE);
    assertNull(floatArray0);
}",0,
project,0,test408427,"public void test408427() throws Throwable {
    double[] doubleArray0 = new double[5];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (int) (byte) 0, 2);
    assertEquals(2, doubleArray1.length);
}",0,
project,0,test409428,"public void test409428() throws Throwable {
    double[] doubleArray0 = new double[6];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (-3311), (-3311));
    assertEquals(0, doubleArray1.length);
}",0,
project,0,test410429,"public void test410429() throws Throwable {
    double[] doubleArray0 = ArrayUtils.subarray((double[]) null, 58, 58);
    assertNull(doubleArray0);
}",0,
project,0,test411430,"public void test411430() throws Throwable {
    double[] doubleArray0 = new double[1];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, 57, 4);
    assertEquals(0, doubleArray1.length);
}",0,
project,0,test411431,"public void test411431() throws Throwable {
    double[] doubleArray0 = new double[1];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, 57, 4);
    assertNotNull(doubleArray1);
}",0,
project,0,test412432,"public void test412432() throws Throwable {
    byte[] byteArray0 = new byte[2];
    byte[] byteArray1 = ArrayUtils.subarray(byteArray0, 0, 520);
    assertEquals(2, byteArray1.length);
}",0,
project,0,test412433,"public void test412433() throws Throwable {
    byte[] byteArray0 = new byte[2];
    byte[] byteArray1 = ArrayUtils.subarray(byteArray0, 0, 520);
    assertNotSame(byteArray1, byteArray0);
}",0,
project,0,test413434,"public void test413434() throws Throwable {
    byte[] byteArray0 = new byte[9];
    byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) (byte) 58, (int) (byte) 102);
    assertEquals(0, byteArray1.length);
}",0,
project,0,test414435,"public void test414435() throws Throwable {
    byte[] byteArray0 = new byte[4];
    byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) (byte) (-82), (int) (byte) (-1));
    assertEquals(0, byteArray1.length);
}",1,
project,0,test415436,"public void test415436() throws Throwable {
    byte[] byteArray0 = ArrayUtils.subarray((byte[]) null, 0, 0);
    assertNull(byteArray0);
}",0,
project,0,test416437,"public void test416437() throws Throwable {
    char[] charArray0 = new char[7];
    char[] charArray1 = ArrayUtils.subarray(charArray0, 0, Integer.MAX_VALUE);
    assertNotSame(charArray1, charArray0);
}",0,
project,0,test416438,"public void test416438() throws Throwable {
    char[] charArray0 = new char[7];
    char[] charArray1 = ArrayUtils.subarray(charArray0, 0, Integer.MAX_VALUE);
    assertEquals(7, charArray1.length);
}",0,
project,0,test417439,"public void test417439() throws Throwable {
    char[] charArray0 = new char[7];
    char[] charArray1 = ArrayUtils.subarray(charArray0, (int) (short) (-4227), (-2146065914));
    assertEquals(0, charArray1.length);
}",0,
project,0,test418440,"public void test418440() throws Throwable {
    char[] charArray0 = ArrayUtils.subarray((char[]) null, (-3067), 2145847248);
    assertNull(charArray0);
}",0,assertNotNull(charArray0)
project,0,test419441,"public void test419441() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, (-2211), 836);
    assertEquals(1, shortArray1.length);
}",0,
project,0,test419442,"public void test419442() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, (-2211), 836);
    assertNotSame(shortArray1, shortArray0);
}",0,
project,0,test420443,"public void test420443() throws Throwable {
    short[] shortArray0 = new short[8];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (short) (-648), (int) (short) 0);
    assertEquals(0, shortArray1.length);
}",0,
project,0,test421444,"public void test421444() throws Throwable {
    short[] shortArray0 = ArrayUtils.subarray((short[]) null, (-608), (-608));
    assertNull(shortArray0);
}",0,
project,0,test422445,"public void test422445() throws Throwable {
    int[] intArray0 = new int[1];
    int[] intArray1 = ArrayUtils.subarray(intArray0, (-1578), 3);
    assertEquals(1, intArray1.length);
}",0,
project,0,test422446,"public void test422446() throws Throwable {
    int[] intArray0 = new int[1];
    int[] intArray1 = ArrayUtils.subarray(intArray0, (-1578), 3);
    assertNotSame(intArray1, intArray0);
}",0,
project,0,test423447,"public void test423447() throws Throwable {
    int[] intArray0 = ArrayUtils.subarray((int[]) null, 1092, 1092);
    assertNull(intArray0);
}",0,"assertEquals(1, intArray0)"
project,0,test424448,"public void test424448() throws Throwable {
    int[] intArray0 = new int[6];
    int[] intArray1 = ArrayUtils.subarray(intArray0, 1190, 0);
    assertNotNull(intArray1);
}",0,"assertEquals(1, intArray1)"
project,0,test424449,"public void test424449() throws Throwable {
    int[] intArray0 = new int[6];
    int[] intArray1 = ArrayUtils.subarray(intArray0, 1190, 0);
    boolean boolean0 = ArrayUtils.isSameLength(intArray1, intArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test425450,"public void test425450() throws Throwable {
    long[] longArray0 = new long[4];
    long[] longArray1 = ArrayUtils.subarray(longArray0, 0, 2);
    assertNotNull(longArray1);
}",0,"assertEquals(longArray0, longArray1)"
project,0,test425451,"public void test425451() throws Throwable {
    long[] longArray0 = new long[4];
    long[] longArray1 = ArrayUtils.subarray(longArray0, 0, 2);
    assertEquals(2, longArray1.length);
}",0,
project,0,test426452,"public void test426452() throws Throwable {
    long[] longArray0 = new long[5];
    long[] longArray1 = ArrayUtils.subarray(longArray0, 57, 204);
    assertEquals(0, longArray1.length);
}",0,
project,0,test426453,"public void test426453() throws Throwable {
    long[] longArray0 = new long[5];
    long[] longArray1 = ArrayUtils.subarray(longArray0, 57, 204);
    assertNotNull(longArray1);
}",0,
project,0,test427454,"public void test427454() throws Throwable {
    long[] longArray0 = new long[2];
    long[] longArray1 = ArrayUtils.subarray(longArray0, (-386), (int) (byte) (-80));
    assertNotNull(longArray1);
}",0,
project,0,test427455,"public void test427455() throws Throwable {
    long[] longArray0 = new long[2];
    long[] longArray1 = ArrayUtils.subarray(longArray0, (-386), (int) (byte) (-80));
    assertEquals(0, longArray1.length);
}",0,
project,0,test428456,"public void test428456() throws Throwable {
    Object[] objectArray0 = new Object[1];
    Object[] objectArray1 = ArrayUtils.subarray(objectArray0, (-110), 414);
    assertEquals(1, objectArray1.length);
}",0,
project,0,test428457,"public void test428457() throws Throwable {
    Object[] objectArray0 = new Object[1];
    Object[] objectArray1 = ArrayUtils.subarray(objectArray0, (-110), 414);
    assertNotNull(objectArray1);
}",0,
project,0,test428458,"public void test428458() throws Throwable {
    Object[] objectArray0 = new Object[1];
    Object[] objectArray1 = ArrayUtils.subarray(objectArray0, (-110), 414);
    assertNotSame(objectArray1, objectArray0);
}",0,
project,0,test429459,"public void test429459() throws Throwable {
    Integer[] integerArray0 = new Integer[4];
    Integer[] integerArray1 = ArrayUtils.subarray(integerArray0, 0, 0);
    assertEquals(0, integerArray1.length);
}",0,
project,0,test429460,"public void test429460() throws Throwable {
    Integer[] integerArray0 = new Integer[4];
    Integer[] integerArray1 = ArrayUtils.subarray(integerArray0, 0, 0);
    assertNotNull(integerArray1);
}",0,
project,0,test430461,"public void test430461() throws Throwable {
    float[] floatArray0 = new float[4];
    Float[] floatArray1 = ArrayUtils.toObject(floatArray0);
    Object[] objectArray0 = ArrayUtils.subarray((Object[]) floatArray1, (-1), (-1));
    assertEquals(0, objectArray0.length);
}",0,
project,0,test430462,"public void test430462() throws Throwable {
    float[] floatArray0 = new float[4];
    Float[] floatArray1 = ArrayUtils.toObject(floatArray0);
    Object[] objectArray0 = ArrayUtils.subarray((Object[]) floatArray1, (-1), (-1));
    assertNotNull(objectArray0);
}",0,
project,0,test430463,"public void test430463() throws Throwable {
    float[] floatArray0 = new float[4];
    Float[] floatArray1 = ArrayUtils.toObject(floatArray0);
    Object[] objectArray0 = ArrayUtils.subarray((Object[]) floatArray1, (-1), (-1));
    assertEquals(4, floatArray1.length);
}",0,
project,0,test431464,"public void test431464() throws Throwable {
    boolean[] booleanArray0 = ArrayUtils.removeElement((boolean[]) null, true);
    assertNull(booleanArray0);
}",0,
project,0,test432465,"public void test432465() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean[] booleanArray1 = ArrayUtils.removeElement(booleanArray0, true);
    assertEquals(0, booleanArray1.length);
}",0,
project,0,test433466,"public void test433466() throws Throwable {
    float[] floatArray0 = ArrayUtils.removeElement((float[]) null, (float) 0L);
    assertNull(floatArray0);
}",0,
project,0,test434467,"public void test434467() throws Throwable {
    float[] floatArray0 = new float[4];
    float[] floatArray1 = ArrayUtils.clone(floatArray0);
    assertNotNull(floatArray1);
}",0,
project,0,test434468,"public void test434468() throws Throwable {
    float[] floatArray0 = new float[4];
    float[] floatArray1 = ArrayUtils.clone(floatArray0);
    assertEquals(4, floatArray1.length);
}",0,
project,0,test435469,"public void test435469() throws Throwable {
    double[] doubleArray0 = ArrayUtils.addAll((double[]) null, (double[]) null);
    assertNull(doubleArray0);
}",0,
project,0,test436470,"public void test436470() throws Throwable {
    double[] doubleArray0 = new double[7];
    double[] doubleArray1 = ArrayUtils.clone(doubleArray0);
    assertEquals(7, doubleArray1.length);
}",0,
project,0,test436471,"public void test436471() throws Throwable {
    double[] doubleArray0 = new double[7];
    double[] doubleArray1 = ArrayUtils.clone(doubleArray0);
    assertNotNull(doubleArray1);
}",0,
project,0,test437472,"public void test437472() throws Throwable {
    byte[] byteArray0 = ArrayUtils.clone((byte[]) null);
    assertNull(byteArray0);
}",0,
project,0,test439474,"public void test439474() throws Throwable {
    char[] charArray0 = ArrayUtils.clone((char[]) null);
    assertNull(charArray0);
}",0,
project,0,test440475,"public void test440475() throws Throwable {
    short[] shortArray0 = ArrayUtils.removeElement((short[]) null, (short) 0);
    assertNull(shortArray0);
}",0,assertNotNull(shortArray0)
project,0,test441476,"public void test441476() throws Throwable {
    short[] shortArray0 = new short[6];
    short[] shortArray1 = ArrayUtils.clone(shortArray0);
    assertNotNull(shortArray1);
}",0,"assertEquals(shortArray0, shortArray1)"
project,0,test441477,"public void test441477() throws Throwable {
    short[] shortArray0 = new short[6];
    short[] shortArray1 = ArrayUtils.clone(shortArray0);
    assertEquals(6, shortArray1.length);
}",0,
project,0,test442478,"public void test442478() throws Throwable {
    int[] intArray0 = ArrayUtils.addAll((int[]) null, (int[]) null);
    assertNull(intArray0);
}",0,"assertEquals(0, intArray0)"
project,0,test443479,"public void test443479() throws Throwable {
    long[] longArray0 = ArrayUtils.removeElement((long[]) null, 1L);
    assertNull(longArray0);
}",0,assertNotNull(longArray0)
project,0,test445481,"public void test445481() throws Throwable {
    Object[] objectArray0 = ArrayUtils.removeElement((Object[]) null, (Object) ""org.apache.commons.lang3.ArrayUtils"");
    assertNull(objectArray0);
}",0,
project,0,test446482,"public void test446482() throws Throwable {
    Object object0 = new Object();
    String[] stringArray0 = new String[8];
    String[] stringArray1 = ArrayUtils.removeElement(stringArray0, object0);
    assertNotNull(stringArray1);
}",0,assertNotNull(stringArray1)
project,0,test446483,"public void test446483() throws Throwable {
    Object object0 = new Object();
    String[] stringArray0 = new String[8];
    String[] stringArray1 = ArrayUtils.removeElement(stringArray0, object0);
    assertEquals(8, stringArray1.length);
}",0,
project,0,test448485,"public void test448485() throws Throwable {
    double[] doubleArray0 = new double[5];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    // Undeclared exception!
    try {
        ArrayUtils.toMap(doubleArray1);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array element 0, '0.0', is neither of type Map.Entry nor an Array
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test449486,"public void test449486() throws Throwable {
    String string0 = ArrayUtils.toString((Object) null, ""java.lang.Object"");
    assertEquals(""java.lang.Object"", string0);
}",0,
project,0,test450487,"public void test450487() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[1] = (byte) 82;
    byte[] byteArray1 = ArrayUtils.removeElement(byteArray0, (byte) 82);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray1);
}",0,
project,0,test450488,"public void test450488() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[1] = (byte) 82;
    byte[] byteArray1 = ArrayUtils.removeElement(byteArray0, (byte) 82);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 82, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test451489,"public void test451489() throws Throwable {
    char[] charArray0 = new char[5];
    // Undeclared exception!
    try {
        ArrayUtils.add(charArray0, (-4227), 'a');
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -4227, Length: 5
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test452490,"public void test452490() throws Throwable {
    long[] longArray0 = new long[3];
    // Undeclared exception!
    try {
        ArrayUtils.remove(longArray0, (-2023));
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -2023, Length: 3
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test453491,"public void test453491() throws Throwable {
    Object[] objectArray0 = new Object[0];
    Object[] objectArray1 = ArrayUtils.toArray(objectArray0);
    assertSame(objectArray1, objectArray0);
}",0,
project,0,test454492,"public void test454492() throws Throwable {
    double[] doubleArray0 = new double[5];
    doubleArray0[3] = (-1420.8574896);
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, (-1420.8574896));
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0 }, doubleArray1, 0.01);
}",0,
project,0,test455493,"public void test455493() throws Throwable {
    float[] floatArray0 = new float[3];
    // Undeclared exception!
    try {
        ArrayUtils.add(floatArray0, 2203, 0.0F);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 2203, Length: 3
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test456494,"public void test456494() throws Throwable {
    byte[] byteArray0 = ArrayUtils.add((byte[]) null, (byte) 0);
    boolean boolean0 = ArrayUtils.isSameLength(byteArray0, (byte[]) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test456495,"public void test456495() throws Throwable {
    byte[] byteArray0 = ArrayUtils.add((byte[]) null, (byte) 0);
    boolean boolean0 = ArrayUtils.isSameLength(byteArray0, (byte[]) null);
    assertArrayEquals(new byte[] { (byte) 0 }, byteArray0);
}",0,
project,0,test457496,"public void test457496() throws Throwable {
    double[] doubleArray0 = new double[6];
    // Undeclared exception!
    try {
        ArrayUtils.add(doubleArray0, (-1), 0.0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -1, Length: 6
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test458497,"public void test458497() throws Throwable {
    long[] longArray0 = new long[5];
    boolean boolean0 = ArrayUtils.contains(longArray0, (-1380L));
    assertFalse(boolean0);
}",1,
project,0,test459498,"public void test459498() throws Throwable {
    byte[] byteArray0 = new byte[5];
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) 19);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test460499,"public void test460499() throws Throwable {
    boolean[] booleanArray0 = new boolean[7];
    boolean[] booleanArray1 = ArrayUtils.removeElement(booleanArray0, false);
    assertEquals(6, booleanArray1.length);
}",0,
project,0,test461500,"public void test461500() throws Throwable {
    double[] doubleArray0 = new double[4];
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) 0L, 0.0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test462501,"public void test462501() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    short[] shortArray0 = ArrayUtils.add(arrayUtils0.EMPTY_SHORT_ARRAY, 0, (short) (-1447));
    assertArrayEquals(new short[] { (short) (-1447) }, shortArray0);
}",0,
project,0,test463502,"public void test463502() throws Throwable {
    float[] floatArray0 = new float[3];
    float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (float) (byte) 0);
    assertEquals(2, floatArray1.length);
}",0,
project,0,test464503,"public void test464503() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    double[] doubleArray0 = ArrayUtils.add(arrayUtils0.EMPTY_DOUBLE_ARRAY, (-1.0));
    assertArrayEquals(new double[] { (-1.0) }, doubleArray0, 0.01);
}",0,
project,0,test465504,"public void test465504() throws Throwable {
    boolean boolean0 = ArrayUtils.isEquals((Object) null, (Object) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test466505,"public void test466505() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.add(byteArray0, 1, (byte) (-113));
    assertArrayEquals(new byte[] { (byte) 0, (byte) (-113), (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray1);
}",0,
project,0,test467506,"public void test467506() throws Throwable {
    int[] intArray0 = new int[2];
    int[] intArray1 = ArrayUtils.add(intArray0, 0, (int) (byte) 98);
    assertArrayEquals(new int[] { 98, 0, 0 }, intArray1);
}",0,
project,0,test468507,"public void test468507() throws Throwable {
    short[] shortArray0 = new short[9];
    short[] shortArray1 = ArrayUtils.add(shortArray0, (short) 0);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray1);
}",0,
project,0,test469508,"public void test469508() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    // Undeclared exception!
    try {
        ArrayUtils.add(booleanArray0, 4064, true);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 4064, Length: 3
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test470509,"public void test470509() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, false);
    assertEquals(0, int0);
}",0,
project,0,test471510,"public void test471510() throws Throwable {
    byte[] byteArray0 = new byte[5];
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 19);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test472511,"public void test472511() throws Throwable {
    String string0 = ArrayUtils.toString((Object) ""java.lang.String"");
    assertEquals(""java.lang.String"", string0);
}",0,assertNotNull(string0)
project,0,test473512,"public void test473512() throws Throwable {
    float[] floatArray0 = new float[7];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, 0.0F);
    assertEquals(6, int0);
}",0,"assertEquals(0, int0)"
project,0,test474513,"public void test474513() throws Throwable {
    boolean[] booleanArray0 = ArrayUtils.add((boolean[]) null, true);
    int int0 = ArrayUtils.indexOf(booleanArray0, true);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test475514,"public void test475514() throws Throwable {
    Object[] objectArray0 = new Object[3];
    String[] stringArray0 = new String[8];
    String[] stringArray1 = ArrayUtils.removeElement(stringArray0, objectArray0[0]);
    assertEquals(7, stringArray1.length);
}",0,
project,0,test476515,"public void test476515() throws Throwable {
    double[] doubleArray0 = new double[0];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    assertNotNull(doubleArray1);
}",0,
project,0,test476516,"public void test476516() throws Throwable {
    double[] doubleArray0 = new double[0];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    int int0 = ArrayUtils.lastIndexOf((Object[]) doubleArray1, (Object) null);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test477517,"public void test477517() throws Throwable {
    short[] shortArray0 = new short[8];
    shortArray0[7] = (short) 64;
    short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) 64);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray1);
}",0,
project,0,test478518,"public void test478518() throws Throwable {
    Byte[] byteArray0 = new Byte[3];
    Byte byte0 = new Byte((byte) 120);
    byteArray0[0] = byte0;
    int[] intArray0 = ArrayUtils.add((int[]) null, (int) byteArray0[0]);
    assertArrayEquals(new int[] { 120 }, intArray0);
}",0,
project,0,test478519,"public void test478519() throws Throwable {
    Byte[] byteArray0 = new Byte[3];
    Byte byte0 = new Byte((byte) 120);
    byteArray0[0] = byte0;
    int[] intArray0 = ArrayUtils.add((int[]) null, (int) byteArray0[0]);
    assertNotNull(intArray0);
}",0,"assertEquals(1, intArray0)"
project,0,test479520,"public void test479520() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    boolean boolean0 = ArrayUtils.contains(arrayUtils0.EMPTY_DOUBLE_ARRAY, (double) (-1));
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test480521,"public void test480521() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = ArrayUtils.add(longArray0, 0, (long) 0);
    long[] longArray2 = ArrayUtils.add(longArray1, (-1L));
    assertArrayEquals(new long[] { 0L, (-1L) }, longArray2);
}",0,
project,0,test481522,"public void test481522() throws Throwable {
    char[] charArray0 = new char[3];
    char[] charArray1 = ArrayUtils.add(charArray0, '^');
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000', '^' }, charArray1);
}",0,
project,0,test482523,"public void test482523() throws Throwable {
    float[] floatArray0 = new float[7];
    float[] floatArray1 = ArrayUtils.add(floatArray0, 0.0F);
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, floatArray1, 0.01F);
}",0,
project,0,test483524,"public void test483524() throws Throwable {
    int[] intArray0 = new int[3];
    int int0 = ArrayUtils.lastIndexOf(intArray0, (-672));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
