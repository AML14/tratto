project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test007,"public void test007() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""'U"");
    // Undeclared exception!
    try {
        FastDatePrinter.getTimeZoneDisplay((TimeZone) null, true, (-2775), locale0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test0118,"public void test0118() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test0126,"public void test0126() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(""M%-<"", fastDatePrinter0.getPattern());
}",0,
project,0,test0127,"public void test0127() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(6, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test0128,"public void test0128() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test0129,"public void test0129() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test0130,"public void test0130() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test0131,"public void test0131() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test0139,"public void test0139() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1258, 0, 1, 9);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertNotNull(stringBuffer1);
}",0,
project,0,test0140,"public void test0140() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1258, 0, 1, 9);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertSame(stringBuffer0, stringBuffer1);
}",0,
project,0,test0141,"public void test0141() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1258, 0, 1, 9);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertSame(stringBuffer1, stringBuffer0);
}",0,
project,0,test0149,"public void test0149() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1258, 0, 1, 9);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(""M%-<"", fastDatePrinter0.getPattern());
}",0,
project,0,test0150,"public void test0150() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1258, 0, 1, 9);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(6, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test0154,"public void test0154() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1258, 0, 1, 9);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(""org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=-58859131860000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\""GMT\"",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=104,MONTH=9,WEEK_OF_YEAR=44,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=305,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=5,AM_PM=0,HOUR=1,HOUR_OF_DAY=1,MINUTE=9,SECOND=0,MILLISECOND=0,ZONE_OFFSET=0,DST_OFFSET=0]"", mockGregorianCalendar0.toString());
}",0,
project,0,test0160,"public void test0160() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1258, 0, 1, 9);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test0161,"public void test0161() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1258, 0, 1, 9);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test0162,"public void test0162() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1258, 0, 1, 9);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test0163,"public void test0163() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1258, 0, 1, 9);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test0277,"public void test0277() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""ewn|eBElUQ"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""^-zSS]J}30h"", simpleTimeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: J
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test0391,"public void test0391() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test03103,"public void test03103() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    assertEquals(""~G(z)"", fastDatePrinter0.getPattern());
}",0,
project,0,test03104,"public void test03104() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    assertEquals(14, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test03105,"public void test03105() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test03106,"public void test03106() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test03107,"public void test03107() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test03108,"public void test03108() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test03109,"public void test03109() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    int[] intArray0 = new int[23];
    String string0 = fastDatePrinter0.parseToken(""~AD(GMT+00:00)"", intArray0);
    assertEquals(""'~"", string0);
}",0,
project,0,test03110,"public void test03110() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    int[] intArray0 = new int[23];
    String string0 = fastDatePrinter0.parseToken(""~AD(GMT+00:00)"", intArray0);
    assertNotNull(string0);
}",0,
project,0,test03111,"public void test03111() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    int[] intArray0 = new int[23];
    String string0 = fastDatePrinter0.parseToken(""~AD(GMT+00:00)"", intArray0);
    assertEquals(23, intArray0.length);
}",0,
project,0,test03123,"public void test03123() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    int[] intArray0 = new int[23];
    String string0 = fastDatePrinter0.parseToken(""~AD(GMT+00:00)"", intArray0);
    assertEquals(""~G(z)"", fastDatePrinter0.getPattern());
}",0,
project,0,test03124,"public void test03124() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    int[] intArray0 = new int[23];
    String string0 = fastDatePrinter0.parseToken(""~AD(GMT+00:00)"", intArray0);
    assertEquals(14, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test03125,"public void test03125() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    int[] intArray0 = new int[23];
    String string0 = fastDatePrinter0.parseToken(""~AD(GMT+00:00)"", intArray0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test03126,"public void test03126() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    int[] intArray0 = new int[23];
    String string0 = fastDatePrinter0.parseToken(""~AD(GMT+00:00)"", intArray0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test03127,"public void test03127() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    int[] intArray0 = new int[23];
    String string0 = fastDatePrinter0.parseToken(""~AD(GMT+00:00)"", intArray0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test03128,"public void test03128() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    int[] intArray0 = new int[23];
    String string0 = fastDatePrinter0.parseToken(""~AD(GMT+00:00)"", intArray0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test04139,"public void test04139() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.MIN;
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.ITALIAN;
    String string0 = FastDatePrinter.getTimeZoneDisplay(timeZone0, false, 1, locale0);
    assertEquals(""GMT-18:00"", string0);
}",0,
project,0,test04140,"public void test04140() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.MIN;
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.ITALIAN;
    String string0 = FastDatePrinter.getTimeZoneDisplay(timeZone0, false, 1, locale0);
    assertNotNull(string0);
}",0,
project,0,test05161,"public void test05161() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test05173,"public void test05173() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    assertEquals(1, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test05174,"public void test05174() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    assertEquals("")"", fastDatePrinter0.getPattern());
}",0,
project,0,test05175,"public void test05175() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test05176,"public void test05176() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test05177,"public void test05177() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test05178,"public void test05178() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test05179,"public void test05179() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertNotNull(timeZone0);
}",0,assertNotNull(timeZone0)
project,0,test05180,"public void test05180() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertSame(simpleTimeZone0, timeZone0);
}",0,
project,0,test05181,"public void test05181() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertSame(timeZone0, simpleTimeZone0);
}",0,
project,0,test05193,"public void test05193() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(1, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test05194,"public void test05194() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals("")"", fastDatePrinter0.getPattern());
}",0,
project,0,test05197,"public void test05197() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(""java.util.SimpleTimeZone[id=,offset=60000,dstSavings=3600000,useDaylight=false,startYear=0,startMode=0,startMonth=0,startDay=0,startDayOfWeek=0,startTime=0,startTimeMode=0,endMode=0,endMonth=0,endDay=0,endDayOfWeek=0,endTime=0,endTimeMode=0]"", timeZone0.toString());
}",0,
project,0,test05200,"public void test05200() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test05201,"public void test05201() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test05202,"public void test05202() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test05203,"public void test05203() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(60000, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("")"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test06217,"public void test06217() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test06229,"public void test06229() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test06230,"public void test06230() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test06231,"public void test06231() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test06232,"public void test06232() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test06233,"public void test06233() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test06234,"public void test06234() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test06235,"public void test06235() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertNotNull(timeZone0);
}",0,assertNotNull(timeZone0)
project,0,test06236,"public void test06236() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertSame(simpleTimeZone0, timeZone0);
}",0,
project,0,test06237,"public void test06237() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertSame(timeZone0, simpleTimeZone0);
}",0,
project,0,test06249,"public void test06249() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test06250,"public void test06250() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test06251,"public void test06251() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(""java.util.SimpleTimeZone[id=,offset=-2775,dstSavings=3600000,useDaylight=false,startYear=0,startMode=0,startMonth=0,startDay=0,startDayOfWeek=0,startTime=0,startTimeMode=0,endMode=0,endMonth=0,endDay=0,endDayOfWeek=0,endTime=0,endTimeMode=0]"", timeZone0.toString());
}",0,
project,0,test06256,"public void test06256() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test06257,"public void test06257() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test06258,"public void test06258() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test06259,"public void test06259() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2775), """");
    Locale locale0 = Locale.CANADA_FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test07273,"public void test07273() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test07285,"public void test07285() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(22, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test07286,"public void test07286() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(""^-zSS]=}30h"", fastDatePrinter0.getPattern());
}",0,
project,0,test07287,"public void test07287() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test07288,"public void test07288() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test07289,"public void test07289() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test07290,"public void test07290() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test07291,"public void test07291() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertNotNull(timeZone0);
}",0,assertNotNull(timeZone0)
project,0,test07292,"public void test07292() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertSame(simpleTimeZone0, timeZone0);
}",0,
project,0,test07293,"public void test07293() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertSame(timeZone0, simpleTimeZone0);
}",0,
project,0,test07305,"public void test07305() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(22, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test07306,"public void test07306() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(""^-zSS]=}30h"", fastDatePrinter0.getPattern());
}",0,
project,0,test07308,"public void test07308() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(""java.util.SimpleTimeZone[id=^-zSS]=}30h,offset=0,dstSavings=3600000,useDaylight=false,startYear=0,startMode=0,startMonth=0,startDay=0,startDayOfWeek=0,startTime=0,startTimeMode=0,endMode=0,endMonth=0,endDay=0,endDayOfWeek=0,endTime=0,endTimeMode=0]"", timeZone0.toString());
}",0,
project,0,test07312,"public void test07312() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test07313,"public void test07313() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test07314,"public void test07314() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test07315,"public void test07315() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    TimeZone timeZone0 = fastDatePrinter0.getTimeZone();
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test08325,"public void test08325() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test08333,"public void test08333() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test08334,"public void test08334() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test08335,"public void test08335() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test08336,"public void test08336() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test08337,"public void test08337() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test08338,"public void test08338() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test08339,"public void test08339() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    String string0 = fastDatePrinter0.getPattern();
    assertEquals("""", string0);
}",0,
project,0,test08340,"public void test08340() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    String string0 = fastDatePrinter0.getPattern();
    assertNotNull(string0);
}",0,
project,0,test08348,"public void test08348() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    String string0 = fastDatePrinter0.getPattern();
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test08349,"public void test08349() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    String string0 = fastDatePrinter0.getPattern();
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test08350,"public void test08350() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    String string0 = fastDatePrinter0.getPattern();
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test08351,"public void test08351() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    String string0 = fastDatePrinter0.getPattern();
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test08352,"public void test08352() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    String string0 = fastDatePrinter0.getPattern();
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test08353,"public void test08353() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    String string0 = fastDatePrinter0.getPattern();
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test09367,"public void test09367() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-347), """");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test09379,"public void test09379() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-347), """");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test09380,"public void test09380() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-347), """");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test09381,"public void test09381() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-347), """");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test09382,"public void test09382() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-347), """");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test09383,"public void test09383() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-347), """");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test09384,"public void test09384() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-347), """");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test09385,"public void test09385() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-347), """");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    int int0 = fastDatePrinter0.getMaxLengthEstimate();
    assertEquals(0, int0);
}",0,
project,0,test09397,"public void test09397() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-347), """");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    int int0 = fastDatePrinter0.getMaxLengthEstimate();
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,
project,0,test09398,"public void test09398() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-347), """");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    int int0 = fastDatePrinter0.getMaxLengthEstimate();
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test09399,"public void test09399() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-347), """");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    int int0 = fastDatePrinter0.getMaxLengthEstimate();
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test09400,"public void test09400() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-347), """");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    int int0 = fastDatePrinter0.getMaxLengthEstimate();
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test09401,"public void test09401() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-347), """");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    int int0 = fastDatePrinter0.getMaxLengthEstimate();
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test09402,"public void test09402() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-347), """");
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    int int0 = fastDatePrinter0.getMaxLengthEstimate();
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test10412,"public void test10412() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test10420,"public void test10420() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test10421,"public void test10421() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test10422,"public void test10422() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test10423,"public void test10423() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test10424,"public void test10424() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test10425,"public void test10425() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test10427,"public void test10427() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Date) mockDate0, (StringBuffer) null);
    assertNull(stringBuffer0);
}",0,
project,0,test10435,"public void test10435() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Date) mockDate0, (StringBuffer) null);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test10436,"public void test10436() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Date) mockDate0, (StringBuffer) null);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test10437,"public void test10437() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Date) mockDate0, (StringBuffer) null);
    assertEquals(""Fri Feb 14 20:21:21 GMT 2014"", mockDate0.toString());
}",0,assertNotNull(mockDate0.toString())
project,0,test10438,"public void test10438() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Date) mockDate0, (StringBuffer) null);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test10439,"public void test10439() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Date) mockDate0, (StringBuffer) null);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test10440,"public void test10440() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Date) mockDate0, (StringBuffer) null);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test10441,"public void test10441() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Date) mockDate0, (StringBuffer) null);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test11450,"public void test11450() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test11457,"public void test11457() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test11458,"public void test11458() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test11459,"public void test11459() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test11460,"public void test11460() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test11461,"public void test11461() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test11462,"public void test11462() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test11467,"public void test11467() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertNotNull(stringBuffer1);
}",0,"assertEquals(stringBuffer0, stringBuffer1)"
project,0,test11468,"public void test11468() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertSame(stringBuffer0, stringBuffer1);
}",0,
project,0,test11469,"public void test11469() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertSame(stringBuffer1, stringBuffer0);
}",0,
project,0,test11476,"public void test11476() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test11477,"public void test11477() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test11478,"public void test11478() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertEquals(""Fri Feb 14 20:21:21 GMT 2014"", mockDate0.toString());
}",0,
project,0,test11483,"public void test11483() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test11484,"public void test11484() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test11485,"public void test11485() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test11486,"public void test11486() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""^N},{gz}"");
    Locale locale0 = new Locale("""", ""^N},{gz}"");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test12500,"public void test12500() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,assertNotNull(fastDatePrinter0)
project,0,test12512,"public void test12512() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test12513,"public void test12513() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test12514,"public void test12514() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test12515,"public void test12515() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test12516,"public void test12516() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test12517,"public void test12517() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test12521,"public void test12521() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    String string0 = fastDatePrinter0.format(date0);
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test12522,"public void test12522() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    String string0 = fastDatePrinter0.format(date0);
    assertNotNull(string0);
}",0,
project,0,test12534,"public void test12534() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    String string0 = fastDatePrinter0.format(date0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test12535,"public void test12535() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    String string0 = fastDatePrinter0.format(date0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test12537,"public void test12537() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    String string0 = fastDatePrinter0.format(date0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test12538,"public void test12538() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    String string0 = fastDatePrinter0.format(date0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test12539,"public void test12539() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    String string0 = fastDatePrinter0.format(date0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test12540,"public void test12540() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    String string0 = fastDatePrinter0.format(date0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test13554,"public void test13554() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test13566,"public void test13566() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test13567,"public void test13567() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test13568,"public void test13568() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test13569,"public void test13569() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test13570,"public void test13570() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test13571,"public void test13571() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test13573,"public void test13573() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-914));
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, (StringBuffer) null);
    assertNull(stringBuffer0);
}",0,
project,0,test13585,"public void test13585() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-914));
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, (StringBuffer) null);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test13586,"public void test13586() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-914));
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, (StringBuffer) null);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,
project,0,test13587,"public void test13587() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-914));
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, (StringBuffer) null);
    assertEquals(""org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\""GMT\"",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=?,YEAR=0,MONTH=0,WEEK_OF_YEAR=?,WEEK_OF_MONTH=?,DAY_OF_MONTH=-914,DAY_OF_YEAR=?,DAY_OF_WEEK=?,DAY_OF_WEEK_IN_MONTH=?,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=?,ZONE_OFFSET=?,DST_OFFSET=?]"", mockGregorianCalendar0.toString());
}",0,
project,0,test13591,"public void test13591() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-914));
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, (StringBuffer) null);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test13592,"public void test13592() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-914));
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, (StringBuffer) null);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test13593,"public void test13593() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-914));
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, (StringBuffer) null);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test13594,"public void test13594() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-914));
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, (StringBuffer) null);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test14608,"public void test14608() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test14620,"public void test14620() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test14621,"public void test14621() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test14622,"public void test14622() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test14623,"public void test14623() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test14624,"public void test14624() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test14625,"public void test14625() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test14639,"public void test14639() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(calendar0, stringBuffer0);
    assertNotNull(stringBuffer1);
}",0,"assertEquals(stringBuffer0, stringBuffer1)"
project,0,test14640,"public void test14640() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(calendar0, stringBuffer0);
    assertSame(stringBuffer0, stringBuffer1);
}",0,
project,0,test14641,"public void test14641() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(calendar0, stringBuffer0);
    assertSame(stringBuffer1, stringBuffer0);
}",0,
project,0,test14653,"public void test14653() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(calendar0, stringBuffer0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test14654,"public void test14654() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(calendar0, stringBuffer0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,assertNotNull(fastDatePrinter0.getPattern())
project,0,test14663,"public void test14663() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(calendar0, stringBuffer0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test14664,"public void test14664() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(calendar0, stringBuffer0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test14665,"public void test14665() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(calendar0, stringBuffer0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test14666,"public void test14666() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(calendar0, stringBuffer0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test15676,"public void test15676() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""fuY*O`i4m^y4"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test15684,"public void test15684() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""fuY*O`i4m^y4"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test15685,"public void test15685() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""fuY*O`i4m^y4"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test15686,"public void test15686() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""fuY*O`i4m^y4"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test15687,"public void test15687() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""fuY*O`i4m^y4"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test15688,"public void test15688() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""fuY*O`i4m^y4"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test15689,"public void test15689() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""fuY*O`i4m^y4"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test15696,"public void test15696() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""fuY*O`i4m^y4"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    String string0 = fastDatePrinter0.format(calendar0);
    assertEquals("""", string0);
}",0,
project,0,test15697,"public void test15697() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""fuY*O`i4m^y4"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    String string0 = fastDatePrinter0.format(calendar0);
    assertNotNull(string0);
}",0,
project,0,test15705,"public void test15705() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""fuY*O`i4m^y4"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    String string0 = fastDatePrinter0.format(calendar0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test15706,"public void test15706() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""fuY*O`i4m^y4"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    String string0 = fastDatePrinter0.format(calendar0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test15711,"public void test15711() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""fuY*O`i4m^y4"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    String string0 = fastDatePrinter0.format(calendar0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test15712,"public void test15712() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""fuY*O`i4m^y4"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    String string0 = fastDatePrinter0.format(calendar0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test15713,"public void test15713() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""fuY*O`i4m^y4"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    String string0 = fastDatePrinter0.format(calendar0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test15714,"public void test15714() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""fuY*O`i4m^y4"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    String string0 = fastDatePrinter0.format(calendar0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test16728,"public void test16728() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,assertNotNull(fastDatePrinter0)
project,0,test16740,"public void test16740() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test16741,"public void test16741() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test16742,"public void test16742() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test16743,"public void test16743() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test16744,"public void test16744() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test16745,"public void test16745() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test16757,"public void test16757() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    FieldPosition fieldPosition0 = new FieldPosition(0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) date0, stringBuffer0, fieldPosition0);
    assertNotNull(stringBuffer1);
}",0,"assertEquals(stringBuffer0, stringBuffer1)"
project,0,test16758,"public void test16758() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    FieldPosition fieldPosition0 = new FieldPosition(0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) date0, stringBuffer0, fieldPosition0);
    assertSame(stringBuffer0, stringBuffer1);
}",0,
project,0,test16759,"public void test16759() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    FieldPosition fieldPosition0 = new FieldPosition(0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) date0, stringBuffer0, fieldPosition0);
    assertSame(stringBuffer1, stringBuffer0);
}",0,
project,0,test16771,"public void test16771() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    FieldPosition fieldPosition0 = new FieldPosition(0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) date0, stringBuffer0, fieldPosition0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test16772,"public void test16772() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    FieldPosition fieldPosition0 = new FieldPosition(0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) date0, stringBuffer0, fieldPosition0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test16782,"public void test16782() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    FieldPosition fieldPosition0 = new FieldPosition(0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) date0, stringBuffer0, fieldPosition0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test16783,"public void test16783() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    FieldPosition fieldPosition0 = new FieldPosition(0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) date0, stringBuffer0, fieldPosition0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test16784,"public void test16784() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    FieldPosition fieldPosition0 = new FieldPosition(0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) date0, stringBuffer0, fieldPosition0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test16785,"public void test16785() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Instant instant0 = MockInstant.now();
    Date date0 = Date.from(instant0);
    FieldPosition fieldPosition0 = new FieldPosition(0);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) date0, stringBuffer0, fieldPosition0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test17795,"public void test17795() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test17803,"public void test17803() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test17804,"public void test17804() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test17805,"public void test17805() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test17806,"public void test17806() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test17807,"public void test17807() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test17808,"public void test17808() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test17809,"public void test17809() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    StringBuffer stringBuffer0 = fastDatePrinter0.format(0L, (StringBuffer) null);
    assertNull(stringBuffer0);
}",0,
project,0,test17817,"public void test17817() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    StringBuffer stringBuffer0 = fastDatePrinter0.format(0L, (StringBuffer) null);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,
project,0,test17818,"public void test17818() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    StringBuffer stringBuffer0 = fastDatePrinter0.format(0L, (StringBuffer) null);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test17819,"public void test17819() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    StringBuffer stringBuffer0 = fastDatePrinter0.format(0L, (StringBuffer) null);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test17820,"public void test17820() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    StringBuffer stringBuffer0 = fastDatePrinter0.format(0L, (StringBuffer) null);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test17821,"public void test17821() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    StringBuffer stringBuffer0 = fastDatePrinter0.format(0L, (StringBuffer) null);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test17822,"public void test17822() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    StringBuffer stringBuffer0 = fastDatePrinter0.format(0L, (StringBuffer) null);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test18836,"public void test18836() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test18848,"public void test18848() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test18849,"public void test18849() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test18850,"public void test18850() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test18851,"public void test18851() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test18852,"public void test18852() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test18853,"public void test18853() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test18857,"public void test18857() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(1L, stringBuffer0);
    assertNotNull(stringBuffer1);
}",0,
project,0,test18858,"public void test18858() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(1L, stringBuffer0);
    assertSame(stringBuffer0, stringBuffer1);
}",0,
project,0,test18859,"public void test18859() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(1L, stringBuffer0);
    assertSame(stringBuffer1, stringBuffer0);
}",0,
project,0,test18871,"public void test18871() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(1L, stringBuffer0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test18872,"public void test18872() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(1L, stringBuffer0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test18877,"public void test18877() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(1L, stringBuffer0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test18878,"public void test18878() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(1L, stringBuffer0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test18879,"public void test18879() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(1L, stringBuffer0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test18880,"public void test18880() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    StringBuffer stringBuffer1 = fastDatePrinter0.format(1L, stringBuffer0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test19894,"public void test19894() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test19906,"public void test19906() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test19907,"public void test19907() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,assertNotNull(fastDatePrinter0.getPattern())
project,0,test19908,"public void test19908() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test19909,"public void test19909() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test19910,"public void test19910() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test19911,"public void test19911() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test19912,"public void test19912() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.format((-510L));
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test19913,"public void test19913() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.format((-510L));
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test19925,"public void test19925() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.format((-510L));
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test19926,"public void test19926() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.format((-510L));
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,assertNotNull(fastDatePrinter0.getPattern())
project,0,test19927,"public void test19927() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.format((-510L));
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test19928,"public void test19928() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.format((-510L));
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test19929,"public void test19929() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.format((-510L));
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test19930,"public void test19930() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.format((-510L));
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test20938,"public void test20938() throws Throwable {
    Locale locale0 = Locale.FRANCE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test20945,"public void test20945() throws Throwable {
    Locale locale0 = Locale.FRANCE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test20946,"public void test20946() throws Throwable {
    Locale locale0 = Locale.FRANCE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test20947,"public void test20947() throws Throwable {
    Locale locale0 = Locale.FRANCE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test20948,"public void test20948() throws Throwable {
    Locale locale0 = Locale.FRANCE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test20949,"public void test20949() throws Throwable {
    Locale locale0 = Locale.FRANCE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test20950,"public void test20950() throws Throwable {
    Locale locale0 = Locale.FRANCE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test20962,"public void test20962() throws Throwable {
    Locale locale0 = Locale.FRANCE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    Calendar calendar0 = MockCalendar.getInstance(locale0);
    StringBuffer stringBuffer0 = fastDatePrinter0.applyRules(calendar0, (StringBuffer) null);
    assertNull(stringBuffer0);
}",0,assertNotNull(stringBuffer0)
project,0,test20969,"public void test20969() throws Throwable {
    Locale locale0 = Locale.FRANCE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    Calendar calendar0 = MockCalendar.getInstance(locale0);
    StringBuffer stringBuffer0 = fastDatePrinter0.applyRules(calendar0, (StringBuffer) null);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test20970,"public void test20970() throws Throwable {
    Locale locale0 = Locale.FRANCE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    Calendar calendar0 = MockCalendar.getInstance(locale0);
    StringBuffer stringBuffer0 = fastDatePrinter0.applyRules(calendar0, (StringBuffer) null);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test20975,"public void test20975() throws Throwable {
    Locale locale0 = Locale.FRANCE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    Calendar calendar0 = MockCalendar.getInstance(locale0);
    StringBuffer stringBuffer0 = fastDatePrinter0.applyRules(calendar0, (StringBuffer) null);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test20976,"public void test20976() throws Throwable {
    Locale locale0 = Locale.FRANCE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    Calendar calendar0 = MockCalendar.getInstance(locale0);
    StringBuffer stringBuffer0 = fastDatePrinter0.applyRules(calendar0, (StringBuffer) null);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test20977,"public void test20977() throws Throwable {
    Locale locale0 = Locale.FRANCE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    Calendar calendar0 = MockCalendar.getInstance(locale0);
    StringBuffer stringBuffer0 = fastDatePrinter0.applyRules(calendar0, (StringBuffer) null);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test20978,"public void test20978() throws Throwable {
    Locale locale0 = Locale.FRANCE;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    Calendar calendar0 = MockCalendar.getInstance(locale0);
    StringBuffer stringBuffer0 = fastDatePrinter0.applyRules(calendar0, (StringBuffer) null);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test21992,"public void test21992() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test211004,"public void test211004() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test211005,"public void test211005() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test211006,"public void test211006() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test211007,"public void test211007() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test211008,"public void test211008() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test211009,"public void test211009() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test211023,"public void test211023() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(calendar0, stringBuffer0);
    assertNotNull(stringBuffer1);
}",0,
project,0,test211024,"public void test211024() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(calendar0, stringBuffer0);
    assertSame(stringBuffer0, stringBuffer1);
}",0,
project,0,test211025,"public void test211025() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(calendar0, stringBuffer0);
    assertSame(stringBuffer1, stringBuffer0);
}",0,
project,0,test211037,"public void test211037() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(calendar0, stringBuffer0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test211038,"public void test211038() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(calendar0, stringBuffer0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test211047,"public void test211047() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(calendar0, stringBuffer0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test211048,"public void test211048() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(calendar0, stringBuffer0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test211049,"public void test211049() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(calendar0, stringBuffer0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test211050,"public void test211050() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule"", 4704, 0, 0, 0, 0, 0, 6, 0);
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(2);
    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(calendar0, stringBuffer0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test221058,"public void test221058() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test221065,"public void test221065() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(5, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test221066,"public void test221066() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(""3m"", fastDatePrinter0.getPattern());
}",0,
project,0,test221067,"public void test221067() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test221068,"public void test221068() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test221069,"public void test221069() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test221070,"public void test221070() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test221071,"public void test221071() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    // Undeclared exception!
    try {
        fastDatePrinter0.toString();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test231079,"public void test231079() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test231086,"public void test231086() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    assertEquals(""?S"", fastDatePrinter0.getPattern());
}",0,
project,0,test231087,"public void test231087() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    assertEquals(6, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test231088,"public void test231088() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test231089,"public void test231089() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test231090,"public void test231090() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test231091,"public void test231091() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test231092,"public void test231092() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    int[] intArray0 = new int[8];
    // Undeclared exception!
    try {
        fastDatePrinter0.parseToken("""", intArray0);
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test241106,"public void test241106() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    Locale locale0 = new Locale("""", """", """");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""]"", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test241118,"public void test241118() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    Locale locale0 = new Locale("""", """", """");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""]"", simpleTimeZone0, locale0);
    assertEquals(""]"", fastDatePrinter0.getPattern());
}",0,
project,0,test241119,"public void test241119() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    Locale locale0 = new Locale("""", """", """");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""]"", simpleTimeZone0, locale0);
    assertEquals(1, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test241120,"public void test241120() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    Locale locale0 = new Locale("""", """", """");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""]"", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test241121,"public void test241121() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    Locale locale0 = new Locale("""", """", """");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""]"", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test241122,"public void test241122() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    Locale locale0 = new Locale("""", """", """");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""]"", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test241123,"public void test241123() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    Locale locale0 = new Locale("""", """", """");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""]"", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test241124,"public void test241124() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    Locale locale0 = new Locale("""", """", """");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""]"", simpleTimeZone0, locale0);
    // Undeclared exception!
    try {
        fastDatePrinter0.parseToken(""u^l c4;oYk=9XJG`wd"", (int[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test251132,"public void test251132() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test251139,"public void test251139() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test251140,"public void test251140() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test251141,"public void test251141() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test251142,"public void test251142() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test251143,"public void test251143() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test251144,"public void test251144() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test251149,"public void test251149() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", (TimeZone) null, locale0);
    MockDate mockDate0 = new MockDate();
    StringBuffer stringBuffer0 = new StringBuffer(""FastDatePrinter["");
    // Undeclared exception!
    try {
        fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test261159,"public void test261159() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test261167,"public void test261167() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test261168,"public void test261168() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test261169,"public void test261169() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test261170,"public void test261170() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test261171,"public void test261171() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test261172,"public void test261172() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test261173,"public void test261173() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    // Undeclared exception!
    try {
        fastDatePrinter0.format((Date) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.Calendar"", e);
    }
}",0,
project,0,test271187,"public void test271187() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test271199,"public void test271199() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(22, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test271200,"public void test271200() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(""^-zSS]=}30h"", fastDatePrinter0.getPattern());
}",0,
project,0,test271201,"public void test271201() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test271202,"public void test271202() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test271203,"public void test271203() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test271204,"public void test271204() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test271206,"public void test271206() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale0);
    // Undeclared exception!
    try {
        fastDatePrinter0.format((Calendar) mockGregorianCalendar0, (StringBuffer) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter$StringLiteral"", e);
    }
}",0,
project,0,test281217,"public void test281217() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""'U"", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test281225,"public void test281225() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""'U"", timeZone0, locale0);
    assertEquals(""'U"", fastDatePrinter0.getPattern());
}",0,
project,0,test281226,"public void test281226() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""'U"", timeZone0, locale0);
    assertEquals(1, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test281227,"public void test281227() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""'U"", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test281228,"public void test281228() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""'U"", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test281229,"public void test281229() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""'U"", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test281230,"public void test281230() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""'U"", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test281231,"public void test281231() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""'U"", timeZone0, locale0);
    // Undeclared exception!
    try {
        fastDatePrinter0.format(0L, (StringBuffer) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral"", e);
    }
}",0,
project,0,test291239,"public void test291239() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test291246,"public void test291246() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(5, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test291247,"public void test291247() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(""3m"", fastDatePrinter0.getPattern());
}",0,
project,0,test291248,"public void test291248() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test291249,"public void test291249() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test291250,"public void test291250() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test291251,"public void test291251() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test291252,"public void test291252() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    // Undeclared exception!
    try {
        fastDatePrinter0.format((long) 0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test301263,"public void test301263() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""'U"", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test301271,"public void test301271() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""'U"", timeZone0, locale0);
    assertEquals(""'U"", fastDatePrinter0.getPattern());
}",0,
project,0,test301272,"public void test301272() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""'U"", timeZone0, locale0);
    assertEquals(1, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test301273,"public void test301273() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""'U"", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test301274,"public void test301274() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""'U"", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test301275,"public void test301275() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""'U"", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test301276,"public void test301276() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""'U"", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test301282,"public void test301282() throws Throwable {
    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""'U"", timeZone0, locale0);
    Calendar calendar0 = MockCalendar.getInstance();
    // Undeclared exception!
    try {
        fastDatePrinter0.applyRules(calendar0, (StringBuffer) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral"", e);
    }
}",0,
project,0,test311289,"public void test311289() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(289, """");
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, (Locale) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test321303,"public void test321303() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    // Undeclared exception!
    try {
        FastDatePrinter.getTimeZoneDisplay(simpleTimeZone0, true, 84, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal style: 84
        //
        verifyException(""java.util.TimeZone"", e);
    }
}",0,
project,0,test331313,"public void test331313() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test331321,"public void test331321() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(12, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test331322,"public void test331322() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(""z{Ky"", fastDatePrinter0.getPattern());
}",0,
project,0,test331323,"public void test331323() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test331324,"public void test331324() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test331325,"public void test331325() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test331326,"public void test331326() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test331331,"public void test331331() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-382), 2, 1, (-1), 2);
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertNotNull(stringBuffer1);
}",0,
project,0,test331332,"public void test331332() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-382), 2, 1, (-1), 2);
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertSame(stringBuffer0, stringBuffer1);
}",0,
project,0,test331333,"public void test331333() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-382), 2, 1, (-1), 2);
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertSame(stringBuffer1, stringBuffer0);
}",0,
project,0,test331341,"public void test331341() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-382), 2, 1, (-1), 2);
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(12, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test331342,"public void test331342() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-382), 2, 1, (-1), 2);
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(""z{Ky"", fastDatePrinter0.getPattern());
}",0,
project,0,test331346,"public void test331346() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-382), 2, 1, (-1), 2);
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(""org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=-74217257880000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\""GMT\"",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=383,MONTH=1,WEEK_OF_YEAR=9,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=59,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=11,HOUR_OF_DAY=23,MINUTE=2,SECOND=0,MILLISECOND=0,ZONE_OFFSET=0,DST_OFFSET=0]"", mockGregorianCalendar0.toString());
}",0,
project,0,test331351,"public void test331351() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-382), 2, 1, (-1), 2);
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test331352,"public void test331352() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-382), 2, 1, (-1), 2);
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test331353,"public void test331353() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-382), 2, 1, (-1), 2);
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test331354,"public void test331354() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-382), 2, 1, (-1), 2);
    StringBuffer stringBuffer0 = new StringBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test341364,"public void test341364() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test341372,"public void test341372() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(""z{Ky"", fastDatePrinter0.getPattern());
}",0,
project,0,test341373,"public void test341373() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(12, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test341374,"public void test341374() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test341375,"public void test341375() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test341376,"public void test341376() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test341377,"public void test341377() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test341382,"public void test341382() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1473, 0, 120, 1473, 10, 2);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertNotNull(stringBuffer1);
}",0,"assertEquals(stringBuffer0, stringBuffer1)"
project,0,test341383,"public void test341383() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1473, 0, 120, 1473, 10, 2);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertSame(stringBuffer0, stringBuffer1);
}",0,
project,0,test341384,"public void test341384() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1473, 0, 120, 1473, 10, 2);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertSame(stringBuffer1, stringBuffer0);
}",0,
project,0,test341392,"public void test341392() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1473, 0, 120, 1473, 10, 2);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertEquals(""z{Ky"", fastDatePrinter0.getPattern());
}",0,
project,0,test341393,"public void test341393() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1473, 0, 120, 1473, 10, 2);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertEquals(12, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test341394,"public void test341394() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1473, 0, 120, 1473, 10, 2);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertEquals(""Wed Jun 30 09:10:02 GMT 3373"", mockDate0.toString());
}",0,assertNotNull(mockDate0.toString())
project,0,test341399,"public void test341399() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1473, 0, 120, 1473, 10, 2);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test341400,"public void test341400() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1473, 0, 120, 1473, 10, 2);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test341401,"public void test341401() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1473, 0, 120, 1473, 10, 2);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test341402,"public void test341402() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1473, 0, 120, 1473, 10, 2);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Date) mockDate0, stringBuffer0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test351413,"public void test351413() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test351421,"public void test351421() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(6, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test351422,"public void test351422() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(""M%-<"", fastDatePrinter0.getPattern());
}",0,
project,0,test351423,"public void test351423() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test351424,"public void test351424() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test351425,"public void test351425() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test351426,"public void test351426() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test351428,"public void test351428() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(385, 836, 100);
    String string0 = fastDatePrinter0.format((Date) mockDate0);
    assertEquals(""12%-<"", string0);
}",0,assertNotNull(string0)
project,0,test351429,"public void test351429() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(385, 836, 100);
    String string0 = fastDatePrinter0.format((Date) mockDate0);
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test351437,"public void test351437() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(385, 836, 100);
    String string0 = fastDatePrinter0.format((Date) mockDate0);
    assertEquals(6, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test351438,"public void test351438() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(385, 836, 100);
    String string0 = fastDatePrinter0.format((Date) mockDate0);
    assertEquals(""M%-<"", fastDatePrinter0.getPattern());
}",0,
project,0,test351439,"public void test351439() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(385, 836, 100);
    String string0 = fastDatePrinter0.format((Date) mockDate0);
    assertEquals(""Thu Dec 09 00:00:00 GMT 2354"", mockDate0.toString());
}",0,
project,0,test351440,"public void test351440() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(385, 836, 100);
    String string0 = fastDatePrinter0.format((Date) mockDate0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test351441,"public void test351441() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(385, 836, 100);
    String string0 = fastDatePrinter0.format((Date) mockDate0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test351442,"public void test351442() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(385, 836, 100);
    String string0 = fastDatePrinter0.format((Date) mockDate0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test351443,"public void test351443() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(385, 836, 100);
    String string0 = fastDatePrinter0.format((Date) mockDate0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test361451,"public void test361451() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test361458,"public void test361458() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    assertEquals(""?S"", fastDatePrinter0.getPattern());
}",0,
project,0,test361459,"public void test361459() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    assertEquals(6, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test361460,"public void test361460() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test361461,"public void test361461() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test361462,"public void test361462() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test361463,"public void test361463() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test361469,"public void test361469() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    Calendar calendar0 = MockCalendar.getInstance();
    String string0 = fastDatePrinter0.format(calendar0);
    assertEquals(""?320"", string0);
}",0,assertNotNull(string0)
project,0,test361470,"public void test361470() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    Calendar calendar0 = MockCalendar.getInstance();
    String string0 = fastDatePrinter0.format(calendar0);
    assertNotNull(string0);
}",0,
project,0,test361477,"public void test361477() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    Calendar calendar0 = MockCalendar.getInstance();
    String string0 = fastDatePrinter0.format(calendar0);
    assertEquals(""?S"", fastDatePrinter0.getPattern());
}",0,assertNotNull(fastDatePrinter0.getPattern())
project,0,test361478,"public void test361478() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    Calendar calendar0 = MockCalendar.getInstance();
    String string0 = fastDatePrinter0.format(calendar0);
    assertEquals(6, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test361483,"public void test361483() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    Calendar calendar0 = MockCalendar.getInstance();
    String string0 = fastDatePrinter0.format(calendar0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test361484,"public void test361484() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    Calendar calendar0 = MockCalendar.getInstance();
    String string0 = fastDatePrinter0.format(calendar0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test361485,"public void test361485() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    Calendar calendar0 = MockCalendar.getInstance();
    String string0 = fastDatePrinter0.format(calendar0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test361486,"public void test361486() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""?S"", (TimeZone) null, locale0);
    Calendar calendar0 = MockCalendar.getInstance();
    String string0 = fastDatePrinter0.format(calendar0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test371494,"public void test371494() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test371501,"public void test371501() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(5, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test371502,"public void test371502() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(""3m"", fastDatePrinter0.getPattern());
}",0,assertNotNull(fastDatePrinter0.getPattern())
project,0,test371503,"public void test371503() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test371504,"public void test371504() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test371505,"public void test371505() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test371506,"public void test371506() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test371507,"public void test371507() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    assertFalse(fastDatePrinter1.equals((Object) fastDatePrinter0));
}",0,
project,0,test371508,"public void test371508() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    assertNotNull(fastDatePrinter1);
}",0,
project,0,test371515,"public void test371515() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    assertEquals(""'U"", fastDatePrinter1.getPattern());
}",0,
project,0,test371516,"public void test371516() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    assertEquals(1, fastDatePrinter1.getMaxLengthEstimate());
}",0,
project,0,test371517,"public void test371517() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test371518,"public void test371518() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test371519,"public void test371519() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test371520,"public void test371520() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test371521,"public void test371521() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test371522,"public void test371522() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertFalse(fastDatePrinter0.equals((Object) fastDatePrinter1));
}",0,
project,0,test371523,"public void test371523() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertFalse(fastDatePrinter1.equals((Object) fastDatePrinter0));
}",0,
project,0,test371524,"public void test371524() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertNotSame(fastDatePrinter0, fastDatePrinter1);
}",0,
project,0,test371525,"public void test371525() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertNotSame(fastDatePrinter1, fastDatePrinter0);
}",0,
project,0,test371532,"public void test371532() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertEquals(5, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test371533,"public void test371533() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertEquals(""3m"", fastDatePrinter0.getPattern());
}",0,
project,0,test371534,"public void test371534() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertEquals(""'U"", fastDatePrinter1.getPattern());
}",0,
project,0,test371535,"public void test371535() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertEquals(1, fastDatePrinter1.getMaxLengthEstimate());
}",0,
project,0,test371536,"public void test371536() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test371537,"public void test371537() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test371538,"public void test371538() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test371539,"public void test371539() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test371540,"public void test371540() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test371541,"public void test371541() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test371542,"public void test371542() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test371543,"public void test371543() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    FastDatePrinter fastDatePrinter1 = new FastDatePrinter(""'U"", (TimeZone) null, locale0);
    boolean boolean0 = fastDatePrinter0.equals(fastDatePrinter1);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test381554,"public void test381554() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test381562,"public void test381562() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(6, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test381563,"public void test381563() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(""M%-<"", fastDatePrinter0.getPattern());
}",0,
project,0,test381564,"public void test381564() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test381565,"public void test381565() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test381566,"public void test381566() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test381567,"public void test381567() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test381569,"public void test381569() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1258, 884, 0, 0, 0);
    boolean boolean0 = fastDatePrinter0.equals(mockDate0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test381577,"public void test381577() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1258, 884, 0, 0, 0);
    boolean boolean0 = fastDatePrinter0.equals(mockDate0);
    assertEquals(6, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test381578,"public void test381578() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1258, 884, 0, 0, 0);
    boolean boolean0 = fastDatePrinter0.equals(mockDate0);
    assertEquals(""M%-<"", fastDatePrinter0.getPattern());
}",0,
project,0,test381579,"public void test381579() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1258, 884, 0, 0, 0);
    boolean boolean0 = fastDatePrinter0.equals(mockDate0);
    assertEquals(""Sun Aug 31 00:00:00 GMT 3231"", mockDate0.toString());
}",0,
project,0,test381580,"public void test381580() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1258, 884, 0, 0, 0);
    boolean boolean0 = fastDatePrinter0.equals(mockDate0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test381581,"public void test381581() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1258, 884, 0, 0, 0);
    boolean boolean0 = fastDatePrinter0.equals(mockDate0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test381582,"public void test381582() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1258, 884, 0, 0, 0);
    boolean boolean0 = fastDatePrinter0.equals(mockDate0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test381583,"public void test381583() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockDate mockDate0 = new MockDate(1258, 884, 0, 0, 0);
    boolean boolean0 = fastDatePrinter0.equals(mockDate0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test391591,"public void test391591() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertNotNull(fastDatePrinter0);
}",0,assertNotNull(fastDatePrinter0)
project,0,test391598,"public void test391598() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(5, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test391599,"public void test391599() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(""3m"", fastDatePrinter0.getPattern());
}",0,
project,0,test391600,"public void test391600() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test391601,"public void test391601() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test391602,"public void test391602() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test391603,"public void test391603() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test391604,"public void test391604() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""3m"", (TimeZone) null, locale0);
    // Undeclared exception!
    try {
        fastDatePrinter0.equals(fastDatePrinter0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test401614,"public void test401614() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.ITALIAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test401622,"public void test401622() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.ITALIAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test401623,"public void test401623() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.ITALIAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test401624,"public void test401624() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.ITALIAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test401625,"public void test401625() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.ITALIAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test401626,"public void test401626() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.ITALIAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test401627,"public void test401627() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.ITALIAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test401634,"public void test401634() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.ITALIAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    StringWriter stringWriter0 = new StringWriter();
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    // Undeclared exception!
    try {
        fastDatePrinter0.format((Object) null, stringBuffer0, (FieldPosition) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Unknown class: <null>
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test411648,"public void test411648() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test411660,"public void test411660() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(""^-zSS]=}30h"", fastDatePrinter0.getPattern());
}",0,
project,0,test411661,"public void test411661() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(22, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test411662,"public void test411662() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test411663,"public void test411663() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test411664,"public void test411664() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test411665,"public void test411665() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test411676,"public void test411676() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    Long long0 = new Long((-3878L));
    StringBuffer stringBuffer0 = new StringBuffer(""^-zSS]=}30h"");
    FieldPosition fieldPosition0 = new FieldPosition(22);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) long0, stringBuffer0, fieldPosition0);
    assertNotNull(stringBuffer1);
}",0,"assertEquals(stringBuffer0, stringBuffer1)"
project,0,test411677,"public void test411677() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    Long long0 = new Long((-3878L));
    StringBuffer stringBuffer0 = new StringBuffer(""^-zSS]=}30h"");
    FieldPosition fieldPosition0 = new FieldPosition(22);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) long0, stringBuffer0, fieldPosition0);
    assertSame(stringBuffer0, stringBuffer1);
}",0,
project,0,test411678,"public void test411678() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    Long long0 = new Long((-3878L));
    StringBuffer stringBuffer0 = new StringBuffer(""^-zSS]=}30h"");
    FieldPosition fieldPosition0 = new FieldPosition(22);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) long0, stringBuffer0, fieldPosition0);
    assertSame(stringBuffer1, stringBuffer0);
}",0,
project,0,test411690,"public void test411690() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    Long long0 = new Long((-3878L));
    StringBuffer stringBuffer0 = new StringBuffer(""^-zSS]=}30h"");
    FieldPosition fieldPosition0 = new FieldPosition(22);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) long0, stringBuffer0, fieldPosition0);
    assertEquals(""^-zSS]=}30h"", fastDatePrinter0.getPattern());
}",0,
project,0,test411691,"public void test411691() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    Long long0 = new Long((-3878L));
    StringBuffer stringBuffer0 = new StringBuffer(""^-zSS]=}30h"");
    FieldPosition fieldPosition0 = new FieldPosition(22);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) long0, stringBuffer0, fieldPosition0);
    assertEquals(22, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test411700,"public void test411700() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    Long long0 = new Long((-3878L));
    StringBuffer stringBuffer0 = new StringBuffer(""^-zSS]=}30h"");
    FieldPosition fieldPosition0 = new FieldPosition(22);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) long0, stringBuffer0, fieldPosition0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test411701,"public void test411701() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    Long long0 = new Long((-3878L));
    StringBuffer stringBuffer0 = new StringBuffer(""^-zSS]=}30h"");
    FieldPosition fieldPosition0 = new FieldPosition(22);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) long0, stringBuffer0, fieldPosition0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test411702,"public void test411702() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    Long long0 = new Long((-3878L));
    StringBuffer stringBuffer0 = new StringBuffer(""^-zSS]=}30h"");
    FieldPosition fieldPosition0 = new FieldPosition(22);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) long0, stringBuffer0, fieldPosition0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test411703,"public void test411703() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    Long long0 = new Long((-3878L));
    StringBuffer stringBuffer0 = new StringBuffer(""^-zSS]=}30h"");
    FieldPosition fieldPosition0 = new FieldPosition(22);
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Object) long0, stringBuffer0, fieldPosition0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test421717,"public void test421717() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test421729,"public void test421729() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test421730,"public void test421730() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test421731,"public void test421731() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test421732,"public void test421732() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test421733,"public void test421733() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test421734,"public void test421734() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test421741,"public void test421741() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-914));
    FieldPosition fieldPosition0 = new FieldPosition(707);
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Object) mockGregorianCalendar0, (StringBuffer) null, fieldPosition0);
    assertNull(stringBuffer0);
}",0,assertNotNull(stringBuffer0)
project,0,test421753,"public void test421753() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-914));
    FieldPosition fieldPosition0 = new FieldPosition(707);
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Object) mockGregorianCalendar0, (StringBuffer) null, fieldPosition0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test421754,"public void test421754() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-914));
    FieldPosition fieldPosition0 = new FieldPosition(707);
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Object) mockGregorianCalendar0, (StringBuffer) null, fieldPosition0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,
project,0,test421755,"public void test421755() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-914));
    FieldPosition fieldPosition0 = new FieldPosition(707);
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Object) mockGregorianCalendar0, (StringBuffer) null, fieldPosition0);
    assertEquals(""org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\""GMT\"",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=?,YEAR=0,MONTH=0,WEEK_OF_YEAR=?,WEEK_OF_MONTH=?,DAY_OF_MONTH=-914,DAY_OF_YEAR=?,DAY_OF_WEEK=?,DAY_OF_WEEK_IN_MONTH=?,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=?,ZONE_OFFSET=?,DST_OFFSET=?]"", mockGregorianCalendar0.toString());
}",0,
project,0,test421763,"public void test421763() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-914));
    FieldPosition fieldPosition0 = new FieldPosition(707);
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Object) mockGregorianCalendar0, (StringBuffer) null, fieldPosition0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test421764,"public void test421764() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-914));
    FieldPosition fieldPosition0 = new FieldPosition(707);
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Object) mockGregorianCalendar0, (StringBuffer) null, fieldPosition0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test421765,"public void test421765() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-914));
    FieldPosition fieldPosition0 = new FieldPosition(707);
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Object) mockGregorianCalendar0, (StringBuffer) null, fieldPosition0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test421766,"public void test421766() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-914), """");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", simpleTimeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, (-914));
    FieldPosition fieldPosition0 = new FieldPosition(707);
    StringBuffer stringBuffer0 = fastDatePrinter0.format((Object) mockGregorianCalendar0, (StringBuffer) null, fieldPosition0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test431775,"public void test431775() throws Throwable {
    Locale locale0 = Locale.ITALIAN;
    MockDate mockDate0 = new MockDate();
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("">"", (TimeZone) null, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test431782,"public void test431782() throws Throwable {
    Locale locale0 = Locale.ITALIAN;
    MockDate mockDate0 = new MockDate();
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("">"", (TimeZone) null, locale0);
    assertEquals(1, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test431783,"public void test431783() throws Throwable {
    Locale locale0 = Locale.ITALIAN;
    MockDate mockDate0 = new MockDate();
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("">"", (TimeZone) null, locale0);
    assertEquals("">"", fastDatePrinter0.getPattern());
}",0,
project,0,test431784,"public void test431784() throws Throwable {
    Locale locale0 = Locale.ITALIAN;
    MockDate mockDate0 = new MockDate();
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("">"", (TimeZone) null, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test431785,"public void test431785() throws Throwable {
    Locale locale0 = Locale.ITALIAN;
    MockDate mockDate0 = new MockDate();
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("">"", (TimeZone) null, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test431786,"public void test431786() throws Throwable {
    Locale locale0 = Locale.ITALIAN;
    MockDate mockDate0 = new MockDate();
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("">"", (TimeZone) null, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test431787,"public void test431787() throws Throwable {
    Locale locale0 = Locale.ITALIAN;
    MockDate mockDate0 = new MockDate();
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("">"", (TimeZone) null, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test431795,"public void test431795() throws Throwable {
    Locale locale0 = Locale.ITALIAN;
    MockDate mockDate0 = new MockDate();
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("">"", (TimeZone) null, locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "">"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 3);
    // Undeclared exception!
    try {
        fastDatePrinter0.format((Object) mockDate0, stringBuffer0, fieldPosition0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test441805,"public void test441805() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test441813,"public void test441813() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test441814,"public void test441814() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test441815,"public void test441815() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test441816,"public void test441816() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test441817,"public void test441817() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test441818,"public void test441818() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test441827,"public void test441827() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer();
    FieldPosition fieldPosition0 = new FieldPosition(2);
    // Undeclared exception!
    try {
        fastDatePrinter0.format((Object) """", stringBuffer0, fieldPosition0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Unknown class: java.lang.String
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test451839,"public void test451839() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(1, ""|,%v0'?,S*mCuPzXj"");
    Locale locale0 = new Locale(""|,%v0'?,S*mCuPzXj"", ""-])=eJBK;9R%8J$"");
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""|,%v0'?,S*mCuPzXj"", simpleTimeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: v
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test461853,"public void test461853() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-687), ""b' 2Vm5!<!YmV<eU,.K"");
    Locale locale0 = Locale.US;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""1dt4"", simpleTimeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: t
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test471867,"public void test471867() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-707), ""+rANQitww"");
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""+rANQitww"", simpleTimeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: r
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test481877,"public void test481877() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter("")q%ebV,\""h?2k)_kk0"", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: q
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test491891,"public void test491891() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1), ""org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField"");
    Locale locale0 = Locale.FRANCE;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""pb[xb"", simpleTimeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: p
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test501905,"public void test501905() throws Throwable {
    Locale locale0 = Locale.CANADA;
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(416, ""org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField"");
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField"", simpleTimeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: o
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test511913,"public void test511913() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = new Locale(""`yEj]PggJm<c[*}8F"", ""`yEj]PggJm<c[*}8F"", ""|1!k+GRQ"");
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""Dnk2p#XqaR2<{+"", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: n
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test521923,"public void test521923() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""luK"", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: l
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test531931,"public void test531931() throws Throwable {
    Locale locale0 = Locale.GERMANY;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""89#1\""^hDjC"", (TimeZone) null, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: j
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test541941,"public void test541941() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.KOREA;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""*d}ih>c"", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: i
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test551949,"public void test551949() throws Throwable {
    Locale locale0 = new Locale("""");
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""178gYChd)1NS)Tf?<%T"", (TimeZone) null, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: g
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test561959,"public void test561959() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.SIMPLIFIED_CHINESE;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""@&^Zk<f$48Dq1"", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: f
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test571973,"public void test571973() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(1597, """");
    Locale locale0 = Locale.PRC;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""cS$R9L.W2Kf.}vrHeBh"", simpleTimeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: c
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test581987,"public void test581987() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""b=dBc"");
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""b=dBc"", simpleTimeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: b
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test591997,"public void test591997() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.JAPANESE;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter("":Mak~{1XvUuYRt-0)%"", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: X
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test602007,"public void test602007() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""YfB{@C0i5"");
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""YfB{@C0i5"", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: Y
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test612017,"public void test612017() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""[K8VyOd*8<}eh"");
    Locale locale0 = Locale.CHINESE;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""[K8VyOd*8<}eh"", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: V
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test622027,"public void test622027() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""|UsJ^|"", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: U
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test632033,"public void test632033() throws Throwable {
    Locale locale0 = new Locale(""sG`W$T mqh5?y>"", ""org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule"");
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""sG`W$T mqh5?y>"", (TimeZone) null, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: T
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test642043,"public void test642043() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.KOREA;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""h$0[~>RQv}cn4&@*"", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: R
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test652052,"public void test652052() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = new Locale(""yQgo$_\""/0q;z["");
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""yQgo$_\""/0q;z["", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: Q
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test662062,"public void test662062() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""#%&PZyV "", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: P
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test672072,"public void test672072() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""{;"");
    Locale locale0 = Locale.PRC;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""HO%A^\""K8ddqa"", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: O
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test682086,"public void test682086() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-264), ""61[htC{kh/CZ&x+"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""0)7d@9 2zNlqO{F"", simpleTimeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: N
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test692096,"public void test692096() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""L\""7"", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: L
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test702104,"public void test702104() throws Throwable {
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""ZwDI2A"", (TimeZone) null, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: I
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test712118,"public void test712118() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""HuO_dA7_y"", simpleTimeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: u
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test722132,"public void test722132() throws Throwable {
    Locale locale0 = Locale.UK;
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""29EF:eOm_{2('e3;"");
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""29EF:eOm_{2('e3;"", simpleTimeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: e
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test732142,"public void test732142() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""}Dx1HW;"");
    Locale locale0 = Locale.ITALY;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""}Dx1HW;"", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: x
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test742152,"public void test742152() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.JAPAN;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""4C$rsL!{B,pZZ,DVZ"", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: C
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test752160,"public void test752160() throws Throwable {
    Locale locale0 = Locale.GERMAN;
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""}B'4Q=Hc."", (TimeZone) null, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: B
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test762170,"public void test762170() throws Throwable {
    Locale locale0 = Locale.FRENCH;
    TimeZone timeZone0 = TimeZone.getDefault();
    FastDatePrinter fastDatePrinter0 = null;
    try {
        fastDatePrinter0 = new FastDatePrinter(""-AR"", timeZone0, locale0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern component: A
        //
        verifyException(""org.apache.commons.lang3.time.FastDatePrinter"", e);
    }
}",0,
project,0,test772180,"public void test772180() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""'U"");
    Locale locale0 = Locale.TAIWAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""k"", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test772188,"public void test772188() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""'U"");
    Locale locale0 = Locale.TAIWAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""k"", timeZone0, locale0);
    assertEquals(""k"", fastDatePrinter0.getPattern());
}",0,
project,0,test772189,"public void test772189() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""'U"");
    Locale locale0 = Locale.TAIWAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""k"", timeZone0, locale0);
    assertEquals(4, fastDatePrinter0.getMaxLengthEstimate());
}",0,
project,0,test772190,"public void test772190() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""'U"");
    Locale locale0 = Locale.TAIWAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""k"", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test772191,"public void test772191() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""'U"");
    Locale locale0 = Locale.TAIWAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""k"", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test772192,"public void test772192() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""'U"");
    Locale locale0 = Locale.TAIWAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""k"", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test772193,"public void test772193() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""'U"");
    Locale locale0 = Locale.TAIWAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""k"", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test772197,"public void test772197() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""'U"");
    Locale locale0 = Locale.TAIWAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""k"", timeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""'U"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format(0L, stringBuffer0);
    assertNotNull(stringBuffer1);
}",0,
project,0,test772198,"public void test772198() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""'U"");
    Locale locale0 = Locale.TAIWAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""k"", timeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""'U"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format(0L, stringBuffer0);
    assertSame(stringBuffer0, stringBuffer1);
}",0,
project,0,test772199,"public void test772199() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""'U"");
    Locale locale0 = Locale.TAIWAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""k"", timeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""'U"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format(0L, stringBuffer0);
    assertSame(stringBuffer1, stringBuffer0);
}",0,
project,0,test772207,"public void test772207() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""'U"");
    Locale locale0 = Locale.TAIWAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""k"", timeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""'U"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format(0L, stringBuffer0);
    assertEquals(""k"", fastDatePrinter0.getPattern());
}",0,
project,0,test772208,"public void test772208() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""'U"");
    Locale locale0 = Locale.TAIWAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""k"", timeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""'U"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format(0L, stringBuffer0);
    assertEquals(4, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test772213,"public void test772213() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""'U"");
    Locale locale0 = Locale.TAIWAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""k"", timeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""'U"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format(0L, stringBuffer0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test772214,"public void test772214() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""'U"");
    Locale locale0 = Locale.TAIWAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""k"", timeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""'U"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format(0L, stringBuffer0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test772215,"public void test772215() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""'U"");
    Locale locale0 = Locale.TAIWAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""k"", timeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""'U"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format(0L, stringBuffer0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test772216,"public void test772216() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""'U"");
    Locale locale0 = Locale.TAIWAN;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""k"", timeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""'U"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format(0L, stringBuffer0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test782226,"public void test782226() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test782234,"public void test782234() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(12, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test782235,"public void test782235() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(""z{Ky"", fastDatePrinter0.getPattern());
}",0,
project,0,test782236,"public void test782236() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test782237,"public void test782237() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test782238,"public void test782238() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test782239,"public void test782239() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test782244,"public void test782244() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3, 10, 0);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(mockGregorianCalendar0, stringBuffer0);
    assertNotNull(stringBuffer1);
}",0,"assertEquals(stringBuffer0, stringBuffer1)"
project,0,test782245,"public void test782245() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3, 10, 0);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(mockGregorianCalendar0, stringBuffer0);
    assertSame(stringBuffer0, stringBuffer1);
}",0,
project,0,test782246,"public void test782246() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3, 10, 0);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(mockGregorianCalendar0, stringBuffer0);
    assertSame(stringBuffer1, stringBuffer0);
}",0,
project,0,test782254,"public void test782254() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3, 10, 0);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(mockGregorianCalendar0, stringBuffer0);
    assertEquals(12, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test782255,"public void test782255() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3, 10, 0);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(mockGregorianCalendar0, stringBuffer0);
    assertEquals(""z{Ky"", fastDatePrinter0.getPattern());
}",0,
project,0,test782257,"public void test782257() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3, 10, 0);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(mockGregorianCalendar0, stringBuffer0);
    assertEquals(""org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=-62046518400000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\""GMT\"",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=3,MONTH=9,WEEK_OF_YEAR=44,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=304,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=0,DST_OFFSET=0]"", mockGregorianCalendar0.toString());
}",0,
project,0,test782264,"public void test782264() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3, 10, 0);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(mockGregorianCalendar0, stringBuffer0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test782265,"public void test782265() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3, 10, 0);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(mockGregorianCalendar0, stringBuffer0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test782266,"public void test782266() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3, 10, 0);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(mockGregorianCalendar0, stringBuffer0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test782267,"public void test782267() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""z{Ky"");
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""z{Ky"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3, 10, 0);
    StringBuffer stringBuffer0 = new StringBuffer(3);
    StringBuffer stringBuffer1 = fastDatePrinter0.applyRules(mockGregorianCalendar0, stringBuffer0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test792278,"public void test792278() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test792286,"public void test792286() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(6, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test792287,"public void test792287() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(""M%-<"", fastDatePrinter0.getPattern());
}",0,
project,0,test792288,"public void test792288() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test792289,"public void test792289() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test792290,"public void test792290() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test792291,"public void test792291() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test792299,"public void test792299() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 884, 0, 1, 43);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertNotNull(stringBuffer1);
}",0,"assertEquals(stringBuffer0, stringBuffer1)"
project,0,test792300,"public void test792300() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 884, 0, 1, 43);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertSame(stringBuffer0, stringBuffer1);
}",0,
project,0,test792301,"public void test792301() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 884, 0, 1, 43);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertSame(stringBuffer1, stringBuffer0);
}",0,
project,0,test792309,"public void test792309() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 884, 0, 1, 43);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(6, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test792310,"public void test792310() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 884, 0, 1, 43);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(""M%-<"", fastDatePrinter0.getPattern());
}",0,
project,0,test792314,"public void test792314() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 884, 0, 1, 43);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(""org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=-59842707420000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\""GMT\"",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=73,MONTH=7,WEEK_OF_YEAR=36,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=243,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=5,AM_PM=0,HOUR=1,HOUR_OF_DAY=1,MINUTE=43,SECOND=0,MILLISECOND=0,ZONE_OFFSET=0,DST_OFFSET=0]"", mockGregorianCalendar0.toString());
}",0,
project,0,test792320,"public void test792320() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 884, 0, 1, 43);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test792321,"public void test792321() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 884, 0, 1, 43);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test792322,"public void test792322() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 884, 0, 1, 43);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test792323,"public void test792323() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 884, 0, 1, 43);
    StringWriter stringWriter0 = new StringWriter(2);
    StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    StringBuffer stringBuffer1 = fastDatePrinter0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test802337,"public void test802337() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test802349,"public void test802349() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(""^-zSS]=}30h"", fastDatePrinter0.getPattern());
}",0,
project,0,test802350,"public void test802350() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(22, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test802351,"public void test802351() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test802352,"public void test802352() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test802353,"public void test802353() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test802354,"public void test802354() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test802355,"public void test802355() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.getPattern();
    assertEquals(""^-zSS]=}30h"", string0);
}",0,
project,0,test802356,"public void test802356() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.getPattern();
    assertNotNull(string0);
}",0,
project,0,test802368,"public void test802368() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.getPattern();
    assertEquals(""^-zSS]=}30h"", fastDatePrinter0.getPattern());
}",0,
project,0,test802369,"public void test802369() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.getPattern();
    assertEquals(22, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test802370,"public void test802370() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.getPattern();
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test802371,"public void test802371() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.getPattern();
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test802372,"public void test802372() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.getPattern();
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test802373,"public void test802373() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.getPattern();
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test812387,"public void test812387() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test812399,"public void test812399() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(""^-zSS]=}30h"", fastDatePrinter0.getPattern());
}",0,
project,0,test812400,"public void test812400() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(22, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test812401,"public void test812401() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test812402,"public void test812402() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test812403,"public void test812403() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test812404,"public void test812404() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test812408,"public void test812408() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(""^-GMT+00:00322]=}308"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format((long) 2, stringBuffer0);
    assertNotNull(stringBuffer1);
}",0,
project,0,test812409,"public void test812409() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(""^-GMT+00:00322]=}308"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format((long) 2, stringBuffer0);
    assertSame(stringBuffer0, stringBuffer1);
}",0,
project,0,test812410,"public void test812410() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(""^-GMT+00:00322]=}308"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format((long) 2, stringBuffer0);
    assertSame(stringBuffer1, stringBuffer0);
}",0,
project,0,test812422,"public void test812422() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(""^-GMT+00:00322]=}308"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format((long) 2, stringBuffer0);
    assertEquals(""^-zSS]=}30h"", fastDatePrinter0.getPattern());
}",0,
project,0,test812423,"public void test812423() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(""^-GMT+00:00322]=}308"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format((long) 2, stringBuffer0);
    assertEquals(22, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test812428,"public void test812428() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(""^-GMT+00:00322]=}308"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format((long) 2, stringBuffer0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test812429,"public void test812429() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(""^-GMT+00:00322]=}308"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format((long) 2, stringBuffer0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test812430,"public void test812430() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(""^-GMT+00:00322]=}308"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format((long) 2, stringBuffer0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test812431,"public void test812431() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    StringBuffer stringBuffer0 = new StringBuffer(""^-GMT+00:00322]=}308"");
    StringBuffer stringBuffer1 = fastDatePrinter0.format((long) 2, stringBuffer0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test822445,"public void test822445() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test822457,"public void test822457() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(""^-zSS]=}30h"", fastDatePrinter0.getPattern());
}",0,
project,0,test822458,"public void test822458() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(22, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test822459,"public void test822459() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test822460,"public void test822460() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test822461,"public void test822461() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test822462,"public void test822462() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test822463,"public void test822463() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.format(1080L);
    assertEquals(""^-GMT+00:0080]=}3012"", string0);
}",0,
project,0,test822464,"public void test822464() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.format(1080L);
    assertNotNull(string0);
}",0,
project,0,test822476,"public void test822476() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.format(1080L);
    assertEquals(""^-zSS]=}30h"", fastDatePrinter0.getPattern());
}",0,
project,0,test822477,"public void test822477() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.format(1080L);
    assertEquals(22, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test822478,"public void test822478() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.format(1080L);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test822479,"public void test822479() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.format(1080L);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test822480,"public void test822480() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.format(1080L);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test822481,"public void test822481() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    String string0 = fastDatePrinter0.format(1080L);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test832491,"public void test832491() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test832499,"public void test832499() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test832500,"public void test832500() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test832501,"public void test832501() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test832502,"public void test832502() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test832503,"public void test832503() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test832504,"public void test832504() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test832512,"public void test832512() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    fastDatePrinter0.hashCode();
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test832513,"public void test832513() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    fastDatePrinter0.hashCode();
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test832514,"public void test832514() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    fastDatePrinter0.hashCode();
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test832515,"public void test832515() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    fastDatePrinter0.hashCode();
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test832516,"public void test832516() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    fastDatePrinter0.hashCode();
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test832517,"public void test832517() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CANADA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    fastDatePrinter0.hashCode();
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test842527,"public void test842527() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test842535,"public void test842535() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test842536,"public void test842536() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test842537,"public void test842537() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test842538,"public void test842538() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test842539,"public void test842539() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test842540,"public void test842540() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test842541,"public void test842541() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Locale locale1 = fastDatePrinter0.getLocale();
    assertNotNull(locale1);
}",0,
project,0,test842542,"public void test842542() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Locale locale1 = fastDatePrinter0.getLocale();
    assertSame(locale0, locale1);
}",0,
project,0,test842543,"public void test842543() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Locale locale1 = fastDatePrinter0.getLocale();
    assertSame(locale1, locale0);
}",0,
project,0,test842551,"public void test842551() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Locale locale1 = fastDatePrinter0.getLocale();
    assertEquals("""", fastDatePrinter0.getPattern());
}",0,
project,0,test842552,"public void test842552() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Locale locale1 = fastDatePrinter0.getLocale();
    assertEquals(0, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test842559,"public void test842559() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Locale locale1 = fastDatePrinter0.getLocale();
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test842560,"public void test842560() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Locale locale1 = fastDatePrinter0.getLocale();
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test842561,"public void test842561() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Locale locale1 = fastDatePrinter0.getLocale();
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test842562,"public void test842562() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.CHINA;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter("""", timeZone0, locale0);
    Locale locale1 = fastDatePrinter0.getLocale();
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test852573,"public void test852573() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertNotNull(fastDatePrinter0);
}",0,
project,0,test852581,"public void test852581() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(6, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test852582,"public void test852582() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(""M%-<"", fastDatePrinter0.getPattern());
}",0,
project,0,test852583,"public void test852583() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test852584,"public void test852584() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test852585,"public void test852585() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test852586,"public void test852586() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test852587,"public void test852587() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    String string0 = fastDatePrinter0.toString();
    assertEquals(""FastDatePrinter[M%-<,fr,GMT]"", string0);
}",0,
project,0,test852588,"public void test852588() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    String string0 = fastDatePrinter0.toString();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test852596,"public void test852596() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    String string0 = fastDatePrinter0.toString();
    assertEquals(6, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test852597,"public void test852597() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    String string0 = fastDatePrinter0.toString();
    assertEquals(""M%-<"", fastDatePrinter0.getPattern());
}",0,
project,0,test852598,"public void test852598() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    String string0 = fastDatePrinter0.toString();
    assertEquals(1, FastDatePrinter.LONG);
}",0,
project,0,test852599,"public void test852599() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    String string0 = fastDatePrinter0.toString();
    assertEquals(0, FastDatePrinter.FULL);
}",0,
project,0,test852600,"public void test852600() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    String string0 = fastDatePrinter0.toString();
    assertEquals(3, FastDatePrinter.SHORT);
}",0,
project,0,test852601,"public void test852601() throws Throwable {
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Locale locale0 = Locale.FRENCH;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""M%-<"", timeZone0, locale0);
    String string0 = fastDatePrinter0.toString();
    assertEquals(2, FastDatePrinter.MEDIUM);
}",0,
project,0,test862602,"public void test862602() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""^-zSS]=}30h"");
    Locale locale0 = Locale.UK;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""^-zSS]=}30h"", simpleTimeZone0, locale0);
    int int0 = fastDatePrinter0.getMaxLengthEstimate();
    assertEquals(22, int0);
}",0,
project,0,test872603,"public void test872603() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    Calendar calendar0 = MockCalendar.getInstance();
    String string0 = fastDatePrinter0.format(calendar0);
    assertEquals(14, fastDatePrinter0.getMaxLengthEstimate());
}",0,"assertEquals(0, fastDatePrinter0.getMaxLengthEstimate())"
project,0,test872604,"public void test872604() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(80, ""~G(z)"");
    Locale locale0 = Locale.ROOT;
    FastDatePrinter fastDatePrinter0 = new FastDatePrinter(""~G(z)"", simpleTimeZone0, locale0);
    Calendar calendar0 = MockCalendar.getInstance();
    String string0 = fastDatePrinter0.format(calendar0);
    assertEquals(""~AD(GMT+00:00)"", string0);
}",0,
