project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    byte[] byteArray0 = new byte[5];
    // Undeclared exception!
    try {
        ArrayUtils.remove(byteArray0, (int) (byte) 5);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 5, Length: 5
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 0);
    assertEquals(1, booleanArray0.length);
}",0,
project,0,test0012,"public void test0012() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test0024,"public void test0024() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    int int0 = ArrayUtils.indexOf(booleanArray0, true, Integer.MAX_VALUE);
    assertEquals(1, booleanArray0.length);
}",0,
project,0,test0025,"public void test0025() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    int int0 = ArrayUtils.indexOf(booleanArray0, true, Integer.MAX_VALUE);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test0037,"public void test0037() throws Throwable {
    float[] floatArray0 = new float[8];
    int int0 = ArrayUtils.indexOf(floatArray0, (-1539.0F), 1352);
    assertEquals(8, floatArray0.length);
}",0,
project,0,test0038,"public void test0038() throws Throwable {
    float[] floatArray0 = new float[8];
    int int0 = ArrayUtils.indexOf(floatArray0, (-1539.0F), 1352);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test0039,"public void test0039() throws Throwable {
    float[] floatArray0 = new float[8];
    int int0 = ArrayUtils.indexOf(floatArray0, (-1539.0F), 1352);
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test00410,"public void test00410() throws Throwable {
    double[] doubleArray0 = new double[5];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 1985, 0.0);
    assertEquals(5, doubleArray0.length);
}",0,
project,0,test00411,"public void test00411() throws Throwable {
    double[] doubleArray0 = new double[5];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 1985, 0.0);
    assertEquals(4, int0);
}",0,
project,0,test00412,"public void test00412() throws Throwable {
    double[] doubleArray0 = new double[5];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 1985, 0.0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test00513,"public void test00513() throws Throwable {
    double[] doubleArray0 = new double[1];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 1.0, 1);
    assertEquals(1, doubleArray0.length);
}",0,
project,0,test00514,"public void test00514() throws Throwable {
    double[] doubleArray0 = new double[1];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 1.0, 1);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test00515,"public void test00515() throws Throwable {
    double[] doubleArray0 = new double[1];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 1.0, 1);
    assertArrayEquals(new double[] { 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test00616,"public void test00616() throws Throwable {
    double[] doubleArray0 = new double[3];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 0);
    assertEquals(3, doubleArray0.length);
}",0,
project,0,test00617,"public void test00617() throws Throwable {
    double[] doubleArray0 = new double[3];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test00618,"public void test00618() throws Throwable {
    double[] doubleArray0 = new double[3];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test00719,"public void test00719() throws Throwable {
    double[] doubleArray0 = new double[4];
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) 0, 3751, (-1.0));
    assertEquals(4, doubleArray0.length);
}",0,
project,0,test00720,"public void test00720() throws Throwable {
    double[] doubleArray0 = new double[4];
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) 0, 3751, (-1.0));
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test00721,"public void test00721() throws Throwable {
    double[] doubleArray0 = new double[4];
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) 0, 3751, (-1.0));
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test00822,"public void test00822() throws Throwable {
    byte[] byteArray0 = new byte[9];
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) (-100), 2022);
    assertEquals(9, byteArray0.length);
}",0,
project,0,test00823,"public void test00823() throws Throwable {
    byte[] byteArray0 = new byte[9];
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) (-100), 2022);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test00824,"public void test00824() throws Throwable {
    byte[] byteArray0 = new byte[9];
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) (-100), 2022);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test00925,"public void test00925() throws Throwable {
    char[] charArray0 = new char[6];
    charArray0[1] = 'u';
    int int0 = ArrayUtils.lastIndexOf(charArray0, '\""', 4586);
    assertEquals(6, charArray0.length);
}",0,
project,0,test00926,"public void test00926() throws Throwable {
    char[] charArray0 = new char[6];
    charArray0[1] = 'u';
    int int0 = ArrayUtils.lastIndexOf(charArray0, '\""', 4586);
    assertEquals((-1), int0);
}",0,
project,0,test00927,"public void test00927() throws Throwable {
    char[] charArray0 = new char[6];
    charArray0[1] = 'u';
    int int0 = ArrayUtils.lastIndexOf(charArray0, '\""', 4586);
    assertArrayEquals(new char[] { '\u0000', 'u', '\u0000', '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test01028,"public void test01028() throws Throwable {
    char[] charArray0 = new char[1];
    charArray0[0] = 'j';
    boolean boolean0 = ArrayUtils.contains(charArray0, '@');
    assertEquals(1, charArray0.length);
}",1,
project,0,test01029,"public void test01029() throws Throwable {
    char[] charArray0 = new char[1];
    charArray0[0] = 'j';
    boolean boolean0 = ArrayUtils.contains(charArray0, '@');
    assertFalse(boolean0);
}",1,
project,0,test01030,"public void test01030() throws Throwable {
    char[] charArray0 = new char[1];
    charArray0[0] = 'j';
    boolean boolean0 = ArrayUtils.contains(charArray0, '@');
    assertArrayEquals(new char[] { 'j' }, charArray0);
}",1,
project,0,test01131,"public void test01131() throws Throwable {
    char[] charArray0 = new char[1];
    int int0 = ArrayUtils.indexOf(charArray0, '+', 551);
    assertEquals(1, charArray0.length);
}",0,
project,0,test01132,"public void test01132() throws Throwable {
    char[] charArray0 = new char[1];
    int int0 = ArrayUtils.indexOf(charArray0, '+', 551);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test01133,"public void test01133() throws Throwable {
    char[] charArray0 = new char[1];
    int int0 = ArrayUtils.indexOf(charArray0, '+', 551);
    assertArrayEquals(new char[] { '\u0000' }, charArray0);
}",0,
project,0,test01234,"public void test01234() throws Throwable {
    short[] shortArray0 = new short[7];
    shortArray0[2] = (short) 3693;
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 48);
    assertEquals(7, shortArray0.length);
}",0,
project,0,test01235,"public void test01235() throws Throwable {
    short[] shortArray0 = new short[7];
    shortArray0[2] = (short) 3693;
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 48);
    assertEquals((-1), int0);
}",0,
project,0,test01236,"public void test01236() throws Throwable {
    short[] shortArray0 = new short[7];
    shortArray0[2] = (short) 3693;
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 48);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 3693, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test01337,"public void test01337() throws Throwable {
    int[] intArray0 = new int[3];
    int int0 = ArrayUtils.indexOf(intArray0, 0, 3847);
    assertEquals(3, intArray0.length);
}",0,
project,0,test01338,"public void test01338() throws Throwable {
    int[] intArray0 = new int[3];
    int int0 = ArrayUtils.indexOf(intArray0, 0, 3847);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test01339,"public void test01339() throws Throwable {
    int[] intArray0 = new int[3];
    int int0 = ArrayUtils.indexOf(intArray0, 0, 3847);
    assertArrayEquals(new int[] { 0, 0, 0 }, intArray0);
}",0,
project,0,test01440,"public void test01440() throws Throwable {
    boolean[] booleanArray0 = new boolean[7];
    ArrayUtils.reverse(booleanArray0);
    assertEquals(7, booleanArray0.length);
}",0,
project,0,test01542,"public void test01542() throws Throwable {
    float[] floatArray0 = new float[2];
    ArrayUtils.reverse(floatArray0);
    assertEquals(2, floatArray0.length);
}",0,
project,0,test01543,"public void test01543() throws Throwable {
    float[] floatArray0 = new float[2];
    ArrayUtils.reverse(floatArray0);
    assertArrayEquals(new float[] { 0.0F, 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test01644,"public void test01644() throws Throwable {
    double[] doubleArray0 = new double[8];
    ArrayUtils.reverse(doubleArray0);
    assertEquals(8, doubleArray0.length);
}",0,
project,0,test01645,"public void test01645() throws Throwable {
    double[] doubleArray0 = new double[8];
    ArrayUtils.reverse(doubleArray0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test01746,"public void test01746() throws Throwable {
    byte[] byteArray0 = new byte[2];
    ArrayUtils.reverse(byteArray0);
    assertEquals(2, byteArray0.length);
}",0,
project,0,test01747,"public void test01747() throws Throwable {
    byte[] byteArray0 = new byte[2];
    ArrayUtils.reverse(byteArray0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test01848,"public void test01848() throws Throwable {
    char[] charArray0 = new char[3];
    ArrayUtils.reverse(charArray0);
    assertEquals(3, charArray0.length);
}",0,
project,0,test01849,"public void test01849() throws Throwable {
    char[] charArray0 = new char[3];
    ArrayUtils.reverse(charArray0);
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test01950,"public void test01950() throws Throwable {
    short[] shortArray0 = new short[0];
    ArrayUtils.reverse(shortArray0);
    assertEquals(0, shortArray0.length);
}",0,
project,0,test01951,"public void test01951() throws Throwable {
    short[] shortArray0 = new short[0];
    ArrayUtils.reverse(shortArray0);
    assertArrayEquals(new short[] {}, shortArray0);
}",0,
project,0,test02052,"public void test02052() throws Throwable {
    int[] intArray0 = new int[0];
    ArrayUtils.reverse(intArray0);
    assertEquals(0, intArray0.length);
}",0,
project,0,test02053,"public void test02053() throws Throwable {
    int[] intArray0 = new int[0];
    ArrayUtils.reverse(intArray0);
    assertArrayEquals(new int[] {}, intArray0);
}",0,
project,0,test02154,"public void test02154() throws Throwable {
    long[] longArray0 = new long[3];
    ArrayUtils.reverse(longArray0);
    assertEquals(3, longArray0.length);
}",0,
project,0,test02155,"public void test02155() throws Throwable {
    long[] longArray0 = new long[3];
    ArrayUtils.reverse(longArray0);
    assertArrayEquals(new long[] { 0L, 0L, 0L }, longArray0);
}",0,
project,0,test02256,"public void test02256() throws Throwable {
    Object[] objectArray0 = new Object[2];
    ArrayUtils.reverse(objectArray0);
    assertEquals(2, objectArray0.length);
}",0,
project,0,test02358,"public void test02358() throws Throwable {
    boolean[] booleanArray0 = new boolean[6];
    boolean[] booleanArray1 = new boolean[8];
    boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray1);
    assertEquals(6, booleanArray0.length);
}",0,
project,0,test02359,"public void test02359() throws Throwable {
    boolean[] booleanArray0 = new boolean[6];
    boolean[] booleanArray1 = new boolean[8];
    boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray1);
    assertEquals(8, booleanArray1.length);
}",0,
project,0,test02360,"public void test02360() throws Throwable {
    boolean[] booleanArray0 = new boolean[6];
    boolean[] booleanArray1 = new boolean[8];
    boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray1);
    assertNotSame(booleanArray0, booleanArray1);
}",0,
project,0,test02361,"public void test02361() throws Throwable {
    boolean[] booleanArray0 = new boolean[6];
    boolean[] booleanArray1 = new boolean[8];
    boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray1);
    assertNotSame(booleanArray1, booleanArray0);
}",0,
project,0,test02364,"public void test02364() throws Throwable {
    boolean[] booleanArray0 = new boolean[6];
    boolean[] booleanArray1 = new boolean[8];
    boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02467,"public void test02467() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    assertEquals(5, shortArray1.length);
}",0,
project,0,test02468,"public void test02468() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    assertEquals(5, shortArray2.length);
}",0,
project,0,test02469,"public void test02469() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    assertNotSame(shortArray2, shortArray0);
}",0,
project,0,test02470,"public void test02470() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    assertNotNull(shortArray2);
}",0,"assertEquals(shortArray0, shortArray2)"
project,0,test02472,"public void test02472() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray2);
}",0,
project,0,test02473,"public void test02473() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray2);
    assertEquals(3, shortArray0.length);
}",0,
project,0,test02474,"public void test02474() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray2);
    assertEquals(5, shortArray1.length);
}",0,
project,0,test02475,"public void test02475() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray2);
    assertEquals(5, shortArray2.length);
}",0,
project,0,test02476,"public void test02476() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray2);
    assertNotSame(shortArray0, shortArray2);
}",0,
project,0,test02477,"public void test02477() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray2);
    assertNotSame(shortArray2, shortArray0);
}",0,
project,0,test02480,"public void test02480() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray2);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02481,"public void test02481() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray2);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test02482,"public void test02482() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray2);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray2);
}",0,
project,0,test02583,"public void test02583() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 4, 4);
    assertEquals(2, booleanArray0.length);
}",0,
project,0,test02584,"public void test02584() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 4, 4);
    assertEquals(0, booleanArray1.length);
}",0,
project,0,test02585,"public void test02585() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 4, 4);
    assertNotSame(booleanArray0, booleanArray1);
}",0,
project,0,test02586,"public void test02586() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 4, 4);
    assertNotSame(booleanArray1, booleanArray0);
}",0,
project,0,test02587,"public void test02587() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 4, 4);
    assertNotNull(booleanArray1);
}",0,assertFalse(booleanArray1)
project,0,test02691,"public void test02691() throws Throwable {
    boolean[] booleanArray0 = new boolean[7];
    boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 0, 0);
    assertEquals(7, booleanArray0.length);
}",0,
project,0,test02692,"public void test02692() throws Throwable {
    boolean[] booleanArray0 = new boolean[7];
    boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 0, 0);
    assertEquals(0, booleanArray1.length);
}",0,
project,0,test02693,"public void test02693() throws Throwable {
    boolean[] booleanArray0 = new boolean[7];
    boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 0, 0);
    assertNotSame(booleanArray0, booleanArray1);
}",0,
project,0,test02694,"public void test02694() throws Throwable {
    boolean[] booleanArray0 = new boolean[7];
    boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 0, 0);
    assertNotSame(booleanArray1, booleanArray0);
}",0,
project,0,test02695,"public void test02695() throws Throwable {
    boolean[] booleanArray0 = new boolean[7];
    boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 0, 0);
    assertNotNull(booleanArray1);
}",0,assertFalse(booleanArray1)
project,0,test02799,"public void test02799() throws Throwable {
    float[] floatArray0 = new float[1];
    float[] floatArray1 = ArrayUtils.subarray(floatArray0, 0, 0);
    assertEquals(1, floatArray0.length);
}",0,
project,0,test027100,"public void test027100() throws Throwable {
    float[] floatArray0 = new float[1];
    float[] floatArray1 = ArrayUtils.subarray(floatArray0, 0, 0);
    assertEquals(0, floatArray1.length);
}",0,
project,0,test027101,"public void test027101() throws Throwable {
    float[] floatArray0 = new float[1];
    float[] floatArray1 = ArrayUtils.subarray(floatArray0, 0, 0);
    assertNotSame(floatArray0, floatArray1);
}",0,
project,0,test027102,"public void test027102() throws Throwable {
    float[] floatArray0 = new float[1];
    float[] floatArray1 = ArrayUtils.subarray(floatArray0, 0, 0);
    assertNotSame(floatArray1, floatArray0);
}",0,
project,0,test027103,"public void test027103() throws Throwable {
    float[] floatArray0 = new float[1];
    float[] floatArray1 = ArrayUtils.subarray(floatArray0, 0, 0);
    assertNotNull(floatArray1);
}",0,
project,0,test027105,"public void test027105() throws Throwable {
    float[] floatArray0 = new float[1];
    float[] floatArray1 = ArrayUtils.subarray(floatArray0, 0, 0);
    assertArrayEquals(new float[] { 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test027106,"public void test027106() throws Throwable {
    float[] floatArray0 = new float[1];
    float[] floatArray1 = ArrayUtils.subarray(floatArray0, 0, 0);
    assertArrayEquals(new float[] {}, floatArray1, 0.01F);
}",0,
project,0,test028107,"public void test028107() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (-1), 0);
    assertEquals(0, doubleArray0.length);
}",0,
project,0,test028108,"public void test028108() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (-1), 0);
    assertEquals(0, doubleArray1.length);
}",0,
project,0,test028109,"public void test028109() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (-1), 0);
    assertNotSame(doubleArray0, doubleArray1);
}",0,
project,0,test028110,"public void test028110() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (-1), 0);
    assertNotSame(doubleArray1, doubleArray0);
}",0,
project,0,test028111,"public void test028111() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (-1), 0);
    assertNotNull(doubleArray1);
}",0,
project,0,test028113,"public void test028113() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (-1), 0);
    assertArrayEquals(new double[] {}, doubleArray0, 0.01);
}",0,
project,0,test028114,"public void test028114() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (-1), 0);
    assertArrayEquals(new double[] {}, doubleArray1, 0.01);
}",0,
project,0,test029115,"public void test029115() throws Throwable {
    double[] doubleArray0 = new double[3];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, 0, 0);
    assertEquals(3, doubleArray0.length);
}",0,
project,0,test029116,"public void test029116() throws Throwable {
    double[] doubleArray0 = new double[3];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, 0, 0);
    assertEquals(0, doubleArray1.length);
}",0,
project,0,test029117,"public void test029117() throws Throwable {
    double[] doubleArray0 = new double[3];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, 0, 0);
    assertNotSame(doubleArray0, doubleArray1);
}",0,
project,0,test029118,"public void test029118() throws Throwable {
    double[] doubleArray0 = new double[3];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, 0, 0);
    assertNotSame(doubleArray1, doubleArray0);
}",0,
project,0,test029119,"public void test029119() throws Throwable {
    double[] doubleArray0 = new double[3];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, 0, 0);
    assertNotNull(doubleArray1);
}",0,
project,0,test029121,"public void test029121() throws Throwable {
    double[] doubleArray0 = new double[3];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, 0, 0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test029122,"public void test029122() throws Throwable {
    double[] doubleArray0 = new double[3];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, 0, 0);
    assertArrayEquals(new double[] {}, doubleArray1, 0.01);
}",0,
project,0,test030125,"public void test030125() throws Throwable {
    Short[] shortArray0 = new Short[5];
    Short short0 = new Short((short) 1588);
    shortArray0[0] = short0;
    short short1 = (short) 2;
    byte[] byteArray0 = new byte[2];
    byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) shortArray0[0], (int) short1);
    assertEquals(5, shortArray0.length);
}",0,
project,0,test030126,"public void test030126() throws Throwable {
    Short[] shortArray0 = new Short[5];
    Short short0 = new Short((short) 1588);
    shortArray0[0] = short0;
    short short1 = (short) 2;
    byte[] byteArray0 = new byte[2];
    byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) shortArray0[0], (int) short1);
    assertEquals(2, byteArray0.length);
}",0,
project,0,test030127,"public void test030127() throws Throwable {
    Short[] shortArray0 = new Short[5];
    Short short0 = new Short((short) 1588);
    shortArray0[0] = short0;
    short short1 = (short) 2;
    byte[] byteArray0 = new byte[2];
    byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) shortArray0[0], (int) short1);
    assertEquals(0, byteArray1.length);
}",0,
project,0,test030128,"public void test030128() throws Throwable {
    Short[] shortArray0 = new Short[5];
    Short short0 = new Short((short) 1588);
    shortArray0[0] = short0;
    short short1 = (short) 2;
    byte[] byteArray0 = new byte[2];
    byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) shortArray0[0], (int) short1);
    assertNotSame(byteArray0, byteArray1);
}",0,
project,0,test030129,"public void test030129() throws Throwable {
    Short[] shortArray0 = new Short[5];
    Short short0 = new Short((short) 1588);
    shortArray0[0] = short0;
    short short1 = (short) 2;
    byte[] byteArray0 = new byte[2];
    byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) shortArray0[0], (int) short1);
    assertNotSame(byteArray1, byteArray0);
}",0,
project,0,test030130,"public void test030130() throws Throwable {
    Short[] shortArray0 = new Short[5];
    Short short0 = new Short((short) 1588);
    shortArray0[0] = short0;
    short short1 = (short) 2;
    byte[] byteArray0 = new byte[2];
    byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) shortArray0[0], (int) short1);
    assertNotNull(byteArray1);
}",0,"assertEquals(byteArray0, byteArray1)"
project,0,test030132,"public void test030132() throws Throwable {
    Short[] shortArray0 = new Short[5];
    Short short0 = new Short((short) 1588);
    shortArray0[0] = short0;
    short short1 = (short) 2;
    byte[] byteArray0 = new byte[2];
    byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) shortArray0[0], (int) short1);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test030133,"public void test030133() throws Throwable {
    Short[] shortArray0 = new Short[5];
    Short short0 = new Short((short) 1588);
    shortArray0[0] = short0;
    short short1 = (short) 2;
    byte[] byteArray0 = new byte[2];
    byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) shortArray0[0], (int) short1);
    assertArrayEquals(new byte[] {}, byteArray1);
}",0,
project,0,test031134,"public void test031134() throws Throwable {
    char[] charArray0 = new char[2];
    char[] charArray1 = ArrayUtils.subarray(charArray0, 831, 831);
    assertEquals(2, charArray0.length);
}",0,
project,0,test031135,"public void test031135() throws Throwable {
    char[] charArray0 = new char[2];
    char[] charArray1 = ArrayUtils.subarray(charArray0, 831, 831);
    assertEquals(0, charArray1.length);
}",0,
project,0,test031136,"public void test031136() throws Throwable {
    char[] charArray0 = new char[2];
    char[] charArray1 = ArrayUtils.subarray(charArray0, 831, 831);
    assertNotSame(charArray0, charArray1);
}",0,
project,0,test031137,"public void test031137() throws Throwable {
    char[] charArray0 = new char[2];
    char[] charArray1 = ArrayUtils.subarray(charArray0, 831, 831);
    assertNotSame(charArray1, charArray0);
}",0,
project,0,test031138,"public void test031138() throws Throwable {
    char[] charArray0 = new char[2];
    char[] charArray1 = ArrayUtils.subarray(charArray0, 831, 831);
    assertNotNull(charArray1);
}",0,
project,0,test031140,"public void test031140() throws Throwable {
    char[] charArray0 = new char[2];
    char[] charArray1 = ArrayUtils.subarray(charArray0, 831, 831);
    assertArrayEquals(new char[] { '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test031141,"public void test031141() throws Throwable {
    char[] charArray0 = new char[2];
    char[] charArray1 = ArrayUtils.subarray(charArray0, 831, 831);
    assertArrayEquals(new char[] {}, charArray1);
}",0,
project,0,test032142,"public void test032142() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (byte) (-46), 1123);
    assertEquals(0, shortArray0.length);
}",0,
project,0,test032143,"public void test032143() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (byte) (-46), 1123);
    assertEquals(0, shortArray1.length);
}",0,
project,0,test032144,"public void test032144() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (byte) (-46), 1123);
    assertNotSame(shortArray0, shortArray1);
}",0,
project,0,test032145,"public void test032145() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (byte) (-46), 1123);
    assertNotSame(shortArray1, shortArray0);
}",0,
project,0,test032146,"public void test032146() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (byte) (-46), 1123);
    assertNotNull(shortArray1);
}",0,
project,0,test032148,"public void test032148() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (byte) (-46), 1123);
    assertArrayEquals(new short[] {}, shortArray0);
}",0,
project,0,test032149,"public void test032149() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (byte) (-46), 1123);
    assertArrayEquals(new short[] {}, shortArray1);
}",0,
project,0,test033150,"public void test033150() throws Throwable {
    short[] shortArray0 = new short[8];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, 0, (-3540));
    assertEquals(8, shortArray0.length);
}",0,
project,0,test033151,"public void test033151() throws Throwable {
    short[] shortArray0 = new short[8];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, 0, (-3540));
    assertEquals(0, shortArray1.length);
}",0,
project,0,test033152,"public void test033152() throws Throwable {
    short[] shortArray0 = new short[8];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, 0, (-3540));
    assertNotSame(shortArray0, shortArray1);
}",0,
project,0,test033153,"public void test033153() throws Throwable {
    short[] shortArray0 = new short[8];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, 0, (-3540));
    assertNotSame(shortArray1, shortArray0);
}",0,
project,0,test033154,"public void test033154() throws Throwable {
    short[] shortArray0 = new short[8];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, 0, (-3540));
    assertNotNull(shortArray1);
}",0,"assertEquals(shortArray0, shortArray1)"
project,0,test033156,"public void test033156() throws Throwable {
    short[] shortArray0 = new short[8];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, 0, (-3540));
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test033157,"public void test033157() throws Throwable {
    short[] shortArray0 = new short[8];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, 0, (-3540));
    assertArrayEquals(new short[] {}, shortArray1);
}",0,
project,0,test034158,"public void test034158() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.subarray(intArray0, 0, (-181));
    assertEquals(0, intArray0.length);
}",0,
project,0,test034159,"public void test034159() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.subarray(intArray0, 0, (-181));
    assertEquals(0, intArray1.length);
}",0,
project,0,test034160,"public void test034160() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.subarray(intArray0, 0, (-181));
    assertNotSame(intArray0, intArray1);
}",0,
project,0,test034161,"public void test034161() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.subarray(intArray0, 0, (-181));
    assertNotSame(intArray1, intArray0);
}",0,
project,0,test034162,"public void test034162() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.subarray(intArray0, 0, (-181));
    assertNotNull(intArray1);
}",0,
project,0,test034164,"public void test034164() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.subarray(intArray0, 0, (-181));
    assertArrayEquals(new int[] {}, intArray0);
}",0,
project,0,test034165,"public void test034165() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.subarray(intArray0, 0, (-181));
    assertArrayEquals(new int[] {}, intArray1);
}",0,
project,0,test035166,"public void test035166() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = ArrayUtils.subarray(longArray0, 0, 0);
    assertEquals(0, longArray0.length);
}",0,
project,0,test035167,"public void test035167() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = ArrayUtils.subarray(longArray0, 0, 0);
    assertEquals(0, longArray1.length);
}",0,
project,0,test035168,"public void test035168() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = ArrayUtils.subarray(longArray0, 0, 0);
    assertNotSame(longArray0, longArray1);
}",0,
project,0,test035169,"public void test035169() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = ArrayUtils.subarray(longArray0, 0, 0);
    assertNotSame(longArray1, longArray0);
}",0,
project,0,test035170,"public void test035170() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = ArrayUtils.subarray(longArray0, 0, 0);
    assertNotNull(longArray1);
}",0,
project,0,test035172,"public void test035172() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = ArrayUtils.subarray(longArray0, 0, 0);
    assertArrayEquals(new long[] {}, longArray0);
}",0,
project,0,test035173,"public void test035173() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = ArrayUtils.subarray(longArray0, 0, 0);
    assertArrayEquals(new long[] {}, longArray1);
}",0,
project,0,test036174,"public void test036174() throws Throwable {
    String string0 = ArrayUtils.toString((Object) null);
    assertNotNull(string0);
}",0,
project,0,test036175,"public void test036175() throws Throwable {
    String string0 = ArrayUtils.toString((Object) null);
    assertEquals(""{}"", string0);
}",0,
project,0,test037176,"public void test037176() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) 0);
    assertEquals(1, shortArray0.length);
}",0,
project,0,test037177,"public void test037177() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) 0);
    assertEquals(0, shortArray1.length);
}",0,
project,0,test037178,"public void test037178() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) 0);
    assertNotSame(shortArray0, shortArray1);
}",0,
project,0,test037179,"public void test037179() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) 0);
    assertNotSame(shortArray1, shortArray0);
}",0,
project,0,test037180,"public void test037180() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) 0);
    assertNotNull(shortArray1);
}",0,
project,0,test037182,"public void test037182() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) 0);
    assertArrayEquals(new short[] { (short) 0 }, shortArray0);
}",0,
project,0,test037183,"public void test037183() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) 0);
    assertArrayEquals(new short[] {}, shortArray1);
}",0,
project,0,test038185,"public void test038185() throws Throwable {
    Object object0 = new Object();
    Object[] objectArray0 = ArrayUtils.removeElement((Object[]) null, object0);
    assertNull(objectArray0);
}",0,assertNotNull(objectArray0)
project,0,test039186,"public void test039186() throws Throwable {
    long[] longArray0 = new long[3];
    long[] longArray1 = ArrayUtils.removeElement(longArray0, 0L);
    assertEquals(3, longArray0.length);
}",0,
project,0,test039187,"public void test039187() throws Throwable {
    long[] longArray0 = new long[3];
    long[] longArray1 = ArrayUtils.removeElement(longArray0, 0L);
    assertEquals(2, longArray1.length);
}",0,
project,0,test039188,"public void test039188() throws Throwable {
    long[] longArray0 = new long[3];
    long[] longArray1 = ArrayUtils.removeElement(longArray0, 0L);
    assertNotSame(longArray0, longArray1);
}",0,
project,0,test039189,"public void test039189() throws Throwable {
    long[] longArray0 = new long[3];
    long[] longArray1 = ArrayUtils.removeElement(longArray0, 0L);
    assertNotSame(longArray1, longArray0);
}",0,
project,0,test039190,"public void test039190() throws Throwable {
    long[] longArray0 = new long[3];
    long[] longArray1 = ArrayUtils.removeElement(longArray0, 0L);
    assertNotNull(longArray1);
}",0,
project,0,test039192,"public void test039192() throws Throwable {
    long[] longArray0 = new long[3];
    long[] longArray1 = ArrayUtils.removeElement(longArray0, 0L);
    assertArrayEquals(new long[] { 0L, 0L, 0L }, longArray0);
}",0,
project,0,test039193,"public void test039193() throws Throwable {
    long[] longArray0 = new long[3];
    long[] longArray1 = ArrayUtils.removeElement(longArray0, 0L);
    assertArrayEquals(new long[] { 0L, 0L }, longArray1);
}",0,
project,0,test040194,"public void test040194() throws Throwable {
    int[] intArray0 = ArrayUtils.removeElement((int[]) null, (-159));
    assertNull(intArray0);
}",0,"assertEquals(0, intArray0)"
project,0,test041195,"public void test041195() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.removeElement(intArray0, (-416));
    assertEquals(0, intArray0.length);
}",0,
project,0,test041196,"public void test041196() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.removeElement(intArray0, (-416));
    assertEquals(0, intArray1.length);
}",0,
project,0,test041197,"public void test041197() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.removeElement(intArray0, (-416));
    assertNotSame(intArray0, intArray1);
}",0,
project,0,test041198,"public void test041198() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.removeElement(intArray0, (-416));
    assertNotSame(intArray1, intArray0);
}",0,
project,0,test041199,"public void test041199() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.removeElement(intArray0, (-416));
    assertNotNull(intArray1);
}",0,"assertEquals(1, intArray1)"
project,0,test041201,"public void test041201() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.removeElement(intArray0, (-416));
    assertArrayEquals(new int[] {}, intArray0);
}",0,
project,0,test041202,"public void test041202() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.removeElement(intArray0, (-416));
    assertArrayEquals(new int[] {}, intArray1);
}",0,
project,0,test042203,"public void test042203() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (-4025.3044F));
    assertEquals(0, floatArray0.length);
}",0,
project,0,test042204,"public void test042204() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (-4025.3044F));
    assertEquals(0, floatArray1.length);
}",0,
project,0,test042205,"public void test042205() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (-4025.3044F));
    assertNotSame(floatArray0, floatArray1);
}",0,
project,0,test042206,"public void test042206() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (-4025.3044F));
    assertNotSame(floatArray1, floatArray0);
}",0,
project,0,test042207,"public void test042207() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (-4025.3044F));
    assertNotNull(floatArray1);
}",0,
project,0,test042209,"public void test042209() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (-4025.3044F));
    assertArrayEquals(new float[] {}, floatArray0, 0.01F);
}",0,
project,0,test042210,"public void test042210() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (-4025.3044F));
    assertArrayEquals(new float[] {}, floatArray1, 0.01F);
}",0,
project,0,test043211,"public void test043211() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    assertEquals((-1), ArrayUtils.INDEX_NOT_FOUND);
}",0,
project,0,test043212,"public void test043212() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    assertNotNull(arrayUtils0);
}",0,
project,0,test043213,"public void test043213() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    byte[] byteArray0 = ArrayUtils.removeElement(arrayUtils0.EMPTY_BYTE_ARRAY, (byte) (-32));
    assertEquals(0, byteArray0.length);
}",0,
project,0,test043214,"public void test043214() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    byte[] byteArray0 = ArrayUtils.removeElement(arrayUtils0.EMPTY_BYTE_ARRAY, (byte) (-32));
    assertEquals((-1), ArrayUtils.INDEX_NOT_FOUND);
}",0,
project,0,test043215,"public void test043215() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    byte[] byteArray0 = ArrayUtils.removeElement(arrayUtils0.EMPTY_BYTE_ARRAY, (byte) (-32));
    assertNotNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test043216,"public void test043216() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    byte[] byteArray0 = ArrayUtils.removeElement(arrayUtils0.EMPTY_BYTE_ARRAY, (byte) (-32));
    assertArrayEquals(new byte[] {}, byteArray0);
}",0,
project,0,test044217,"public void test044217() throws Throwable {
    short[] shortArray0 = new short[8];
    short[] shortArray1 = ArrayUtils.remove(shortArray0, 0);
    assertEquals(8, shortArray0.length);
}",0,
project,0,test044218,"public void test044218() throws Throwable {
    short[] shortArray0 = new short[8];
    short[] shortArray1 = ArrayUtils.remove(shortArray0, 0);
    assertEquals(7, shortArray1.length);
}",0,
project,0,test044219,"public void test044219() throws Throwable {
    short[] shortArray0 = new short[8];
    short[] shortArray1 = ArrayUtils.remove(shortArray0, 0);
    assertNotSame(shortArray0, shortArray1);
}",0,
project,0,test044220,"public void test044220() throws Throwable {
    short[] shortArray0 = new short[8];
    short[] shortArray1 = ArrayUtils.remove(shortArray0, 0);
    assertNotSame(shortArray1, shortArray0);
}",0,
project,0,test044221,"public void test044221() throws Throwable {
    short[] shortArray0 = new short[8];
    short[] shortArray1 = ArrayUtils.remove(shortArray0, 0);
    assertNotNull(shortArray1);
}",0,"assertEquals(shortArray0, shortArray1)"
project,0,test044223,"public void test044223() throws Throwable {
    short[] shortArray0 = new short[8];
    short[] shortArray1 = ArrayUtils.remove(shortArray0, 0);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test044224,"public void test044224() throws Throwable {
    short[] shortArray0 = new short[8];
    short[] shortArray1 = ArrayUtils.remove(shortArray0, 0);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray1);
}",0,
project,0,test045225,"public void test045225() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.remove(shortArray0, (int) (byte) 0);
    assertEquals(1, shortArray0.length);
}",0,
project,0,test045226,"public void test045226() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.remove(shortArray0, (int) (byte) 0);
    assertEquals(0, shortArray1.length);
}",0,
project,0,test045227,"public void test045227() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.remove(shortArray0, (int) (byte) 0);
    assertNotSame(shortArray0, shortArray1);
}",0,
project,0,test045228,"public void test045228() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.remove(shortArray0, (int) (byte) 0);
    assertNotSame(shortArray1, shortArray0);
}",0,
project,0,test045229,"public void test045229() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.remove(shortArray0, (int) (byte) 0);
    assertNotNull(shortArray1);
}",0,
project,0,test045231,"public void test045231() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.remove(shortArray0, (int) (byte) 0);
    assertArrayEquals(new short[] { (short) 0 }, shortArray0);
}",0,
project,0,test045232,"public void test045232() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = ArrayUtils.remove(shortArray0, (int) (byte) 0);
    assertArrayEquals(new short[] {}, shortArray1);
}",0,
project,0,test046233,"public void test046233() throws Throwable {
    String[] stringArray0 = new String[6];
    String[] stringArray1 = ArrayUtils.remove(stringArray0, 0);
    assertEquals(6, stringArray0.length);
}",0,
project,0,test046234,"public void test046234() throws Throwable {
    String[] stringArray0 = new String[6];
    String[] stringArray1 = ArrayUtils.remove(stringArray0, 0);
    assertEquals(5, stringArray1.length);
}",0,
project,0,test046235,"public void test046235() throws Throwable {
    String[] stringArray0 = new String[6];
    String[] stringArray1 = ArrayUtils.remove(stringArray0, 0);
    assertNotSame(stringArray0, stringArray1);
}",0,
project,0,test046236,"public void test046236() throws Throwable {
    String[] stringArray0 = new String[6];
    String[] stringArray1 = ArrayUtils.remove(stringArray0, 0);
    assertNotSame(stringArray1, stringArray0);
}",0,
project,0,test046237,"public void test046237() throws Throwable {
    String[] stringArray0 = new String[6];
    String[] stringArray1 = ArrayUtils.remove(stringArray0, 0);
    assertNotNull(stringArray1);
}",0,assertNotNull(stringArray1)
project,0,test047239,"public void test047239() throws Throwable {
    long[] longArray0 = new long[4];
    long[] longArray1 = ArrayUtils.remove(longArray0, 0);
    assertEquals(4, longArray0.length);
}",0,
project,0,test047240,"public void test047240() throws Throwable {
    long[] longArray0 = new long[4];
    long[] longArray1 = ArrayUtils.remove(longArray0, 0);
    assertEquals(3, longArray1.length);
}",0,
project,0,test047241,"public void test047241() throws Throwable {
    long[] longArray0 = new long[4];
    long[] longArray1 = ArrayUtils.remove(longArray0, 0);
    assertNotSame(longArray0, longArray1);
}",0,
project,0,test047242,"public void test047242() throws Throwable {
    long[] longArray0 = new long[4];
    long[] longArray1 = ArrayUtils.remove(longArray0, 0);
    assertNotSame(longArray1, longArray0);
}",0,
project,0,test047243,"public void test047243() throws Throwable {
    long[] longArray0 = new long[4];
    long[] longArray1 = ArrayUtils.remove(longArray0, 0);
    assertNotNull(longArray1);
}",0,
project,0,test047245,"public void test047245() throws Throwable {
    long[] longArray0 = new long[4];
    long[] longArray1 = ArrayUtils.remove(longArray0, 0);
    assertArrayEquals(new long[] { 0L, 0L, 0L, 0L }, longArray0);
}",0,
project,0,test047246,"public void test047246() throws Throwable {
    long[] longArray0 = new long[4];
    long[] longArray1 = ArrayUtils.remove(longArray0, 0);
    assertArrayEquals(new long[] { 0L, 0L, 0L }, longArray1);
}",0,
project,0,test048247,"public void test048247() throws Throwable {
    int[] intArray0 = new int[7];
    int[] intArray1 = ArrayUtils.remove(intArray0, 0);
    assertEquals(7, intArray0.length);
}",0,
project,0,test048248,"public void test048248() throws Throwable {
    int[] intArray0 = new int[7];
    int[] intArray1 = ArrayUtils.remove(intArray0, 0);
    assertEquals(6, intArray1.length);
}",0,
project,0,test048249,"public void test048249() throws Throwable {
    int[] intArray0 = new int[7];
    int[] intArray1 = ArrayUtils.remove(intArray0, 0);
    assertNotSame(intArray0, intArray1);
}",0,
project,0,test048250,"public void test048250() throws Throwable {
    int[] intArray0 = new int[7];
    int[] intArray1 = ArrayUtils.remove(intArray0, 0);
    assertNotSame(intArray1, intArray0);
}",0,
project,0,test048251,"public void test048251() throws Throwable {
    int[] intArray0 = new int[7];
    int[] intArray1 = ArrayUtils.remove(intArray0, 0);
    assertNotNull(intArray1);
}",0,"assertEquals(1, intArray1)"
project,0,test048253,"public void test048253() throws Throwable {
    int[] intArray0 = new int[7];
    int[] intArray1 = ArrayUtils.remove(intArray0, 0);
    assertArrayEquals(new int[] { 0, 0, 0, 0, 0, 0, 0 }, intArray0);
}",0,
project,0,test048254,"public void test048254() throws Throwable {
    int[] intArray0 = new int[7];
    int[] intArray1 = ArrayUtils.remove(intArray0, 0);
    assertArrayEquals(new int[] { 0, 0, 0, 0, 0, 0 }, intArray1);
}",0,
project,0,test049255,"public void test049255() throws Throwable {
    float[] floatArray0 = new float[3];
    float[] floatArray1 = ArrayUtils.remove(floatArray0, 0);
    assertEquals(3, floatArray0.length);
}",0,
project,0,test049256,"public void test049256() throws Throwable {
    float[] floatArray0 = new float[3];
    float[] floatArray1 = ArrayUtils.remove(floatArray0, 0);
    assertEquals(2, floatArray1.length);
}",0,
project,0,test049257,"public void test049257() throws Throwable {
    float[] floatArray0 = new float[3];
    float[] floatArray1 = ArrayUtils.remove(floatArray0, 0);
    assertNotSame(floatArray0, floatArray1);
}",0,
project,0,test049258,"public void test049258() throws Throwable {
    float[] floatArray0 = new float[3];
    float[] floatArray1 = ArrayUtils.remove(floatArray0, 0);
    assertNotSame(floatArray1, floatArray0);
}",0,
project,0,test049259,"public void test049259() throws Throwable {
    float[] floatArray0 = new float[3];
    float[] floatArray1 = ArrayUtils.remove(floatArray0, 0);
    assertNotNull(floatArray1);
}",0,
project,0,test049261,"public void test049261() throws Throwable {
    float[] floatArray0 = new float[3];
    float[] floatArray1 = ArrayUtils.remove(floatArray0, 0);
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test049262,"public void test049262() throws Throwable {
    float[] floatArray0 = new float[3];
    float[] floatArray1 = ArrayUtils.remove(floatArray0, 0);
    assertArrayEquals(new float[] { 0.0F, 0.0F }, floatArray1, 0.01F);
}",0,
project,0,test050263,"public void test050263() throws Throwable {
    double[] doubleArray0 = new double[4];
    double[] doubleArray1 = ArrayUtils.remove(doubleArray0, 0);
    assertEquals(4, doubleArray0.length);
}",0,
project,0,test050264,"public void test050264() throws Throwable {
    double[] doubleArray0 = new double[4];
    double[] doubleArray1 = ArrayUtils.remove(doubleArray0, 0);
    assertEquals(3, doubleArray1.length);
}",0,
project,0,test050265,"public void test050265() throws Throwable {
    double[] doubleArray0 = new double[4];
    double[] doubleArray1 = ArrayUtils.remove(doubleArray0, 0);
    assertNotSame(doubleArray0, doubleArray1);
}",0,
project,0,test050266,"public void test050266() throws Throwable {
    double[] doubleArray0 = new double[4];
    double[] doubleArray1 = ArrayUtils.remove(doubleArray0, 0);
    assertNotSame(doubleArray1, doubleArray0);
}",0,
project,0,test050267,"public void test050267() throws Throwable {
    double[] doubleArray0 = new double[4];
    double[] doubleArray1 = ArrayUtils.remove(doubleArray0, 0);
    assertNotNull(doubleArray1);
}",0,
project,0,test050269,"public void test050269() throws Throwable {
    double[] doubleArray0 = new double[4];
    double[] doubleArray1 = ArrayUtils.remove(doubleArray0, 0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test050270,"public void test050270() throws Throwable {
    double[] doubleArray0 = new double[4];
    double[] doubleArray1 = ArrayUtils.remove(doubleArray0, 0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0 }, doubleArray1, 0.01);
}",0,
project,0,test051271,"public void test051271() throws Throwable {
    char[] charArray0 = new char[9];
    char[] charArray1 = ArrayUtils.remove(charArray0, 0);
    assertEquals(9, charArray0.length);
}",0,
project,0,test051272,"public void test051272() throws Throwable {
    char[] charArray0 = new char[9];
    char[] charArray1 = ArrayUtils.remove(charArray0, 0);
    assertEquals(8, charArray1.length);
}",0,
project,0,test051273,"public void test051273() throws Throwable {
    char[] charArray0 = new char[9];
    char[] charArray1 = ArrayUtils.remove(charArray0, 0);
    assertNotSame(charArray0, charArray1);
}",0,
project,0,test051274,"public void test051274() throws Throwable {
    char[] charArray0 = new char[9];
    char[] charArray1 = ArrayUtils.remove(charArray0, 0);
    assertNotSame(charArray1, charArray0);
}",0,
project,0,test051275,"public void test051275() throws Throwable {
    char[] charArray0 = new char[9];
    char[] charArray1 = ArrayUtils.remove(charArray0, 0);
    assertNotNull(charArray1);
}",0,
project,0,test051277,"public void test051277() throws Throwable {
    char[] charArray0 = new char[9];
    char[] charArray1 = ArrayUtils.remove(charArray0, 0);
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test051278,"public void test051278() throws Throwable {
    char[] charArray0 = new char[9];
    char[] charArray1 = ArrayUtils.remove(charArray0, 0);
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000' }, charArray1);
}",0,
project,0,test052279,"public void test052279() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.remove(byteArray0, 1);
    assertEquals(8, byteArray0.length);
}",0,
project,0,test052280,"public void test052280() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.remove(byteArray0, 1);
    assertEquals(7, byteArray1.length);
}",0,
project,0,test052281,"public void test052281() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.remove(byteArray0, 1);
    assertNotSame(byteArray0, byteArray1);
}",0,
project,0,test052282,"public void test052282() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.remove(byteArray0, 1);
    assertNotSame(byteArray1, byteArray0);
}",0,
project,0,test052283,"public void test052283() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.remove(byteArray0, 1);
    assertNotNull(byteArray1);
}",0,
project,0,test052285,"public void test052285() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.remove(byteArray0, 1);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test052286,"public void test052286() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.remove(byteArray0, 1);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray1);
}",0,
project,0,test053287,"public void test053287() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    booleanArray0[1] = true;
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 2341);
    assertEquals(3, booleanArray0.length);
}",0,
project,0,test053288,"public void test053288() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    booleanArray0[1] = true;
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 2341);
    assertEquals(1, int0);
}",0,
project,0,test054290,"public void test054290() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, false);
    assertEquals(1, booleanArray0.length);
}",0,
project,0,test054291,"public void test054291() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, false);
    assertEquals(0, int0);
}",0,
project,0,test055293,"public void test055293() throws Throwable {
    short[] shortArray0 = new short[3];
    shortArray0[0] = (short) 1019;
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 1019);
    assertEquals(3, shortArray0.length);
}",0,
project,0,test055294,"public void test055294() throws Throwable {
    short[] shortArray0 = new short[3];
    shortArray0[0] = (short) 1019;
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 1019);
    assertEquals(0, int0);
}",0,
project,0,test055295,"public void test055295() throws Throwable {
    short[] shortArray0 = new short[3];
    shortArray0[0] = (short) 1019;
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 1019);
    assertArrayEquals(new short[] { (short) 1019, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test056296,"public void test056296() throws Throwable {
    Object[] objectArray0 = new Object[8];
    objectArray0[1] = (Object) (-2312L);
    objectArray0[2] = (Object) (-2312L);
    objectArray0[3] = (Object) (-780L);
    objectArray0[4] = objectArray0[2];
    objectArray0[5] = (Object) (-2312L);
    objectArray0[6] = (Object) (-2312L);
    objectArray0[7] = (Object) (-780L);
    int int0 = ArrayUtils.lastIndexOf(objectArray0, (Object) null, 3937);
    assertEquals(8, objectArray0.length);
}",0,
project,0,test056297,"public void test056297() throws Throwable {
    Object[] objectArray0 = new Object[8];
    objectArray0[1] = (Object) (-2312L);
    objectArray0[2] = (Object) (-2312L);
    objectArray0[3] = (Object) (-780L);
    objectArray0[4] = objectArray0[2];
    objectArray0[5] = (Object) (-2312L);
    objectArray0[6] = (Object) (-2312L);
    objectArray0[7] = (Object) (-780L);
    int int0 = ArrayUtils.lastIndexOf(objectArray0, (Object) null, 3937);
    assertEquals(0, int0);
}",0,
project,0,test057299,"public void test057299() throws Throwable {
    Object[] objectArray0 = new Object[6];
    Object object0 = new Object();
    objectArray0[1] = object0;
    int int0 = ArrayUtils.lastIndexOf(objectArray0, object0);
    assertEquals(6, objectArray0.length);
}",0,
project,0,test057300,"public void test057300() throws Throwable {
    Object[] objectArray0 = new Object[6];
    Object object0 = new Object();
    objectArray0[1] = object0;
    int int0 = ArrayUtils.lastIndexOf(objectArray0, object0);
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test058301,"public void test058301() throws Throwable {
    long[] longArray0 = new long[6];
    longArray0[0] = (-2319L);
    int int0 = ArrayUtils.lastIndexOf(longArray0, (-2319L));
    assertEquals(6, longArray0.length);
}",0,
project,0,test058302,"public void test058302() throws Throwable {
    long[] longArray0 = new long[6];
    longArray0[0] = (-2319L);
    int int0 = ArrayUtils.lastIndexOf(longArray0, (-2319L));
    assertEquals(0, int0);
}",0,
project,0,test058303,"public void test058303() throws Throwable {
    long[] longArray0 = new long[6];
    longArray0[0] = (-2319L);
    int int0 = ArrayUtils.lastIndexOf(longArray0, (-2319L));
    assertArrayEquals(new long[] { (-2319L), 0L, 0L, 0L, 0L, 0L }, longArray0);
}",0,
project,0,test059304,"public void test059304() throws Throwable {
    long[] longArray0 = new long[4];
    longArray0[1] = (-1L);
    int int0 = ArrayUtils.lastIndexOf(longArray0, (-1L));
    assertEquals(4, longArray0.length);
}",0,
project,0,test059305,"public void test059305() throws Throwable {
    long[] longArray0 = new long[4];
    longArray0[1] = (-1L);
    int int0 = ArrayUtils.lastIndexOf(longArray0, (-1L));
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test059306,"public void test059306() throws Throwable {
    long[] longArray0 = new long[4];
    longArray0[1] = (-1L);
    int int0 = ArrayUtils.lastIndexOf(longArray0, (-1L));
    assertArrayEquals(new long[] { 0L, (-1L), 0L, 0L }, longArray0);
}",0,
project,0,test060307,"public void test060307() throws Throwable {
    int[] intArray0 = new int[9];
    intArray0[7] = (-2032);
    int int0 = ArrayUtils.lastIndexOf(intArray0, (-2032), 792);
    assertEquals(9, intArray0.length);
}",0,
project,0,test060308,"public void test060308() throws Throwable {
    int[] intArray0 = new int[9];
    intArray0[7] = (-2032);
    int int0 = ArrayUtils.lastIndexOf(intArray0, (-2032), 792);
    assertEquals(7, int0);
}",0,
project,0,test060309,"public void test060309() throws Throwable {
    int[] intArray0 = new int[9];
    intArray0[7] = (-2032);
    int int0 = ArrayUtils.lastIndexOf(intArray0, (-2032), 792);
    assertArrayEquals(new int[] { 0, 0, 0, 0, 0, 0, 0, (-2032), 0 }, intArray0);
}",0,
project,0,test061310,"public void test061310() throws Throwable {
    int[] intArray0 = new int[2];
    intArray0[1] = 2;
    int int0 = ArrayUtils.lastIndexOf(intArray0, 0);
    assertEquals(2, intArray0.length);
}",0,
project,0,test061311,"public void test061311() throws Throwable {
    int[] intArray0 = new int[2];
    intArray0[1] = 2;
    int int0 = ArrayUtils.lastIndexOf(intArray0, 0);
    assertEquals(0, int0);
}",0,
project,0,test061312,"public void test061312() throws Throwable {
    int[] intArray0 = new int[2];
    intArray0[1] = 2;
    int int0 = ArrayUtils.lastIndexOf(intArray0, 0);
    assertArrayEquals(new int[] { 0, 2 }, intArray0);
}",0,
project,0,test062313,"public void test062313() throws Throwable {
    int[] intArray0 = new int[9];
    int int0 = ArrayUtils.lastIndexOf(intArray0, 96);
    assertEquals(9, intArray0.length);
}",0,
project,0,test062314,"public void test062314() throws Throwable {
    int[] intArray0 = new int[9];
    int int0 = ArrayUtils.lastIndexOf(intArray0, 96);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test062315,"public void test062315() throws Throwable {
    int[] intArray0 = new int[9];
    int int0 = ArrayUtils.lastIndexOf(intArray0, 96);
    assertArrayEquals(new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0 }, intArray0);
}",0,
project,0,test063316,"public void test063316() throws Throwable {
    float[] floatArray0 = new float[5];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, (float) 0, 0);
    assertEquals(5, floatArray0.length);
}",0,
project,0,test063317,"public void test063317() throws Throwable {
    float[] floatArray0 = new float[5];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, (float) 0, 0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test063318,"public void test063318() throws Throwable {
    float[] floatArray0 = new float[5];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, (float) 0, 0);
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test064319,"public void test064319() throws Throwable {
    float[] floatArray0 = new float[3];
    floatArray0[0] = (-1.0F);
    int int0 = ArrayUtils.lastIndexOf(floatArray0, (-1.0F));
    assertEquals(3, floatArray0.length);
}",0,
project,0,test064320,"public void test064320() throws Throwable {
    float[] floatArray0 = new float[3];
    floatArray0[0] = (-1.0F);
    int int0 = ArrayUtils.lastIndexOf(floatArray0, (-1.0F));
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test064321,"public void test064321() throws Throwable {
    float[] floatArray0 = new float[3];
    floatArray0[0] = (-1.0F);
    int int0 = ArrayUtils.lastIndexOf(floatArray0, (-1.0F));
    assertArrayEquals(new float[] { (-1.0F), 0.0F, 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test065324,"public void test065324() throws Throwable {
    Float[] floatArray0 = new Float[4];
    Float float0 = new Float(0.0);
    floatArray0[0] = float0;
    floatArray0[1] = floatArray0[0];
    floatArray0[2] = floatArray0[1];
    floatArray0[3] = floatArray0[2];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    assertEquals(4, floatArray0.length);
}",1,
project,0,test065325,"public void test065325() throws Throwable {
    Float[] floatArray0 = new Float[4];
    Float float0 = new Float(0.0);
    floatArray0[0] = float0;
    floatArray0[1] = floatArray0[0];
    floatArray0[2] = floatArray0[1];
    floatArray0[3] = floatArray0[2];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    assertEquals(4, floatArray1.length);
}",1,
project,0,test065326,"public void test065326() throws Throwable {
    Float[] floatArray0 = new Float[4];
    Float float0 = new Float(0.0);
    floatArray0[0] = float0;
    floatArray0[1] = floatArray0[0];
    floatArray0[2] = floatArray0[1];
    floatArray0[3] = floatArray0[2];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    assertNotNull(floatArray1);
}",1,
project,0,test065327,"public void test065327() throws Throwable {
    Float[] floatArray0 = new Float[4];
    Float float0 = new Float(0.0);
    floatArray0[0] = float0;
    floatArray0[1] = floatArray0[0];
    floatArray0[2] = floatArray0[1];
    floatArray0[3] = floatArray0[2];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F }, floatArray1, 0.01F);
}",1,
project,0,test065328,"public void test065328() throws Throwable {
    Float[] floatArray0 = new Float[4];
    Float float0 = new Float(0.0);
    floatArray0[0] = float0;
    floatArray0[1] = floatArray0[0];
    floatArray0[2] = floatArray0[1];
    floatArray0[3] = floatArray0[2];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    int int0 = ArrayUtils.lastIndexOf(floatArray1, (float) floatArray0[1]);
    assertEquals(4, floatArray0.length);
}",0,
project,0,test065329,"public void test065329() throws Throwable {
    Float[] floatArray0 = new Float[4];
    Float float0 = new Float(0.0);
    floatArray0[0] = float0;
    floatArray0[1] = floatArray0[0];
    floatArray0[2] = floatArray0[1];
    floatArray0[3] = floatArray0[2];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    int int0 = ArrayUtils.lastIndexOf(floatArray1, (float) floatArray0[1]);
    assertEquals(4, floatArray1.length);
}",0,
project,0,test065330,"public void test065330() throws Throwable {
    Float[] floatArray0 = new Float[4];
    Float float0 = new Float(0.0);
    floatArray0[0] = float0;
    floatArray0[1] = floatArray0[0];
    floatArray0[2] = floatArray0[1];
    floatArray0[3] = floatArray0[2];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    int int0 = ArrayUtils.lastIndexOf(floatArray1, (float) floatArray0[1]);
    assertEquals(3, int0);
}",0,"assertEquals(1, int0)"
project,0,test065331,"public void test065331() throws Throwable {
    Float[] floatArray0 = new Float[4];
    Float float0 = new Float(0.0);
    floatArray0[0] = float0;
    floatArray0[1] = floatArray0[0];
    floatArray0[2] = floatArray0[1];
    floatArray0[3] = floatArray0[2];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    int int0 = ArrayUtils.lastIndexOf(floatArray1, (float) floatArray0[1]);
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F }, floatArray1, 0.01F);
}",0,
project,0,test066332,"public void test066332() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = 3165.946;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 3165.946, 2169, 1241.77977461);
    assertEquals(2, doubleArray0.length);
}",0,
project,0,test066333,"public void test066333() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = 3165.946;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 3165.946, 2169, 1241.77977461);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test066334,"public void test066334() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = 3165.946;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 3165.946, 2169, 1241.77977461);
    assertArrayEquals(new double[] { 3165.946, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test067335,"public void test067335() throws Throwable {
    double[] doubleArray0 = new double[8];
    doubleArray0[4] = (double) (short) 9;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 9.0, 1452);
    assertEquals(8, doubleArray0.length);
}",0,
project,0,test067336,"public void test067336() throws Throwable {
    double[] doubleArray0 = new double[8];
    doubleArray0[4] = (double) (short) 9;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 9.0, 1452);
    assertEquals(4, int0);
}",0,
project,0,test067337,"public void test067337() throws Throwable {
    double[] doubleArray0 = new double[8];
    doubleArray0[4] = (double) (short) 9;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 9.0, 1452);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 9.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test068338,"public void test068338() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 3313;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (double) 3313, 538.76239278);
    assertEquals(6, doubleArray0.length);
}",0,
project,0,test068339,"public void test068339() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 3313;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (double) 3313, 538.76239278);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test068340,"public void test068340() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 3313;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (double) 3313, 538.76239278);
    assertArrayEquals(new double[] { 3313.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test069341,"public void test069341() throws Throwable {
    double[] doubleArray0 = new double[5];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 2149.0);
    assertEquals(5, doubleArray0.length);
}",0,
project,0,test069342,"public void test069342() throws Throwable {
    double[] doubleArray0 = new double[5];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 2149.0);
    assertEquals(4, int0);
}",0,"assertEquals(0, int0)"
project,0,test069343,"public void test069343() throws Throwable {
    double[] doubleArray0 = new double[5];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 2149.0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test070344,"public void test070344() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[1] = (-1.0);
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1.0));
    assertEquals(2, doubleArray0.length);
}",0,
project,0,test070345,"public void test070345() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[1] = (-1.0);
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1.0));
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test070346,"public void test070346() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[1] = (-1.0);
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1.0));
    assertArrayEquals(new double[] { 0.0, (-1.0) }, doubleArray0, 0.01);
}",0,
project,0,test071347,"public void test071347() throws Throwable {
    char[] charArray0 = new char[2];
    charArray0[1] = 'L';
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'L', 808);
    assertEquals(2, charArray0.length);
}",0,
project,0,test071348,"public void test071348() throws Throwable {
    char[] charArray0 = new char[2];
    charArray0[1] = 'L';
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'L', 808);
    assertEquals(1, int0);
}",0,
project,0,test071349,"public void test071349() throws Throwable {
    char[] charArray0 = new char[2];
    charArray0[1] = 'L';
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'L', 808);
    assertArrayEquals(new char[] { '\u0000', 'L' }, charArray0);
}",0,
project,0,test072350,"public void test072350() throws Throwable {
    char[] charArray0 = new char[4];
    charArray0[3] = 'S';
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'S');
    assertEquals(4, charArray0.length);
}",0,
project,0,test072351,"public void test072351() throws Throwable {
    char[] charArray0 = new char[4];
    charArray0[3] = 'S';
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'S');
    assertEquals(3, int0);
}",0,
project,0,test072352,"public void test072352() throws Throwable {
    char[] charArray0 = new char[4];
    charArray0[3] = 'S';
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'S');
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000', 'S' }, charArray0);
}",0,
project,0,test073353,"public void test073353() throws Throwable {
    byte[] byteArray0 = new byte[4];
    byteArray0[2] = (byte) 70;
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 70, (int) (byte) 42);
    assertEquals(4, byteArray0.length);
}",0,
project,0,test073354,"public void test073354() throws Throwable {
    byte[] byteArray0 = new byte[4];
    byteArray0[2] = (byte) 70;
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 70, (int) (byte) 42);
    assertEquals(2, int0);
}",0,
project,0,test073355,"public void test073355() throws Throwable {
    byte[] byteArray0 = new byte[4];
    byteArray0[2] = (byte) 70;
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 70, (int) (byte) 42);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 70, (byte) 0 }, byteArray0);
}",0,
project,0,test074356,"public void test074356() throws Throwable {
    byte[] byteArray0 = new byte[2];
    byteArray0[0] = (byte) (-66);
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) (-66));
    assertEquals(2, byteArray0.length);
}",0,
project,0,test074357,"public void test074357() throws Throwable {
    byte[] byteArray0 = new byte[2];
    byteArray0[0] = (byte) (-66);
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) (-66));
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test074358,"public void test074358() throws Throwable {
    byte[] byteArray0 = new byte[2];
    byteArray0[0] = (byte) (-66);
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) (-66));
    assertArrayEquals(new byte[] { (byte) (-66), (byte) 0 }, byteArray0);
}",0,
project,0,test075359,"public void test075359() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byteArray0[6] = (byte) (-1);
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) (-1));
    assertEquals(8, byteArray0.length);
}",0,
project,0,test075360,"public void test075360() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byteArray0[6] = (byte) (-1);
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) (-1));
    assertEquals(6, int0);
}",0,
project,0,test075361,"public void test075361() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byteArray0[6] = (byte) (-1);
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) (-1));
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) (-1), (byte) 0 }, byteArray0);
}",0,
project,0,test076362,"public void test076362() throws Throwable {
    boolean boolean0 = ArrayUtils.isSameType(""MZ&P"", ""MZ&P"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test077365,"public void test077365() throws Throwable {
    Integer integer0 = new Integer(57);
    boolean boolean0 = ArrayUtils.isEquals(integer0, (Object) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test078366,"public void test078366() throws Throwable {
    boolean[] booleanArray0 = new boolean[9];
    int int0 = ArrayUtils.indexOf(booleanArray0, false, 1);
    assertEquals(9, booleanArray0.length);
}",0,
project,0,test078367,"public void test078367() throws Throwable {
    boolean[] booleanArray0 = new boolean[9];
    int int0 = ArrayUtils.indexOf(booleanArray0, false, 1);
    assertEquals(1, int0);
}",0,
project,0,test079369,"public void test079369() throws Throwable {
    boolean[] booleanArray0 = new boolean[8];
    booleanArray0[0] = true;
    int int0 = ArrayUtils.indexOf(booleanArray0, false);
    assertEquals(8, booleanArray0.length);
}",0,
project,0,test079370,"public void test079370() throws Throwable {
    boolean[] booleanArray0 = new boolean[8];
    booleanArray0[0] = true;
    int int0 = ArrayUtils.indexOf(booleanArray0, false);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test080372,"public void test080372() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    booleanArray0[0] = true;
    int int0 = ArrayUtils.indexOf(booleanArray0, false);
    assertEquals(1, booleanArray0.length);
}",0,
project,0,test080373,"public void test080373() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    booleanArray0[0] = true;
    int int0 = ArrayUtils.indexOf(booleanArray0, false);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test081375,"public void test081375() throws Throwable {
    short[] shortArray0 = new short[7];
    shortArray0[0] = (short) (byte) (-24);
    int int0 = ArrayUtils.indexOf(shortArray0, (short) (byte) 0, (-471));
    assertEquals(7, shortArray0.length);
}",0,
project,0,test081376,"public void test081376() throws Throwable {
    short[] shortArray0 = new short[7];
    shortArray0[0] = (short) (byte) (-24);
    int int0 = ArrayUtils.indexOf(shortArray0, (short) (byte) 0, (-471));
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test081377,"public void test081377() throws Throwable {
    short[] shortArray0 = new short[7];
    shortArray0[0] = (short) (byte) (-24);
    int int0 = ArrayUtils.indexOf(shortArray0, (short) (byte) 0, (-471));
    assertArrayEquals(new short[] { (short) (-24), (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test082378,"public void test082378() throws Throwable {
    short[] shortArray0 = new short[2];
    shortArray0[0] = (short) 2;
    int int0 = ArrayUtils.indexOf(shortArray0, (short) 2);
    assertEquals(2, shortArray0.length);
}",0,
project,0,test082379,"public void test082379() throws Throwable {
    short[] shortArray0 = new short[2];
    shortArray0[0] = (short) 2;
    int int0 = ArrayUtils.indexOf(shortArray0, (short) 2);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test082380,"public void test082380() throws Throwable {
    short[] shortArray0 = new short[2];
    shortArray0[0] = (short) 2;
    int int0 = ArrayUtils.indexOf(shortArray0, (short) 2);
    assertArrayEquals(new short[] { (short) 2, (short) 0 }, shortArray0);
}",0,
project,0,test083381,"public void test083381() throws Throwable {
    short[] shortArray0 = new short[6];
    shortArray0[1] = (short) 3295;
    int int0 = ArrayUtils.indexOf(shortArray0, (short) 3295);
    assertEquals(6, shortArray0.length);
}",0,
project,0,test083382,"public void test083382() throws Throwable {
    short[] shortArray0 = new short[6];
    shortArray0[1] = (short) 3295;
    int int0 = ArrayUtils.indexOf(shortArray0, (short) 3295);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test083383,"public void test083383() throws Throwable {
    short[] shortArray0 = new short[6];
    shortArray0[1] = (short) 3295;
    int int0 = ArrayUtils.indexOf(shortArray0, (short) 3295);
    assertArrayEquals(new short[] { (short) 0, (short) 3295, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test084385,"public void test084385() throws Throwable {
    Object[] objectArray0 = new Object[5];
    Object object0 = new Object();
    objectArray0[1] = object0;
    int int0 = ArrayUtils.indexOf(objectArray0, object0, 0);
    assertEquals(5, objectArray0.length);
}",0,
project,0,test084386,"public void test084386() throws Throwable {
    Object[] objectArray0 = new Object[5];
    Object object0 = new Object();
    objectArray0[1] = object0;
    int int0 = ArrayUtils.indexOf(objectArray0, object0, 0);
    assertEquals(1, int0);
}",0,
project,0,test085387,"public void test085387() throws Throwable {
    Object[] objectArray0 = new Object[1];
    int int0 = ArrayUtils.indexOf(objectArray0, (Object) """");
    assertEquals(1, objectArray0.length);
}",0,
project,0,test085388,"public void test085388() throws Throwable {
    Object[] objectArray0 = new Object[1];
    int int0 = ArrayUtils.indexOf(objectArray0, (Object) """");
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test086389,"public void test086389() throws Throwable {
    long[] longArray0 = new long[6];
    longArray0[3] = (long) Integer.MAX_VALUE;
    int int0 = ArrayUtils.indexOf(longArray0, (long) Integer.MAX_VALUE, (-1));
    assertEquals(6, longArray0.length);
}",0,
project,0,test086390,"public void test086390() throws Throwable {
    long[] longArray0 = new long[6];
    longArray0[3] = (long) Integer.MAX_VALUE;
    int int0 = ArrayUtils.indexOf(longArray0, (long) Integer.MAX_VALUE, (-1));
    assertEquals(3, int0);
}",0,"assertEquals(0, int0)"
project,0,test086391,"public void test086391() throws Throwable {
    long[] longArray0 = new long[6];
    longArray0[3] = (long) Integer.MAX_VALUE;
    int int0 = ArrayUtils.indexOf(longArray0, (long) Integer.MAX_VALUE, (-1));
    assertArrayEquals(new long[] { 0L, 0L, 0L, 2147483647L, 0L, 0L }, longArray0);
}",0,
project,0,test087392,"public void test087392() throws Throwable {
    long[] longArray0 = new long[5];
    longArray0[4] = 5314L;
    int int0 = ArrayUtils.indexOf(longArray0, 5314L);
    assertEquals(5, longArray0.length);
}",0,
project,0,test087393,"public void test087393() throws Throwable {
    long[] longArray0 = new long[5];
    longArray0[4] = 5314L;
    int int0 = ArrayUtils.indexOf(longArray0, 5314L);
    assertEquals(4, int0);
}",0,"assertEquals(1, int0)"
project,0,test087394,"public void test087394() throws Throwable {
    long[] longArray0 = new long[5];
    longArray0[4] = 5314L;
    int int0 = ArrayUtils.indexOf(longArray0, 5314L);
    assertArrayEquals(new long[] { 0L, 0L, 0L, 0L, 5314L }, longArray0);
}",0,
project,0,test088395,"public void test088395() throws Throwable {
    int int0 = ArrayUtils.indexOf((long[]) null, 1L);
    assertEquals((-1), int0);
}",0,
project,0,test089396,"public void test089396() throws Throwable {
    int[] intArray0 = new int[2];
    intArray0[0] = (-819);
    int int0 = ArrayUtils.indexOf(intArray0, (-819), 0);
    assertEquals(2, intArray0.length);
}",0,
project,0,test089397,"public void test089397() throws Throwable {
    int[] intArray0 = new int[2];
    intArray0[0] = (-819);
    int int0 = ArrayUtils.indexOf(intArray0, (-819), 0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test089398,"public void test089398() throws Throwable {
    int[] intArray0 = new int[2];
    intArray0[0] = (-819);
    int int0 = ArrayUtils.indexOf(intArray0, (-819), 0);
    assertArrayEquals(new int[] { (-819), 0 }, intArray0);
}",0,
project,0,test090399,"public void test090399() throws Throwable {
    int[] intArray0 = new int[9];
    intArray0[3] = (-839);
    int int0 = ArrayUtils.indexOf(intArray0, (-839));
    assertEquals(9, intArray0.length);
}",0,
project,0,test090400,"public void test090400() throws Throwable {
    int[] intArray0 = new int[9];
    intArray0[3] = (-839);
    int int0 = ArrayUtils.indexOf(intArray0, (-839));
    assertEquals(3, int0);
}",0,"assertEquals(1, int0)"
project,0,test090401,"public void test090401() throws Throwable {
    int[] intArray0 = new int[9];
    intArray0[3] = (-839);
    int int0 = ArrayUtils.indexOf(intArray0, (-839));
    assertArrayEquals(new int[] { 0, 0, 0, (-839), 0, 0, 0, 0, 0 }, intArray0);
}",0,
project,0,test091402,"public void test091402() throws Throwable {
    int[] intArray0 = new int[2];
    intArray0[0] = 3;
    intArray0[1] = 233;
    int int0 = ArrayUtils.indexOf(intArray0, 0);
    assertEquals(2, intArray0.length);
}",0,
project,0,test091403,"public void test091403() throws Throwable {
    int[] intArray0 = new int[2];
    intArray0[0] = 3;
    intArray0[1] = 233;
    int int0 = ArrayUtils.indexOf(intArray0, 0);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test091404,"public void test091404() throws Throwable {
    int[] intArray0 = new int[2];
    intArray0[0] = 3;
    intArray0[1] = 233;
    int int0 = ArrayUtils.indexOf(intArray0, 0);
    assertArrayEquals(new int[] { 3, 233 }, intArray0);
}",0,
project,0,test092405,"public void test092405() throws Throwable {
    float[] floatArray0 = new float[7];
    floatArray0[0] = 2883.183F;
    int int0 = ArrayUtils.indexOf(floatArray0, 2883.183F, 0);
    assertEquals(7, floatArray0.length);
}",0,
project,0,test092406,"public void test092406() throws Throwable {
    float[] floatArray0 = new float[7];
    floatArray0[0] = 2883.183F;
    int int0 = ArrayUtils.indexOf(floatArray0, 2883.183F, 0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test092407,"public void test092407() throws Throwable {
    float[] floatArray0 = new float[7];
    floatArray0[0] = 2883.183F;
    int int0 = ArrayUtils.indexOf(floatArray0, 2883.183F, 0);
    assertArrayEquals(new float[] { 2883.183F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test093408,"public void test093408() throws Throwable {
    float[] floatArray0 = new float[5];
    floatArray0[4] = (-345.353F);
    int int0 = ArrayUtils.indexOf(floatArray0, (-345.353F));
    assertEquals(5, floatArray0.length);
}",0,
project,0,test093409,"public void test093409() throws Throwable {
    float[] floatArray0 = new float[5];
    floatArray0[4] = (-345.353F);
    int int0 = ArrayUtils.indexOf(floatArray0, (-345.353F));
    assertEquals(4, int0);
}",0,"assertEquals(1, int0)"
project,0,test093410,"public void test093410() throws Throwable {
    float[] floatArray0 = new float[5];
    floatArray0[4] = (-345.353F);
    int int0 = ArrayUtils.indexOf(floatArray0, (-345.353F));
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F, (-345.353F) }, floatArray0, 0.01F);
}",0,
project,0,test094411,"public void test094411() throws Throwable {
    float[] floatArray0 = new float[3];
    floatArray0[0] = (float) (byte) (-92);
    floatArray0[1] = (float) (-1);
    floatArray0[2] = (float) (-1);
    int int0 = ArrayUtils.indexOf(floatArray0, 0.0F);
    assertEquals(3, floatArray0.length);
}",0,
project,0,test094412,"public void test094412() throws Throwable {
    float[] floatArray0 = new float[3];
    floatArray0[0] = (float) (byte) (-92);
    floatArray0[1] = (float) (-1);
    floatArray0[2] = (float) (-1);
    int int0 = ArrayUtils.indexOf(floatArray0, 0.0F);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test094413,"public void test094413() throws Throwable {
    float[] floatArray0 = new float[3];
    floatArray0[0] = (float) (byte) (-92);
    floatArray0[1] = (float) (-1);
    floatArray0[2] = (float) (-1);
    int int0 = ArrayUtils.indexOf(floatArray0, 0.0F);
    assertArrayEquals(new float[] { (-92.0F), (-1.0F), (-1.0F) }, floatArray0, 0.01F);
}",0,
project,0,test095414,"public void test095414() throws Throwable {
    double[] doubleArray0 = new double[2];
    int int0 = ArrayUtils.indexOf(doubleArray0, 1.0, (-518), (double) Integer.MAX_VALUE);
    assertEquals(2, doubleArray0.length);
}",0,
project,0,test095415,"public void test095415() throws Throwable {
    double[] doubleArray0 = new double[2];
    int int0 = ArrayUtils.indexOf(doubleArray0, 1.0, (-518), (double) Integer.MAX_VALUE);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test095416,"public void test095416() throws Throwable {
    double[] doubleArray0 = new double[2];
    int int0 = ArrayUtils.indexOf(doubleArray0, 1.0, (-518), (double) Integer.MAX_VALUE);
    assertArrayEquals(new double[] { 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test096417,"public void test096417() throws Throwable {
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) (-860.273F);
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) 0, (double) 0L);
    assertEquals(8, doubleArray0.length);
}",0,
project,0,test096418,"public void test096418() throws Throwable {
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) (-860.273F);
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) 0, (double) 0L);
    assertEquals(1, int0);
}",0,
project,0,test096419,"public void test096419() throws Throwable {
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (double) (-860.273F);
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) 0, (double) 0L);
    assertArrayEquals(new double[] { (-860.2730102539062), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test097420,"public void test097420() throws Throwable {
    double[] doubleArray0 = new double[3];
    doubleArray0[0] = 1.0;
    int int0 = ArrayUtils.indexOf(doubleArray0, 1.0);
    assertEquals(3, doubleArray0.length);
}",0,
project,0,test097421,"public void test097421() throws Throwable {
    double[] doubleArray0 = new double[3];
    doubleArray0[0] = 1.0;
    int int0 = ArrayUtils.indexOf(doubleArray0, 1.0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test097422,"public void test097422() throws Throwable {
    double[] doubleArray0 = new double[3];
    doubleArray0[0] = 1.0;
    int int0 = ArrayUtils.indexOf(doubleArray0, 1.0);
    assertArrayEquals(new double[] { 1.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test098423,"public void test098423() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) (short) 57;
    int int0 = ArrayUtils.indexOf(doubleArray0, 0.0);
    assertEquals(6, doubleArray0.length);
}",0,
project,0,test098424,"public void test098424() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) (short) 57;
    int int0 = ArrayUtils.indexOf(doubleArray0, 0.0);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test098425,"public void test098425() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) (short) 57;
    int int0 = ArrayUtils.indexOf(doubleArray0, 0.0);
    assertArrayEquals(new double[] { 57.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test099426,"public void test099426() throws Throwable {
    char[] charArray0 = new char[9];
    charArray0[2] = 'C';
    int int0 = ArrayUtils.indexOf(charArray0, 'C', 0);
    assertEquals(9, charArray0.length);
}",0,
project,0,test099427,"public void test099427() throws Throwable {
    char[] charArray0 = new char[9];
    charArray0[2] = 'C';
    int int0 = ArrayUtils.indexOf(charArray0, 'C', 0);
    assertEquals(2, int0);
}",0,"assertEquals(0, int0)"
project,0,test099428,"public void test099428() throws Throwable {
    char[] charArray0 = new char[9];
    charArray0[2] = 'C';
    int int0 = ArrayUtils.indexOf(charArray0, 'C', 0);
    assertArrayEquals(new char[] { '\u0000', '\u0000', 'C', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test100429,"public void test100429() throws Throwable {
    char[] charArray0 = new char[3];
    charArray0[0] = '.';
    int int0 = ArrayUtils.indexOf(charArray0, '.');
    assertEquals(3, charArray0.length);
}",0,
project,0,test100430,"public void test100430() throws Throwable {
    char[] charArray0 = new char[3];
    charArray0[0] = '.';
    int int0 = ArrayUtils.indexOf(charArray0, '.');
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test100431,"public void test100431() throws Throwable {
    char[] charArray0 = new char[3];
    charArray0[0] = '.';
    int int0 = ArrayUtils.indexOf(charArray0, '.');
    assertArrayEquals(new char[] { '.', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test101432,"public void test101432() throws Throwable {
    char[] charArray0 = new char[9];
    charArray0[7] = 'h';
    int int0 = ArrayUtils.indexOf(charArray0, 'h');
    assertEquals(9, charArray0.length);
}",0,
project,0,test101433,"public void test101433() throws Throwable {
    char[] charArray0 = new char[9];
    charArray0[7] = 'h';
    int int0 = ArrayUtils.indexOf(charArray0, 'h');
    assertEquals(7, int0);
}",0,"assertEquals(1, int0)"
project,0,test101434,"public void test101434() throws Throwable {
    char[] charArray0 = new char[9];
    charArray0[7] = 'h';
    int int0 = ArrayUtils.indexOf(charArray0, 'h');
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', 'h', '\u0000' }, charArray0);
}",0,
project,0,test102435,"public void test102435() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[4] = (byte) 120;
    ArrayUtils.reverse(byteArray0);
    assertEquals(5, byteArray0.length);
}",0,
project,0,test102436,"public void test102436() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[4] = (byte) 120;
    ArrayUtils.reverse(byteArray0);
    assertArrayEquals(new byte[] { (byte) 120, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test102437,"public void test102437() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[4] = (byte) 120;
    ArrayUtils.reverse(byteArray0);
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) 120, 0);
    assertEquals(5, byteArray0.length);
}",0,
project,0,test102438,"public void test102438() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[4] = (byte) 120;
    ArrayUtils.reverse(byteArray0);
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) 120, 0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test102439,"public void test102439() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[4] = (byte) 120;
    ArrayUtils.reverse(byteArray0);
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) 120, 0);
    assertArrayEquals(new byte[] { (byte) 120, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test103440,"public void test103440() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[0] = (byte) 49;
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) 49);
    assertEquals(5, byteArray0.length);
}",0,
project,0,test103441,"public void test103441() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[0] = (byte) 49;
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) 49);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test103442,"public void test103442() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[0] = (byte) 49;
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) 49);
    assertArrayEquals(new byte[] { (byte) 49, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test104443,"public void test104443() throws Throwable {
    byte[] byteArray0 = new byte[6];
    byteArray0[4] = (byte) (-56);
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) (-56));
    assertEquals(6, byteArray0.length);
}",0,
project,0,test104444,"public void test104444() throws Throwable {
    byte[] byteArray0 = new byte[6];
    byteArray0[4] = (byte) (-56);
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) (-56));
    assertEquals(4, int0);
}",0,"assertEquals(1, int0)"
project,0,test104445,"public void test104445() throws Throwable {
    byte[] byteArray0 = new byte[6];
    byteArray0[4] = (byte) (-56);
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) (-56));
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) (-56), (byte) 0 }, byteArray0);
}",0,
project,0,test105446,"public void test105446() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
    assertEquals(0, booleanArray0.length);
}",0,
project,0,test105447,"public void test105447() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
    assertEquals(0, booleanArray1.length);
}",0,
project,0,test105448,"public void test105448() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
    assertNotSame(booleanArray0, booleanArray1);
}",0,
project,0,test105449,"public void test105449() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
    assertNotSame(booleanArray1, booleanArray0);
}",0,
project,0,test105450,"public void test105450() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
    assertNotNull(booleanArray1);
}",0,assertTrue(booleanArray1)
project,0,test106454,"public void test106454() throws Throwable {
    short[] shortArray0 = new short[7];
    short[] shortArray1 = ArrayUtils.clone(shortArray0);
    assertEquals(7, shortArray0.length);
}",0,
project,0,test106455,"public void test106455() throws Throwable {
    short[] shortArray0 = new short[7];
    short[] shortArray1 = ArrayUtils.clone(shortArray0);
    assertEquals(7, shortArray1.length);
}",0,
project,0,test106456,"public void test106456() throws Throwable {
    short[] shortArray0 = new short[7];
    short[] shortArray1 = ArrayUtils.clone(shortArray0);
    assertNotSame(shortArray0, shortArray1);
}",0,
project,0,test106457,"public void test106457() throws Throwable {
    short[] shortArray0 = new short[7];
    short[] shortArray1 = ArrayUtils.clone(shortArray0);
    assertNotSame(shortArray1, shortArray0);
}",0,
project,0,test106458,"public void test106458() throws Throwable {
    short[] shortArray0 = new short[7];
    short[] shortArray1 = ArrayUtils.clone(shortArray0);
    assertNotNull(shortArray1);
}",0,"assertEquals(shortArray0, shortArray1)"
project,0,test106460,"public void test106460() throws Throwable {
    short[] shortArray0 = new short[7];
    short[] shortArray1 = ArrayUtils.clone(shortArray0);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test106461,"public void test106461() throws Throwable {
    short[] shortArray0 = new short[7];
    short[] shortArray1 = ArrayUtils.clone(shortArray0);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray1);
}",0,
project,0,test107462,"public void test107462() throws Throwable {
    Integer[] integerArray0 = new Integer[0];
    Integer[] integerArray1 = ArrayUtils.clone(integerArray0);
    assertEquals(0, integerArray0.length);
}",0,
project,0,test107463,"public void test107463() throws Throwable {
    Integer[] integerArray0 = new Integer[0];
    Integer[] integerArray1 = ArrayUtils.clone(integerArray0);
    assertEquals(0, integerArray1.length);
}",0,
project,0,test107464,"public void test107464() throws Throwable {
    Integer[] integerArray0 = new Integer[0];
    Integer[] integerArray1 = ArrayUtils.clone(integerArray0);
    assertNotSame(integerArray0, integerArray1);
}",0,
project,0,test107465,"public void test107465() throws Throwable {
    Integer[] integerArray0 = new Integer[0];
    Integer[] integerArray1 = ArrayUtils.clone(integerArray0);
    assertNotSame(integerArray1, integerArray0);
}",0,
project,0,test107466,"public void test107466() throws Throwable {
    Integer[] integerArray0 = new Integer[0];
    Integer[] integerArray1 = ArrayUtils.clone(integerArray0);
    assertNotNull(integerArray1);
}",0,assertNotNull(integerArray1)
project,0,test108468,"public void test108468() throws Throwable {
    long[] longArray0 = new long[8];
    long[] longArray1 = ArrayUtils.clone(longArray0);
    assertEquals(8, longArray0.length);
}",0,
project,0,test108469,"public void test108469() throws Throwable {
    long[] longArray0 = new long[8];
    long[] longArray1 = ArrayUtils.clone(longArray0);
    assertEquals(8, longArray1.length);
}",0,
project,0,test108470,"public void test108470() throws Throwable {
    long[] longArray0 = new long[8];
    long[] longArray1 = ArrayUtils.clone(longArray0);
    assertNotSame(longArray0, longArray1);
}",0,
project,0,test108471,"public void test108471() throws Throwable {
    long[] longArray0 = new long[8];
    long[] longArray1 = ArrayUtils.clone(longArray0);
    assertNotSame(longArray1, longArray0);
}",0,
project,0,test108472,"public void test108472() throws Throwable {
    long[] longArray0 = new long[8];
    long[] longArray1 = ArrayUtils.clone(longArray0);
    assertNotNull(longArray1);
}",0,"assertEquals(longArray0, longArray1)"
project,0,test108474,"public void test108474() throws Throwable {
    long[] longArray0 = new long[8];
    long[] longArray1 = ArrayUtils.clone(longArray0);
    assertArrayEquals(new long[] { 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L }, longArray0);
}",0,
project,0,test108475,"public void test108475() throws Throwable {
    long[] longArray0 = new long[8];
    long[] longArray1 = ArrayUtils.clone(longArray0);
    assertArrayEquals(new long[] { 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L }, longArray1);
}",0,
project,0,test109476,"public void test109476() throws Throwable {
    int[] intArray0 = new int[2];
    int[] intArray1 = ArrayUtils.clone(intArray0);
    assertEquals(2, intArray0.length);
}",0,
project,0,test109477,"public void test109477() throws Throwable {
    int[] intArray0 = new int[2];
    int[] intArray1 = ArrayUtils.clone(intArray0);
    assertEquals(2, intArray1.length);
}",0,
project,0,test109478,"public void test109478() throws Throwable {
    int[] intArray0 = new int[2];
    int[] intArray1 = ArrayUtils.clone(intArray0);
    assertNotSame(intArray0, intArray1);
}",0,
project,0,test109479,"public void test109479() throws Throwable {
    int[] intArray0 = new int[2];
    int[] intArray1 = ArrayUtils.clone(intArray0);
    assertNotSame(intArray1, intArray0);
}",0,
project,0,test109480,"public void test109480() throws Throwable {
    int[] intArray0 = new int[2];
    int[] intArray1 = ArrayUtils.clone(intArray0);
    assertNotNull(intArray1);
}",0,"assertEquals(0, intArray1)"
project,0,test109482,"public void test109482() throws Throwable {
    int[] intArray0 = new int[2];
    int[] intArray1 = ArrayUtils.clone(intArray0);
    assertArrayEquals(new int[] { 0, 0 }, intArray0);
}",0,
project,0,test109483,"public void test109483() throws Throwable {
    int[] intArray0 = new int[2];
    int[] intArray1 = ArrayUtils.clone(intArray0);
    assertArrayEquals(new int[] { 0, 0 }, intArray1);
}",0,
project,0,test110484,"public void test110484() throws Throwable {
    char[] charArray0 = new char[7];
    char[] charArray1 = ArrayUtils.clone(charArray0);
    assertEquals(7, charArray0.length);
}",0,
project,0,test110485,"public void test110485() throws Throwable {
    char[] charArray0 = new char[7];
    char[] charArray1 = ArrayUtils.clone(charArray0);
    assertEquals(7, charArray1.length);
}",0,
project,0,test110486,"public void test110486() throws Throwable {
    char[] charArray0 = new char[7];
    char[] charArray1 = ArrayUtils.clone(charArray0);
    assertNotSame(charArray0, charArray1);
}",0,
project,0,test110487,"public void test110487() throws Throwable {
    char[] charArray0 = new char[7];
    char[] charArray1 = ArrayUtils.clone(charArray0);
    assertNotSame(charArray1, charArray0);
}",0,
project,0,test110488,"public void test110488() throws Throwable {
    char[] charArray0 = new char[7];
    char[] charArray1 = ArrayUtils.clone(charArray0);
    assertNotNull(charArray1);
}",0,"assertEquals(charArray0, charArray1)"
project,0,test110490,"public void test110490() throws Throwable {
    char[] charArray0 = new char[7];
    char[] charArray1 = ArrayUtils.clone(charArray0);
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test110491,"public void test110491() throws Throwable {
    char[] charArray0 = new char[7];
    char[] charArray1 = ArrayUtils.clone(charArray0);
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000' }, charArray1);
}",0,
project,0,test111492,"public void test111492() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    assertEquals(0, byteArray0.length);
}",0,
project,0,test111493,"public void test111493() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    assertEquals(0, byteArray1.length);
}",0,
project,0,test111494,"public void test111494() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    assertNotSame(byteArray0, byteArray1);
}",0,
project,0,test111495,"public void test111495() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    assertNotSame(byteArray1, byteArray0);
}",0,
project,0,test111496,"public void test111496() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    assertNotNull(byteArray1);
}",0,"assertEquals(byteArray0, byteArray1)"
project,0,test111498,"public void test111498() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    assertArrayEquals(new byte[] {}, byteArray0);
}",0,
project,0,test111499,"public void test111499() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    assertArrayEquals(new byte[] {}, byteArray1);
}",0,
project,0,test112500,"public void test112500() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    assertEquals(0, booleanArray0.length);
}",0,
project,0,test112501,"public void test112501() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    assertEquals(0, booleanArray1.length);
}",0,
project,0,test112502,"public void test112502() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    assertNotSame(booleanArray0, booleanArray1);
}",0,
project,0,test112503,"public void test112503() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    assertNotSame(booleanArray1, booleanArray0);
}",0,
project,0,test112504,"public void test112504() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    assertNotNull(booleanArray1);
}",0,assertFalse(booleanArray1)
project,0,test113508,"public void test113508() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    assertEquals(0, shortArray0.length);
}",0,
project,0,test113509,"public void test113509() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    assertEquals(0, shortArray1.length);
}",0,
project,0,test113510,"public void test113510() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    assertNotSame(shortArray0, shortArray1);
}",0,
project,0,test113511,"public void test113511() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    assertNotSame(shortArray1, shortArray0);
}",0,
project,0,test113512,"public void test113512() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    assertNotNull(shortArray1);
}",0,
project,0,test113514,"public void test113514() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    assertArrayEquals(new short[] {}, shortArray0);
}",0,
project,0,test113515,"public void test113515() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    assertArrayEquals(new short[] {}, shortArray1);
}",0,
project,0,test114516,"public void test114516() throws Throwable {
    String[] stringArray0 = new String[0];
    String[] stringArray1 = ArrayUtils.addAll(stringArray0, stringArray0);
    assertEquals(0, stringArray0.length);
}",0,
project,0,test114517,"public void test114517() throws Throwable {
    String[] stringArray0 = new String[0];
    String[] stringArray1 = ArrayUtils.addAll(stringArray0, stringArray0);
    assertEquals(0, stringArray1.length);
}",0,
project,0,test114518,"public void test114518() throws Throwable {
    String[] stringArray0 = new String[0];
    String[] stringArray1 = ArrayUtils.addAll(stringArray0, stringArray0);
    assertNotSame(stringArray0, stringArray1);
}",0,
project,0,test114519,"public void test114519() throws Throwable {
    String[] stringArray0 = new String[0];
    String[] stringArray1 = ArrayUtils.addAll(stringArray0, stringArray0);
    assertNotSame(stringArray1, stringArray0);
}",0,
project,0,test114520,"public void test114520() throws Throwable {
    String[] stringArray0 = new String[0];
    String[] stringArray1 = ArrayUtils.addAll(stringArray0, stringArray0);
    assertNotNull(stringArray1);
}",0,assertNotNull(stringArray1)
project,0,test115522,"public void test115522() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    assertEquals(0, longArray0.length);
}",0,
project,0,test115523,"public void test115523() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    assertEquals(0, longArray1.length);
}",0,
project,0,test115524,"public void test115524() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    assertNotSame(longArray0, longArray1);
}",0,
project,0,test115525,"public void test115525() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    assertNotSame(longArray1, longArray0);
}",0,
project,0,test115526,"public void test115526() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    assertNotNull(longArray1);
}",0,
project,0,test115528,"public void test115528() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    assertArrayEquals(new long[] {}, longArray0);
}",0,
project,0,test115529,"public void test115529() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    assertArrayEquals(new long[] {}, longArray1);
}",0,
project,0,test116530,"public void test116530() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    assertEquals(0, intArray0.length);
}",0,
project,0,test116531,"public void test116531() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    assertEquals(0, intArray1.length);
}",0,
project,0,test116532,"public void test116532() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    assertNotSame(intArray0, intArray1);
}",0,
project,0,test116533,"public void test116533() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    assertNotSame(intArray1, intArray0);
}",0,
project,0,test116534,"public void test116534() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    assertNotNull(intArray1);
}",0,
project,0,test116536,"public void test116536() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    assertArrayEquals(new int[] {}, intArray0);
}",0,
project,0,test116537,"public void test116537() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    assertArrayEquals(new int[] {}, intArray1);
}",0,
project,0,test117538,"public void test117538() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    assertEquals(0, doubleArray0.length);
}",0,
project,0,test117539,"public void test117539() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    assertEquals(0, doubleArray1.length);
}",0,
project,0,test117540,"public void test117540() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    assertNotSame(doubleArray0, doubleArray1);
}",0,
project,0,test117541,"public void test117541() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    assertNotSame(doubleArray1, doubleArray0);
}",0,
project,0,test117542,"public void test117542() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    assertNotNull(doubleArray1);
}",0,
project,0,test117544,"public void test117544() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    assertArrayEquals(new double[] {}, doubleArray0, 0.01);
}",0,
project,0,test117545,"public void test117545() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    assertArrayEquals(new double[] {}, doubleArray1, 0.01);
}",0,
project,0,test118546,"public void test118546() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    assertEquals(0, byteArray0.length);
}",0,
project,0,test118547,"public void test118547() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    assertEquals(0, byteArray1.length);
}",0,
project,0,test118548,"public void test118548() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    assertNotSame(byteArray0, byteArray1);
}",0,
project,0,test118549,"public void test118549() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    assertNotSame(byteArray1, byteArray0);
}",0,
project,0,test118550,"public void test118550() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    assertNotNull(byteArray1);
}",0,
project,0,test118552,"public void test118552() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    assertArrayEquals(new byte[] {}, byteArray0);
}",0,
project,0,test118553,"public void test118553() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    assertArrayEquals(new byte[] {}, byteArray1);
}",0,
project,0,test119554,"public void test119554() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    boolean[] booleanArray1 = ArrayUtils.add(booleanArray0, 0, true);
    assertEquals(2, booleanArray0.length);
}",0,
project,0,test119555,"public void test119555() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    boolean[] booleanArray1 = ArrayUtils.add(booleanArray0, 0, true);
    assertEquals(3, booleanArray1.length);
}",0,
project,0,test119556,"public void test119556() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    boolean[] booleanArray1 = ArrayUtils.add(booleanArray0, 0, true);
    assertNotSame(booleanArray0, booleanArray1);
}",0,
project,0,test119557,"public void test119557() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    boolean[] booleanArray1 = ArrayUtils.add(booleanArray0, 0, true);
    assertNotSame(booleanArray1, booleanArray0);
}",0,
project,0,test119558,"public void test119558() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    boolean[] booleanArray1 = ArrayUtils.add(booleanArray0, 0, true);
    assertNotNull(booleanArray1);
}",0,assertTrue(booleanArray1)
project,0,test120562,"public void test120562() throws Throwable {
    long[] longArray0 = new long[5];
    long[] longArray1 = ArrayUtils.add(longArray0, 1, (-1617L));
    assertEquals(5, longArray0.length);
}",0,
project,0,test120563,"public void test120563() throws Throwable {
    long[] longArray0 = new long[5];
    long[] longArray1 = ArrayUtils.add(longArray0, 1, (-1617L));
    assertEquals(6, longArray1.length);
}",0,
project,0,test120564,"public void test120564() throws Throwable {
    long[] longArray0 = new long[5];
    long[] longArray1 = ArrayUtils.add(longArray0, 1, (-1617L));
    assertNotSame(longArray0, longArray1);
}",0,
project,0,test120565,"public void test120565() throws Throwable {
    long[] longArray0 = new long[5];
    long[] longArray1 = ArrayUtils.add(longArray0, 1, (-1617L));
    assertNotSame(longArray1, longArray0);
}",0,
project,0,test120566,"public void test120566() throws Throwable {
    long[] longArray0 = new long[5];
    long[] longArray1 = ArrayUtils.add(longArray0, 1, (-1617L));
    assertNotNull(longArray1);
}",0,
project,0,test120568,"public void test120568() throws Throwable {
    long[] longArray0 = new long[5];
    long[] longArray1 = ArrayUtils.add(longArray0, 1, (-1617L));
    assertArrayEquals(new long[] { 0L, 0L, 0L, 0L, 0L }, longArray0);
}",0,
project,0,test120569,"public void test120569() throws Throwable {
    long[] longArray0 = new long[5];
    long[] longArray1 = ArrayUtils.add(longArray0, 1, (-1617L));
    assertArrayEquals(new long[] { 0L, (-1617L), 0L, 0L, 0L, 0L }, longArray1);
}",0,
project,0,test121570,"public void test121570() throws Throwable {
    float[] floatArray0 = new float[5];
    float[] floatArray1 = ArrayUtils.add(floatArray0, 0, 1088.0F);
    assertEquals(5, floatArray0.length);
}",1,
project,0,test121571,"public void test121571() throws Throwable {
    float[] floatArray0 = new float[5];
    float[] floatArray1 = ArrayUtils.add(floatArray0, 0, 1088.0F);
    assertEquals(6, floatArray1.length);
}",1,
project,0,test121572,"public void test121572() throws Throwable {
    float[] floatArray0 = new float[5];
    float[] floatArray1 = ArrayUtils.add(floatArray0, 0, 1088.0F);
    assertNotSame(floatArray0, floatArray1);
}",1,
project,0,test121573,"public void test121573() throws Throwable {
    float[] floatArray0 = new float[5];
    float[] floatArray1 = ArrayUtils.add(floatArray0, 0, 1088.0F);
    assertNotSame(floatArray1, floatArray0);
}",1,
project,0,test121574,"public void test121574() throws Throwable {
    float[] floatArray0 = new float[5];
    float[] floatArray1 = ArrayUtils.add(floatArray0, 0, 1088.0F);
    assertNotNull(floatArray1);
}",1,
project,0,test121576,"public void test121576() throws Throwable {
    float[] floatArray0 = new float[5];
    float[] floatArray1 = ArrayUtils.add(floatArray0, 0, 1088.0F);
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, floatArray0, 0.01F);
}",1,
project,0,test121577,"public void test121577() throws Throwable {
    float[] floatArray0 = new float[5];
    float[] floatArray1 = ArrayUtils.add(floatArray0, 0, 1088.0F);
    assertArrayEquals(new float[] { 1088.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, floatArray1, 0.01F);
}",1,
project,0,test122578,"public void test122578() throws Throwable {
    char[] charArray0 = new char[3];
    char[] charArray1 = ArrayUtils.add(charArray0, 2, 'g');
    assertEquals(3, charArray0.length);
}",0,
project,0,test122579,"public void test122579() throws Throwable {
    char[] charArray0 = new char[3];
    char[] charArray1 = ArrayUtils.add(charArray0, 2, 'g');
    assertEquals(4, charArray1.length);
}",0,
project,0,test122580,"public void test122580() throws Throwable {
    char[] charArray0 = new char[3];
    char[] charArray1 = ArrayUtils.add(charArray0, 2, 'g');
    assertNotSame(charArray0, charArray1);
}",0,
project,0,test122581,"public void test122581() throws Throwable {
    char[] charArray0 = new char[3];
    char[] charArray1 = ArrayUtils.add(charArray0, 2, 'g');
    assertNotSame(charArray1, charArray0);
}",0,
project,0,test122582,"public void test122582() throws Throwable {
    char[] charArray0 = new char[3];
    char[] charArray1 = ArrayUtils.add(charArray0, 2, 'g');
    assertNotNull(charArray1);
}",0,"assertEquals(charArray0, charArray1)"
project,0,test122584,"public void test122584() throws Throwable {
    char[] charArray0 = new char[3];
    char[] charArray1 = ArrayUtils.add(charArray0, 2, 'g');
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test122585,"public void test122585() throws Throwable {
    char[] charArray0 = new char[3];
    char[] charArray1 = ArrayUtils.add(charArray0, 2, 'g');
    assertArrayEquals(new char[] { '\u0000', '\u0000', 'g', '\u0000' }, charArray1);
}",0,
project,0,test123586,"public void test123586() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.add(byteArray0, (int) (byte) 3, (byte) 18);
    assertEquals(8, byteArray0.length);
}",0,
project,0,test123587,"public void test123587() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.add(byteArray0, (int) (byte) 3, (byte) 18);
    assertEquals(9, byteArray1.length);
}",0,
project,0,test123588,"public void test123588() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.add(byteArray0, (int) (byte) 3, (byte) 18);
    assertNotSame(byteArray0, byteArray1);
}",0,
project,0,test123589,"public void test123589() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.add(byteArray0, (int) (byte) 3, (byte) 18);
    assertNotSame(byteArray1, byteArray0);
}",0,
project,0,test123590,"public void test123590() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.add(byteArray0, (int) (byte) 3, (byte) 18);
    assertNotNull(byteArray1);
}",0,"assertEquals(byteArray0, byteArray1)"
project,0,test123592,"public void test123592() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.add(byteArray0, (int) (byte) 3, (byte) 18);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test123593,"public void test123593() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.add(byteArray0, (int) (byte) 3, (byte) 18);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 18, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray1);
}",0,
project,0,test124594,"public void test124594() throws Throwable {
    boolean[] booleanArray0 = new boolean[9];
    // Undeclared exception!
    try {
        ArrayUtils.remove(booleanArray0, (-2145610062));
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -2145610062, Length: 9
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test125595,"public void test125595() throws Throwable {
    int[] intArray0 = new int[8];
    // Undeclared exception!
    try {
        ArrayUtils.remove(intArray0, 707);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 707, Length: 8
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test126596,"public void test126596() throws Throwable {
    short[] shortArray0 = new short[1];
    // Undeclared exception!
    try {
        ArrayUtils.add(shortArray0, (-3481), (short) 0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -3481, Length: 1
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test127597,"public void test127597() throws Throwable {
    double[] doubleArray0 = new double[3];
    // Undeclared exception!
    try {
        ArrayUtils.add(doubleArray0, (-1), 84.0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -1, Length: 3
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test128598,"public void test128598() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean boolean0 = ArrayUtils.isEmpty(booleanArray0);
    assertEquals(0, booleanArray0.length);
}",0,
project,0,test128599,"public void test128599() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean boolean0 = ArrayUtils.isEmpty(booleanArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test129601,"public void test129601() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((boolean[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test130602,"public void test130602() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    boolean boolean0 = ArrayUtils.isEmpty(booleanArray0);
    assertEquals(3, booleanArray0.length);
}",0,
project,0,test130603,"public void test130603() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    boolean boolean0 = ArrayUtils.isEmpty(booleanArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test131605,"public void test131605() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((float[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test132606,"public void test132606() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    assertEquals(0, floatArray0.length);
}",0,
project,0,test132607,"public void test132607() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    assertEquals(0, floatArray1.length);
}",0,
project,0,test132608,"public void test132608() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    assertNotSame(floatArray0, floatArray1);
}",0,
project,0,test132609,"public void test132609() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    assertNotSame(floatArray1, floatArray0);
}",0,
project,0,test132610,"public void test132610() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    assertNotNull(floatArray1);
}",0,
project,0,test132612,"public void test132612() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    assertArrayEquals(new float[] {}, floatArray0, 0.01F);
}",0,
project,0,test132613,"public void test132613() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    assertArrayEquals(new float[] {}, floatArray1, 0.01F);
}",0,
project,0,test132614,"public void test132614() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    boolean boolean0 = ArrayUtils.isEmpty(floatArray1);
    assertEquals(0, floatArray0.length);
}",0,
project,0,test132615,"public void test132615() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    boolean boolean0 = ArrayUtils.isEmpty(floatArray1);
    assertEquals(0, floatArray1.length);
}",0,
project,0,test132616,"public void test132616() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    boolean boolean0 = ArrayUtils.isEmpty(floatArray1);
    assertNotSame(floatArray0, floatArray1);
}",0,
project,0,test132617,"public void test132617() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    boolean boolean0 = ArrayUtils.isEmpty(floatArray1);
    assertNotSame(floatArray1, floatArray0);
}",0,
project,0,test132620,"public void test132620() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    boolean boolean0 = ArrayUtils.isEmpty(floatArray1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test132621,"public void test132621() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    boolean boolean0 = ArrayUtils.isEmpty(floatArray1);
    assertArrayEquals(new float[] {}, floatArray0, 0.01F);
}",0,
project,0,test132622,"public void test132622() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    boolean boolean0 = ArrayUtils.isEmpty(floatArray1);
    assertArrayEquals(new float[] {}, floatArray1, 0.01F);
}",0,
project,0,test133623,"public void test133623() throws Throwable {
    float[] floatArray0 = new float[2];
    boolean boolean0 = ArrayUtils.isEmpty(floatArray0);
    assertEquals(2, floatArray0.length);
}",0,
project,0,test133624,"public void test133624() throws Throwable {
    float[] floatArray0 = new float[2];
    boolean boolean0 = ArrayUtils.isEmpty(floatArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test133625,"public void test133625() throws Throwable {
    float[] floatArray0 = new float[2];
    boolean boolean0 = ArrayUtils.isEmpty(floatArray0);
    assertArrayEquals(new float[] { 0.0F, 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test134626,"public void test134626() throws Throwable {
    double[] doubleArray0 = new double[0];
    boolean boolean0 = ArrayUtils.isEmpty(doubleArray0);
    assertEquals(0, doubleArray0.length);
}",0,
project,0,test134627,"public void test134627() throws Throwable {
    double[] doubleArray0 = new double[0];
    boolean boolean0 = ArrayUtils.isEmpty(doubleArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test134628,"public void test134628() throws Throwable {
    double[] doubleArray0 = new double[0];
    boolean boolean0 = ArrayUtils.isEmpty(doubleArray0);
    assertArrayEquals(new double[] {}, doubleArray0, 0.01);
}",0,
project,0,test135629,"public void test135629() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((double[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test136630,"public void test136630() throws Throwable {
    double[] doubleArray0 = new double[4];
    boolean boolean0 = ArrayUtils.isEmpty(doubleArray0);
    assertEquals(4, doubleArray0.length);
}",0,
project,0,test136631,"public void test136631() throws Throwable {
    double[] doubleArray0 = new double[4];
    boolean boolean0 = ArrayUtils.isEmpty(doubleArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test136632,"public void test136632() throws Throwable {
    double[] doubleArray0 = new double[4];
    boolean boolean0 = ArrayUtils.isEmpty(doubleArray0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test137633,"public void test137633() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    booleanArray0[0] = true;
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 2341);
    assertEquals(3, booleanArray0.length);
}",0,
project,0,test137634,"public void test137634() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    booleanArray0[0] = true;
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 2341);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test138636,"public void test138636() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    booleanArray0[0] = true;
    int int0 = ArrayUtils.indexOf(booleanArray0, true, (int) (byte) (-66));
    assertEquals(1, booleanArray0.length);
}",0,
project,0,test138637,"public void test138637() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    booleanArray0[0] = true;
    int int0 = ArrayUtils.indexOf(booleanArray0, true, (int) (byte) (-66));
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test139639,"public void test139639() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    int int0 = ArrayUtils.indexOf(booleanArray0, true, 0);
    assertEquals(3, booleanArray0.length);
}",0,
project,0,test139640,"public void test139640() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    int int0 = ArrayUtils.indexOf(booleanArray0, true, 0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test140642,"public void test140642() throws Throwable {
    int int0 = ArrayUtils.indexOf((boolean[]) null, true, 2);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test141643,"public void test141643() throws Throwable {
    float[] floatArray0 = new float[6];
    int int0 = ArrayUtils.indexOf(floatArray0, 0.0F, (int) (byte) 1);
    assertEquals(6, floatArray0.length);
}",0,
project,0,test141644,"public void test141644() throws Throwable {
    float[] floatArray0 = new float[6];
    int int0 = ArrayUtils.indexOf(floatArray0, 0.0F, (int) (byte) 1);
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test141645,"public void test141645() throws Throwable {
    float[] floatArray0 = new float[6];
    int int0 = ArrayUtils.indexOf(floatArray0, 0.0F, (int) (byte) 1);
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test142646,"public void test142646() throws Throwable {
    double[] doubleArray0 = new double[1];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1084.18), 556);
    assertEquals(1, doubleArray0.length);
}",0,
project,0,test142647,"public void test142647() throws Throwable {
    double[] doubleArray0 = new double[1];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1084.18), 556);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test142648,"public void test142648() throws Throwable {
    double[] doubleArray0 = new double[1];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1084.18), 556);
    assertArrayEquals(new double[] { 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test143649,"public void test143649() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[1] = 2046.087994;
    int int0 = ArrayUtils.indexOf(doubleArray0, 2878.4661, (-979), 963.0356);
    assertEquals(6, doubleArray0.length);
}",0,
project,0,test143650,"public void test143650() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[1] = 2046.087994;
    int int0 = ArrayUtils.indexOf(doubleArray0, 2878.4661, (-979), 963.0356);
    assertEquals(1, int0);
}",0,
project,0,test143651,"public void test143651() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[1] = 2046.087994;
    int int0 = ArrayUtils.indexOf(doubleArray0, 2878.4661, (-979), 963.0356);
    assertArrayEquals(new double[] { 0.0, 2046.087994, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test144652,"public void test144652() throws Throwable {
    double[] doubleArray0 = new double[8];
    int int0 = ArrayUtils.indexOf(doubleArray0, 343.0, 0, (double) 0);
    assertEquals(8, doubleArray0.length);
}",0,
project,0,test144653,"public void test144653() throws Throwable {
    double[] doubleArray0 = new double[8];
    int int0 = ArrayUtils.indexOf(doubleArray0, 343.0, 0, (double) 0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test144654,"public void test144654() throws Throwable {
    double[] doubleArray0 = new double[8];
    int int0 = ArrayUtils.indexOf(doubleArray0, 343.0, 0, (double) 0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test145655,"public void test145655() throws Throwable {
    int int0 = ArrayUtils.indexOf((double[]) null, (-1084.18), 0, (double) 0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test146656,"public void test146656() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 'w';
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) (short) 0, (int) (short) (-1289));
    assertEquals(6, doubleArray0.length);
}",0,
project,0,test146657,"public void test146657() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 'w';
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) (short) 0, (int) (short) (-1289));
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test146658,"public void test146658() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 'w';
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) (short) 0, (int) (short) (-1289));
    assertArrayEquals(new double[] { 119.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test147659,"public void test147659() throws Throwable {
    double[] doubleArray0 = new double[4];
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) (byte) (-125), 474);
    assertEquals(4, doubleArray0.length);
}",0,
project,0,test147660,"public void test147660() throws Throwable {
    double[] doubleArray0 = new double[4];
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) (byte) (-125), 474);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test147661,"public void test147661() throws Throwable {
    double[] doubleArray0 = new double[4];
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) (byte) (-125), 474);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test148662,"public void test148662() throws Throwable {
    int int0 = ArrayUtils.indexOf((double[]) null, 630.736923883764, (-453));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test149663,"public void test149663() throws Throwable {
    byte[] byteArray0 = new byte[4];
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 70, (int) (byte) 42);
    assertEquals(4, byteArray0.length);
}",0,
project,0,test149664,"public void test149664() throws Throwable {
    byte[] byteArray0 = new byte[4];
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 70, (int) (byte) 42);
    assertEquals((-1), int0);
}",0,
project,0,test149665,"public void test149665() throws Throwable {
    byte[] byteArray0 = new byte[4];
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 70, (int) (byte) 42);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test150666,"public void test150666() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((byte[]) null, (byte) 127, (-1286));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test151667,"public void test151667() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[4] = (byte) 120;
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) 120, 0);
    assertEquals(5, byteArray0.length);
}",0,
project,0,test151668,"public void test151668() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[4] = (byte) 120;
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) 120, 0);
    assertEquals(4, int0);
}",0,
project,0,test151669,"public void test151669() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[4] = (byte) 120;
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) 120, 0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 120 }, byteArray0);
}",0,
project,0,test152670,"public void test152670() throws Throwable {
    int int0 = ArrayUtils.indexOf((byte[]) null, (byte) 0, Integer.MAX_VALUE);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test153671,"public void test153671() throws Throwable {
    char[] charArray0 = new char[1];
    charArray0[0] = 'j';
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'j', 0);
    assertEquals(1, charArray0.length);
}",0,
project,0,test153672,"public void test153672() throws Throwable {
    char[] charArray0 = new char[1];
    charArray0[0] = 'j';
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'j', 0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test153673,"public void test153673() throws Throwable {
    char[] charArray0 = new char[1];
    charArray0[0] = 'j';
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'j', 0);
    assertArrayEquals(new char[] { 'j' }, charArray0);
}",0,
project,0,test154674,"public void test154674() throws Throwable {
    char[] charArray0 = new char[3];
    charArray0[0] = 'E';
    int int0 = ArrayUtils.indexOf(charArray0, 'E', (int) (byte) (-24));
    assertEquals(3, charArray0.length);
}",0,
project,0,test154675,"public void test154675() throws Throwable {
    char[] charArray0 = new char[3];
    charArray0[0] = 'E';
    int int0 = ArrayUtils.indexOf(charArray0, 'E', (int) (byte) (-24));
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test154676,"public void test154676() throws Throwable {
    char[] charArray0 = new char[3];
    charArray0[0] = 'E';
    int int0 = ArrayUtils.indexOf(charArray0, 'E', (int) (byte) (-24));
    assertArrayEquals(new char[] { 'E', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test155677,"public void test155677() throws Throwable {
    int int0 = ArrayUtils.indexOf((char[]) null, 'p', 0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test156678,"public void test156678() throws Throwable {
    short[] shortArray0 = new short[9];
    shortArray0[8] = (short) 4;
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 4, 2281);
    assertEquals(9, shortArray0.length);
}",0,
project,0,test156679,"public void test156679() throws Throwable {
    short[] shortArray0 = new short[9];
    shortArray0[8] = (short) 4;
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 4, 2281);
    assertEquals(8, int0);
}",0,
project,0,test156680,"public void test156680() throws Throwable {
    short[] shortArray0 = new short[9];
    shortArray0[8] = (short) 4;
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 4, 2281);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 4 }, shortArray0);
}",0,
project,0,test157681,"public void test157681() throws Throwable {
    short[] shortArray0 = new short[9];
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 4, 2281);
    assertEquals(9, shortArray0.length);
}",0,
project,0,test157682,"public void test157682() throws Throwable {
    short[] shortArray0 = new short[9];
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 4, 2281);
    assertEquals((-1), int0);
}",0,
project,0,test157683,"public void test157683() throws Throwable {
    short[] shortArray0 = new short[9];
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 4, 2281);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test158684,"public void test158684() throws Throwable {
    short[] shortArray0 = new short[1];
    shortArray0[0] = (short) (byte) (-24);
    int int0 = ArrayUtils.indexOf(shortArray0, (short) (byte) 0, (-458));
    assertEquals(1, shortArray0.length);
}",0,
project,0,test158685,"public void test158685() throws Throwable {
    short[] shortArray0 = new short[1];
    shortArray0[0] = (short) (byte) (-24);
    int int0 = ArrayUtils.indexOf(shortArray0, (short) (byte) 0, (-458));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test158686,"public void test158686() throws Throwable {
    short[] shortArray0 = new short[1];
    shortArray0[0] = (short) (byte) (-24);
    int int0 = ArrayUtils.indexOf(shortArray0, (short) (byte) 0, (-458));
    assertArrayEquals(new short[] { (short) (-24) }, shortArray0);
}",0,
project,0,test159687,"public void test159687() throws Throwable {
    short[] shortArray0 = new short[3];
    int int0 = ArrayUtils.indexOf(shortArray0, (short) 2944, 64);
    assertEquals(3, shortArray0.length);
}",0,
project,0,test159688,"public void test159688() throws Throwable {
    short[] shortArray0 = new short[3];
    int int0 = ArrayUtils.indexOf(shortArray0, (short) 2944, 64);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test159689,"public void test159689() throws Throwable {
    short[] shortArray0 = new short[3];
    int int0 = ArrayUtils.indexOf(shortArray0, (short) 2944, 64);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test160690,"public void test160690() throws Throwable {
    int[] intArray0 = new int[2];
    intArray0[1] = 1;
    int int0 = ArrayUtils.indexOf(intArray0, 1, 1);
    assertEquals(2, intArray0.length);
}",0,
project,0,test160691,"public void test160691() throws Throwable {
    int[] intArray0 = new int[2];
    intArray0[1] = 1;
    int int0 = ArrayUtils.indexOf(intArray0, 1, 1);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test160692,"public void test160692() throws Throwable {
    int[] intArray0 = new int[2];
    intArray0[1] = 1;
    int int0 = ArrayUtils.indexOf(intArray0, 1, 1);
    assertArrayEquals(new int[] { 0, 1 }, intArray0);
}",0,
project,0,test161693,"public void test161693() throws Throwable {
    int[] intArray0 = new int[2];
    int int0 = ArrayUtils.indexOf(intArray0, 1, 1);
    assertEquals(2, intArray0.length);
}",0,
project,0,test161694,"public void test161694() throws Throwable {
    int[] intArray0 = new int[2];
    int int0 = ArrayUtils.indexOf(intArray0, 1, 1);
    assertEquals((-1), int0);
}",0,
project,0,test161695,"public void test161695() throws Throwable {
    int[] intArray0 = new int[2];
    int int0 = ArrayUtils.indexOf(intArray0, 1, 1);
    assertArrayEquals(new int[] { 0, 0 }, intArray0);
}",0,
project,0,test162696,"public void test162696() throws Throwable {
    int int0 = ArrayUtils.indexOf((int[]) null, 258, 1);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test163697,"public void test163697() throws Throwable {
    long[] longArray0 = new long[8];
    longArray0[0] = (long) 556;
    int int0 = ArrayUtils.lastIndexOf(longArray0, 0L, 0);
    assertEquals(8, longArray0.length);
}",0,
project,0,test163698,"public void test163698() throws Throwable {
    long[] longArray0 = new long[8];
    longArray0[0] = (long) 556;
    int int0 = ArrayUtils.lastIndexOf(longArray0, 0L, 0);
    assertEquals((-1), int0);
}",0,
project,0,test163699,"public void test163699() throws Throwable {
    long[] longArray0 = new long[8];
    longArray0[0] = (long) 556;
    int int0 = ArrayUtils.lastIndexOf(longArray0, 0L, 0);
    assertArrayEquals(new long[] { 556L, 0L, 0L, 0L, 0L, 0L, 0L, 0L }, longArray0);
}",0,
project,0,test164700,"public void test164700() throws Throwable {
    long[] longArray0 = new long[5];
    int int0 = ArrayUtils.lastIndexOf(longArray0, 0L, (int) (short) 527);
    assertEquals(5, longArray0.length);
}",0,
project,0,test164701,"public void test164701() throws Throwable {
    long[] longArray0 = new long[5];
    int int0 = ArrayUtils.lastIndexOf(longArray0, 0L, (int) (short) 527);
    assertEquals(4, int0);
}",0,
project,0,test164702,"public void test164702() throws Throwable {
    long[] longArray0 = new long[5];
    int int0 = ArrayUtils.lastIndexOf(longArray0, 0L, (int) (short) 527);
    assertArrayEquals(new long[] { 0L, 0L, 0L, 0L, 0L }, longArray0);
}",0,
project,0,test165703,"public void test165703() throws Throwable {
    long[] longArray0 = new long[4];
    longArray0[0] = 439L;
    int int0 = ArrayUtils.indexOf(longArray0, 439L, 0);
    assertEquals(4, longArray0.length);
}",0,
project,0,test165704,"public void test165704() throws Throwable {
    long[] longArray0 = new long[4];
    longArray0[0] = 439L;
    int int0 = ArrayUtils.indexOf(longArray0, 439L, 0);
    assertEquals(0, int0);
}",0,
project,0,test165705,"public void test165705() throws Throwable {
    long[] longArray0 = new long[4];
    longArray0[0] = 439L;
    int int0 = ArrayUtils.indexOf(longArray0, 439L, 0);
    assertArrayEquals(new long[] { 439L, 0L, 0L, 0L }, longArray0);
}",0,
project,0,test166706,"public void test166706() throws Throwable {
    long[] longArray0 = new long[1];
    int int0 = ArrayUtils.indexOf(longArray0, (-3266L), 100);
    assertEquals(1, longArray0.length);
}",0,
project,0,test166707,"public void test166707() throws Throwable {
    long[] longArray0 = new long[1];
    int int0 = ArrayUtils.indexOf(longArray0, (-3266L), 100);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test166708,"public void test166708() throws Throwable {
    long[] longArray0 = new long[1];
    int int0 = ArrayUtils.indexOf(longArray0, (-3266L), 100);
    assertArrayEquals(new long[] { 0L }, longArray0);
}",0,
project,0,test167709,"public void test167709() throws Throwable {
    Object[] objectArray0 = new Object[8];
    objectArray0[5] = (Object) (-2312L);
    int int0 = ArrayUtils.lastIndexOf(objectArray0, objectArray0[5], 3937);
    assertEquals(8, objectArray0.length);
}",0,
project,0,test167710,"public void test167710() throws Throwable {
    Object[] objectArray0 = new Object[8];
    objectArray0[5] = (Object) (-2312L);
    int int0 = ArrayUtils.lastIndexOf(objectArray0, objectArray0[5], 3937);
    assertEquals(5, int0);
}",0,
project,0,test168711,"public void test168711() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    assertEquals(1, booleanArray0.length);
}",0,
project,0,test168712,"public void test168712() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    assertEquals(1, booleanArray1.length);
}",0,
project,0,test168713,"public void test168713() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    assertNotNull(booleanArray1);
}",0,
project,0,test168715,"public void test168715() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    int int0 = ArrayUtils.lastIndexOf((Object[]) booleanArray1, (Object) """", 31);
    assertEquals(1, booleanArray0.length);
}",0,
project,0,test168716,"public void test168716() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    int int0 = ArrayUtils.lastIndexOf((Object[]) booleanArray1, (Object) """", 31);
    assertEquals(1, booleanArray1.length);
}",0,
project,0,test168717,"public void test168717() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    int int0 = ArrayUtils.lastIndexOf((Object[]) booleanArray1, (Object) """", 31);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test169720,"public void test169720() throws Throwable {
    Object[] objectArray0 = new Object[5];
    Object object0 = new Object();
    int int0 = ArrayUtils.indexOf(objectArray0, object0, 0);
    assertEquals(5, objectArray0.length);
}",0,
project,0,test169721,"public void test169721() throws Throwable {
    Object[] objectArray0 = new Object[5];
    Object object0 = new Object();
    int int0 = ArrayUtils.indexOf(objectArray0, object0, 0);
    assertEquals((-1), int0);
}",0,
project,0,test170723,"public void test170723() throws Throwable {
    Object[] objectArray0 = new Object[5];
    Object object0 = new Object();
    objectArray0[0] = object0;
    int int0 = ArrayUtils.indexOf(objectArray0, objectArray0[0], 0);
    assertEquals(5, objectArray0.length);
}",0,
project,0,test170724,"public void test170724() throws Throwable {
    Object[] objectArray0 = new Object[5];
    Object object0 = new Object();
    objectArray0[0] = object0;
    int int0 = ArrayUtils.indexOf(objectArray0, objectArray0[0], 0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test171725,"public void test171725() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[3];
    int int0 = ArrayUtils.indexOf((Object[]) booleanArray0, (Object) ""', is neither of type Map.Entry nor an Array"", 64);
    assertEquals(3, booleanArray0.length);
}",0,
project,0,test171726,"public void test171726() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[3];
    int int0 = ArrayUtils.indexOf((Object[]) booleanArray0, (Object) ""', is neither of type Map.Entry nor an Array"", 64);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test172727,"public void test172727() throws Throwable {
    Object[] objectArray0 = new Object[8];
    int int0 = ArrayUtils.indexOf(objectArray0, (Object) null, (int) (byte) 70);
    assertEquals(8, objectArray0.length);
}",0,
project,0,test172728,"public void test172728() throws Throwable {
    Object[] objectArray0 = new Object[8];
    int int0 = ArrayUtils.indexOf(objectArray0, (Object) null, (int) (byte) 70);
    assertEquals((-1), int0);
}",0,
project,0,test173730,"public void test173730() throws Throwable {
    Object[] objectArray0 = new Object[0];
    Object object0 = new Object();
    int int0 = ArrayUtils.indexOf(objectArray0, object0, 1406);
    assertEquals(0, objectArray0.length);
}",0,
project,0,test173731,"public void test173731() throws Throwable {
    Object[] objectArray0 = new Object[0];
    Object object0 = new Object();
    int int0 = ArrayUtils.indexOf(objectArray0, object0, 1406);
    assertEquals((-1), int0);
}",0,
project,0,test174732,"public void test174732() throws Throwable {
    int int0 = ArrayUtils.indexOf((Object[]) null, (Object) ""java.lang.Integer"", (int) (short) (-1));
    assertEquals((-1), int0);
}",0,
project,0,test175734,"public void test175734() throws Throwable {
    Object object0 = new Object();
    // Undeclared exception!
    try {
        ArrayUtils.getLength(object0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Argument is not an array
        //
        verifyException(""java.lang.reflect.Array"", e);
    }
}",0,
project,0,test176735,"public void test176735() throws Throwable {
    int int0 = ArrayUtils.getLength((Object) null);
    assertEquals(0, int0);
}",1,
project,0,test177736,"public void test177736() throws Throwable {
    boolean[] booleanArray0 = ArrayUtils.clone((boolean[]) null);
    assertNull(booleanArray0);
}",0,assertTrue(booleanArray0)
project,0,test178737,"public void test178737() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
    assertEquals(1, booleanArray0.length);
}",0,
project,0,test178738,"public void test178738() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
    assertEquals(1, booleanArray1.length);
}",0,
project,0,test178739,"public void test178739() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
    assertNotSame(booleanArray0, booleanArray1);
}",0,
project,0,test178740,"public void test178740() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
    assertNotSame(booleanArray1, booleanArray0);
}",0,
project,0,test178741,"public void test178741() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
    assertNotNull(booleanArray1);
}",0,assertFalse(booleanArray1)
project,0,test179745,"public void test179745() throws Throwable {
    double[] doubleArray0 = new double[5];
    double[] doubleArray1 = ArrayUtils.clone(doubleArray0);
    assertEquals(5, doubleArray0.length);
}",0,
project,0,test179746,"public void test179746() throws Throwable {
    double[] doubleArray0 = new double[5];
    double[] doubleArray1 = ArrayUtils.clone(doubleArray0);
    assertEquals(5, doubleArray1.length);
}",0,
project,0,test179747,"public void test179747() throws Throwable {
    double[] doubleArray0 = new double[5];
    double[] doubleArray1 = ArrayUtils.clone(doubleArray0);
    assertNotSame(doubleArray0, doubleArray1);
}",0,
project,0,test179748,"public void test179748() throws Throwable {
    double[] doubleArray0 = new double[5];
    double[] doubleArray1 = ArrayUtils.clone(doubleArray0);
    assertNotSame(doubleArray1, doubleArray0);
}",0,
project,0,test179749,"public void test179749() throws Throwable {
    double[] doubleArray0 = new double[5];
    double[] doubleArray1 = ArrayUtils.clone(doubleArray0);
    assertNotNull(doubleArray1);
}",0,
project,0,test179751,"public void test179751() throws Throwable {
    double[] doubleArray0 = new double[5];
    double[] doubleArray1 = ArrayUtils.clone(doubleArray0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test179752,"public void test179752() throws Throwable {
    double[] doubleArray0 = new double[5];
    double[] doubleArray1 = ArrayUtils.clone(doubleArray0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray1, 0.01);
}",0,
project,0,test180753,"public void test180753() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    assertEquals(8, byteArray0.length);
}",0,
project,0,test180754,"public void test180754() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    assertEquals(8, byteArray1.length);
}",0,
project,0,test180755,"public void test180755() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    assertNotSame(byteArray0, byteArray1);
}",0,
project,0,test180756,"public void test180756() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    assertNotSame(byteArray1, byteArray0);
}",0,
project,0,test180757,"public void test180757() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    assertNotNull(byteArray1);
}",0,
project,0,test180759,"public void test180759() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test180760,"public void test180760() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray1);
}",0,
project,0,test181761,"public void test181761() throws Throwable {
    char[] charArray0 = ArrayUtils.clone((char[]) null);
    assertNull(charArray0);
}",0,
project,0,test182762,"public void test182762() throws Throwable {
    char[] charArray0 = new char[0];
    char[] charArray1 = ArrayUtils.clone(charArray0);
    assertEquals(0, charArray0.length);
}",0,
project,0,test182763,"public void test182763() throws Throwable {
    char[] charArray0 = new char[0];
    char[] charArray1 = ArrayUtils.clone(charArray0);
    assertEquals(0, charArray1.length);
}",0,
project,0,test182764,"public void test182764() throws Throwable {
    char[] charArray0 = new char[0];
    char[] charArray1 = ArrayUtils.clone(charArray0);
    assertNotSame(charArray0, charArray1);
}",0,
project,0,test182765,"public void test182765() throws Throwable {
    char[] charArray0 = new char[0];
    char[] charArray1 = ArrayUtils.clone(charArray0);
    assertNotSame(charArray1, charArray0);
}",0,
project,0,test182766,"public void test182766() throws Throwable {
    char[] charArray0 = new char[0];
    char[] charArray1 = ArrayUtils.clone(charArray0);
    assertNotNull(charArray1);
}",0,"assertEquals(charArray0, charArray1)"
project,0,test182768,"public void test182768() throws Throwable {
    char[] charArray0 = new char[0];
    char[] charArray1 = ArrayUtils.clone(charArray0);
    assertArrayEquals(new char[] {}, charArray0);
}",0,
project,0,test182769,"public void test182769() throws Throwable {
    char[] charArray0 = new char[0];
    char[] charArray1 = ArrayUtils.clone(charArray0);
    assertArrayEquals(new char[] {}, charArray1);
}",0,
project,0,test183770,"public void test183770() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.clone(intArray0);
    assertEquals(0, intArray0.length);
}",0,
project,0,test183771,"public void test183771() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.clone(intArray0);
    assertEquals(0, intArray1.length);
}",0,
project,0,test183772,"public void test183772() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.clone(intArray0);
    assertNotSame(intArray0, intArray1);
}",0,
project,0,test183773,"public void test183773() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.clone(intArray0);
    assertNotSame(intArray1, intArray0);
}",0,
project,0,test183774,"public void test183774() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.clone(intArray0);
    assertNotNull(intArray1);
}",0,"assertEquals(0, intArray1)"
project,0,test183776,"public void test183776() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.clone(intArray0);
    assertArrayEquals(new int[] {}, intArray0);
}",0,
project,0,test183777,"public void test183777() throws Throwable {
    int[] intArray0 = new int[0];
    int[] intArray1 = ArrayUtils.clone(intArray0);
    assertArrayEquals(new int[] {}, intArray1);
}",0,
project,0,test184778,"public void test184778() throws Throwable {
    int[] intArray0 = ArrayUtils.clone((int[]) null);
    assertNull(intArray0);
}",0,"assertEquals(1, intArray0)"
project,0,test185779,"public void test185779() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    assertEquals(1, booleanArray0.length);
}",0,
project,0,test185780,"public void test185780() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    assertEquals(1, booleanArray1.length);
}",0,
project,0,test185781,"public void test185781() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    assertNotNull(booleanArray1);
}",0,
project,0,test185783,"public void test185783() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    Object[] objectArray0 = ArrayUtils.clone((Object[]) booleanArray1);
    assertEquals(1, booleanArray0.length);
}",0,
project,0,test185784,"public void test185784() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    Object[] objectArray0 = ArrayUtils.clone((Object[]) booleanArray1);
    assertEquals(1, booleanArray1.length);
}",0,
project,0,test185785,"public void test185785() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    Object[] objectArray0 = ArrayUtils.clone((Object[]) booleanArray1);
    assertEquals(1, objectArray0.length);
}",0,
project,0,test185786,"public void test185786() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    Object[] objectArray0 = ArrayUtils.clone((Object[]) booleanArray1);
    assertNotSame(booleanArray1, objectArray0);
}",0,
project,0,test185787,"public void test185787() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    Object[] objectArray0 = ArrayUtils.clone((Object[]) booleanArray1);
    assertNotNull(objectArray0);
}",0,assertNotNull(objectArray0)
project,0,test186790,"public void test186790() throws Throwable {
    Object object0 = new Object();
    String string0 = ArrayUtils.toString(object0, ""sj[7zW`^LaSlQ"");
    assertNotNull(string0);
}",0,
project,0,test187791,"public void test187791() throws Throwable {
    char[] charArray0 = new char[3];
    int int0 = ArrayUtils.indexOf(charArray0, '.');
    assertEquals(3, charArray0.length);
}",0,
project,0,test187792,"public void test187792() throws Throwable {
    char[] charArray0 = new char[3];
    int int0 = ArrayUtils.indexOf(charArray0, '.');
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test187793,"public void test187793() throws Throwable {
    char[] charArray0 = new char[3];
    int int0 = ArrayUtils.indexOf(charArray0, '.');
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test188794,"public void test188794() throws Throwable {
    boolean[] booleanArray0 = new boolean[8];
    int int0 = ArrayUtils.indexOf(booleanArray0, false);
    assertEquals(8, booleanArray0.length);
}",0,
project,0,test188795,"public void test188795() throws Throwable {
    boolean[] booleanArray0 = new boolean[8];
    int int0 = ArrayUtils.indexOf(booleanArray0, false);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test189797,"public void test189797() throws Throwable {
    byte[] byteArray0 = new byte[7];
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) (-1));
    assertEquals(7, byteArray0.length);
}",0,
project,0,test189798,"public void test189798() throws Throwable {
    byte[] byteArray0 = new byte[7];
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) (-1));
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test189799,"public void test189799() throws Throwable {
    byte[] byteArray0 = new byte[7];
    int int0 = ArrayUtils.indexOf(byteArray0, (byte) (-1));
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test190800,"public void test190800() throws Throwable {
    int[] intArray0 = new int[1];
    int[] intArray1 = ArrayUtils.remove(intArray0, 0);
    assertEquals(1, intArray0.length);
}",0,
project,0,test190801,"public void test190801() throws Throwable {
    int[] intArray0 = new int[1];
    int[] intArray1 = ArrayUtils.remove(intArray0, 0);
    assertEquals(0, intArray1.length);
}",0,
project,0,test190802,"public void test190802() throws Throwable {
    int[] intArray0 = new int[1];
    int[] intArray1 = ArrayUtils.remove(intArray0, 0);
    assertNotSame(intArray0, intArray1);
}",0,
project,0,test190803,"public void test190803() throws Throwable {
    int[] intArray0 = new int[1];
    int[] intArray1 = ArrayUtils.remove(intArray0, 0);
    assertNotSame(intArray1, intArray0);
}",0,
project,0,test190804,"public void test190804() throws Throwable {
    int[] intArray0 = new int[1];
    int[] intArray1 = ArrayUtils.remove(intArray0, 0);
    assertNotNull(intArray1);
}",0,"assertEquals(0, intArray1)"
project,0,test190806,"public void test190806() throws Throwable {
    int[] intArray0 = new int[1];
    int[] intArray1 = ArrayUtils.remove(intArray0, 0);
    assertArrayEquals(new int[] { 0 }, intArray0);
}",0,
project,0,test190807,"public void test190807() throws Throwable {
    int[] intArray0 = new int[1];
    int[] intArray1 = ArrayUtils.remove(intArray0, 0);
    assertArrayEquals(new int[] {}, intArray1);
}",0,
project,0,test191808,"public void test191808() throws Throwable {
    int[] intArray0 = new int[2];
    int int0 = ArrayUtils.indexOf(intArray0, 0);
    assertEquals(2, intArray0.length);
}",0,
project,0,test191809,"public void test191809() throws Throwable {
    int[] intArray0 = new int[2];
    int int0 = ArrayUtils.indexOf(intArray0, 0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test191810,"public void test191810() throws Throwable {
    int[] intArray0 = new int[2];
    int int0 = ArrayUtils.indexOf(intArray0, 0);
    assertArrayEquals(new int[] { 0, 0 }, intArray0);
}",0,
project,0,test192811,"public void test192811() throws Throwable {
    short[] shortArray0 = new short[6];
    shortArray0[3] = (short) (-468);
    short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) (-468));
    assertEquals(6, shortArray0.length);
}",0,
project,0,test192812,"public void test192812() throws Throwable {
    short[] shortArray0 = new short[6];
    shortArray0[3] = (short) (-468);
    short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) (-468));
    assertEquals(5, shortArray1.length);
}",0,
project,0,test192813,"public void test192813() throws Throwable {
    short[] shortArray0 = new short[6];
    shortArray0[3] = (short) (-468);
    short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) (-468));
    assertNotSame(shortArray0, shortArray1);
}",0,
project,0,test192814,"public void test192814() throws Throwable {
    short[] shortArray0 = new short[6];
    shortArray0[3] = (short) (-468);
    short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) (-468));
    assertNotSame(shortArray1, shortArray0);
}",0,
project,0,test192815,"public void test192815() throws Throwable {
    short[] shortArray0 = new short[6];
    shortArray0[3] = (short) (-468);
    short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) (-468));
    assertNotNull(shortArray1);
}",0,
project,0,test192817,"public void test192817() throws Throwable {
    short[] shortArray0 = new short[6];
    shortArray0[3] = (short) (-468);
    short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) (-468));
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) (-468), (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test192818,"public void test192818() throws Throwable {
    short[] shortArray0 = new short[6];
    shortArray0[3] = (short) (-468);
    short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) (-468));
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray1);
}",0,
project,0,test193819,"public void test193819() throws Throwable {
    long[] longArray0 = ArrayUtils.removeElement((long[]) null, 1L);
    assertNull(longArray0);
}",0,assertNotNull(longArray0)
project,0,test194820,"public void test194820() throws Throwable {
    long[] longArray0 = new long[1];
    longArray0[0] = (-1L);
    long[] longArray1 = ArrayUtils.removeElement(longArray0, (-1L));
    assertEquals(1, longArray0.length);
}",0,
project,0,test194821,"public void test194821() throws Throwable {
    long[] longArray0 = new long[1];
    longArray0[0] = (-1L);
    long[] longArray1 = ArrayUtils.removeElement(longArray0, (-1L));
    assertEquals(0, longArray1.length);
}",0,
project,0,test194822,"public void test194822() throws Throwable {
    long[] longArray0 = new long[1];
    longArray0[0] = (-1L);
    long[] longArray1 = ArrayUtils.removeElement(longArray0, (-1L));
    assertNotSame(longArray0, longArray1);
}",0,
project,0,test194823,"public void test194823() throws Throwable {
    long[] longArray0 = new long[1];
    longArray0[0] = (-1L);
    long[] longArray1 = ArrayUtils.removeElement(longArray0, (-1L));
    assertNotSame(longArray1, longArray0);
}",0,
project,0,test194824,"public void test194824() throws Throwable {
    long[] longArray0 = new long[1];
    longArray0[0] = (-1L);
    long[] longArray1 = ArrayUtils.removeElement(longArray0, (-1L));
    assertNotNull(longArray1);
}",0,
project,0,test194826,"public void test194826() throws Throwable {
    long[] longArray0 = new long[1];
    longArray0[0] = (-1L);
    long[] longArray1 = ArrayUtils.removeElement(longArray0, (-1L));
    assertArrayEquals(new long[] { (-1L) }, longArray0);
}",0,
project,0,test194827,"public void test194827() throws Throwable {
    long[] longArray0 = new long[1];
    longArray0[0] = (-1L);
    long[] longArray1 = ArrayUtils.removeElement(longArray0, (-1L));
    assertArrayEquals(new long[] {}, longArray1);
}",0,
project,0,test195828,"public void test195828() throws Throwable {
    float[] floatArray0 = ArrayUtils.removeElement((float[]) null, 2646.16F);
    assertNull(floatArray0);
}",0,
project,0,test196829,"public void test196829() throws Throwable {
    float[] floatArray0 = new float[6];
    float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (float) 0);
    assertEquals(6, floatArray0.length);
}",0,
project,0,test196830,"public void test196830() throws Throwable {
    float[] floatArray0 = new float[6];
    float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (float) 0);
    assertEquals(5, floatArray1.length);
}",0,
project,0,test196831,"public void test196831() throws Throwable {
    float[] floatArray0 = new float[6];
    float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (float) 0);
    assertNotSame(floatArray0, floatArray1);
}",0,
project,0,test196832,"public void test196832() throws Throwable {
    float[] floatArray0 = new float[6];
    float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (float) 0);
    assertNotSame(floatArray1, floatArray0);
}",0,
project,0,test196833,"public void test196833() throws Throwable {
    float[] floatArray0 = new float[6];
    float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (float) 0);
    assertNotNull(floatArray1);
}",0,
project,0,test196835,"public void test196835() throws Throwable {
    float[] floatArray0 = new float[6];
    float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (float) 0);
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test196836,"public void test196836() throws Throwable {
    float[] floatArray0 = new float[6];
    float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (float) 0);
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, floatArray1, 0.01F);
}",0,
project,0,test197837,"public void test197837() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = 1.0;
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1.0);
    assertEquals(2, doubleArray0.length);
}",0,
project,0,test197838,"public void test197838() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = 1.0;
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1.0);
    assertEquals(1, doubleArray1.length);
}",0,
project,0,test197839,"public void test197839() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = 1.0;
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1.0);
    assertNotSame(doubleArray0, doubleArray1);
}",0,
project,0,test197840,"public void test197840() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = 1.0;
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1.0);
    assertNotSame(doubleArray1, doubleArray0);
}",0,
project,0,test197841,"public void test197841() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = 1.0;
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1.0);
    assertNotNull(doubleArray1);
}",0,
project,0,test197843,"public void test197843() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = 1.0;
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1.0);
    assertArrayEquals(new double[] { 1.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test197844,"public void test197844() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = 1.0;
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1.0);
    assertArrayEquals(new double[] { 0.0 }, doubleArray1, 0.01);
}",0,
project,0,test198845,"public void test198845() throws Throwable {
    char[] charArray0 = new char[3];
    charArray0[0] = 'j';
    char[] charArray1 = ArrayUtils.removeElement(charArray0, 'j');
    assertEquals(3, charArray0.length);
}",0,
project,0,test198846,"public void test198846() throws Throwable {
    char[] charArray0 = new char[3];
    charArray0[0] = 'j';
    char[] charArray1 = ArrayUtils.removeElement(charArray0, 'j');
    assertEquals(2, charArray1.length);
}",0,
project,0,test198847,"public void test198847() throws Throwable {
    char[] charArray0 = new char[3];
    charArray0[0] = 'j';
    char[] charArray1 = ArrayUtils.removeElement(charArray0, 'j');
    assertNotSame(charArray0, charArray1);
}",0,
project,0,test198848,"public void test198848() throws Throwable {
    char[] charArray0 = new char[3];
    charArray0[0] = 'j';
    char[] charArray1 = ArrayUtils.removeElement(charArray0, 'j');
    assertNotSame(charArray1, charArray0);
}",0,
project,0,test198849,"public void test198849() throws Throwable {
    char[] charArray0 = new char[3];
    charArray0[0] = 'j';
    char[] charArray1 = ArrayUtils.removeElement(charArray0, 'j');
    assertNotNull(charArray1);
}",0,
project,0,test198851,"public void test198851() throws Throwable {
    char[] charArray0 = new char[3];
    charArray0[0] = 'j';
    char[] charArray1 = ArrayUtils.removeElement(charArray0, 'j');
    assertArrayEquals(new char[] { 'j', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test198852,"public void test198852() throws Throwable {
    char[] charArray0 = new char[3];
    charArray0[0] = 'j';
    char[] charArray1 = ArrayUtils.removeElement(charArray0, 'j');
    assertArrayEquals(new char[] { '\u0000', '\u0000' }, charArray1);
}",0,
project,0,test199853,"public void test199853() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    booleanArray0[0] = true;
    boolean[] booleanArray1 = ArrayUtils.removeElement(booleanArray0, true);
    assertEquals(3, booleanArray0.length);
}",0,
project,0,test199854,"public void test199854() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    booleanArray0[0] = true;
    boolean[] booleanArray1 = ArrayUtils.removeElement(booleanArray0, true);
    assertEquals(2, booleanArray1.length);
}",0,
project,0,test199855,"public void test199855() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    booleanArray0[0] = true;
    boolean[] booleanArray1 = ArrayUtils.removeElement(booleanArray0, true);
    assertNotSame(booleanArray0, booleanArray1);
}",0,
project,0,test199856,"public void test199856() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    booleanArray0[0] = true;
    boolean[] booleanArray1 = ArrayUtils.removeElement(booleanArray0, true);
    assertNotSame(booleanArray1, booleanArray0);
}",0,
project,0,test199857,"public void test199857() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    booleanArray0[0] = true;
    boolean[] booleanArray1 = ArrayUtils.removeElement(booleanArray0, true);
    assertNotNull(booleanArray1);
}",0,assertTrue(booleanArray1)
project,0,test200861,"public void test200861() throws Throwable {
    String[] stringArray0 = new String[5];
    stringArray0[1] = ""user.name"";
    String[] stringArray1 = ArrayUtils.removeElement(stringArray0, (Object) ""user.name"");
    assertEquals(5, stringArray0.length);
}",0,
project,0,test200862,"public void test200862() throws Throwable {
    String[] stringArray0 = new String[5];
    stringArray0[1] = ""user.name"";
    String[] stringArray1 = ArrayUtils.removeElement(stringArray0, (Object) ""user.name"");
    assertEquals(4, stringArray1.length);
}",0,
project,0,test200863,"public void test200863() throws Throwable {
    String[] stringArray0 = new String[5];
    stringArray0[1] = ""user.name"";
    String[] stringArray1 = ArrayUtils.removeElement(stringArray0, (Object) ""user.name"");
    assertNotSame(stringArray0, stringArray1);
}",0,
project,0,test200864,"public void test200864() throws Throwable {
    String[] stringArray0 = new String[5];
    stringArray0[1] = ""user.name"";
    String[] stringArray1 = ArrayUtils.removeElement(stringArray0, (Object) ""user.name"");
    assertNotSame(stringArray1, stringArray0);
}",0,
project,0,test200865,"public void test200865() throws Throwable {
    String[] stringArray0 = new String[5];
    stringArray0[1] = ""user.name"";
    String[] stringArray1 = ArrayUtils.removeElement(stringArray0, (Object) ""user.name"");
    assertNotNull(stringArray1);
}",0,assertNotNull(stringArray1)
project,0,test201867,"public void test201867() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    assertEquals((-1), ArrayUtils.INDEX_NOT_FOUND);
}",0,
project,0,test201868,"public void test201868() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    assertNotNull(arrayUtils0);
}",0,
project,0,test201869,"public void test201869() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    int[] intArray0 = ArrayUtils.add(arrayUtils0.EMPTY_INT_ARRAY, 0, 0);
    assertEquals(1, intArray0.length);
}",0,
project,0,test201870,"public void test201870() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    int[] intArray0 = ArrayUtils.add(arrayUtils0.EMPTY_INT_ARRAY, 0, 0);
    assertEquals((-1), ArrayUtils.INDEX_NOT_FOUND);
}",0,
project,0,test201871,"public void test201871() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    int[] intArray0 = ArrayUtils.add(arrayUtils0.EMPTY_INT_ARRAY, 0, 0);
    assertNotNull(intArray0);
}",0,"assertEquals(1, intArray0)"
project,0,test201872,"public void test201872() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    int[] intArray0 = ArrayUtils.add(arrayUtils0.EMPTY_INT_ARRAY, 0, 0);
    assertArrayEquals(new int[] { 0 }, intArray0);
}",0,
project,0,test202873,"public void test202873() throws Throwable {
    Object[] objectArray0 = ArrayUtils.add((Object[]) null, 64, (Object) null);
    assertEquals(1, objectArray0.length);
}",0,
project,0,test202874,"public void test202874() throws Throwable {
    Object[] objectArray0 = ArrayUtils.add((Object[]) null, 64, (Object) null);
    assertNotNull(objectArray0);
}",0,
project,0,test203875,"public void test203875() throws Throwable {
    String[] stringArray0 = new String[8];
    String[] stringArray1 = ArrayUtils.add(stringArray0, 0, """");
    assertEquals(8, stringArray0.length);
}",0,
project,0,test203876,"public void test203876() throws Throwable {
    String[] stringArray0 = new String[8];
    String[] stringArray1 = ArrayUtils.add(stringArray0, 0, """");
    assertEquals(9, stringArray1.length);
}",0,
project,0,test203877,"public void test203877() throws Throwable {
    String[] stringArray0 = new String[8];
    String[] stringArray1 = ArrayUtils.add(stringArray0, 0, """");
    assertNotSame(stringArray0, stringArray1);
}",0,
project,0,test203878,"public void test203878() throws Throwable {
    String[] stringArray0 = new String[8];
    String[] stringArray1 = ArrayUtils.add(stringArray0, 0, """");
    assertNotSame(stringArray1, stringArray0);
}",0,
project,0,test203879,"public void test203879() throws Throwable {
    String[] stringArray0 = new String[8];
    String[] stringArray1 = ArrayUtils.add(stringArray0, 0, """");
    assertNotNull(stringArray1);
}",0,
project,0,test204882,"public void test204882() throws Throwable {
    Object object0 = new Object();
    // Undeclared exception!
    try {
        ArrayUtils.add((Object[]) null, (-1963), object0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -1963, Length: 0
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test205884,"public void test205884() throws Throwable {
    Object object0 = new Object();
    Object[] objectArray0 = ArrayUtils.add((Object[]) null, object0);
    assertEquals(1, objectArray0.length);
}",0,
project,0,test205885,"public void test205885() throws Throwable {
    Object object0 = new Object();
    Object[] objectArray0 = ArrayUtils.add((Object[]) null, object0);
    assertNotNull(objectArray0);
}",0,assertNotNull(objectArray0)
project,0,test206886,"public void test206886() throws Throwable {
    double[] doubleArray0 = new double[8];
    double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    assertEquals(8, doubleArray0.length);
}",0,
project,0,test206887,"public void test206887() throws Throwable {
    double[] doubleArray0 = new double[8];
    double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    assertEquals(16, doubleArray1.length);
}",0,
project,0,test206888,"public void test206888() throws Throwable {
    double[] doubleArray0 = new double[8];
    double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    assertNotSame(doubleArray0, doubleArray1);
}",0,
project,0,test206889,"public void test206889() throws Throwable {
    double[] doubleArray0 = new double[8];
    double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    assertNotSame(doubleArray1, doubleArray0);
}",0,
project,0,test206890,"public void test206890() throws Throwable {
    double[] doubleArray0 = new double[8];
    double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    assertNotNull(doubleArray1);
}",0,
project,0,test206892,"public void test206892() throws Throwable {
    double[] doubleArray0 = new double[8];
    double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test207893,"public void test207893() throws Throwable {
    long[] longArray0 = ArrayUtils.addAll((long[]) null, (long[]) null);
    assertNull(longArray0);
}",0,assertNotNull(longArray0)
project,0,test208894,"public void test208894() throws Throwable {
    long[] longArray0 = new long[7];
    long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    assertEquals(7, longArray0.length);
}",0,
project,0,test208895,"public void test208895() throws Throwable {
    long[] longArray0 = new long[7];
    long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    assertEquals(14, longArray1.length);
}",0,
project,0,test208896,"public void test208896() throws Throwable {
    long[] longArray0 = new long[7];
    long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    assertNotSame(longArray0, longArray1);
}",0,
project,0,test208897,"public void test208897() throws Throwable {
    long[] longArray0 = new long[7];
    long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    assertNotSame(longArray1, longArray0);
}",0,
project,0,test208898,"public void test208898() throws Throwable {
    long[] longArray0 = new long[7];
    long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    assertNotNull(longArray1);
}",0,
project,0,test208900,"public void test208900() throws Throwable {
    long[] longArray0 = new long[7];
    long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    assertArrayEquals(new long[] { 0L, 0L, 0L, 0L, 0L, 0L, 0L }, longArray0);
}",0,
project,0,test209901,"public void test209901() throws Throwable {
    int[] intArray0 = new int[4];
    int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    assertEquals(4, intArray0.length);
}",0,
project,0,test209902,"public void test209902() throws Throwable {
    int[] intArray0 = new int[4];
    int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    assertEquals(8, intArray1.length);
}",0,
project,0,test209903,"public void test209903() throws Throwable {
    int[] intArray0 = new int[4];
    int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    assertNotSame(intArray0, intArray1);
}",0,
project,0,test209904,"public void test209904() throws Throwable {
    int[] intArray0 = new int[4];
    int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    assertNotSame(intArray1, intArray0);
}",0,
project,0,test209905,"public void test209905() throws Throwable {
    int[] intArray0 = new int[4];
    int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    assertNotNull(intArray1);
}",0,
project,0,test209907,"public void test209907() throws Throwable {
    int[] intArray0 = new int[4];
    int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    assertArrayEquals(new int[] { 0, 0, 0, 0 }, intArray0);
}",0,
project,0,test209908,"public void test209908() throws Throwable {
    int[] intArray0 = new int[4];
    int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    assertArrayEquals(new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, intArray1);
}",0,
project,0,test210909,"public void test210909() throws Throwable {
    short[] shortArray0 = ArrayUtils.addAll((short[]) null, (short[]) null);
    assertNull(shortArray0);
}",0,
project,0,test211910,"public void test211910() throws Throwable {
    short[] shortArray0 = new short[3];
    short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    assertEquals(3, shortArray0.length);
}",0,
project,0,test211911,"public void test211911() throws Throwable {
    short[] shortArray0 = new short[3];
    short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    assertEquals(6, shortArray1.length);
}",0,
project,0,test211912,"public void test211912() throws Throwable {
    short[] shortArray0 = new short[3];
    short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    assertNotSame(shortArray0, shortArray1);
}",0,
project,0,test211913,"public void test211913() throws Throwable {
    short[] shortArray0 = new short[3];
    short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    assertNotSame(shortArray1, shortArray0);
}",0,
project,0,test211914,"public void test211914() throws Throwable {
    short[] shortArray0 = new short[3];
    short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    assertNotNull(shortArray1);
}",0,
project,0,test211916,"public void test211916() throws Throwable {
    short[] shortArray0 = new short[3];
    short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test211917,"public void test211917() throws Throwable {
    short[] shortArray0 = new short[3];
    short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray1);
}",0,
project,0,test212918,"public void test212918() throws Throwable {
    byte[] byteArray0 = ArrayUtils.addAll((byte[]) null, (byte[]) null);
    assertNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test213919,"public void test213919() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    assertEquals(1, byteArray0.length);
}",0,
project,0,test213920,"public void test213920() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    assertEquals(2, byteArray1.length);
}",0,
project,0,test213921,"public void test213921() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    assertNotSame(byteArray0, byteArray1);
}",0,
project,0,test213922,"public void test213922() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    assertNotSame(byteArray1, byteArray0);
}",0,
project,0,test213923,"public void test213923() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    assertNotNull(byteArray1);
}",0,
project,0,test213925,"public void test213925() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    assertArrayEquals(new byte[] { (byte) 0 }, byteArray0);
}",0,
project,0,test213926,"public void test213926() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0 }, byteArray1);
}",0,
project,0,test214927,"public void test214927() throws Throwable {
    char[] charArray0 = new char[5];
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    assertEquals(5, charArray0.length);
}",0,
project,0,test214928,"public void test214928() throws Throwable {
    char[] charArray0 = new char[5];
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    assertEquals(10, charArray1.length);
}",0,
project,0,test214929,"public void test214929() throws Throwable {
    char[] charArray0 = new char[5];
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    assertNotSame(charArray0, charArray1);
}",0,
project,0,test214930,"public void test214930() throws Throwable {
    char[] charArray0 = new char[5];
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    assertNotSame(charArray1, charArray0);
}",0,
project,0,test214931,"public void test214931() throws Throwable {
    char[] charArray0 = new char[5];
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    assertNotNull(charArray1);
}",0,
project,0,test214933,"public void test214933() throws Throwable {
    char[] charArray0 = new char[5];
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test214934,"public void test214934() throws Throwable {
    char[] charArray0 = new char[5];
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000' }, charArray1);
}",0,
project,0,test215935,"public void test215935() throws Throwable {
    char[] charArray0 = ArrayUtils.addAll((char[]) null, (char[]) null);
    assertNull(charArray0);
}",0,assertNotNull(charArray0)
project,0,test216936,"public void test216936() throws Throwable {
    boolean[] booleanArray0 = ArrayUtils.addAll((boolean[]) null, (boolean[]) null);
    assertNull(booleanArray0);
}",0,
project,0,test217937,"public void test217937() throws Throwable {
    boolean[] booleanArray0 = new boolean[9];
    boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    assertEquals(9, booleanArray0.length);
}",0,
project,0,test217938,"public void test217938() throws Throwable {
    boolean[] booleanArray0 = new boolean[9];
    boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    assertEquals(18, booleanArray1.length);
}",0,
project,0,test217939,"public void test217939() throws Throwable {
    boolean[] booleanArray0 = new boolean[9];
    boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    assertNotSame(booleanArray0, booleanArray1);
}",0,
project,0,test217940,"public void test217940() throws Throwable {
    boolean[] booleanArray0 = new boolean[9];
    boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    assertNotSame(booleanArray1, booleanArray0);
}",0,
project,0,test217941,"public void test217941() throws Throwable {
    boolean[] booleanArray0 = new boolean[9];
    boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    assertNotNull(booleanArray1);
}",0,
project,0,test218944,"public void test218944() throws Throwable {
    String[] stringArray0 = new String[6];
    String[] stringArray1 = ArrayUtils.addAll(stringArray0, stringArray0);
    assertEquals(6, stringArray0.length);
}",0,
project,0,test218945,"public void test218945() throws Throwable {
    String[] stringArray0 = new String[6];
    String[] stringArray1 = ArrayUtils.addAll(stringArray0, stringArray0);
    assertEquals(12, stringArray1.length);
}",0,
project,0,test218946,"public void test218946() throws Throwable {
    String[] stringArray0 = new String[6];
    String[] stringArray1 = ArrayUtils.addAll(stringArray0, stringArray0);
    assertNotSame(stringArray0, stringArray1);
}",0,
project,0,test218947,"public void test218947() throws Throwable {
    String[] stringArray0 = new String[6];
    String[] stringArray1 = ArrayUtils.addAll(stringArray0, stringArray0);
    assertNotSame(stringArray1, stringArray0);
}",0,
project,0,test218948,"public void test218948() throws Throwable {
    String[] stringArray0 = new String[6];
    String[] stringArray1 = ArrayUtils.addAll(stringArray0, stringArray0);
    assertNotNull(stringArray1);
}",0,assertNotNull(stringArray1)
project,0,test219950,"public void test219950() throws Throwable {
    byte[] byteArray0 = new byte[0];
    boolean boolean0 = ArrayUtils.isEmpty(byteArray0);
    assertEquals(0, byteArray0.length);
}",0,
project,0,test219951,"public void test219951() throws Throwable {
    byte[] byteArray0 = new byte[0];
    boolean boolean0 = ArrayUtils.isEmpty(byteArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test219952,"public void test219952() throws Throwable {
    byte[] byteArray0 = new byte[0];
    boolean boolean0 = ArrayUtils.isEmpty(byteArray0);
    assertArrayEquals(new byte[] {}, byteArray0);
}",0,
project,0,test220953,"public void test220953() throws Throwable {
    byte[] byteArray0 = new byte[5];
    boolean boolean0 = ArrayUtils.isEmpty(byteArray0);
    assertEquals(5, byteArray0.length);
}",0,
project,0,test220954,"public void test220954() throws Throwable {
    byte[] byteArray0 = new byte[5];
    boolean boolean0 = ArrayUtils.isEmpty(byteArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test220955,"public void test220955() throws Throwable {
    byte[] byteArray0 = new byte[5];
    boolean boolean0 = ArrayUtils.isEmpty(byteArray0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test221956,"public void test221956() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((byte[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test222957,"public void test222957() throws Throwable {
    char[] charArray0 = new char[0];
    boolean boolean0 = ArrayUtils.isEmpty(charArray0);
    assertEquals(0, charArray0.length);
}",0,
project,0,test222958,"public void test222958() throws Throwable {
    char[] charArray0 = new char[0];
    boolean boolean0 = ArrayUtils.isEmpty(charArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test222959,"public void test222959() throws Throwable {
    char[] charArray0 = new char[0];
    boolean boolean0 = ArrayUtils.isEmpty(charArray0);
    assertArrayEquals(new char[] {}, charArray0);
}",0,
project,0,test223960,"public void test223960() throws Throwable {
    char[] charArray0 = new char[7];
    boolean boolean0 = ArrayUtils.isEmpty(charArray0);
    assertEquals(7, charArray0.length);
}",0,
project,0,test223961,"public void test223961() throws Throwable {
    char[] charArray0 = new char[7];
    boolean boolean0 = ArrayUtils.isEmpty(charArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test223962,"public void test223962() throws Throwable {
    char[] charArray0 = new char[7];
    boolean boolean0 = ArrayUtils.isEmpty(charArray0);
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test224963,"public void test224963() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((char[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test225964,"public void test225964() throws Throwable {
    short[] shortArray0 = new short[0];
    boolean boolean0 = ArrayUtils.isEmpty(shortArray0);
    assertEquals(0, shortArray0.length);
}",0,
project,0,test225965,"public void test225965() throws Throwable {
    short[] shortArray0 = new short[0];
    boolean boolean0 = ArrayUtils.isEmpty(shortArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test225966,"public void test225966() throws Throwable {
    short[] shortArray0 = new short[0];
    boolean boolean0 = ArrayUtils.isEmpty(shortArray0);
    assertArrayEquals(new short[] {}, shortArray0);
}",0,
project,0,test226967,"public void test226967() throws Throwable {
    short[] shortArray0 = new short[6];
    boolean boolean0 = ArrayUtils.isEmpty(shortArray0);
    assertEquals(6, shortArray0.length);
}",0,
project,0,test226968,"public void test226968() throws Throwable {
    short[] shortArray0 = new short[6];
    boolean boolean0 = ArrayUtils.isEmpty(shortArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test226969,"public void test226969() throws Throwable {
    short[] shortArray0 = new short[6];
    boolean boolean0 = ArrayUtils.isEmpty(shortArray0);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test227970,"public void test227970() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((short[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test228971,"public void test228971() throws Throwable {
    int[] intArray0 = new int[0];
    boolean boolean0 = ArrayUtils.isEmpty(intArray0);
    assertEquals(0, intArray0.length);
}",0,
project,0,test228972,"public void test228972() throws Throwable {
    int[] intArray0 = new int[0];
    boolean boolean0 = ArrayUtils.isEmpty(intArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test228973,"public void test228973() throws Throwable {
    int[] intArray0 = new int[0];
    boolean boolean0 = ArrayUtils.isEmpty(intArray0);
    assertArrayEquals(new int[] {}, intArray0);
}",0,
project,0,test229974,"public void test229974() throws Throwable {
    int[] intArray0 = new int[3];
    boolean boolean0 = ArrayUtils.isEmpty(intArray0);
    assertEquals(3, intArray0.length);
}",0,
project,0,test229975,"public void test229975() throws Throwable {
    int[] intArray0 = new int[3];
    boolean boolean0 = ArrayUtils.isEmpty(intArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test229976,"public void test229976() throws Throwable {
    int[] intArray0 = new int[3];
    boolean boolean0 = ArrayUtils.isEmpty(intArray0);
    assertArrayEquals(new int[] { 0, 0, 0 }, intArray0);
}",0,
project,0,test230977,"public void test230977() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((int[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test231978,"public void test231978() throws Throwable {
    long[] longArray0 = new long[0];
    boolean boolean0 = ArrayUtils.isEmpty(longArray0);
    assertEquals(0, longArray0.length);
}",0,
project,0,test231979,"public void test231979() throws Throwable {
    long[] longArray0 = new long[0];
    boolean boolean0 = ArrayUtils.isEmpty(longArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test231980,"public void test231980() throws Throwable {
    long[] longArray0 = new long[0];
    boolean boolean0 = ArrayUtils.isEmpty(longArray0);
    assertArrayEquals(new long[] {}, longArray0);
}",0,
project,0,test232981,"public void test232981() throws Throwable {
    long[] longArray0 = new long[2];
    boolean boolean0 = ArrayUtils.isEmpty(longArray0);
    assertEquals(2, longArray0.length);
}",0,
project,0,test232982,"public void test232982() throws Throwable {
    long[] longArray0 = new long[2];
    boolean boolean0 = ArrayUtils.isEmpty(longArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test232983,"public void test232983() throws Throwable {
    long[] longArray0 = new long[2];
    boolean boolean0 = ArrayUtils.isEmpty(longArray0);
    assertArrayEquals(new long[] { 0L, 0L }, longArray0);
}",0,
project,0,test233984,"public void test233984() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((long[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test234985,"public void test234985() throws Throwable {
    String[] stringArray0 = new String[5];
    boolean boolean0 = ArrayUtils.isEmpty(stringArray0);
    assertEquals(5, stringArray0.length);
}",0,
project,0,test234986,"public void test234986() throws Throwable {
    String[] stringArray0 = new String[5];
    boolean boolean0 = ArrayUtils.isEmpty(stringArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test235987,"public void test235987() throws Throwable {
    boolean boolean0 = ArrayUtils.isEmpty((Object[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test236988,"public void test236988() throws Throwable {
    boolean[] booleanArray0 = new boolean[6];
    booleanArray0[0] = true;
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    assertEquals(6, booleanArray0.length);
}",0,
project,0,test236989,"public void test236989() throws Throwable {
    boolean[] booleanArray0 = new boolean[6];
    booleanArray0[0] = true;
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    assertEquals(6, booleanArray1.length);
}",0,
project,0,test236990,"public void test236990() throws Throwable {
    boolean[] booleanArray0 = new boolean[6];
    booleanArray0[0] = true;
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    assertNotNull(booleanArray1);
}",0,
project,0,test237992,"public void test237992() throws Throwable {
    Boolean[] booleanArray0 = ArrayUtils.toObject((boolean[]) null);
    assertNull(booleanArray0);
}",0,
project,0,test238993,"public void test238993() throws Throwable {
    boolean[] booleanArray0 = new boolean[6];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    assertEquals(6, booleanArray0.length);
}",0,
project,0,test238994,"public void test238994() throws Throwable {
    boolean[] booleanArray0 = new boolean[6];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    assertEquals(6, booleanArray1.length);
}",0,
project,0,test238995,"public void test238995() throws Throwable {
    boolean[] booleanArray0 = new boolean[6];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    assertNotNull(booleanArray1);
}",0,
project,0,test238998,"public void test238998() throws Throwable {
    boolean[] booleanArray0 = new boolean[6];
    Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    Object object0 = new Object();
    // Undeclared exception!
    try {
        ArrayUtils.add((Object[]) booleanArray1, object0);
        fail(""Expecting exception: ArrayStoreException"");
    } catch (ArrayStoreException e) {
        //
        // java.lang.Object
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test239999,"public void test239999() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[11];
    booleanArray0[0] = (Boolean) false;
    boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0, false);
    assertEquals(11, booleanArray0.length);
}",0,
project,0,test2391000,"public void test2391000() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[11];
    booleanArray0[0] = (Boolean) false;
    boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0, false);
    assertEquals(11, booleanArray1.length);
}",0,
project,0,test2391001,"public void test2391001() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[11];
    booleanArray0[0] = (Boolean) false;
    boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0, false);
    assertNotNull(booleanArray1);
}",0,assertTrue(booleanArray1)
project,0,test2401002,"public void test2401002() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[0];
    boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0, false);
    assertEquals(0, booleanArray0.length);
}",0,
project,0,test2401003,"public void test2401003() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[0];
    boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0, false);
    assertEquals(0, booleanArray1.length);
}",0,
project,0,test2401004,"public void test2401004() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[0];
    boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0, false);
    assertNotNull(booleanArray1);
}",0,assertFalse(booleanArray1)
project,0,test2411006,"public void test2411006() throws Throwable {
    boolean[] booleanArray0 = ArrayUtils.toPrimitive((Boolean[]) null, true);
    assertNull(booleanArray0);
}",0,assertTrue(booleanArray0)
project,0,test2421009,"public void test2421009() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[3];
    Boolean boolean0 = new Boolean(""', is neither of type Map.Entry nor an Array"");
    booleanArray0[0] = boolean0;
    booleanArray0[1] = booleanArray0[0];
    booleanArray0[2] = booleanArray0[0];
    boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
    assertEquals(3, booleanArray0.length);
}",0,
project,0,test2421010,"public void test2421010() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[3];
    Boolean boolean0 = new Boolean(""', is neither of type Map.Entry nor an Array"");
    booleanArray0[0] = boolean0;
    booleanArray0[1] = booleanArray0[0];
    booleanArray0[2] = booleanArray0[0];
    boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
    assertEquals(3, booleanArray1.length);
}",0,
project,0,test2421011,"public void test2421011() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[3];
    Boolean boolean0 = new Boolean(""', is neither of type Map.Entry nor an Array"");
    booleanArray0[0] = boolean0;
    booleanArray0[1] = booleanArray0[0];
    booleanArray0[2] = booleanArray0[0];
    boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
    assertNotNull(booleanArray1);
}",0,
project,0,test2431013,"public void test2431013() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[0];
    boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
    assertEquals(0, booleanArray0.length);
}",0,
project,0,test2431014,"public void test2431014() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[0];
    boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
    assertEquals(0, booleanArray1.length);
}",0,
project,0,test2431015,"public void test2431015() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[0];
    boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
    assertNotNull(booleanArray1);
}",0,
project,0,test2441017,"public void test2441017() throws Throwable {
    boolean[] booleanArray0 = ArrayUtils.toPrimitive((Boolean[]) null);
    assertNull(booleanArray0);
}",0,assertTrue(booleanArray0)
project,0,test2451018,"public void test2451018() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[3];
    // Undeclared exception!
    try {
        ArrayUtils.toPrimitive(booleanArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test2461019,"public void test2461019() throws Throwable {
    Float[] floatArray0 = ArrayUtils.toObject((float[]) null);
    assertNull(floatArray0);
}",0,
project,0,test2471020,"public void test2471020() throws Throwable {
    float[] floatArray0 = new float[6];
    Float[] floatArray1 = ArrayUtils.toObject(floatArray0);
    assertEquals(6, floatArray0.length);
}",0,
project,0,test2471021,"public void test2471021() throws Throwable {
    float[] floatArray0 = new float[6];
    Float[] floatArray1 = ArrayUtils.toObject(floatArray0);
    assertEquals(6, floatArray1.length);
}",0,
project,0,test2471022,"public void test2471022() throws Throwable {
    float[] floatArray0 = new float[6];
    Float[] floatArray1 = ArrayUtils.toObject(floatArray0);
    assertNotNull(floatArray1);
}",0,
project,0,test2471023,"public void test2471023() throws Throwable {
    float[] floatArray0 = new float[6];
    Float[] floatArray1 = ArrayUtils.toObject(floatArray0);
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test2481026,"public void test2481026() throws Throwable {
    Float[] floatArray0 = new Float[1];
    Float float0 = new Float((double) (-1L));
    floatArray0[0] = float0;
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, (-1611.1229F));
    assertEquals(1, floatArray0.length);
}",0,
project,0,test2481027,"public void test2481027() throws Throwable {
    Float[] floatArray0 = new Float[1];
    Float float0 = new Float((double) (-1L));
    floatArray0[0] = float0;
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, (-1611.1229F));
    assertEquals(1, floatArray1.length);
}",0,
project,0,test2481028,"public void test2481028() throws Throwable {
    Float[] floatArray0 = new Float[1];
    Float float0 = new Float((double) (-1L));
    floatArray0[0] = float0;
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, (-1611.1229F));
    assertNotNull(floatArray1);
}",0,
project,0,test2481029,"public void test2481029() throws Throwable {
    Float[] floatArray0 = new Float[1];
    Float float0 = new Float((double) (-1L));
    floatArray0[0] = float0;
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, (-1611.1229F));
    assertArrayEquals(new float[] { (-1.0F) }, floatArray1, 0.01F);
}",0,
project,0,test2491030,"public void test2491030() throws Throwable {
    Float[] floatArray0 = new Float[1];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, 773.19F);
    assertEquals(1, floatArray0.length);
}",0,
project,0,test2491031,"public void test2491031() throws Throwable {
    Float[] floatArray0 = new Float[1];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, 773.19F);
    assertEquals(1, floatArray1.length);
}",0,
project,0,test2491032,"public void test2491032() throws Throwable {
    Float[] floatArray0 = new Float[1];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, 773.19F);
    assertNotNull(floatArray1);
}",0,
project,0,test2491033,"public void test2491033() throws Throwable {
    Float[] floatArray0 = new Float[1];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, 773.19F);
    assertArrayEquals(new float[] { 773.19F }, floatArray1, 0.01F);
}",0,
project,0,test2501034,"public void test2501034() throws Throwable {
    float[] floatArray0 = ArrayUtils.toPrimitive((Float[]) null, 773.19F);
    assertNull(floatArray0);
}",0,
project,0,test2511035,"public void test2511035() throws Throwable {
    Float[] floatArray0 = new Float[0];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    assertEquals(0, floatArray0.length);
}",0,
project,0,test2511036,"public void test2511036() throws Throwable {
    Float[] floatArray0 = new Float[0];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    assertEquals(0, floatArray1.length);
}",0,
project,0,test2511037,"public void test2511037() throws Throwable {
    Float[] floatArray0 = new Float[0];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    assertNotNull(floatArray1);
}",0,
project,0,test2511038,"public void test2511038() throws Throwable {
    Float[] floatArray0 = new Float[0];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    assertArrayEquals(new float[] {}, floatArray1, 0.01F);
}",0,
project,0,test2521039,"public void test2521039() throws Throwable {
    float[] floatArray0 = ArrayUtils.toPrimitive((Float[]) null);
    assertNull(floatArray0);
}",0,
project,0,test2531040,"public void test2531040() throws Throwable {
    Float[] floatArray0 = new Float[7];
    // Undeclared exception!
    try {
        ArrayUtils.toPrimitive(floatArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test2541041,"public void test2541041() throws Throwable {
    double[] doubleArray0 = new double[0];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    assertEquals(0, doubleArray0.length);
}",0,
project,0,test2541042,"public void test2541042() throws Throwable {
    double[] doubleArray0 = new double[0];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    assertEquals(0, doubleArray1.length);
}",0,
project,0,test2541043,"public void test2541043() throws Throwable {
    double[] doubleArray0 = new double[0];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    assertNotNull(doubleArray1);
}",0,
project,0,test2541044,"public void test2541044() throws Throwable {
    double[] doubleArray0 = new double[0];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    assertArrayEquals(new double[] {}, doubleArray0, 0.01);
}",0,
project,0,test2541047,"public void test2541047() throws Throwable {
    double[] doubleArray0 = new double[0];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    Integer integer0 = new Integer(1);
    Object[] objectArray0 = ArrayUtils.removeElement((Object[]) doubleArray1, (Object) integer0);
    assertEquals(0, doubleArray0.length);
}",0,
project,0,test2541048,"public void test2541048() throws Throwable {
    double[] doubleArray0 = new double[0];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    Integer integer0 = new Integer(1);
    Object[] objectArray0 = ArrayUtils.removeElement((Object[]) doubleArray1, (Object) integer0);
    assertEquals(0, doubleArray1.length);
}",0,
project,0,test2541049,"public void test2541049() throws Throwable {
    double[] doubleArray0 = new double[0];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    Integer integer0 = new Integer(1);
    Object[] objectArray0 = ArrayUtils.removeElement((Object[]) doubleArray1, (Object) integer0);
    assertEquals(0, objectArray0.length);
}",0,
project,0,test2541050,"public void test2541050() throws Throwable {
    double[] doubleArray0 = new double[0];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    Integer integer0 = new Integer(1);
    Object[] objectArray0 = ArrayUtils.removeElement((Object[]) doubleArray1, (Object) integer0);
    assertNotSame(doubleArray1, objectArray0);
}",0,
project,0,test2541051,"public void test2541051() throws Throwable {
    double[] doubleArray0 = new double[0];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    Integer integer0 = new Integer(1);
    Object[] objectArray0 = ArrayUtils.removeElement((Object[]) doubleArray1, (Object) integer0);
    assertNotNull(objectArray0);
}",0,assertNotNull(objectArray0)
project,0,test2541052,"public void test2541052() throws Throwable {
    double[] doubleArray0 = new double[0];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    Integer integer0 = new Integer(1);
    Object[] objectArray0 = ArrayUtils.removeElement((Object[]) doubleArray1, (Object) integer0);
    assertArrayEquals(new double[] {}, doubleArray0, 0.01);
}",0,
project,0,test2551053,"public void test2551053() throws Throwable {
    Double[] doubleArray0 = ArrayUtils.toObject((double[]) null);
    assertNull(doubleArray0);
}",0,
project,0,test2561054,"public void test2561054() throws Throwable {
    double[] doubleArray0 = new double[3];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    assertEquals(3, doubleArray0.length);
}",0,
project,0,test2561055,"public void test2561055() throws Throwable {
    double[] doubleArray0 = new double[3];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    assertEquals(3, doubleArray1.length);
}",0,
project,0,test2561056,"public void test2561056() throws Throwable {
    double[] doubleArray0 = new double[3];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    assertNotNull(doubleArray1);
}",0,
project,0,test2561057,"public void test2561057() throws Throwable {
    double[] doubleArray0 = new double[3];
    Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test2571060,"public void test2571060() throws Throwable {
    Double[] doubleArray0 = new Double[6];
    Double double0 = new Double((-2688));
    doubleArray0[3] = double0;
    double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0, (double) doubleArray0[3]);
    assertEquals(6, doubleArray0.length);
}",0,
project,0,test2571061,"public void test2571061() throws Throwable {
    Double[] doubleArray0 = new Double[6];
    Double double0 = new Double((-2688));
    doubleArray0[3] = double0;
    double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0, (double) doubleArray0[3]);
    assertEquals(6, doubleArray1.length);
}",0,
project,0,test2571062,"public void test2571062() throws Throwable {
    Double[] doubleArray0 = new Double[6];
    Double double0 = new Double((-2688));
    doubleArray0[3] = double0;
    double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0, (double) doubleArray0[3]);
    assertNotNull(doubleArray1);
}",0,
project,0,test2571063,"public void test2571063() throws Throwable {
    Double[] doubleArray0 = new Double[6];
    Double double0 = new Double((-2688));
    doubleArray0[3] = double0;
    double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0, (double) doubleArray0[3]);
    assertArrayEquals(new double[] { (-2688.0), (-2688.0), (-2688.0), (-2688.0), (-2688.0), (-2688.0) }, doubleArray1, 0.01);
}",0,
project,0,test2581064,"public void test2581064() throws Throwable {
    double[] doubleArray0 = ArrayUtils.toPrimitive((Double[]) null, (-170.08209677487));
    assertNull(doubleArray0);
}",0,
project,0,test2591067,"public void test2591067() throws Throwable {
    Double[] doubleArray0 = new Double[6];
    Double double0 = new Double(432.3);
    doubleArray0[0] = double0;
    doubleArray0[1] = double0;
    doubleArray0[2] = double0;
    doubleArray0[3] = doubleArray0[0];
    doubleArray0[4] = doubleArray0[0];
    doubleArray0[5] = doubleArray0[1];
    double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0);
    assertEquals(6, doubleArray0.length);
}",0,
project,0,test2591068,"public void test2591068() throws Throwable {
    Double[] doubleArray0 = new Double[6];
    Double double0 = new Double(432.3);
    doubleArray0[0] = double0;
    doubleArray0[1] = double0;
    doubleArray0[2] = double0;
    doubleArray0[3] = doubleArray0[0];
    doubleArray0[4] = doubleArray0[0];
    doubleArray0[5] = doubleArray0[1];
    double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0);
    assertEquals(6, doubleArray1.length);
}",0,
project,0,test2591069,"public void test2591069() throws Throwable {
    Double[] doubleArray0 = new Double[6];
    Double double0 = new Double(432.3);
    doubleArray0[0] = double0;
    doubleArray0[1] = double0;
    doubleArray0[2] = double0;
    doubleArray0[3] = doubleArray0[0];
    doubleArray0[4] = doubleArray0[0];
    doubleArray0[5] = doubleArray0[1];
    double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0);
    assertNotNull(doubleArray1);
}",0,
project,0,test2591070,"public void test2591070() throws Throwable {
    Double[] doubleArray0 = new Double[6];
    Double double0 = new Double(432.3);
    doubleArray0[0] = double0;
    doubleArray0[1] = double0;
    doubleArray0[2] = double0;
    doubleArray0[3] = doubleArray0[0];
    doubleArray0[4] = doubleArray0[0];
    doubleArray0[5] = doubleArray0[1];
    double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0);
    assertArrayEquals(new double[] { 432.3, 432.3, 432.3, 432.3, 432.3, 432.3 }, doubleArray1, 0.01);
}",0,
project,0,test2601071,"public void test2601071() throws Throwable {
    double[] doubleArray0 = ArrayUtils.toPrimitive((Double[]) null);
    assertNull(doubleArray0);
}",1,
project,0,test2611072,"public void test2611072() throws Throwable {
    Double[] doubleArray0 = new Double[6];
    // Undeclared exception!
    try {
        ArrayUtils.toPrimitive(doubleArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test2621073,"public void test2621073() throws Throwable {
    byte[] byteArray0 = new byte[7];
    Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
    assertEquals(7, byteArray0.length);
}",0,
project,0,test2621074,"public void test2621074() throws Throwable {
    byte[] byteArray0 = new byte[7];
    Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
    assertEquals(7, byteArray1.length);
}",0,
project,0,test2621075,"public void test2621075() throws Throwable {
    byte[] byteArray0 = new byte[7];
    Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
    assertNotNull(byteArray1);
}",0,
project,0,test2621076,"public void test2621076() throws Throwable {
    byte[] byteArray0 = new byte[7];
    Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test2631077,"public void test2631077() throws Throwable {
    Byte[] byteArray0 = ArrayUtils.toObject((byte[]) null);
    assertNull(byteArray0);
}",0,
project,0,test2641078,"public void test2641078() throws Throwable {
    byte[] byteArray0 = new byte[0];
    Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
    assertEquals(0, byteArray0.length);
}",0,
project,0,test2641079,"public void test2641079() throws Throwable {
    byte[] byteArray0 = new byte[0];
    Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
    assertEquals(0, byteArray1.length);
}",0,
project,0,test2641080,"public void test2641080() throws Throwable {
    byte[] byteArray0 = new byte[0];
    Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
    assertNotNull(byteArray1);
}",0,
project,0,test2641081,"public void test2641081() throws Throwable {
    byte[] byteArray0 = new byte[0];
    Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
    assertArrayEquals(new byte[] {}, byteArray0);
}",0,
project,0,test2651085,"public void test2651085() throws Throwable {
    Byte[] byteArray0 = new Byte[1];
    byte byte0 = (byte) (-1);
    Byte byte1 = new Byte((byte) (-1));
    byteArray0[0] = byte1;
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, byte0);
    assertEquals(1, byteArray0.length);
}",0,
project,0,test2651086,"public void test2651086() throws Throwable {
    Byte[] byteArray0 = new Byte[1];
    byte byte0 = (byte) (-1);
    Byte byte1 = new Byte((byte) (-1));
    byteArray0[0] = byte1;
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, byte0);
    assertEquals(1, byteArray1.length);
}",0,
project,0,test2651087,"public void test2651087() throws Throwable {
    Byte[] byteArray0 = new Byte[1];
    byte byte0 = (byte) (-1);
    Byte byte1 = new Byte((byte) (-1));
    byteArray0[0] = byte1;
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, byte0);
    assertNotNull(byteArray1);
}",0,"assertEquals(byte0, byteArray1)"
project,0,test2651088,"public void test2651088() throws Throwable {
    Byte[] byteArray0 = new Byte[1];
    byte byte0 = (byte) (-1);
    Byte byte1 = new Byte((byte) (-1));
    byteArray0[0] = byte1;
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, byte0);
    assertArrayEquals(new byte[] { (byte) (-1) }, byteArray1);
}",0,
project,0,test2661089,"public void test2661089() throws Throwable {
    Byte[] byteArray0 = new Byte[0];
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, (byte) 2);
    assertEquals(0, byteArray0.length);
}",0,
project,0,test2661090,"public void test2661090() throws Throwable {
    Byte[] byteArray0 = new Byte[0];
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, (byte) 2);
    assertEquals(0, byteArray1.length);
}",0,
project,0,test2661091,"public void test2661091() throws Throwable {
    Byte[] byteArray0 = new Byte[0];
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, (byte) 2);
    assertNotNull(byteArray1);
}",0,
project,0,test2661092,"public void test2661092() throws Throwable {
    Byte[] byteArray0 = new Byte[0];
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, (byte) 2);
    assertArrayEquals(new byte[] {}, byteArray1);
}",0,
project,0,test2671093,"public void test2671093() throws Throwable {
    byte[] byteArray0 = ArrayUtils.toPrimitive((Byte[]) null, (byte) (-101));
    assertNull(byteArray0);
}",0,
project,0,test2681096,"public void test2681096() throws Throwable {
    Byte[] byteArray0 = new Byte[6];
    Byte byte0 = new Byte((byte) (-16));
    byteArray0[0] = byte0;
    byteArray0[1] = byte0;
    byteArray0[2] = byteArray0[0];
    byteArray0[3] = byteArray0[1];
    byteArray0[4] = byteArray0[1];
    byteArray0[5] = byteArray0[1];
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0);
    assertEquals(6, byteArray0.length);
}",0,
project,0,test2681097,"public void test2681097() throws Throwable {
    Byte[] byteArray0 = new Byte[6];
    Byte byte0 = new Byte((byte) (-16));
    byteArray0[0] = byte0;
    byteArray0[1] = byte0;
    byteArray0[2] = byteArray0[0];
    byteArray0[3] = byteArray0[1];
    byteArray0[4] = byteArray0[1];
    byteArray0[5] = byteArray0[1];
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0);
    assertEquals(6, byteArray1.length);
}",0,
project,0,test2681098,"public void test2681098() throws Throwable {
    Byte[] byteArray0 = new Byte[6];
    Byte byte0 = new Byte((byte) (-16));
    byteArray0[0] = byte0;
    byteArray0[1] = byte0;
    byteArray0[2] = byteArray0[0];
    byteArray0[3] = byteArray0[1];
    byteArray0[4] = byteArray0[1];
    byteArray0[5] = byteArray0[1];
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0);
    assertNotNull(byteArray1);
}",0,
project,0,test2681099,"public void test2681099() throws Throwable {
    Byte[] byteArray0 = new Byte[6];
    Byte byte0 = new Byte((byte) (-16));
    byteArray0[0] = byte0;
    byteArray0[1] = byte0;
    byteArray0[2] = byteArray0[0];
    byteArray0[3] = byteArray0[1];
    byteArray0[4] = byteArray0[1];
    byteArray0[5] = byteArray0[1];
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0);
    assertArrayEquals(new byte[] { (byte) (-16), (byte) (-16), (byte) (-16), (byte) (-16), (byte) (-16), (byte) (-16) }, byteArray1);
}",0,
project,0,test2691100,"public void test2691100() throws Throwable {
    Byte[] byteArray0 = new Byte[0];
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0);
    assertEquals(0, byteArray0.length);
}",1,
project,0,test2691101,"public void test2691101() throws Throwable {
    Byte[] byteArray0 = new Byte[0];
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0);
    assertEquals(0, byteArray1.length);
}",1,
project,0,test2691102,"public void test2691102() throws Throwable {
    Byte[] byteArray0 = new Byte[0];
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0);
    assertNotNull(byteArray1);
}",1,
project,0,test2691103,"public void test2691103() throws Throwable {
    Byte[] byteArray0 = new Byte[0];
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0);
    assertArrayEquals(new byte[] {}, byteArray1);
}",1,
project,0,test2701104,"public void test2701104() throws Throwable {
    byte[] byteArray0 = ArrayUtils.toPrimitive((Byte[]) null);
    assertNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test2711105,"public void test2711105() throws Throwable {
    Byte[] byteArray0 = new Byte[18];
    // Undeclared exception!
    try {
        ArrayUtils.toPrimitive(byteArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",1,
project,0,test2721106,"public void test2721106() throws Throwable {
    Short[] shortArray0 = ArrayUtils.toObject((short[]) null);
    assertNull(shortArray0);
}",1,
project,0,test2731107,"public void test2731107() throws Throwable {
    short[] shortArray0 = new short[4];
    Short[] shortArray1 = ArrayUtils.toObject(shortArray0);
    assertEquals(4, shortArray0.length);
}",0,
project,0,test2731108,"public void test2731108() throws Throwable {
    short[] shortArray0 = new short[4];
    Short[] shortArray1 = ArrayUtils.toObject(shortArray0);
    assertEquals(4, shortArray1.length);
}",0,
project,0,test2731109,"public void test2731109() throws Throwable {
    short[] shortArray0 = new short[4];
    Short[] shortArray1 = ArrayUtils.toObject(shortArray0);
    assertNotNull(shortArray1);
}",0,
project,0,test2731110,"public void test2731110() throws Throwable {
    short[] shortArray0 = new short[4];
    Short[] shortArray1 = ArrayUtils.toObject(shortArray0);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test2741111,"public void test2741111() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    shortArray1[0] = (Short) shortArray0[0];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    assertEquals(5, shortArray1.length);
}",0,
project,0,test2741112,"public void test2741112() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    shortArray1[0] = (Short) shortArray0[0];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    assertEquals(5, shortArray2.length);
}",0,
project,0,test2741113,"public void test2741113() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    shortArray1[0] = (Short) shortArray0[0];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    assertNotSame(shortArray2, shortArray0);
}",0,
project,0,test2741114,"public void test2741114() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    shortArray1[0] = (Short) shortArray0[0];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    assertNotNull(shortArray2);
}",0,"assertEquals(shortArray0, shortArray2)"
project,0,test2741116,"public void test2741116() throws Throwable {
    short[] shortArray0 = new short[3];
    Short[] shortArray1 = new Short[5];
    shortArray1[0] = (Short) shortArray0[0];
    short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray2);
}",0,
project,0,test2751117,"public void test2751117() throws Throwable {
    short[] shortArray0 = ArrayUtils.toPrimitive((Short[]) null, (short) 1137);
    assertNull(shortArray0);
}",0,
project,0,test2761118,"public void test2761118() throws Throwable {
    Short[] shortArray0 = new Short[7];
    shortArray0[0] = (Short) (short) 524;
    shortArray0[1] = (Short) (short) 2;
    shortArray0[2] = (Short) (short) 524;
    shortArray0[3] = (Short) (short) 524;
    shortArray0[4] = (Short) (short) 2;
    shortArray0[5] = (Short) (short) 4027;
    shortArray0[6] = (Short) (short) 2;
    short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
    assertEquals(7, shortArray0.length);
}",0,
project,0,test2761119,"public void test2761119() throws Throwable {
    Short[] shortArray0 = new Short[7];
    shortArray0[0] = (Short) (short) 524;
    shortArray0[1] = (Short) (short) 2;
    shortArray0[2] = (Short) (short) 524;
    shortArray0[3] = (Short) (short) 524;
    shortArray0[4] = (Short) (short) 2;
    shortArray0[5] = (Short) (short) 4027;
    shortArray0[6] = (Short) (short) 2;
    short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
    assertEquals(7, shortArray1.length);
}",0,
project,0,test2761120,"public void test2761120() throws Throwable {
    Short[] shortArray0 = new Short[7];
    shortArray0[0] = (Short) (short) 524;
    shortArray0[1] = (Short) (short) 2;
    shortArray0[2] = (Short) (short) 524;
    shortArray0[3] = (Short) (short) 524;
    shortArray0[4] = (Short) (short) 2;
    shortArray0[5] = (Short) (short) 4027;
    shortArray0[6] = (Short) (short) 2;
    short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
    assertNotNull(shortArray1);
}",0,
project,0,test2761121,"public void test2761121() throws Throwable {
    Short[] shortArray0 = new Short[7];
    shortArray0[0] = (Short) (short) 524;
    shortArray0[1] = (Short) (short) 2;
    shortArray0[2] = (Short) (short) 524;
    shortArray0[3] = (Short) (short) 524;
    shortArray0[4] = (Short) (short) 2;
    shortArray0[5] = (Short) (short) 4027;
    shortArray0[6] = (Short) (short) 2;
    short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
    assertArrayEquals(new short[] { (short) 524, (short) 2, (short) 524, (short) 524, (short) 2, (short) 4027, (short) 2 }, shortArray1);
}",0,
project,0,test2771122,"public void test2771122() throws Throwable {
    Short[] shortArray0 = new Short[0];
    short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
    assertEquals(0, shortArray0.length);
}",0,
project,0,test2771123,"public void test2771123() throws Throwable {
    Short[] shortArray0 = new Short[0];
    short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
    assertEquals(0, shortArray1.length);
}",0,
project,0,test2771124,"public void test2771124() throws Throwable {
    Short[] shortArray0 = new Short[0];
    short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
    assertNotNull(shortArray1);
}",0,assertNotNull(shortArray1)
project,0,test2771125,"public void test2771125() throws Throwable {
    Short[] shortArray0 = new Short[0];
    short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
    assertArrayEquals(new short[] {}, shortArray1);
}",0,
project,0,test2781126,"public void test2781126() throws Throwable {
    short[] shortArray0 = ArrayUtils.toPrimitive((Short[]) null);
    assertNull(shortArray0);
}",0,assertNotNull(shortArray0)
project,0,test2791127,"public void test2791127() throws Throwable {
    Short[] shortArray0 = new Short[7];
    // Undeclared exception!
    try {
        ArrayUtils.toPrimitive(shortArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test2801128,"public void test2801128() throws Throwable {
    Integer[] integerArray0 = ArrayUtils.toObject((int[]) null);
    assertNull(integerArray0);
}",0,
project,0,test2811129,"public void test2811129() throws Throwable {
    int[] intArray0 = new int[5];
    Integer[] integerArray0 = ArrayUtils.toObject(intArray0);
    assertEquals(5, intArray0.length);
}",0,
project,0,test2811130,"public void test2811130() throws Throwable {
    int[] intArray0 = new int[5];
    Integer[] integerArray0 = ArrayUtils.toObject(intArray0);
    assertEquals(5, integerArray0.length);
}",0,
project,0,test2811131,"public void test2811131() throws Throwable {
    int[] intArray0 = new int[5];
    Integer[] integerArray0 = ArrayUtils.toObject(intArray0);
    assertNotNull(integerArray0);
}",0,
project,0,test2811132,"public void test2811132() throws Throwable {
    int[] intArray0 = new int[5];
    Integer[] integerArray0 = ArrayUtils.toObject(intArray0);
    assertArrayEquals(new int[] { 0, 0, 0, 0, 0 }, intArray0);
}",0,
project,0,test2821133,"public void test2821133() throws Throwable {
    double[] doubleArray0 = new double[3];
    int int0 = ArrayUtils.indexOf(doubleArray0, (-16.343852347137574));
    assertEquals(3, doubleArray0.length);
}",0,
project,0,test2821134,"public void test2821134() throws Throwable {
    double[] doubleArray0 = new double[3];
    int int0 = ArrayUtils.indexOf(doubleArray0, (-16.343852347137574));
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test2821135,"public void test2821135() throws Throwable {
    double[] doubleArray0 = new double[3];
    int int0 = ArrayUtils.indexOf(doubleArray0, (-16.343852347137574));
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test2821139,"public void test2821139() throws Throwable {
    double[] doubleArray0 = new double[3];
    int int0 = ArrayUtils.indexOf(doubleArray0, (-16.343852347137574));
    Integer[] integerArray0 = new Integer[8];
    Integer integer0 = new Integer((-3575));
    integerArray0[0] = integer0;
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, int0);
    assertEquals(3, doubleArray0.length);
}",0,
project,0,test2821140,"public void test2821140() throws Throwable {
    double[] doubleArray0 = new double[3];
    int int0 = ArrayUtils.indexOf(doubleArray0, (-16.343852347137574));
    Integer[] integerArray0 = new Integer[8];
    Integer integer0 = new Integer((-3575));
    integerArray0[0] = integer0;
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, int0);
    assertEquals(8, integerArray0.length);
}",0,
project,0,test2821141,"public void test2821141() throws Throwable {
    double[] doubleArray0 = new double[3];
    int int0 = ArrayUtils.indexOf(doubleArray0, (-16.343852347137574));
    Integer[] integerArray0 = new Integer[8];
    Integer integer0 = new Integer((-3575));
    integerArray0[0] = integer0;
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, int0);
    assertEquals(8, intArray0.length);
}",0,
project,0,test2821142,"public void test2821142() throws Throwable {
    double[] doubleArray0 = new double[3];
    int int0 = ArrayUtils.indexOf(doubleArray0, (-16.343852347137574));
    Integer[] integerArray0 = new Integer[8];
    Integer integer0 = new Integer((-3575));
    integerArray0[0] = integer0;
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, int0);
    assertNotNull(intArray0);
}",0,"assertEquals(1, intArray0)"
project,0,test2821143,"public void test2821143() throws Throwable {
    double[] doubleArray0 = new double[3];
    int int0 = ArrayUtils.indexOf(doubleArray0, (-16.343852347137574));
    Integer[] integerArray0 = new Integer[8];
    Integer integer0 = new Integer((-3575));
    integerArray0[0] = integer0;
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, int0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test2821144,"public void test2821144() throws Throwable {
    double[] doubleArray0 = new double[3];
    int int0 = ArrayUtils.indexOf(doubleArray0, (-16.343852347137574));
    Integer[] integerArray0 = new Integer[8];
    Integer integer0 = new Integer((-3575));
    integerArray0[0] = integer0;
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, int0);
    assertArrayEquals(new int[] { (-3575), (-1), (-1), (-1), (-1), (-1), (-1), (-1) }, intArray0);
}",0,
project,0,test2831145,"public void test2831145() throws Throwable {
    Integer[] integerArray0 = new Integer[0];
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, (-2398));
    assertEquals(0, integerArray0.length);
}",0,
project,0,test2831146,"public void test2831146() throws Throwable {
    Integer[] integerArray0 = new Integer[0];
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, (-2398));
    assertEquals(0, intArray0.length);
}",0,
project,0,test2831147,"public void test2831147() throws Throwable {
    Integer[] integerArray0 = new Integer[0];
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, (-2398));
    assertNotNull(intArray0);
}",0,"assertEquals(1, intArray0)"
project,0,test2831148,"public void test2831148() throws Throwable {
    Integer[] integerArray0 = new Integer[0];
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, (-2398));
    assertArrayEquals(new int[] {}, intArray0);
}",0,
project,0,test2841149,"public void test2841149() throws Throwable {
    int[] intArray0 = ArrayUtils.toPrimitive((Integer[]) null, 0);
    assertNull(intArray0);
}",0,"assertEquals(0, intArray0)"
project,0,test2851150,"public void test2851150() throws Throwable {
    Integer[] integerArray0 = new Integer[6];
    // Undeclared exception!
    try {
        ArrayUtils.toPrimitive(integerArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test2861151,"public void test2861151() throws Throwable {
    int[] intArray0 = ArrayUtils.toPrimitive((Integer[]) null);
    assertNull(intArray0);
}",0,"assertEquals(1, intArray0)"
project,0,test2871152,"public void test2871152() throws Throwable {
    Integer[] integerArray0 = new Integer[0];
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0);
    assertEquals(0, integerArray0.length);
}",0,
project,0,test2871153,"public void test2871153() throws Throwable {
    Integer[] integerArray0 = new Integer[0];
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0);
    assertEquals(0, intArray0.length);
}",0,
project,0,test2871154,"public void test2871154() throws Throwable {
    Integer[] integerArray0 = new Integer[0];
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0);
    assertNotNull(intArray0);
}",0,
project,0,test2871155,"public void test2871155() throws Throwable {
    Integer[] integerArray0 = new Integer[0];
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0);
    assertArrayEquals(new int[] {}, intArray0);
}",0,
project,0,test2881156,"public void test2881156() throws Throwable {
    Long[] longArray0 = ArrayUtils.toObject((long[]) null);
    assertNull(longArray0);
}",0,
project,0,test2891157,"public void test2891157() throws Throwable {
    Long[] longArray0 = new Long[9];
    longArray0[0] = (Long) 0L;
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0, 411L);
    assertEquals(9, longArray0.length);
}",0,
project,0,test2891158,"public void test2891158() throws Throwable {
    Long[] longArray0 = new Long[9];
    longArray0[0] = (Long) 0L;
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0, 411L);
    assertEquals(9, longArray1.length);
}",0,
project,0,test2891159,"public void test2891159() throws Throwable {
    Long[] longArray0 = new Long[9];
    longArray0[0] = (Long) 0L;
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0, 411L);
    assertNotNull(longArray1);
}",0,
project,0,test2891160,"public void test2891160() throws Throwable {
    Long[] longArray0 = new Long[9];
    longArray0[0] = (Long) 0L;
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0, 411L);
    assertArrayEquals(new long[] { 0L, 411L, 411L, 411L, 411L, 411L, 411L, 411L, 411L }, longArray1);
}",0,
project,0,test2901161,"public void test2901161() throws Throwable {
    long[] longArray0 = ArrayUtils.toPrimitive((Long[]) null, (-3214L));
    assertNull(longArray0);
}",0,
project,0,test2911162,"public void test2911162() throws Throwable {
    Long[] longArray0 = new Long[0];
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0, 3609L);
    assertEquals(0, longArray0.length);
}",0,
project,0,test2911163,"public void test2911163() throws Throwable {
    Long[] longArray0 = new Long[0];
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0, 3609L);
    assertEquals(0, longArray1.length);
}",0,
project,0,test2911164,"public void test2911164() throws Throwable {
    Long[] longArray0 = new Long[0];
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0, 3609L);
    assertNotNull(longArray1);
}",0,
project,0,test2911165,"public void test2911165() throws Throwable {
    Long[] longArray0 = new Long[0];
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0, 3609L);
    assertArrayEquals(new long[] {}, longArray1);
}",0,
project,0,test2921168,"public void test2921168() throws Throwable {
    Long[] longArray0 = new Long[4];
    Long long0 = new Long(0);
    longArray0[0] = long0;
    longArray0[1] = longArray0[0];
    longArray0[2] = long0;
    longArray0[3] = long0;
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    assertEquals(4, longArray0.length);
}",0,
project,0,test2921169,"public void test2921169() throws Throwable {
    Long[] longArray0 = new Long[4];
    Long long0 = new Long(0);
    longArray0[0] = long0;
    longArray0[1] = longArray0[0];
    longArray0[2] = long0;
    longArray0[3] = long0;
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    assertEquals(4, longArray1.length);
}",0,
project,0,test2921170,"public void test2921170() throws Throwable {
    Long[] longArray0 = new Long[4];
    Long long0 = new Long(0);
    longArray0[0] = long0;
    longArray0[1] = longArray0[0];
    longArray0[2] = long0;
    longArray0[3] = long0;
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    assertNotNull(longArray1);
}",0,
project,0,test2921171,"public void test2921171() throws Throwable {
    Long[] longArray0 = new Long[4];
    Long long0 = new Long(0);
    longArray0[0] = long0;
    longArray0[1] = longArray0[0];
    longArray0[2] = long0;
    longArray0[3] = long0;
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    assertArrayEquals(new long[] { 0L, 0L, 0L, 0L }, longArray1);
}",0,
project,0,test2931172,"public void test2931172() throws Throwable {
    Long[] longArray0 = new Long[5];
    // Undeclared exception!
    try {
        ArrayUtils.toPrimitive(longArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test2941173,"public void test2941173() throws Throwable {
    long[] longArray0 = ArrayUtils.toPrimitive((Long[]) null);
    assertNull(longArray0);
}",0,assertNotNull(longArray0)
project,0,test2951174,"public void test2951174() throws Throwable {
    Long[] longArray0 = new Long[0];
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    assertEquals(0, longArray0.length);
}",0,
project,0,test2951175,"public void test2951175() throws Throwable {
    Long[] longArray0 = new Long[0];
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    assertEquals(0, longArray1.length);
}",0,
project,0,test2951176,"public void test2951176() throws Throwable {
    Long[] longArray0 = new Long[0];
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    assertNotNull(longArray1);
}",0,assertNotNull(longArray1)
project,0,test2951177,"public void test2951177() throws Throwable {
    Long[] longArray0 = new Long[0];
    long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    assertArrayEquals(new long[] {}, longArray1);
}",0,
project,0,test2961178,"public void test2961178() throws Throwable {
    char[] charArray0 = new char[0];
    Character[] characterArray0 = ArrayUtils.toObject(charArray0);
    assertEquals(0, charArray0.length);
}",0,
project,0,test2961179,"public void test2961179() throws Throwable {
    char[] charArray0 = new char[0];
    Character[] characterArray0 = ArrayUtils.toObject(charArray0);
    assertEquals(0, characterArray0.length);
}",0,
project,0,test2961180,"public void test2961180() throws Throwable {
    char[] charArray0 = new char[0];
    Character[] characterArray0 = ArrayUtils.toObject(charArray0);
    assertNotNull(characterArray0);
}",0,
project,0,test2961181,"public void test2961181() throws Throwable {
    char[] charArray0 = new char[0];
    Character[] characterArray0 = ArrayUtils.toObject(charArray0);
    assertArrayEquals(new char[] {}, charArray0);
}",0,
project,0,test2971182,"public void test2971182() throws Throwable {
    Character[] characterArray0 = ArrayUtils.toObject((char[]) null);
    assertNull(characterArray0);
}",0,
project,0,test2981183,"public void test2981183() throws Throwable {
    char[] charArray0 = new char[4];
    Character[] characterArray0 = ArrayUtils.toObject(charArray0);
    assertEquals(4, charArray0.length);
}",0,
project,0,test2981184,"public void test2981184() throws Throwable {
    char[] charArray0 = new char[4];
    Character[] characterArray0 = ArrayUtils.toObject(charArray0);
    assertEquals(4, characterArray0.length);
}",0,
project,0,test2981185,"public void test2981185() throws Throwable {
    char[] charArray0 = new char[4];
    Character[] characterArray0 = ArrayUtils.toObject(charArray0);
    assertNotNull(characterArray0);
}",0,
project,0,test2981186,"public void test2981186() throws Throwable {
    char[] charArray0 = new char[4];
    Character[] characterArray0 = ArrayUtils.toObject(charArray0);
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test2991187,"public void test2991187() throws Throwable {
    char[] charArray0 = ArrayUtils.toPrimitive((Character[]) null, '(');
    assertNull(charArray0);
}",0,
project,0,test3001190,"public void test3001190() throws Throwable {
    Character[] characterArray0 = new Character[6];
    Character character0 = new Character('+');
    characterArray0[3] = character0;
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0, (char) characterArray0[3]);
    assertEquals(6, characterArray0.length);
}",1,
project,0,test3001191,"public void test3001191() throws Throwable {
    Character[] characterArray0 = new Character[6];
    Character character0 = new Character('+');
    characterArray0[3] = character0;
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0, (char) characterArray0[3]);
    assertEquals(6, charArray0.length);
}",1,
project,0,test3001192,"public void test3001192() throws Throwable {
    Character[] characterArray0 = new Character[6];
    Character character0 = new Character('+');
    characterArray0[3] = character0;
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0, (char) characterArray0[3]);
    assertNotNull(charArray0);
}",1,
project,0,test3001193,"public void test3001193() throws Throwable {
    Character[] characterArray0 = new Character[6];
    Character character0 = new Character('+');
    characterArray0[3] = character0;
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0, (char) characterArray0[3]);
    assertArrayEquals(new char[] { '+', '+', '+', '+', '+', '+' }, charArray0);
}",1,
project,0,test3011196,"public void test3011196() throws Throwable {
    Character[] characterArray0 = new Character[1];
    Character character0 = new Character('X');
    characterArray0[0] = character0;
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    assertEquals(1, characterArray0.length);
}",0,
project,0,test3011197,"public void test3011197() throws Throwable {
    Character[] characterArray0 = new Character[1];
    Character character0 = new Character('X');
    characterArray0[0] = character0;
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    assertEquals(1, charArray0.length);
}",0,
project,0,test3011198,"public void test3011198() throws Throwable {
    Character[] characterArray0 = new Character[1];
    Character character0 = new Character('X');
    characterArray0[0] = character0;
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    assertNotNull(charArray0);
}",0,
project,0,test3011199,"public void test3011199() throws Throwable {
    Character[] characterArray0 = new Character[1];
    Character character0 = new Character('X');
    characterArray0[0] = character0;
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    assertArrayEquals(new char[] { 'X' }, charArray0);
}",0,
project,0,test3021200,"public void test3021200() throws Throwable {
    Character[] characterArray0 = new Character[0];
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    assertEquals(0, characterArray0.length);
}",1,
project,0,test3021201,"public void test3021201() throws Throwable {
    Character[] characterArray0 = new Character[0];
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    assertEquals(0, charArray0.length);
}",1,
project,0,test3021202,"public void test3021202() throws Throwable {
    Character[] characterArray0 = new Character[0];
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    assertNotNull(charArray0);
}",1,
project,0,test3021203,"public void test3021203() throws Throwable {
    Character[] characterArray0 = new Character[0];
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    assertArrayEquals(new char[] {}, charArray0);
}",1,
project,0,test3021204,"public void test3021204() throws Throwable {
    Character[] characterArray0 = new Character[0];
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    assertEquals(0, characterArray0.length);
}",0,
project,0,test3021205,"public void test3021205() throws Throwable {
    Character[] characterArray0 = new Character[0];
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    assertEquals(0, charArray0.length);
}",0,
project,0,test3021206,"public void test3021206() throws Throwable {
    Character[] characterArray0 = new Character[0];
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    assertEquals(0, charArray1.length);
}",0,
project,0,test3021207,"public void test3021207() throws Throwable {
    Character[] characterArray0 = new Character[0];
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    assertNotSame(charArray0, charArray1);
}",0,
project,0,test3021208,"public void test3021208() throws Throwable {
    Character[] characterArray0 = new Character[0];
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    assertNotSame(charArray1, charArray0);
}",0,
project,0,test3021209,"public void test3021209() throws Throwable {
    Character[] characterArray0 = new Character[0];
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    assertNotNull(charArray1);
}",0,
project,0,test3021211,"public void test3021211() throws Throwable {
    Character[] characterArray0 = new Character[0];
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    assertArrayEquals(new char[] {}, charArray0);
}",0,
project,0,test3021212,"public void test3021212() throws Throwable {
    Character[] characterArray0 = new Character[0];
    char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    assertArrayEquals(new char[] {}, charArray1);
}",0,
project,0,test3031213,"public void test3031213() throws Throwable {
    Character[] characterArray0 = new Character[4];
    // Undeclared exception!
    try {
        ArrayUtils.toPrimitive(characterArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",1,
project,0,test3041214,"public void test3041214() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean boolean0 = ArrayUtils.contains(booleanArray0, false);
    assertEquals(0, booleanArray0.length);
}",1,
project,0,test3041215,"public void test3041215() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean boolean0 = ArrayUtils.contains(booleanArray0, false);
    assertFalse(boolean0);
}",1,
project,0,test3051217,"public void test3051217() throws Throwable {
    boolean[] booleanArray0 = new boolean[9];
    booleanArray0[1] = true;
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, true);
    assertEquals(9, booleanArray0.length);
}",0,
project,0,test3051218,"public void test3051218() throws Throwable {
    boolean[] booleanArray0 = new boolean[9];
    booleanArray0[1] = true;
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, true);
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test3061220,"public void test3061220() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, (-1976));
    assertEquals(1, booleanArray0.length);
}",0,
project,0,test3061221,"public void test3061221() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, (-1976));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3071223,"public void test3071223() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((boolean[]) null, false, (-921));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3081224,"public void test3081224() throws Throwable {
    float[] floatArray0 = new float[7];
    floatArray0[5] = (float) (-1);
    boolean boolean0 = ArrayUtils.contains(floatArray0, (float) (byte) (-1));
    assertEquals(7, floatArray0.length);
}",1,
project,0,test3081225,"public void test3081225() throws Throwable {
    float[] floatArray0 = new float[7];
    floatArray0[5] = (float) (-1);
    boolean boolean0 = ArrayUtils.contains(floatArray0, (float) (byte) (-1));
    assertTrue(boolean0);
}",1,
project,0,test3081226,"public void test3081226() throws Throwable {
    float[] floatArray0 = new float[7];
    floatArray0[5] = (float) (-1);
    boolean boolean0 = ArrayUtils.contains(floatArray0, (float) (byte) (-1));
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, (-1.0F), 0.0F }, floatArray0, 0.01F);
}",1,
project,0,test3091227,"public void test3091227() throws Throwable {
    float[] floatArray0 = new float[9];
    floatArray0[1] = (-2418.9207F);
    int int0 = ArrayUtils.lastIndexOf(floatArray0, (-2418.9207F), 1431655765);
    assertEquals(9, floatArray0.length);
}",0,
project,0,test3091228,"public void test3091228() throws Throwable {
    float[] floatArray0 = new float[9];
    floatArray0[1] = (-2418.9207F);
    int int0 = ArrayUtils.lastIndexOf(floatArray0, (-2418.9207F), 1431655765);
    assertEquals(1, int0);
}",0,
project,0,test3091229,"public void test3091229() throws Throwable {
    float[] floatArray0 = new float[9];
    floatArray0[1] = (-2418.9207F);
    int int0 = ArrayUtils.lastIndexOf(floatArray0, (-2418.9207F), 1431655765);
    assertArrayEquals(new float[] { 0.0F, (-2418.9207F), 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test3101230,"public void test3101230() throws Throwable {
    float[] floatArray0 = new float[2];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, 2016.2957F, 0);
    assertEquals(2, floatArray0.length);
}",0,
project,0,test3101231,"public void test3101231() throws Throwable {
    float[] floatArray0 = new float[2];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, 2016.2957F, 0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3101232,"public void test3101232() throws Throwable {
    float[] floatArray0 = new float[2];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, 2016.2957F, 0);
    assertArrayEquals(new float[] { 0.0F, 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test3111233,"public void test3111233() throws Throwable {
    float[] floatArray0 = new float[9];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, 3137.0F, (-3040));
    assertEquals(9, floatArray0.length);
}",0,
project,0,test3111234,"public void test3111234() throws Throwable {
    float[] floatArray0 = new float[9];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, 3137.0F, (-3040));
    assertEquals((-1), int0);
}",0,
project,0,test3111235,"public void test3111235() throws Throwable {
    float[] floatArray0 = new float[9];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, 3137.0F, (-3040));
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test3121236,"public void test3121236() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((float[]) null, (float) (-1), (-1));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3131237,"public void test3131237() throws Throwable {
    float[] floatArray0 = new float[1];
    floatArray0[0] = (-860.273F);
    int int0 = ArrayUtils.indexOf(floatArray0, (-860.273F));
    assertEquals(1, floatArray0.length);
}",0,
project,0,test3131238,"public void test3131238() throws Throwable {
    float[] floatArray0 = new float[1];
    floatArray0[0] = (-860.273F);
    int int0 = ArrayUtils.indexOf(floatArray0, (-860.273F));
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test3131239,"public void test3131239() throws Throwable {
    float[] floatArray0 = new float[1];
    floatArray0[0] = (-860.273F);
    int int0 = ArrayUtils.indexOf(floatArray0, (-860.273F));
    assertArrayEquals(new float[] { (-860.273F) }, floatArray0, 0.01F);
}",0,
project,0,test3141240,"public void test3141240() throws Throwable {
    float[] floatArray0 = new float[9];
    int int0 = ArrayUtils.indexOf(floatArray0, (-1527.7157F), (-171));
    assertEquals(9, floatArray0.length);
}",0,
project,0,test3141241,"public void test3141241() throws Throwable {
    float[] floatArray0 = new float[9];
    int int0 = ArrayUtils.indexOf(floatArray0, (-1527.7157F), (-171));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3141242,"public void test3141242() throws Throwable {
    float[] floatArray0 = new float[9];
    int int0 = ArrayUtils.indexOf(floatArray0, (-1527.7157F), (-171));
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test3151243,"public void test3151243() throws Throwable {
    float[] floatArray0 = new float[0];
    int int0 = ArrayUtils.indexOf(floatArray0, (float) Integer.MAX_VALUE, 0);
    assertEquals(0, floatArray0.length);
}",0,
project,0,test3151244,"public void test3151244() throws Throwable {
    float[] floatArray0 = new float[0];
    int int0 = ArrayUtils.indexOf(floatArray0, (float) Integer.MAX_VALUE, 0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3151245,"public void test3151245() throws Throwable {
    float[] floatArray0 = new float[0];
    int int0 = ArrayUtils.indexOf(floatArray0, (float) Integer.MAX_VALUE, 0);
    assertArrayEquals(new float[] {}, floatArray0, 0.01F);
}",0,
project,0,test3161246,"public void test3161246() throws Throwable {
    double[] doubleArray0 = new double[6];
    boolean boolean0 = ArrayUtils.contains(doubleArray0, 852.61459120328, 2918.5301702262213);
    assertEquals(6, doubleArray0.length);
}",0,
project,0,test3161247,"public void test3161247() throws Throwable {
    double[] doubleArray0 = new double[6];
    boolean boolean0 = ArrayUtils.contains(doubleArray0, 852.61459120328, 2918.5301702262213);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3161248,"public void test3161248() throws Throwable {
    double[] doubleArray0 = new double[6];
    boolean boolean0 = ArrayUtils.contains(doubleArray0, 852.61459120328, 2918.5301702262213);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test3171249,"public void test3171249() throws Throwable {
    double[] doubleArray0 = new double[7];
    doubleArray0[6] = (double) 1;
    boolean boolean0 = ArrayUtils.contains(doubleArray0, (double) (short) 1);
    assertEquals(7, doubleArray0.length);
}",0,
project,0,test3171250,"public void test3171250() throws Throwable {
    double[] doubleArray0 = new double[7];
    doubleArray0[6] = (double) 1;
    boolean boolean0 = ArrayUtils.contains(doubleArray0, (double) (short) 1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3171251,"public void test3171251() throws Throwable {
    double[] doubleArray0 = new double[7];
    doubleArray0[6] = (double) 1;
    boolean boolean0 = ArrayUtils.contains(doubleArray0, (double) (short) 1);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 }, doubleArray0, 0.01);
}",0,
project,0,test3181252,"public void test3181252() throws Throwable {
    double[] doubleArray0 = new double[5];
    boolean boolean0 = ArrayUtils.contains(doubleArray0, (-1508.771535));
    assertEquals(5, doubleArray0.length);
}",0,
project,0,test3181253,"public void test3181253() throws Throwable {
    double[] doubleArray0 = new double[5];
    boolean boolean0 = ArrayUtils.contains(doubleArray0, (-1508.771535));
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3181254,"public void test3181254() throws Throwable {
    double[] doubleArray0 = new double[5];
    boolean boolean0 = ArrayUtils.contains(doubleArray0, (-1508.771535));
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test3191255,"public void test3191255() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[5] = 6485.40117429313;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 1747.7, 7009, (-467.02517183));
    assertEquals(6, doubleArray0.length);
}",0,
project,0,test3191256,"public void test3191256() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[5] = 6485.40117429313;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 1747.7, 7009, (-467.02517183));
    assertEquals((-1), int0);
}",0,
project,0,test3191257,"public void test3191257() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[5] = 6485.40117429313;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 1747.7, 7009, (-467.02517183));
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 6485.40117429313 }, doubleArray0, 0.01);
}",0,
project,0,test3201258,"public void test3201258() throws Throwable {
    double[] doubleArray0 = new double[8];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2900.31171079269, (-2481), (-1466.0));
    assertEquals(8, doubleArray0.length);
}",0,
project,0,test3201259,"public void test3201259() throws Throwable {
    double[] doubleArray0 = new double[8];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2900.31171079269, (-2481), (-1466.0));
    assertEquals((-1), int0);
}",0,
project,0,test3201260,"public void test3201260() throws Throwable {
    double[] doubleArray0 = new double[8];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2900.31171079269, (-2481), (-1466.0));
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test3211264,"public void test3211264() throws Throwable {
    double[] doubleArray0 = ArrayUtils.EMPTY_DOUBLE_ARRAY;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-449.04364), 2169, 2763.752662583577);
    assertEquals(0, doubleArray0.length);
}",0,
project,0,test3211265,"public void test3211265() throws Throwable {
    double[] doubleArray0 = ArrayUtils.EMPTY_DOUBLE_ARRAY;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-449.04364), 2169, 2763.752662583577);
    assertEquals((-1), int0);
}",0,
project,0,test3211266,"public void test3211266() throws Throwable {
    double[] doubleArray0 = ArrayUtils.EMPTY_DOUBLE_ARRAY;
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-449.04364), 2169, 2763.752662583577);
    assertArrayEquals(new double[] {}, doubleArray0, 0.01);
}",0,
project,0,test3221267,"public void test3221267() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = (-1.0);
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1.0));
    assertEquals(2, doubleArray0.length);
}",0,
project,0,test3221268,"public void test3221268() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = (-1.0);
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1.0));
    assertEquals(0, int0);
}",0,
project,0,test3221269,"public void test3221269() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = (-1.0);
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1.0));
    assertArrayEquals(new double[] { (-1.0), 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test3231270,"public void test3231270() throws Throwable {
    double[] doubleArray0 = new double[8];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2185.793, (-1));
    assertEquals(8, doubleArray0.length);
}",0,
project,0,test3231271,"public void test3231271() throws Throwable {
    double[] doubleArray0 = new double[8];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2185.793, (-1));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3231272,"public void test3231272() throws Throwable {
    double[] doubleArray0 = new double[8];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2185.793, (-1));
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test3241273,"public void test3241273() throws Throwable {
    double[] doubleArray0 = new double[0];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-532.94708536686), 2507);
    assertEquals(0, doubleArray0.length);
}",0,
project,0,test3241274,"public void test3241274() throws Throwable {
    double[] doubleArray0 = new double[0];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-532.94708536686), 2507);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test3241275,"public void test3241275() throws Throwable {
    double[] doubleArray0 = new double[0];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-532.94708536686), 2507);
    assertArrayEquals(new double[] {}, doubleArray0, 0.01);
}",0,
project,0,test3251276,"public void test3251276() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = 2921.217853;
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) 104.5F, (-1), (double) (-1118.4F));
    assertEquals(1, doubleArray0.length);
}",0,
project,0,test3251277,"public void test3251277() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = 2921.217853;
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) 104.5F, (-1), (double) (-1118.4F));
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test3251278,"public void test3251278() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = 2921.217853;
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) 104.5F, (-1), (double) (-1118.4F));
    assertArrayEquals(new double[] { 2921.217853 }, doubleArray0, 0.01);
}",0,
project,0,test3261279,"public void test3261279() throws Throwable {
    double[] doubleArray0 = new double[8];
    int int0 = ArrayUtils.indexOf(doubleArray0, 0.0, 573.260065281386);
    assertEquals(8, doubleArray0.length);
}",0,
project,0,test3261280,"public void test3261280() throws Throwable {
    double[] doubleArray0 = new double[8];
    int int0 = ArrayUtils.indexOf(doubleArray0, 0.0, 573.260065281386);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test3261281,"public void test3261281() throws Throwable {
    double[] doubleArray0 = new double[8];
    int int0 = ArrayUtils.indexOf(doubleArray0, 0.0, 573.260065281386);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test3271282,"public void test3271282() throws Throwable {
    double[] doubleArray0 = new double[3];
    boolean boolean0 = ArrayUtils.contains(doubleArray0, 1.5, 0.0);
    assertEquals(3, doubleArray0.length);
}",0,
project,0,test3271283,"public void test3271283() throws Throwable {
    double[] doubleArray0 = new double[3];
    boolean boolean0 = ArrayUtils.contains(doubleArray0, 1.5, 0.0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3271284,"public void test3271284() throws Throwable {
    double[] doubleArray0 = new double[3];
    boolean boolean0 = ArrayUtils.contains(doubleArray0, 1.5, 0.0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test3281285,"public void test3281285() throws Throwable {
    double[] doubleArray0 = new double[6];
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) (short) 0, (int) (short) (-1289));
    assertEquals(6, doubleArray0.length);
}",0,
project,0,test3281286,"public void test3281286() throws Throwable {
    double[] doubleArray0 = new double[6];
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) (short) 0, (int) (short) (-1289));
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test3281287,"public void test3281287() throws Throwable {
    double[] doubleArray0 = new double[6];
    int int0 = ArrayUtils.indexOf(doubleArray0, (double) (short) 0, (int) (short) (-1289));
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test3291288,"public void test3291288() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1947.0465044889506);
    assertEquals(0, doubleArray0.length);
}",0,
project,0,test3291289,"public void test3291289() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1947.0465044889506);
    assertEquals(0, doubleArray1.length);
}",0,
project,0,test3291290,"public void test3291290() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1947.0465044889506);
    assertNotSame(doubleArray0, doubleArray1);
}",0,
project,0,test3291291,"public void test3291291() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1947.0465044889506);
    assertNotSame(doubleArray1, doubleArray0);
}",0,
project,0,test3291292,"public void test3291292() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1947.0465044889506);
    assertNotNull(doubleArray1);
}",0,
project,0,test3291294,"public void test3291294() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1947.0465044889506);
    assertArrayEquals(new double[] {}, doubleArray0, 0.01);
}",0,
project,0,test3291295,"public void test3291295() throws Throwable {
    double[] doubleArray0 = new double[0];
    double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1947.0465044889506);
    assertArrayEquals(new double[] {}, doubleArray1, 0.01);
}",0,
project,0,test3301296,"public void test3301296() throws Throwable {
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) 55;
    boolean boolean0 = ArrayUtils.contains(byteArray0, (byte) 55);
    assertEquals(3, byteArray0.length);
}",0,
project,0,test3301297,"public void test3301297() throws Throwable {
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) 55;
    boolean boolean0 = ArrayUtils.contains(byteArray0, (byte) 55);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3301298,"public void test3301298() throws Throwable {
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) 55;
    boolean boolean0 = ArrayUtils.contains(byteArray0, (byte) 55);
    assertArrayEquals(new byte[] { (byte) 55, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test3311299,"public void test3311299() throws Throwable {
    byte[] byteArray0 = new byte[9];
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 0, (int) (byte) 0);
    assertEquals(9, byteArray0.length);
}",0,
project,0,test3311300,"public void test3311300() throws Throwable {
    byte[] byteArray0 = new byte[9];
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 0, (int) (byte) 0);
    assertEquals(0, int0);
}",0,
project,0,test3311301,"public void test3311301() throws Throwable {
    byte[] byteArray0 = new byte[9];
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 0, (int) (byte) 0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test3321302,"public void test3321302() throws Throwable {
    byte[] byteArray0 = new byte[3];
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) (-38), (int) (byte) (-119));
    assertEquals(3, byteArray0.length);
}",0,
project,0,test3321303,"public void test3321303() throws Throwable {
    byte[] byteArray0 = new byte[3];
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) (-38), (int) (byte) (-119));
    assertEquals((-1), int0);
}",0,
project,0,test3321304,"public void test3321304() throws Throwable {
    byte[] byteArray0 = new byte[3];
    int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) (-38), (int) (byte) (-119));
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test3331305,"public void test3331305() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((byte[]) null, (byte) (-1));
    assertEquals((-1), int0);
}",0,
project,0,test3341306,"public void test3341306() throws Throwable {
    Byte[] byteArray0 = new Byte[1];
    byte byte0 = (byte) (-1);
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, byte0);
    assertEquals(1, byteArray0.length);
}",0,
project,0,test3341307,"public void test3341307() throws Throwable {
    Byte[] byteArray0 = new Byte[1];
    byte byte0 = (byte) (-1);
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, byte0);
    assertEquals(1, byteArray1.length);
}",0,
project,0,test3341308,"public void test3341308() throws Throwable {
    Byte[] byteArray0 = new Byte[1];
    byte byte0 = (byte) (-1);
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, byte0);
    assertNotNull(byteArray1);
}",0,
project,0,test3341309,"public void test3341309() throws Throwable {
    Byte[] byteArray0 = new Byte[1];
    byte byte0 = (byte) (-1);
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, byte0);
    assertArrayEquals(new byte[] { (byte) (-1) }, byteArray1);
}",0,
project,0,test3341310,"public void test3341310() throws Throwable {
    Byte[] byteArray0 = new Byte[1];
    byte byte0 = (byte) (-1);
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, byte0);
    int int0 = ArrayUtils.indexOf(byteArray1, (byte) (-68), (int) (byte) (-127));
    assertEquals(1, byteArray0.length);
}",0,
project,0,test3341311,"public void test3341311() throws Throwable {
    Byte[] byteArray0 = new Byte[1];
    byte byte0 = (byte) (-1);
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, byte0);
    int int0 = ArrayUtils.indexOf(byteArray1, (byte) (-68), (int) (byte) (-127));
    assertEquals(1, byteArray1.length);
}",0,
project,0,test3341312,"public void test3341312() throws Throwable {
    Byte[] byteArray0 = new Byte[1];
    byte byte0 = (byte) (-1);
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, byte0);
    int int0 = ArrayUtils.indexOf(byteArray1, (byte) (-68), (int) (byte) (-127));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3341313,"public void test3341313() throws Throwable {
    Byte[] byteArray0 = new Byte[1];
    byte byte0 = (byte) (-1);
    byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, byte0);
    int int0 = ArrayUtils.indexOf(byteArray1, (byte) (-68), (int) (byte) (-127));
    assertArrayEquals(new byte[] { (byte) (-1) }, byteArray1);
}",0,
project,0,test3351314,"public void test3351314() throws Throwable {
    boolean boolean0 = ArrayUtils.contains((byte[]) null, (byte) (-57));
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3361315,"public void test3361315() throws Throwable {
    char[] charArray0 = new char[1];
    charArray0[0] = 'j';
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'j');
    assertEquals(1, charArray0.length);
}",0,
project,0,test3361316,"public void test3361316() throws Throwable {
    char[] charArray0 = new char[1];
    charArray0[0] = 'j';
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'j');
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test3361317,"public void test3361317() throws Throwable {
    char[] charArray0 = new char[1];
    charArray0[0] = 'j';
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'j');
    assertArrayEquals(new char[] { 'j' }, charArray0);
}",0,
project,0,test3371318,"public void test3371318() throws Throwable {
    char[] charArray0 = new char[4];
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'N', (int) (byte) (-123));
    assertEquals(4, charArray0.length);
}",0,
project,0,test3371319,"public void test3371319() throws Throwable {
    char[] charArray0 = new char[4];
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'N', (int) (byte) (-123));
    assertEquals((-1), int0);
}",0,
project,0,test3371320,"public void test3371320() throws Throwable {
    char[] charArray0 = new char[4];
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'N', (int) (byte) (-123));
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test3381321,"public void test3381321() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((char[]) null, 'A', (int) (byte) (-124));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3391322,"public void test3391322() throws Throwable {
    char[] charArray0 = new char[4];
    charArray0[1] = 'n';
    boolean boolean0 = ArrayUtils.contains(charArray0, 'n');
    assertEquals(4, charArray0.length);
}",0,
project,0,test3391323,"public void test3391323() throws Throwable {
    char[] charArray0 = new char[4];
    charArray0[1] = 'n';
    boolean boolean0 = ArrayUtils.contains(charArray0, 'n');
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3391324,"public void test3391324() throws Throwable {
    char[] charArray0 = new char[4];
    charArray0[1] = 'n';
    boolean boolean0 = ArrayUtils.contains(charArray0, 'n');
    assertArrayEquals(new char[] { '\u0000', 'n', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test3401325,"public void test3401325() throws Throwable {
    short[] shortArray0 = new short[7];
    shortArray0[1] = (short) 408;
    boolean boolean0 = ArrayUtils.contains(shortArray0, (short) 408);
    assertEquals(7, shortArray0.length);
}",0,
project,0,test3401326,"public void test3401326() throws Throwable {
    short[] shortArray0 = new short[7];
    shortArray0[1] = (short) 408;
    boolean boolean0 = ArrayUtils.contains(shortArray0, (short) 408);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3401327,"public void test3401327() throws Throwable {
    short[] shortArray0 = new short[7];
    shortArray0[1] = (short) 408;
    boolean boolean0 = ArrayUtils.contains(shortArray0, (short) 408);
    assertArrayEquals(new short[] { (short) 0, (short) 408, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test3411328,"public void test3411328() throws Throwable {
    short[] shortArray0 = new short[9];
    boolean boolean0 = ArrayUtils.contains(shortArray0, (short) (-997));
    assertEquals(9, shortArray0.length);
}",1,
project,0,test3411329,"public void test3411329() throws Throwable {
    short[] shortArray0 = new short[9];
    boolean boolean0 = ArrayUtils.contains(shortArray0, (short) (-997));
    assertFalse(boolean0);
}",1,
project,0,test3411330,"public void test3411330() throws Throwable {
    short[] shortArray0 = new short[9];
    boolean boolean0 = ArrayUtils.contains(shortArray0, (short) (-997));
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0, (short) 0 }, shortArray0);
}",1,
project,0,test3421331,"public void test3421331() throws Throwable {
    short[] shortArray0 = new short[1];
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 1, (int) (short) 0);
    assertEquals(1, shortArray0.length);
}",0,
project,0,test3421332,"public void test3421332() throws Throwable {
    short[] shortArray0 = new short[1];
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 1, (int) (short) 0);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test3421333,"public void test3421333() throws Throwable {
    short[] shortArray0 = new short[1];
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 1, (int) (short) 0);
    assertArrayEquals(new short[] { (short) 0 }, shortArray0);
}",0,
project,0,test3431334,"public void test3431334() throws Throwable {
    short[] shortArray0 = new short[3];
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) (-2595), (int) (short) (-922));
    assertEquals(3, shortArray0.length);
}",0,
project,0,test3431335,"public void test3431335() throws Throwable {
    short[] shortArray0 = new short[3];
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) (-2595), (int) (short) (-922));
    assertEquals((-1), int0);
}",0,
project,0,test3431336,"public void test3431336() throws Throwable {
    short[] shortArray0 = new short[3];
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) (-2595), (int) (short) (-922));
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test3441337,"public void test3441337() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((short[]) null, (short) 21845, 2103657451);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3441338,"public void test3441338() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((short[]) null, (short) 21845, 2103657451);
    Integer[] integerArray0 = new Integer[6];
    integerArray0[0] = (Integer) 21845;
    integerArray0[1] = (Integer) 2103657451;
    integerArray0[2] = (Integer) int0;
    integerArray0[3] = (Integer) 21845;
    integerArray0[4] = (Integer) 21845;
    integerArray0[5] = (Integer) 2103657451;
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0);
    assertEquals(6, integerArray0.length);
}",0,
project,0,test3441339,"public void test3441339() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((short[]) null, (short) 21845, 2103657451);
    Integer[] integerArray0 = new Integer[6];
    integerArray0[0] = (Integer) 21845;
    integerArray0[1] = (Integer) 2103657451;
    integerArray0[2] = (Integer) int0;
    integerArray0[3] = (Integer) 21845;
    integerArray0[4] = (Integer) 21845;
    integerArray0[5] = (Integer) 2103657451;
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0);
    assertEquals(6, intArray0.length);
}",0,
project,0,test3441340,"public void test3441340() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((short[]) null, (short) 21845, 2103657451);
    Integer[] integerArray0 = new Integer[6];
    integerArray0[0] = (Integer) 21845;
    integerArray0[1] = (Integer) 2103657451;
    integerArray0[2] = (Integer) int0;
    integerArray0[3] = (Integer) 21845;
    integerArray0[4] = (Integer) 21845;
    integerArray0[5] = (Integer) 2103657451;
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0);
    assertNotNull(intArray0);
}",0,
project,0,test3441341,"public void test3441341() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((short[]) null, (short) 21845, 2103657451);
    Integer[] integerArray0 = new Integer[6];
    integerArray0[0] = (Integer) 21845;
    integerArray0[1] = (Integer) 2103657451;
    integerArray0[2] = (Integer) int0;
    integerArray0[3] = (Integer) 21845;
    integerArray0[4] = (Integer) 21845;
    integerArray0[5] = (Integer) 2103657451;
    int[] intArray0 = ArrayUtils.toPrimitive(integerArray0);
    assertArrayEquals(new int[] { 21845, 2103657451, (-1), 21845, 21845, 2103657451 }, intArray0);
}",0,
project,0,test3451342,"public void test3451342() throws Throwable {
    short[] shortArray0 = new short[1];
    int int0 = ArrayUtils.indexOf(shortArray0, (short) (byte) 0, (-471));
    assertEquals(1, shortArray0.length);
}",0,
project,0,test3451343,"public void test3451343() throws Throwable {
    short[] shortArray0 = new short[1];
    int int0 = ArrayUtils.indexOf(shortArray0, (short) (byte) 0, (-471));
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test3451344,"public void test3451344() throws Throwable {
    short[] shortArray0 = new short[1];
    int int0 = ArrayUtils.indexOf(shortArray0, (short) (byte) 0, (-471));
    assertArrayEquals(new short[] { (short) 0 }, shortArray0);
}",0,
project,0,test3461345,"public void test3461345() throws Throwable {
    int[] intArray0 = new int[6];
    intArray0[4] = (int) (short) 21845;
    boolean boolean0 = ArrayUtils.contains(intArray0, (int) (short) 21845);
    assertEquals(6, intArray0.length);
}",1,
project,0,test3461346,"public void test3461346() throws Throwable {
    int[] intArray0 = new int[6];
    intArray0[4] = (int) (short) 21845;
    boolean boolean0 = ArrayUtils.contains(intArray0, (int) (short) 21845);
    assertTrue(boolean0);
}",1,
project,0,test3461347,"public void test3461347() throws Throwable {
    int[] intArray0 = new int[6];
    intArray0[4] = (int) (short) 21845;
    boolean boolean0 = ArrayUtils.contains(intArray0, (int) (short) 21845);
    assertArrayEquals(new int[] { 0, 0, 0, 0, 21845, 0 }, intArray0);
}",1,
project,0,test3471348,"public void test3471348() throws Throwable {
    int[] intArray0 = new int[5];
    int int0 = ArrayUtils.lastIndexOf(intArray0, 4, 63);
    assertEquals((-1), int0);
}",0,
project,0,test3481349,"public void test3481349() throws Throwable {
    int[] intArray0 = new int[3];
    int int0 = ArrayUtils.lastIndexOf(intArray0, 0, 0);
    assertEquals(0, int0);
}",0,
project,0,test3491350,"public void test3491350() throws Throwable {
    int[] intArray0 = new int[8];
    int int0 = ArrayUtils.lastIndexOf(intArray0, (-2283), (-4388));
    assertEquals((-1), int0);
}",0,
project,0,test3501351,"public void test3501351() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((int[]) null, (-1), Integer.MAX_VALUE);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3511352,"public void test3511352() throws Throwable {
    int[] intArray0 = new int[9];
    int int0 = ArrayUtils.indexOf(intArray0, 690, (-3296));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3521353,"public void test3521353() throws Throwable {
    boolean boolean0 = ArrayUtils.contains((int[]) null, (-3259));
    assertFalse(boolean0);
}",1,
project,0,test3531354,"public void test3531354() throws Throwable {
    long[] longArray0 = new long[2];
    longArray0[0] = 2L;
    boolean boolean0 = ArrayUtils.contains(longArray0, 2L);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3541355,"public void test3541355() throws Throwable {
    long[] longArray0 = new long[7];
    int int0 = ArrayUtils.lastIndexOf(longArray0, 0L, 0);
    assertEquals(0, int0);
}",0,
project,0,test3551356,"public void test3551356() throws Throwable {
    long[] longArray0 = new long[6];
    int int0 = ArrayUtils.lastIndexOf(longArray0, (-36L), (-2144778109));
    assertEquals((-1), int0);
}",0,
project,0,test3561357,"public void test3561357() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((long[]) null, 184L, (-89));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3571358,"public void test3571358() throws Throwable {
    long[] longArray0 = new long[8];
    longArray0[0] = (long) (short) (-1480);
    int int0 = ArrayUtils.indexOf(longArray0, (-1480L));
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test3581359,"public void test3581359() throws Throwable {
    long[] longArray0 = new long[6];
    int int0 = ArrayUtils.indexOf(longArray0, (long) Integer.MAX_VALUE, (-1));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3591360,"public void test3591360() throws Throwable {
    int int0 = ArrayUtils.indexOf((long[]) null, (long) (byte) (-109), (-1));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3601361,"public void test3601361() throws Throwable {
    Object[] objectArray0 = new Object[4];
    boolean boolean0 = ArrayUtils.contains(objectArray0, objectArray0[1]);
    assertTrue(boolean0);
}",1,
project,0,test3611362,"public void test3611362() throws Throwable {
    Object[] objectArray0 = new Object[4];
    objectArray0[0] = (Object) (-221.0F);
    int int0 = ArrayUtils.lastIndexOf(objectArray0, objectArray0[0]);
    assertEquals(0, int0);
}",1,
project,0,test3621363,"public void test3621363() throws Throwable {
    Object[] objectArray0 = new Object[8];
    objectArray0[0] = (Object) (-2312L);
    objectArray0[1] = (Object) (-2312L);
    objectArray0[2] = (Object) (-2312L);
    objectArray0[3] = (Object) (-780L);
    objectArray0[4] = objectArray0[2];
    objectArray0[5] = (Object) (-2312L);
    objectArray0[6] = (Object) (-2312L);
    objectArray0[7] = (Object) (-780L);
    int int0 = ArrayUtils.lastIndexOf(objectArray0, (Object) null, 3937);
    assertEquals((-1), int0);
}",0,
project,0,test3631364,"public void test3631364() throws Throwable {
    Object[] objectArray0 = new Object[1];
    int int0 = ArrayUtils.lastIndexOf(objectArray0, (Object) ""e$VCh]x"", 0);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test3641365,"public void test3641365() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[3];
    int int0 = ArrayUtils.lastIndexOf((Object[]) booleanArray0, (Object) ""', is neither of type Map.Entry nor an Array"", (-44));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3651366,"public void test3651366() throws Throwable {
    int int0 = ArrayUtils.lastIndexOf((Object[]) null, (Object) ""MZ&P"", 36);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test3661367,"public void test3661367() throws Throwable {
    Object[] objectArray0 = new Object[9];
    objectArray0[2] = (Object) 'n';
    int int0 = ArrayUtils.indexOf(objectArray0, objectArray0[2]);
    assertEquals(2, int0);
}",0,"assertEquals(1, int0)"
project,0,test3671368,"public void test3671368() throws Throwable {
    Object[] objectArray0 = new Object[0];
    Object object0 = new Object();
    boolean boolean0 = ArrayUtils.contains(objectArray0, object0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3681369,"public void test3681369() throws Throwable {
    Object[] objectArray0 = new Object[1];
    objectArray0[0] = (Object) false;
    Object[] objectArray1 = ArrayUtils.removeElement(objectArray0, (Object) null);
    assertEquals(1, objectArray1.length);
}",0,
project,0,test3691370,"public void test3691370() throws Throwable {
    Object[] objectArray0 = new Object[2];
    int int0 = ArrayUtils.indexOf(objectArray0, objectArray0[0], (-922));
    assertEquals(0, int0);
}",0,
project,0,test3731372,"public void test3731372() throws Throwable {
    float[] floatArray0 = new float[9];
    ArrayUtils.reverse(floatArray0);
    assertArrayEquals(new float[] { 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, floatArray0, 0.01F);
}",0,
project,0,test3751373,"public void test3751373() throws Throwable {
    double[] doubleArray0 = new double[3];
    ArrayUtils.reverse(doubleArray0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test3781374,"public void test3781374() throws Throwable {
    char[] charArray0 = new char[4];
    ArrayUtils.reverse(charArray0);
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test3801375,"public void test3801375() throws Throwable {
    short[] shortArray0 = new short[3];
    ArrayUtils.reverse(shortArray0);
    assertArrayEquals(new short[] { (short) 0, (short) 0, (short) 0 }, shortArray0);
}",0,
project,0,test3821376,"public void test3821376() throws Throwable {
    int[] intArray0 = new int[3];
    ArrayUtils.reverse(intArray0);
    assertArrayEquals(new int[] { 0, 0, 0 }, intArray0);
}",0,
project,0,test3841377,"public void test3841377() throws Throwable {
    long[] longArray0 = new long[2];
    ArrayUtils.reverse(longArray0);
    assertArrayEquals(new long[] { 0L, 0L }, longArray0);
}",0,
project,0,test3861378,"public void test3861378() throws Throwable {
    Object[] objectArray0 = new Object[5];
    ArrayUtils.reverse(objectArray0);
    assertEquals(5, objectArray0.length);
}",0,
project,0,test3871379,"public void test3871379() throws Throwable {
    Object object0 = new Object();
    boolean boolean0 = ArrayUtils.isSameType(object0, ""Mac"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3881380,"public void test3881380() throws Throwable {
    // Undeclared exception!
    try {
        ArrayUtils.isSameType((Object) null, (Object) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",1,
project,0,test3891381,"public void test3891381() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    boolean[] booleanArray1 = new boolean[0];
    boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3901382,"public void test3901382() throws Throwable {
    boolean boolean0 = ArrayUtils.isSameLength((boolean[]) null, (boolean[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3911383,"public void test3911383() throws Throwable {
    boolean[] booleanArray0 = new boolean[1];
    boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3921384,"public void test3921384() throws Throwable {
    float[] floatArray0 = new float[9];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    boolean boolean0 = ArrayUtils.isSameLength(floatArray1, floatArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3921385,"public void test3921385() throws Throwable {
    float[] floatArray0 = new float[9];
    float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    boolean boolean0 = ArrayUtils.isSameLength(floatArray1, floatArray0);
    assertEquals(18, floatArray1.length);
}",0,
project,0,test3931386,"public void test3931386() throws Throwable {
    boolean boolean0 = ArrayUtils.isSameLength((float[]) null, (float[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3941387,"public void test3941387() throws Throwable {
    float[] floatArray0 = new float[0];
    boolean boolean0 = ArrayUtils.isSameLength((float[]) null, floatArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3951388,"public void test3951388() throws Throwable {
    float[] floatArray0 = new float[7];
    boolean boolean0 = ArrayUtils.isSameLength(floatArray0, floatArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3961389,"public void test3961389() throws Throwable {
    double[] doubleArray0 = new double[0];
    boolean boolean0 = ArrayUtils.isSameLength(doubleArray0, (double[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3971390,"public void test3971390() throws Throwable {
    boolean boolean0 = ArrayUtils.isSameLength((double[]) null, (double[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3981391,"public void test3981391() throws Throwable {
    double[] doubleArray0 = new double[1];
    boolean boolean0 = ArrayUtils.isSameLength(doubleArray0, doubleArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3991392,"public void test3991392() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = new byte[4];
    boolean boolean0 = ArrayUtils.isSameLength(byteArray0, byteArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4001393,"public void test4001393() throws Throwable {
    boolean boolean0 = ArrayUtils.isSameLength((byte[]) null, (byte[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4011394,"public void test4011394() throws Throwable {
    byte[] byteArray0 = new byte[6];
    boolean boolean0 = ArrayUtils.isSameLength(byteArray0, byteArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4021395,"public void test4021395() throws Throwable {
    char[] charArray0 = new char[0];
    char[] charArray1 = new char[4];
    boolean boolean0 = ArrayUtils.isSameLength(charArray0, charArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4031396,"public void test4031396() throws Throwable {
    char[] charArray0 = new char[2];
    boolean boolean0 = ArrayUtils.isSameLength(charArray0, (char[]) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4041397,"public void test4041397() throws Throwable {
    boolean boolean0 = ArrayUtils.isSameLength((char[]) null, (char[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4051398,"public void test4051398() throws Throwable {
    char[] charArray0 = new char[2];
    boolean boolean0 = ArrayUtils.isSameLength(charArray0, charArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4061399,"public void test4061399() throws Throwable {
    short[] shortArray0 = new short[9];
    short[] shortArray1 = new short[2];
    boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4071400,"public void test4071400() throws Throwable {
    boolean boolean0 = ArrayUtils.isSameLength((short[]) null, (short[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4081401,"public void test4081401() throws Throwable {
    short[] shortArray0 = new short[3];
    boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4091402,"public void test4091402() throws Throwable {
    int[] intArray0 = new int[3];
    boolean boolean0 = ArrayUtils.isSameLength((int[]) null, intArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4101403,"public void test4101403() throws Throwable {
    boolean boolean0 = ArrayUtils.isSameLength((int[]) null, (int[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4111404,"public void test4111404() throws Throwable {
    int[] intArray0 = new int[5];
    boolean boolean0 = ArrayUtils.isSameLength(intArray0, intArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4121405,"public void test4121405() throws Throwable {
    long[] longArray0 = new long[4];
    long[] longArray1 = new long[2];
    boolean boolean0 = ArrayUtils.isSameLength(longArray0, longArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4131406,"public void test4131406() throws Throwable {
    boolean boolean0 = ArrayUtils.isSameLength((long[]) null, (long[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4141407,"public void test4141407() throws Throwable {
    long[] longArray0 = new long[0];
    boolean boolean0 = ArrayUtils.isSameLength(longArray0, longArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4151408,"public void test4151408() throws Throwable {
    Object[] objectArray0 = new Object[7];
    Object[] objectArray1 = new Object[2];
    boolean boolean0 = ArrayUtils.isSameLength(objectArray0, objectArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4161409,"public void test4161409() throws Throwable {
    boolean boolean0 = ArrayUtils.isSameLength((Object[]) null, (Object[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4171410,"public void test4171410() throws Throwable {
    Object[] objectArray0 = new Object[5];
    boolean boolean0 = ArrayUtils.isSameLength((Object[]) null, objectArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4181411,"public void test4181411() throws Throwable {
    long[] longArray0 = new long[3];
    Long[] longArray1 = ArrayUtils.toObject(longArray0);
    assertNotNull(longArray1);
}",0,
project,0,test4181412,"public void test4181412() throws Throwable {
    long[] longArray0 = new long[3];
    Long[] longArray1 = ArrayUtils.toObject(longArray0);
    boolean boolean0 = ArrayUtils.isSameLength((Object[]) longArray1, (Object[]) longArray1);
    assertEquals(3, longArray1.length);
}",1,
project,0,test4181413,"public void test4181413() throws Throwable {
    long[] longArray0 = new long[3];
    Long[] longArray1 = ArrayUtils.toObject(longArray0);
    boolean boolean0 = ArrayUtils.isSameLength((Object[]) longArray1, (Object[]) longArray1);
    assertTrue(boolean0);
}",1,
project,0,test4191414,"public void test4191414() throws Throwable {
    boolean[] booleanArray0 = new boolean[2];
    boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 1, 2607);
    assertEquals(1, booleanArray1.length);
}",0,
project,0,test4201415,"public void test4201415() throws Throwable {
    boolean[] booleanArray0 = ArrayUtils.subarray((boolean[]) null, 1, 7);
    assertNull(booleanArray0);
}",0,
project,0,test4221417,"public void test4221417() throws Throwable {
    float[] floatArray0 = new float[4];
    float[] floatArray1 = ArrayUtils.subarray(floatArray0, 0, Integer.MAX_VALUE);
    assertNotSame(floatArray1, floatArray0);
}",0,
project,0,test4221418,"public void test4221418() throws Throwable {
    float[] floatArray0 = new float[4];
    float[] floatArray1 = ArrayUtils.subarray(floatArray0, 0, Integer.MAX_VALUE);
    assertEquals(4, floatArray1.length);
}",0,
project,0,test4231419,"public void test4231419() throws Throwable {
    float[] floatArray0 = new float[7];
    float[] floatArray1 = ArrayUtils.subarray(floatArray0, (-2147), (-2147));
    assertEquals(0, floatArray1.length);
}",0,
project,0,test4241420,"public void test4241420() throws Throwable {
    float[] floatArray0 = ArrayUtils.subarray((float[]) null, 2, 2);
    assertNull(floatArray0);
}",0,
project,0,test4251421,"public void test4251421() throws Throwable {
    float[] floatArray0 = new float[6];
    float[] floatArray1 = ArrayUtils.subarray(floatArray0, 57, (-416));
    assertNotSame(floatArray0, floatArray1);
}",0,
project,0,test4261422,"public void test4261422() throws Throwable {
    double[] doubleArray0 = new double[2];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, 1472, (-1));
    assertArrayEquals(new double[] {}, doubleArray1, 0.01);
}",0,
project,0,test4271423,"public void test4271423() throws Throwable {
    double[] doubleArray0 = ArrayUtils.subarray((double[]) null, 2303, 3575);
    assertNull(doubleArray0);
}",0,
project,0,test4281424,"public void test4281424() throws Throwable {
    double[] doubleArray0 = new double[2];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (-1), 1472);
    assertNotNull(doubleArray1);
}",0,
project,0,test4281425,"public void test4281425() throws Throwable {
    double[] doubleArray0 = new double[2];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (-1), 1472);
    assertEquals(2, doubleArray1.length);
}",0,
project,0,test4281426,"public void test4281426() throws Throwable {
    double[] doubleArray0 = new double[2];
    double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (-1), 1472);
    assertNotSame(doubleArray1, doubleArray0);
}",0,
project,0,test4291427,"public void test4291427() throws Throwable {
    Short[] shortArray0 = new Short[5];
    Short short0 = new Short((short) 1588);
    shortArray0[0] = short0;
    shortArray0[1] = shortArray0[0];
    short short1 = (short) (-16);
    byte[] byteArray0 = new byte[2];
    byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) short1, (int) shortArray0[1]);
    assertNotSame(byteArray1, byteArray0);
}",0,
project,0,test4291428,"public void test4291428() throws Throwable {
    Short[] shortArray0 = new Short[5];
    Short short0 = new Short((short) 1588);
    shortArray0[0] = short0;
    shortArray0[1] = shortArray0[0];
    short short1 = (short) (-16);
    byte[] byteArray0 = new byte[2];
    byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) short1, (int) shortArray0[1]);
    assertEquals(2, byteArray1.length);
}",0,
project,0,test4301429,"public void test4301429() throws Throwable {
    ArrayUtils arrayUtils0 = new ArrayUtils();
    byte[] byteArray0 = ArrayUtils.subarray(arrayUtils0.EMPTY_BYTE_ARRAY, 0, 1285);
    assertArrayEquals(new byte[] {}, byteArray0);
}",0,
project,0,test4311430,"public void test4311430() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) (byte) 1, (-1));
    assertEquals(0, byteArray1.length);
}",0,
project,0,test4321431,"public void test4321431() throws Throwable {
    byte[] byteArray0 = ArrayUtils.subarray((byte[]) null, (-918), 672);
    assertNull(byteArray0);
}",0,
project,0,test4331432,"public void test4331432() throws Throwable {
    char[] charArray0 = new char[1];
    char[] charArray1 = ArrayUtils.subarray(charArray0, (-2083), Integer.MAX_VALUE);
    assertNotSame(charArray1, charArray0);
}",0,
project,0,test4331433,"public void test4331433() throws Throwable {
    char[] charArray0 = new char[1];
    char[] charArray1 = ArrayUtils.subarray(charArray0, (-2083), Integer.MAX_VALUE);
    assertEquals(1, charArray1.length);
}",0,
project,0,test4341434,"public void test4341434() throws Throwable {
    char[] charArray0 = new char[4];
    char[] charArray1 = ArrayUtils.subarray(charArray0, (-3033), (int) (byte) 2);
    assertEquals(2, charArray1.length);
}",0,
project,0,test4351435,"public void test4351435() throws Throwable {
    char[] charArray0 = ArrayUtils.subarray((char[]) null, 3313, 1);
    assertNull(charArray0);
}",0,
project,0,test4361436,"public void test4361436() throws Throwable {
    char[] charArray0 = new char[4];
    char[] charArray1 = ArrayUtils.subarray(charArray0, 0, 0);
    assertNotNull(charArray1);
}",0,
project,0,test4361437,"public void test4361437() throws Throwable {
    char[] charArray0 = new char[4];
    char[] charArray1 = ArrayUtils.subarray(charArray0, 0, 0);
    assertEquals(0, charArray1.length);
}",0,
project,0,test4371438,"public void test4371438() throws Throwable {
    short[] shortArray0 = ArrayUtils.subarray((short[]) null, 1, (-93));
    assertNull(shortArray0);
}",0,
project,0,test4381439,"public void test4381439() throws Throwable {
    short[] shortArray0 = new short[5];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (short) 1, 2197);
    assertNotNull(shortArray1);
}",0,"assertEquals(shortArray0, shortArray1)"
project,0,test4381440,"public void test4381440() throws Throwable {
    short[] shortArray0 = new short[5];
    short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (short) 1, 2197);
    assertEquals(4, shortArray1.length);
}",0,
project,0,test4391441,"public void test4391441() throws Throwable {
    int[] intArray0 = new int[9];
    int[] intArray1 = ArrayUtils.subarray(intArray0, (-942), 0);
    assertEquals(0, intArray1.length);
}",0,
project,0,test4401442,"public void test4401442() throws Throwable {
    int[] intArray0 = new int[3];
    int[] intArray1 = ArrayUtils.subarray(intArray0, 297, 2146540524);
    assertEquals(0, intArray1.length);
}",0,
project,0,test4411443,"public void test4411443() throws Throwable {
    int[] intArray0 = ArrayUtils.subarray((int[]) null, 971, (-1525));
    assertNull(intArray0);
}",0,"assertEquals(1, intArray0)"
project,0,test4421444,"public void test4421444() throws Throwable {
    int[] intArray0 = new int[6];
    int[] intArray1 = ArrayUtils.subarray(intArray0, (-785), 2660);
    assertNotSame(intArray1, intArray0);
}",0,
project,0,test4421445,"public void test4421445() throws Throwable {
    int[] intArray0 = new int[6];
    int[] intArray1 = ArrayUtils.subarray(intArray0, (-785), 2660);
    assertNotNull(intArray1);
}",0,"assertEquals(1, intArray1)"
project,0,test4421446,"public void test4421446() throws Throwable {
    int[] intArray0 = new int[6];
    int[] intArray1 = ArrayUtils.subarray(intArray0, (-785), 2660);
    assertEquals(6, intArray1.length);
}",0,
project,0,test4431447,"public void test4431447() throws Throwable {
    long[] longArray0 = new long[1];
    long[] longArray1 = ArrayUtils.subarray(longArray0, (-1), (int) (short) (-2204));
    assertEquals(0, longArray1.length);
}",0,
project,0,test4441448,"public void test4441448() throws Throwable {
    long[] longArray0 = new long[6];
    long[] longArray1 = ArrayUtils.subarray(longArray0, 2146214317, 2146214317);
    assertEquals(0, longArray1.length);
}",0,
project,0,test4451449,"public void test4451449() throws Throwable {
    long[] longArray0 = ArrayUtils.subarray((long[]) null, 57, 2527);
    assertNull(longArray0);
}",0,assertNotNull(longArray0)
project,0,test4461450,"public void test4461450() throws Throwable {
    long[] longArray0 = new long[6];
    long[] longArray1 = ArrayUtils.subarray(longArray0, (-416), 1264);
    assertEquals(6, longArray1.length);
}",0,
project,0,test4461451,"public void test4461451() throws Throwable {
    long[] longArray0 = new long[6];
    long[] longArray1 = ArrayUtils.subarray(longArray0, (-416), 1264);
    assertNotSame(longArray1, longArray0);
}",0,
project,0,test4461452,"public void test4461452() throws Throwable {
    long[] longArray0 = new long[6];
    long[] longArray1 = ArrayUtils.subarray(longArray0, (-416), 1264);
    assertNotNull(longArray1);
}",0,
project,0,test4471453,"public void test4471453() throws Throwable {
    short[] shortArray0 = new short[3];
    Integer[] integerArray0 = new Integer[2];
    Integer[] integerArray1 = ArrayUtils.subarray(integerArray0, (int) shortArray0[0], (int) 0);
    assertEquals(0, integerArray1.length);
}",0,
project,0,test4481454,"public void test4481454() throws Throwable {
    String[] stringArray0 = new String[5];
    String[] stringArray1 = ArrayUtils.subarray(stringArray0, 2169, 1731);
    assertEquals(0, stringArray1.length);
}",0,
project,0,test4491455,"public void test4491455() throws Throwable {
    AbstractMap.SimpleImmutableEntry<String, Object>[] abstractMap_SimpleImmutableEntryArray0 = ArrayUtils.subarray((AbstractMap.SimpleImmutableEntry<String, Object>[]) null, (int) 2, 1);
    assertNull(abstractMap_SimpleImmutableEntryArray0);
}",0,
project,0,test4501456,"public void test4501456() throws Throwable {
    AbstractMap.SimpleEntry<Integer, String>[] abstractMap_SimpleEntryArray0 = (AbstractMap.SimpleEntry<Integer, String>[]) Array.newInstance(AbstractMap.SimpleEntry.class, 7);
    AbstractMap.SimpleEntry<Integer, String>[] abstractMap_SimpleEntryArray1 = ArrayUtils.subarray(abstractMap_SimpleEntryArray0, (int) (-101), 3475);
    assertNotNull(abstractMap_SimpleEntryArray1);
}",0,
project,0,test4501457,"public void test4501457() throws Throwable {
    AbstractMap.SimpleEntry<Integer, String>[] abstractMap_SimpleEntryArray0 = (AbstractMap.SimpleEntry<Integer, String>[]) Array.newInstance(AbstractMap.SimpleEntry.class, 7);
    AbstractMap.SimpleEntry<Integer, String>[] abstractMap_SimpleEntryArray1 = ArrayUtils.subarray(abstractMap_SimpleEntryArray0, (int) (-101), 3475);
    assertEquals(7, abstractMap_SimpleEntryArray1.length);
}",0,
project,0,test4501458,"public void test4501458() throws Throwable {
    AbstractMap.SimpleEntry<Integer, String>[] abstractMap_SimpleEntryArray0 = (AbstractMap.SimpleEntry<Integer, String>[]) Array.newInstance(AbstractMap.SimpleEntry.class, 7);
    AbstractMap.SimpleEntry<Integer, String>[] abstractMap_SimpleEntryArray1 = ArrayUtils.subarray(abstractMap_SimpleEntryArray0, (int) (-101), 3475);
    assertNotSame(abstractMap_SimpleEntryArray1, abstractMap_SimpleEntryArray0);
}",0,
project,0,test4511459,"public void test4511459() throws Throwable {
    boolean[] booleanArray0 = ArrayUtils.removeElement((boolean[]) null, true);
    assertNull(booleanArray0);
}",0,
project,0,test4521460,"public void test4521460() throws Throwable {
    boolean[] booleanArray0 = new boolean[0];
    boolean[] booleanArray1 = ArrayUtils.removeElement(booleanArray0, true);
    assertNotSame(booleanArray0, booleanArray1);
}",0,
project,0,test4531461,"public void test4531461() throws Throwable {
    float[] floatArray0 = ArrayUtils.addAll((float[]) null, (float[]) null);
    assertNull(floatArray0);
}",0,
project,0,test4541462,"public void test4541462() throws Throwable {
    float[] floatArray0 = new float[3];
    float[] floatArray1 = ArrayUtils.clone(floatArray0);
    assertNotNull(floatArray1);
}",0,
project,0,test4541463,"public void test4541463() throws Throwable {
    float[] floatArray0 = new float[3];
    float[] floatArray1 = ArrayUtils.clone(floatArray0);
    assertEquals(3, floatArray1.length);
}",0,
project,0,test4551464,"public void test4551464() throws Throwable {
    double[] doubleArray0 = ArrayUtils.addAll((double[]) null, (double[]) null);
    assertNull(doubleArray0);
}",0,
project,0,test4561465,"public void test4561465() throws Throwable {
    byte[] byteArray0 = ArrayUtils.clone((byte[]) null);
    assertNull(byteArray0);
}",0,
project,0,test4571466,"public void test4571466() throws Throwable {
    short[] shortArray0 = ArrayUtils.removeElement((short[]) null, (short) 0);
    assertNull(shortArray0);
}",0,assertNotNull(shortArray0)
project,0,test4581467,"public void test4581467() throws Throwable {
    short[] shortArray0 = new short[0];
    short[] shortArray1 = ArrayUtils.clone(shortArray0);
    assertNotSame(shortArray1, shortArray0);
}",0,
project,0,test4591468,"public void test4591468() throws Throwable {
    int[] intArray0 = ArrayUtils.addAll((int[]) null, (int[]) null);
    assertNull(intArray0);
}",0,"assertEquals(0, intArray0)"
project,0,test4601469,"public void test4601469() throws Throwable {
    int[] intArray0 = new int[4];
    int[] intArray1 = ArrayUtils.removeElement(intArray0, (-951));
    assertNotNull(intArray1);
}",0,"assertEquals(1, intArray1)"
project,0,test4601470,"public void test4601470() throws Throwable {
    int[] intArray0 = new int[4];
    int[] intArray1 = ArrayUtils.removeElement(intArray0, (-951));
    assertEquals(4, intArray1.length);
}",0,
project,0,test4611471,"public void test4611471() throws Throwable {
    long[] longArray0 = ArrayUtils.clone((long[]) null);
    assertNull(longArray0);
}",0,assertNotNull(longArray0)
project,0,test4621472,"public void test4621472() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = ArrayUtils.clone(longArray0);
    assertNotSame(longArray1, longArray0);
}",0,
project,0,test4631473,"public void test4631473() throws Throwable {
    Object[] objectArray0 = ArrayUtils.clone((Object[]) null);
    assertNull(objectArray0);
}",0,assertNotNull(objectArray0)
project,0,test4641474,"public void test4641474() throws Throwable {
    Map<Object, Object> map0 = ArrayUtils.toMap((Object[]) null);
    assertNull(map0);
}",0,
project,0,test4651475,"public void test4651475() throws Throwable {
    Object[] objectArray0 = new Object[7];
    // Undeclared exception!
    try {
        ArrayUtils.toMap(objectArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array element 0, 'null', is neither of type Map.Entry nor an Array
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test4661476,"public void test4661476() throws Throwable {
    String string0 = ArrayUtils.toString((Object) null, (String) null);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test4671477,"public void test4671477() throws Throwable {
    short[] shortArray0 = new short[2];
    short[] shortArray1 = ArrayUtils.add(shortArray0, 1, (short) 3);
    assertArrayEquals(new short[] { (short) 0, (short) 3, (short) 0 }, shortArray1);
}",1,
project,0,test4681478,"public void test4681478() throws Throwable {
    Float[] floatArray0 = new Float[0];
    float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, 773.19F);
    // Undeclared exception!
    try {
        ArrayUtils.remove(floatArray1, (-5583));
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -5583, Length: 0
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test4691479,"public void test4691479() throws Throwable {
    byte[] byteArray0 = new byte[4];
    byteArray0[1] = (byte) 48;
    byte[] byteArray1 = ArrayUtils.removeElement(byteArray0, (byte) 48);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0 }, byteArray1);
}",0,
project,0,test4691480,"public void test4691480() throws Throwable {
    byte[] byteArray0 = new byte[4];
    byteArray0[1] = (byte) 48;
    byte[] byteArray1 = ArrayUtils.removeElement(byteArray0, (byte) 48);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 48, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test4701481,"public void test4701481() throws Throwable {
    String[] stringArray0 = new String[0];
    // Undeclared exception!
    try {
        ArrayUtils.remove(stringArray0, (-1));
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -1, Length: 0
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test4711482,"public void test4711482() throws Throwable {
    double[] doubleArray0 = new double[3];
    double[] doubleArray1 = ArrayUtils.add(doubleArray0, (-1.0));
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, (-1.0) }, doubleArray1, 0.01);
}",0,
project,0,test4721483,"public void test4721483() throws Throwable {
    Integer integer0 = new Integer((byte) 0);
    boolean boolean0 = ArrayUtils.isEquals(integer0, integer0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4731484,"public void test4731484() throws Throwable {
    byte[] byteArray0 = new byte[2];
    // Undeclared exception!
    try {
        ArrayUtils.add(byteArray0, (int) (byte) 6, (byte) 116);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 6, Length: 2
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test4741485,"public void test4741485() throws Throwable {
    char[] charArray0 = new char[9];
    // Undeclared exception!
    try {
        ArrayUtils.add(charArray0, (-1), 'i');
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -1, Length: 9
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test4751486,"public void test4751486() throws Throwable {
    int[] intArray0 = new int[7];
    // Undeclared exception!
    try {
        ArrayUtils.add(intArray0, (-1), (-1));
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -1, Length: 7
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test4761487,"public void test4761487() throws Throwable {
    short[] shortArray0 = ArrayUtils.add((short[]) null, (short) 365);
    assertNotNull(shortArray0);
}",0,assertNotNull(shortArray0)
project,0,test4761488,"public void test4761488() throws Throwable {
    short[] shortArray0 = ArrayUtils.add((short[]) null, (short) 365);
    assertArrayEquals(new short[] { (short) 365 }, shortArray0);
}",0,
project,0,test4771489,"public void test4771489() throws Throwable {
    int[] intArray0 = new int[9];
    intArray0[1] = (int) '0';
    int[] intArray1 = ArrayUtils.removeElement(intArray0, 48);
    assertArrayEquals(new int[] { 0, 48, 0, 0, 0, 0, 0, 0, 0 }, intArray0);
}",0,
project,0,test4771490,"public void test4771490() throws Throwable {
    int[] intArray0 = new int[9];
    intArray0[1] = (int) '0';
    int[] intArray1 = ArrayUtils.removeElement(intArray0, 48);
    assertArrayEquals(new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, intArray1);
}",0,
project,0,test4781491,"public void test4781491() throws Throwable {
    // Undeclared exception!
    try {
        ArrayUtils.add((boolean[]) null, 416, true);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 416, Length: 0
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test4791492,"public void test4791492() throws Throwable {
    boolean[] booleanArray0 = new boolean[9];
    int int0 = ArrayUtils.lastIndexOf(booleanArray0, true);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test4801493,"public void test4801493() throws Throwable {
    char[] charArray0 = ArrayUtils.removeElement((char[]) null, ')');
    assertNull(charArray0);
}",0,assertNotNull(charArray0)
project,0,test4811494,"public void test4811494() throws Throwable {
    String string0 = ArrayUtils.toString((Object) """");
    assertEquals("""", string0);
}",0,
project,0,test4821495,"public void test4821495() throws Throwable {
    short[] shortArray0 = new short[2];
    int int0 = ArrayUtils.indexOf(shortArray0, (short) 2);
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test4831496,"public void test4831496() throws Throwable {
    long[] longArray0 = new long[9];
    int int0 = ArrayUtils.lastIndexOf(longArray0, (long) (short) 3);
    assertEquals((-1), int0);
}",0,
project,0,test4841497,"public void test4841497() throws Throwable {
    // Undeclared exception!
    try {
        ArrayUtils.remove((long[]) null, 2147042647);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 2147042647, Length: 0
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test4851498,"public void test4851498() throws Throwable {
    double[] doubleArray0 = new double[2];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1.0));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test4861499,"public void test4861499() throws Throwable {
    boolean[] booleanArray0 = new boolean[3];
    boolean[] booleanArray1 = ArrayUtils.remove(booleanArray0, 0);
    assertEquals(2, booleanArray1.length);
}",0,
project,0,test4871500,"public void test4871500() throws Throwable {
    float[] floatArray0 = new float[3];
    int int0 = ArrayUtils.lastIndexOf(floatArray0, (-1.0F));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test4881501,"public void test4881501() throws Throwable {
    double[] doubleArray0 = new double[2];
    // Undeclared exception!
    try {
        ArrayUtils.remove(doubleArray0, 1742);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 1742, Length: 2
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test4891502,"public void test4891502() throws Throwable {
    long[] longArray0 = new long[2];
    long[] longArray1 = ArrayUtils.add(longArray0, (long) (short) 0);
    assertEquals(3, longArray1.length);
}",0,
project,0,test4901503,"public void test4901503() throws Throwable {
    double[] doubleArray0 = new double[6];
    int int0 = ArrayUtils.lastIndexOf(doubleArray0, (double) 3313, 538.76239278);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test4911504,"public void test4911504() throws Throwable {
    float[] floatArray0 = new float[1];
    // Undeclared exception!
    try {
        ArrayUtils.add(floatArray0, (-1278), 0.0F);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -1278, Length: 1
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test4921505,"public void test4921505() throws Throwable {
    byte[] byteArray0 = ArrayUtils.add((byte[]) null, (byte) (-3));
    assertArrayEquals(new byte[] { (byte) (-3) }, byteArray0);
}",0,
project,0,test4921506,"public void test4921506() throws Throwable {
    byte[] byteArray0 = ArrayUtils.add((byte[]) null, (byte) (-3));
    assertNotNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test4941508,"public void test4941508() throws Throwable {
    double[] doubleArray0 = new double[3];
    double[] doubleArray1 = ArrayUtils.add(doubleArray0, 2, 0.0);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0 }, doubleArray1, 0.01);
}",0,
project,0,test4951509,"public void test4951509() throws Throwable {
    char[] charArray0 = new char[9];
    // Undeclared exception!
    try {
        ArrayUtils.remove(charArray0, (-2879));
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -2879, Length: 9
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test4961510,"public void test4961510() throws Throwable {
    short[] shortArray0 = new short[3];
    int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 0);
    assertEquals(2, int0);
}",0,"assertEquals(0, int0)"
project,0,test4971511,"public void test4971511() throws Throwable {
    long[] longArray0 = new long[2];
    boolean boolean0 = ArrayUtils.contains(longArray0, (long) (-1));
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4981512,"public void test4981512() throws Throwable {
    Boolean[] booleanArray0 = new Boolean[3];
    int int0 = ArrayUtils.lastIndexOf((Object[]) booleanArray0, (Object) ""', is neither of type Map.Entry nor an Array"");
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test5001514,"public void test5001514() throws Throwable {
    // Undeclared exception!
    try {
        ArrayUtils.remove((short[]) null, (int) (short) (-467));
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -467, Length: 0
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test5011515,"public void test5011515() throws Throwable {
    int[] intArray0 = new int[7];
    int[] intArray1 = ArrayUtils.add(intArray0, (int) (byte) (-121));
    assertArrayEquals(new int[] { 0, 0, 0, 0, 0, 0, 0, (-121) }, intArray1);
}",0,
project,0,test5021516,"public void test5021516() throws Throwable {
    long[] longArray0 = new long[0];
    // Undeclared exception!
    try {
        ArrayUtils.add(longArray0, 2790, (-1L));
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 2790, Length: 0
        //
        verifyException(""org.apache.commons.lang3.ArrayUtils"", e);
    }
}",0,
project,0,test5031517,"public void test5031517() throws Throwable {
    float[] floatArray0 = new float[1];
    boolean boolean0 = ArrayUtils.contains(floatArray0, (-1372.3595F));
    assertFalse(boolean0);
}",1,
project,0,test5041518,"public void test5041518() throws Throwable {
    char[] charArray0 = ArrayUtils.add((char[]) null, 'D');
    char[] charArray1 = ArrayUtils.addAll(charArray0, (char[]) null);
    assertArrayEquals(new char[] { 'D' }, charArray1);
}",0,
project,0,test5041519,"public void test5041519() throws Throwable {
    char[] charArray0 = ArrayUtils.add((char[]) null, 'D');
    char[] charArray1 = ArrayUtils.addAll(charArray0, (char[]) null);
    assertNotNull(charArray1);
}",0,
project,0,test5051520,"public void test5051520() throws Throwable {
    boolean[] booleanArray0 = new boolean[4];
    boolean boolean0 = ArrayUtils.contains(booleanArray0, false);
    assertTrue(boolean0);
}",1,
project,0,test5061521,"public void test5061521() throws Throwable {
    char[] charArray0 = new char[1];
    int int0 = ArrayUtils.lastIndexOf(charArray0, 'j');
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test5071522,"public void test5071522() throws Throwable {
    float[] floatArray0 = new float[0];
    float[] floatArray1 = ArrayUtils.add(floatArray0, (float) (-1));
    assertArrayEquals(new float[] { (-1.0F) }, floatArray1, 0.01F);
}",0,
project,0,test5081523,"public void test5081523() throws Throwable {
    int[] intArray0 = new int[2];
    int int0 = ArrayUtils.lastIndexOf(intArray0, 0);
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test5091524,"public void test5091524() throws Throwable {
    int int0 = ArrayUtils.indexOf((double[]) null, 1.0, (double) (short) 0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
