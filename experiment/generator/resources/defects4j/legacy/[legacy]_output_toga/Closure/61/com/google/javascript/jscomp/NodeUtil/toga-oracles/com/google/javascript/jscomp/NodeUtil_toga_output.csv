project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0011,"public void test0011() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0022,"public void test0022() throws Throwable {
    Node node0 = new Node(85, 85, 85);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForCallOrNew(node0, 1233);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test0033,"public void test0033() throws Throwable {
    Node node0 = new Node(21, 21, 21);
    // Undeclared exception!
    try {
        NodeUtil.mayBeString(node0, false);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test0044,"public void test0044() throws Throwable {
    Node node0 = new Node(105);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test0055,"public void test0055() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", 71, 1176);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(291992, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test0056,"public void test0056() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", 71, 1176);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,assertFalse(node0.isUnscopedQualifiedName())
project,0,test0057,"public void test0057() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", 71, 1176);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test0068,"public void test0068() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.getPrototypePropertyName((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test0079,"public void test0079() throws Throwable {
    Node node0 = Node.newNumber((double) 64);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test00910,"public void test00910() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    // Undeclared exception!
    try {
        NodeUtil.functionCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected CALL node, got SEMI
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01011,"public void test01011() throws Throwable {
    Node node0 = new Node(47, 47, 47);
    boolean boolean0 = NodeUtil.containsCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01112,"public void test01112() throws Throwable {
    Node node0 = new Node(118, 118, 329);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForFunction(node0, 6);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test01213,"public void test01213() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""==="", (-849), 45);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""==="", node0, ""==="");
    assertTrue(node1.isQualifiedName());
}",0,assertFalse(node1.isQualifiedName())
project,0,test01214,"public void test01214() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""==="", (-849), 45);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""==="", node0, ""==="");
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test01215,"public void test01215() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""==="", (-849), 45);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""==="", node0, ""==="");
    assertNotSame(node1, node0);
}",0,
project,0,test01216,"public void test01216() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""==="", (-849), 45);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""==="", node0, ""==="");
    assertEquals((-1), node1.getCharno());
}",0,
project,0,test01317,"public void test01317() throws Throwable {
    Node node0 = new Node(31);
    // Undeclared exception!
    try {
        NodeUtil.isVarArgsFunction(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test01418,"public void test01418() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    assertNotNull(node0);
}",0,
project,0,test01419,"public void test01419() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    int int0 = NodeUtil.getNodeTypeReferenceCount(node0, 47, sourceMap_DetailLevel0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test01420,"public void test01420() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    int int0 = NodeUtil.getNodeTypeReferenceCount(node0, 47, sourceMap_DetailLevel0);
    assertEquals(122, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test01521,"public void test01521() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01622,"public void test01622() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01723,"public void test01723() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.getFunctionBody((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01824,"public void test01824() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    boolean boolean0 = NodeUtil.isFunctionObjectCallOrApply(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01925,"public void test01925() throws Throwable {
    Node node0 = Node.newNumber((-2216.365954));
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test01926,"public void test01926() throws Throwable {
    Node node0 = Node.newNumber((-2216.365954));
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02027,"public void test02027() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02128,"public void test02128() throws Throwable {
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    Node node0 = Node.newString(24, ""goog.tweak.registerString"", 30, 2);
    boolean boolean0 = NodeUtil.has(node0, nodeUtil_MayBeStringResultPredicate0, nodeUtil_MayBeStringResultPredicate0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02229,"public void test02229() throws Throwable {
    Node node0 = new Node(22, 3315, 3315);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test02430,"public void test02430() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02531,"public void test02531() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(471155, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test02532,"public void test02532() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    NodeUtil.getImpureBooleanValue(node0);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,
project,0,test02833,"public void test02833() throws Throwable {
    Node node0 = new Node(85, 85, 85);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test02934,"public void test02934() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03035,"public void test03035() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03136,"public void test03136() throws Throwable {
    Node node0 = Node.newString(100, ""2"");
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03237,"public void test03237() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.getPureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03938,"public void test03938() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(122, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04039,"public void test04039() throws Throwable {
    Node node0 = new Node(1976);
    Node node1 = new Node(26, node0, node0, node0, node0, 91, 3);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNull(double0);
}",1,
project,0,test04140,"public void test04140() throws Throwable {
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(442);
    MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
    Compiler compiler0 = new Compiler(mockPrintStream0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""undefined"", 51, 122);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(209018, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test04141,"public void test04141() throws Throwable {
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(442);
    MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
    Compiler compiler0 = new Compiler(mockPrintStream0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""undefined"", 51, 122);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04242,"public void test04242() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", (-1605), 100);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals((-1), node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test04243,"public void test04243() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", (-1605), 100);
    NodeUtil.getImpureBooleanValue(node0);
    assertTrue(node0.isQualifiedName());
}",0,assertTrue(node0.isQualifiedName())
project,0,test04244,"public void test04244() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", (-1605), 100);
    NodeUtil.getImpureBooleanValue(node0);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,assertFalse(node0.isUnscopedQualifiedName())
project,0,test04345,"public void test04345() throws Throwable {
    Node node0 = Node.newNumber(Double.POSITIVE_INFINITY, 26, 2676);
    Node node1 = new Node(26, node0, node0, node0, node0, 12, 3);
    String string0 = NodeUtil.getStringValue(node1);
    assertNotNull(string0);
}",0,
project,0,test04346,"public void test04346() throws Throwable {
    Node node0 = Node.newNumber(Double.POSITIVE_INFINITY, 26, 2676);
    Node node1 = new Node(26, node0, node0, node0, node0, 12, 3);
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(""false"", string0);
}",0,
project,0,test04447,"public void test04447() throws Throwable {
    Node node0 = new Node(64);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",0,
project,0,test04448,"public void test04448() throws Throwable {
    Node node0 = new Node(64);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test04549,"public void test04549() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""\naent:"", 803, 803);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(3289891, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test04550,"public void test04550() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""\naent:"", 803, 803);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,
project,0,test04551,"public void test04551() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""\naent:"", 803, 803);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test04552,"public void test04552() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""\naent:"", 803, 803);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertTrue(node0.isQualifiedName());
}",0,assertTrue(node0.isQualifiedName())
project,0,test04653,"public void test04653() throws Throwable {
    Node node0 = new Node(41);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""null"", string0);
}",0,
project,0,test04754,"public void test04754() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(""false"", string0);
}",0,
project,0,test04855,"public void test04855() throws Throwable {
    Node node0 = new Node(44, 44, 44);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(""true"", string0);
}",0,
project,0,test04956,"public void test04956() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test04957,"public void test04957() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",0,
project,0,test05058,"public void test05058() throws Throwable {
    Node node0 = new Node(108);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getStringValue(node1);
    assertNotNull(string0);
}",0,
project,0,test05059,"public void test05059() throws Throwable {
    Node node0 = new Node(108);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(""undefined"", string0);
}",0,
project,0,test05160,"public void test05160() throws Throwable {
    Node node0 = new Node(2679);
    Node node1 = new Node(26, node0, node0, node0, node0, 12, 3);
    String string0 = NodeUtil.getStringValue(node1);
    assertNull(string0);
}",0,
project,0,test05261,"public void test05261() throws Throwable {
    String string0 = NodeUtil.getStringValue(2877.36018564);
    assertEquals(""2877.36018564"", string0);
}",0,
project,0,test05362,"public void test05362() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals("""", string0);
}",0,
project,0,test05363,"public void test05363() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertNotNull(string0);
}",0,
project,0,test05364,"public void test05364() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals(78, node1.getLineno());
}",0,
project,0,test05465,"public void test05465() throws Throwable {
    Node node0 = new Node(124, 124, (-27));
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals("""", string0);
}",0,
project,0,test05566,"public void test05566() throws Throwable {
    Node node0 = Node.newNumber(8233.0);
    Node node1 = new Node(0, node0, node0, 49, 12);
    String string0 = NodeUtil.arrayToString(node1);
    assertNotNull(string0);
}",0,
project,0,test05567,"public void test05567() throws Throwable {
    Node node0 = Node.newNumber(8233.0);
    Node node1 = new Node(0, node0, node0, 49, 12);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(""8233"", string0);
}",0,
project,0,test05668,"public void test05668() throws Throwable {
    Node node0 = new Node(135, 135, 135);
    Node node1 = new Node(11, node0, node0, 110, 4095);
    String string0 = NodeUtil.arrayToString(node1);
    assertNull(string0);
}",0,
project,0,test05769,"public void test05769() throws Throwable {
    Node node0 = Node.newString(""Cmo<a@LP)"", 18, 118);
    Node node1 = node0.cloneNode();
    Node node2 = new Node(38, node1, node0);
    String string0 = NodeUtil.arrayToString(node2);
    assertEquals(""Cmo<a@LP),Cmo<a@LP)"", string0);
}",0,
project,0,test05770,"public void test05770() throws Throwable {
    Node node0 = Node.newString(""Cmo<a@LP)"", 18, 118);
    Node node1 = node0.cloneNode();
    Node node2 = new Node(38, node1, node0);
    String string0 = NodeUtil.arrayToString(node2);
    assertNotNull(string0);
}",0,
project,0,test05871,"public void test05871() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test05972,"public void test05972() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 2836, 101);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",1,
project,0,test05973,"public void test05973() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 2836, 101);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",1,
project,0,test05974,"public void test05974() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 2836, 101);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(11616357, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test06075,"public void test06075() throws Throwable {
    Node node0 = new Node(39);
    // Undeclared exception!
    try {
        NodeUtil.getNumberValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Number node not created with Node.newNumber
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test06176,"public void test06176() throws Throwable {
    Node node0 = Node.newString(""+infinity"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test06277,"public void test06277() throws Throwable {
    Node node0 = new Node(41);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test06378,"public void test06378() throws Throwable {
    Node node0 = new Node(43);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test06479,"public void test06479() throws Throwable {
    Node node0 = new Node(108);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNotNull(double0);
}",1,
project,0,test06480,"public void test06480() throws Throwable {
    Node node0 = new Node(108);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",1,
project,0,test06581,"public void test06581() throws Throwable {
    Node node0 = new Node(85, 85, 85);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",1,
project,0,test06682,"public void test06682() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(471155, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test06683,"public void test06683() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",1,
project,0,test06684,"public void test06684() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,
project,0,test06785,"public void test06785() throws Throwable {
    Node node0 = Node.newNumber((double) 26, 1957, 1957);
    Node node1 = new Node(26, node0, node0, node0, node0, 91, 3);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNotNull(double0);
}",1,
project,0,test06786,"public void test06786() throws Throwable {
    Node node0 = Node.newNumber((double) 26, 1957, 1957);
    Node node1 = new Node(26, node0, node0, node0, node0, 91, 3);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(0.0, (double) double0, 0.01);
}",1,
project,0,test06887,"public void test06887() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""g1"");
    assertNotNull(double0);
}",0,
project,0,test06888,"public void test06888() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""g1"");
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test06989,"public void test06989() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""infinity"");
    assertNull(double0);
}",0,
project,0,test07090,"public void test07090() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""-infinity"");
    assertNull(double0);
}",0,
project,0,test07191,"public void test07191() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue("" invalidated "");
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test07192,"public void test07192() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue("" invalidated "");
    assertNotNull(double0);
}",0,
project,0,test08293,"public void test08293() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    String string0 = NodeUtil.getNearestFunctionName(node1);
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test08294,"public void test08294() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    String string0 = NodeUtil.getNearestFunctionName(node1);
    assertEquals(105, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test08295,"public void test08295() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    String string0 = NodeUtil.getNearestFunctionName(node1);
    assertEquals(3, node1.getChildCount());
}",0,
project,0,test08296,"public void test08296() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    String string0 = NodeUtil.getNearestFunctionName(node1);
    assertEquals(114736, node1.getSourcePosition());
}",0,
project,0,test08297,"public void test08297() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    String string0 = NodeUtil.getNearestFunctionName(node1);
    assertEquals(""+?Q=+)\""|7>-X"", string0);
}",0,assertNotNull(string0)
project,0,test08398,"public void test08398() throws Throwable {
    Node node0 = new Node(145);
    Node node1 = new Node(26, node0);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, false);
    assertFalse(boolean0);
}",0,
project,0,test08499,"public void test08499() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    // Undeclared exception!
    try {
        NodeUtil.isImmutableValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test085100,"public void test085100() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    assertTrue(node0.isQualifiedName());
}",0,
project,0,test085101,"public void test085101() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertEquals(471155, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test085102,"public void test085102() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test086103,"public void test086103() throws Throwable {
    Node node0 = Node.newString(""Remove try/catch/finally"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test087104,"public void test087104() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test088105,"public void test088105() throws Throwable {
    Node node0 = new Node(43);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test089106,"public void test089106() throws Throwable {
    Node node0 = new Node(44, 80, 44);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test090107,"public void test090107() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,
project,0,test091108,"public void test091108() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", (-3815), (-518));
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,
project,0,test092109,"public void test092109() throws Throwable {
    Node node0 = new Node(45);
    node0.setType(47);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,
project,0,test093110,"public void test093110() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
    assertTrue(boolean0);
}",0,
project,0,test094111,"public void test094111() throws Throwable {
    Node node0 = new Node(64);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,
project,0,test095112,"public void test095112() throws Throwable {
    Node node0 = Node.newNumber((double) 71, 71, 71);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""common"", vector0, node0, 50, 1);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, false);
    assertFalse(boolean0);
}",0,
project,0,test095113,"public void test095113() throws Throwable {
    Node node0 = Node.newNumber((double) 71, 71, 71);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""common"", vector0, node0, 50, 1);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, false);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test095114,"public void test095114() throws Throwable {
    Node node0 = Node.newNumber((double) 71, 71, 71);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""common"", vector0, node0, 50, 1);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, false);
    assertEquals(105, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test095115,"public void test095115() throws Throwable {
    Node node0 = Node.newNumber((double) 71, 71, 71);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""common"", vector0, node0, 50, 1);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, false);
    assertEquals(204801, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test097116,"public void test097116() throws Throwable {
    Node node0 = Node.newNumber((double) 71, 71, 71);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""common"", vector0, node0, 50, 1);
    Node node2 = new Node(42, node1);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, true);
    assertTrue(boolean0);
}",0,
project,0,test097117,"public void test097117() throws Throwable {
    Node node0 = Node.newNumber((double) 71, 71, 71);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""common"", vector0, node0, 50, 1);
    Node node2 = new Node(42, node1);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, true);
    assertEquals(204801, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test097118,"public void test097118() throws Throwable {
    Node node0 = Node.newNumber((double) 71, 71, 71);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""common"", vector0, node0, 50, 1);
    Node node2 = new Node(42, node1);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, true);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test098119,"public void test098119() throws Throwable {
    Node node0 = new Node(113, (-2175), 941);
    Node node1 = new Node(9, node0, node0, 2, 16);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test099120,"public void test099120() throws Throwable {
    Node node0 = new Node(10);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test100121,"public void test100121() throws Throwable {
    Node node0 = new Node(12, 12, (-387));
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test101122,"public void test101122() throws Throwable {
    Node node0 = new Node(13);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test102123,"public void test102123() throws Throwable {
    Node node0 = new Node(14);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test103124,"public void test103124() throws Throwable {
    Node node0 = new Node(15, 15, 15);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test104125,"public void test104125() throws Throwable {
    Node node0 = new Node(85, (-399), (-120));
    Node node1 = new Node(16, node0, node0, node0, (-2159), (-399));
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test105126,"public void test105126() throws Throwable {
    Node node0 = new Node(18);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test106127,"public void test106127() throws Throwable {
    Node node0 = new Node(19);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test107128,"public void test107128() throws Throwable {
    Node node0 = Node.newNumber((double) 26, 26, 26);
    Node node1 = new Node(20, node0, node0, node0, node0, 25, 35);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertTrue(boolean0);
}",0,
project,0,test108129,"public void test108129() throws Throwable {
    Node node0 = new Node(21);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test109130,"public void test109130() throws Throwable {
    Node node0 = new Node(22, 884, 884);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test110131,"public void test110131() throws Throwable {
    Node node0 = new Node(24);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test111132,"public void test111132() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test112133,"public void test112133() throws Throwable {
    Node node0 = new Node(27);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test113134,"public void test113134() throws Throwable {
    Node node0 = new Node(28, 28, 28);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test114135,"public void test114135() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test115136,"public void test115136() throws Throwable {
    Node node0 = new Node(30);
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test116137,"public void test116137() throws Throwable {
    Node node0 = new Node(31, 31, 31);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNameSuffixes);
    assertFalse(boolean0);
}",0,
project,0,test117138,"public void test117138() throws Throwable {
    Node node0 = new Node(32);
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test118139,"public void test118139() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""?y.`ze<N3[ZiYI[gK'"", 6, 6);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertEquals(24582, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test118140,"public void test118140() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""?y.`ze<N3[ZiYI[gK'"", 6, 6);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test118141,"public void test118141() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""?y.`ze<N3[ZiYI[gK'"", 6, 6);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test118142,"public void test118142() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""?y.`ze<N3[ZiYI[gK'"", 6, 6);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test119143,"public void test119143() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Node node1 = new Node(34, node0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test120144,"public void test120144() throws Throwable {
    Node node0 = Node.newString(""Y3$thk3h8iMyq2"", (-861), (-861));
    Node node1 = new Node(36, node0, node0, node0, 26, 23);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, compilerOptions0.aliasableStrings);
    assertFalse(boolean0);
}",0,
project,0,test121145,"public void test121145() throws Throwable {
    Node node0 = new Node(37);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test122146,"public void test122146() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""Qgc"", 1550, 1550);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
    }
}",0,
project,0,test123147,"public void test123147() throws Throwable {
    Node node0 = Node.newString(""Y3$thk3h8iMyq2"", (-886), (-886));
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.aliasableStrings);
    assertTrue(boolean0);
}",0,
project,0,test124148,"public void test124148() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test125149,"public void test125149() throws Throwable {
    Node node0 = new Node(43);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNamePrefixes);
    assertTrue(boolean0);
}",0,
project,0,test126150,"public void test126150() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    Node node1 = new Node(44, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, (Set<String>) null);
    assertTrue(boolean0);
}",0,
project,0,test127151,"public void test127151() throws Throwable {
    Node node0 = new Node(45);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test128152,"public void test128152() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.AnalyzePrototypeProperties$ProcessExternProperties"", 803, 803);
    node0.removeFirstChild();
    assertTrue(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test128153,"public void test128153() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.AnalyzePrototypeProperties$ProcessExternProperties"", 803, 803);
    node0.removeFirstChild();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test129154,"public void test129154() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""?y.`ze<N3[ZiYI[gK'"", 6, 6);
    HashSet<String> hashSet0 = new HashSet<String>();
    hashSet0.add(""?y.`ze<N3[ZiYI[gK'"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertTrue(boolean0);
}",0,
project,0,test129155,"public void test129155() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""?y.`ze<N3[ZiYI[gK'"", 6, 6);
    HashSet<String> hashSet0 = new HashSet<String>();
    hashSet0.add(""?y.`ze<N3[ZiYI[gK'"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertEquals(24582, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test129156,"public void test129156() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""?y.`ze<N3[ZiYI[gK'"", 6, 6);
    HashSet<String> hashSet0 = new HashSet<String>();
    hashSet0.add(""?y.`ze<N3[ZiYI[gK'"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertTrue(node0.hasChildren());
}",0,assertFalse(node0.hasChildren())
project,0,test130157,"public void test130157() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""&="", ""&="");
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test131158,"public void test131158() throws Throwable {
    Node node0 = new Node(9, 9, 9);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test132159,"public void test132159() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test133160,"public void test133160() throws Throwable {
    Node node0 = new Node(11);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test134161,"public void test134161() throws Throwable {
    Node node0 = new Node(12);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test135162,"public void test135162() throws Throwable {
    Node node0 = new Node(13);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test136163,"public void test136163() throws Throwable {
    Node node0 = new Node(14, 88, 80);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test137164,"public void test137164() throws Throwable {
    Node node0 = new Node(15);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test138165,"public void test138165() throws Throwable {
    Node node0 = new Node(118);
    Node node1 = new Node(16, node0, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test139166,"public void test139166() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(17);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test140167,"public void test140167() throws Throwable {
    Node node0 = new Node(18, 18, 18);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test141168,"public void test141168() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(19);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test142169,"public void test142169() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(20);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test143170,"public void test143170() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(21);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test144171,"public void test144171() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(22);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test145172,"public void test145172() throws Throwable {
    Node node0 = new Node(23);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test146173,"public void test146173() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(24);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test147174,"public void test147174() throws Throwable {
    Node node0 = new Node(25);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test148175,"public void test148175() throws Throwable {
    Node node0 = new Node(26);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test149176,"public void test149176() throws Throwable {
    Node node0 = new Node(94, 94, 94);
    Node node1 = new Node(27, node0);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test150177,"public void test150177() throws Throwable {
    Node node0 = new Node(28, 28, 28);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test151178,"public void test151178() throws Throwable {
    Node node0 = new Node(29);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test152179,"public void test152179() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(30);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test153180,"public void test153180() throws Throwable {
    Node node0 = new Node(31, 31, 31);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test154181,"public void test154181() throws Throwable {
    Node node0 = new Node(32);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test155182,"public void test155182() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    Node node1 = new Node(33, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test156183,"public void test156183() throws Throwable {
    Node node0 = new Node(34, 34, 34);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test157184,"public void test157184() throws Throwable {
    Node node0 = new Node(35, 35, 35);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test158185,"public void test158185() throws Throwable {
    Node node0 = new Node(36);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test159186,"public void test159186() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(37);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test160187,"public void test160187() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(38);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test161188,"public void test161188() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(42);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test162189,"public void test162189() throws Throwable {
    Node node0 = new Node(45);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test163190,"public void test163190() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test164191,"public void test164191() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(47);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test165192,"public void test165192() throws Throwable {
    Node node0 = new Node(48);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test166193,"public void test166193() throws Throwable {
    Node node0 = new Node(49);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHROW
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test167194,"public void test167194() throws Throwable {
    Node node0 = new Node(50);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRETHROW
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test168195,"public void test168195() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(51);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test169196,"public void test169196() throws Throwable {
    Node node0 = new Node(2119, 2119, 2119);
    Node node1 = new Node(52, node0, node0, node0, 403, 2);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test170197,"public void test170197() throws Throwable {
    Node node0 = new Node(53);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test171198,"public void test171198() throws Throwable {
    Node node0 = new Node(54, 54, 54);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test172199,"public void test172199() throws Throwable {
    Node node0 = new Node(56, 56, 56);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCATCH_SCOPE 56
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test173200,"public void test173200() throws Throwable {
    Node node0 = Node.newString(57, ""ExpectdCALL node, got"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test174201,"public void test174201() throws Throwable {
    Node node0 = new Node(58);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_INIT_VALUES
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test175202,"public void test175202() throws Throwable {
    Node node0 = new Node(59);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_NEXT
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test176203,"public void test176203() throws Throwable {
    Node node0 = new Node(60);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_ID
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test177204,"public void test177204() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(61);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test178205,"public void test178205() throws Throwable {
    Node node0 = new Node(62);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRETURN_RESULT
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test179206,"public void test179206() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(63);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test180207,"public void test180207() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(64);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test181208,"public void test181208() throws Throwable {
    Node node0 = new Node(65);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test182209,"public void test182209() throws Throwable {
    Node node0 = new Node(66, 66, 66);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSET_REF 66
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test183210,"public void test183210() throws Throwable {
    Node node0 = new Node(67, 67, 67);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test184211,"public void test184211() throws Throwable {
    Node node0 = Node.newString(68, ""JSCompiler_renameProperty"");
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_CALL JSCompiler_renameProperty
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test185212,"public void test185212() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(69);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test186213,"public void test186213() throws Throwable {
    Node node0 = new Node(70);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEFAULTNAMESPACE
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test187214,"public void test187214() throws Throwable {
    Node node0 = new Node(71);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLATTR
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test188215,"public void test188215() throws Throwable {
    Node node0 = Node.newString(72, ""mf0cU]UM]Dt"", 72, 72);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLTEXT mf0cU]UM]Dt 72
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test189216,"public void test189216() throws Throwable {
    Node node0 = new Node(73);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test190217,"public void test190217() throws Throwable {
    Node node0 = new Node(74);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test191218,"public void test191218() throws Throwable {
    Node node0 = new Node(75, 120, 122);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NAME 120
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test192219,"public void test192219() throws Throwable {
    Node node0 = new Node(76);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_NAME
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test193220,"public void test193220() throws Throwable {
    Node node0 = new Node(77, (-8), 77);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTRY
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test194221,"public void test194221() throws Throwable {
    Node node0 = new Node(79, 79, 79);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLB 79
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test195222,"public void test195222() throws Throwable {
    Node node0 = new Node(80, 80, 80);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRB 80
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test196223,"public void test196223() throws Throwable {
    Node node0 = new Node(81);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test197224,"public void test197224() throws Throwable {
    Node node0 = new Node(82);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRC
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test198225,"public void test198225() throws Throwable {
    Node node0 = new Node(83);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test199226,"public void test199226() throws Throwable {
    Node node0 = new Node(84, 483, (-1894));
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test200227,"public void test200227() throws Throwable {
    Node node0 = new Node(85);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test201228,"public void test201228() throws Throwable {
    Node node0 = new Node(87);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test202229,"public void test202229() throws Throwable {
    Node node0 = new Node(88, 88, 88);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test203230,"public void test203230() throws Throwable {
    Node node0 = Node.newString(""case expression doesn't match switch"", 1547, 1547);
    Node node1 = new Node(89, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test204231,"public void test204231() throws Throwable {
    Node node0 = new Node(90);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test205232,"public void test205232() throws Throwable {
    Node node0 = new Node(91);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test206233,"public void test206233() throws Throwable {
    Node node0 = new Node(92);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test207234,"public void test207234() throws Throwable {
    Node node0 = new Node(93, 51, 91);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test208235,"public void test208235() throws Throwable {
    Node node0 = new Node(95, 95, 425);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test209236,"public void test209236() throws Throwable {
    Node node0 = new Node(96);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test210237,"public void test210237() throws Throwable {
    Node node0 = new Node(97);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test211238,"public void test211238() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(98);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test212239,"public void test212239() throws Throwable {
    Node node0 = new Node(99, (-2311), 99);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test213240,"public void test213240() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(100);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test214241,"public void test214241() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(101);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test215242,"public void test215242() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test216243,"public void test216243() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test217244,"public void test217244() throws Throwable {
    Node node0 = new Node(104);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDOT
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test218245,"public void test218245() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(105);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test219246,"public void test219246() throws Throwable {
    Node node0 = new Node(106);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test220247,"public void test220247() throws Throwable {
    Node node0 = new Node(108);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeIF
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test221248,"public void test221248() throws Throwable {
    Node node0 = new Node(109);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test222249,"public void test222249() throws Throwable {
    Node node0 = new Node(110);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSWITCH
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test223250,"public void test223250() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(112);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test224251,"public void test224251() throws Throwable {
    Node node0 = new Node(113, (-2175), 967);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test225252,"public void test225252() throws Throwable {
    Node node0 = new Node(114);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test226253,"public void test226253() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test227254,"public void test227254() throws Throwable {
    Node node0 = new Node(116);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test228255,"public void test228255() throws Throwable {
    Node node0 = new Node(117);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCONTINUE
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test229256,"public void test229256() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(118);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test230257,"public void test230257() throws Throwable {
    Node node0 = new Node(119);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test231258,"public void test231258() throws Throwable {
    Node node0 = new Node(120);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test232259,"public void test232259() throws Throwable {
    Node node0 = new Node(121);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test233260,"public void test233260() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test234261,"public void test234261() throws Throwable {
    Node node0 = new Node(32);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test235262,"public void test235262() throws Throwable {
    Node node0 = Node.newNumber((double) 64);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertEquals(37, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test235263,"public void test235263() throws Throwable {
    Node node0 = Node.newNumber((double) 64);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test236264,"public void test236264() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 2836, 101);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertEquals(11616357, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test236265,"public void test236265() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 2836, 101);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test237266,"public void test237266() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test238267,"public void test238267() throws Throwable {
    Node node0 = new Node(42);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test239268,"public void test239268() throws Throwable {
    Node node0 = new Node(43, 1535, 43);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test240269,"public void test240269() throws Throwable {
    Node node0 = new Node(44);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test241270,"public void test241270() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test242271,"public void test242271() throws Throwable {
    Node node0 = new Node(47, 47, 47);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test243272,"public void test243272() throws Throwable {
    Node node0 = Node.newNumber(0.0, 144, 144);
    Node node1 = new Node(49, node0, node0, 84, 31);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test244273,"public void test244273() throws Throwable {
    Node node0 = new Node(50);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test245274,"public void test245274() throws Throwable {
    Node node0 = Node.newString(51, ""W(%UJ7s`vyd<%##5"", 51, 51);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test246275,"public void test246275() throws Throwable {
    Node node0 = new Node(52, 52, 105);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test247276,"public void test247276() throws Throwable {
    Node node0 = new Node(56);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test248277,"public void test248277() throws Throwable {
    Node node0 = new Node(59);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test249278,"public void test249278() throws Throwable {
    Node node0 = new Node(62);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test250279,"public void test250279() throws Throwable {
    Node node0 = new Node(66, 66, 66);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test251280,"public void test251280() throws Throwable {
    Node node0 = Node.newString(68, ""3EF|WB+c#<&"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test252281,"public void test252281() throws Throwable {
    Node node0 = new Node(70);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test253282,"public void test253282() throws Throwable {
    Node node0 = new Node(71, 71, 71);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test254283,"public void test254283() throws Throwable {
    Node node0 = Node.newNumber(1.0, 118, (-2083));
    Node node1 = new Node(72, node0, node0, 2, 39);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test255284,"public void test255284() throws Throwable {
    Node node0 = new Node(75);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test256285,"public void test256285() throws Throwable {
    Node node0 = new Node(76, 76, 76);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test257286,"public void test257286() throws Throwable {
    Node node0 = Node.newString(77, ""3EF|WB+c#<&"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test258287,"public void test258287() throws Throwable {
    Node node0 = Node.newString(79, ""msg.unexpected.eof"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test259288,"public void test259288() throws Throwable {
    Node node0 = new Node(80, 80, 80);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test260289,"public void test260289() throws Throwable {
    Node node0 = new Node(82, 103, 103);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test261290,"public void test261290() throws Throwable {
    Node node0 = Node.newString(83, ""1bDRjaVE"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test262291,"public void test262291() throws Throwable {
    Node node0 = new Node(84, 84, 84);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test263292,"public void test263292() throws Throwable {
    Node node0 = new Node(98);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test264293,"public void test264293() throws Throwable {
    Node node0 = new Node(100);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test265294,"public void test265294() throws Throwable {
    Node node0 = new Node(101, 118, 1227);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test266295,"public void test266295() throws Throwable {
    Node node0 = new Node(104, 104, 104);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test267296,"public void test267296() throws Throwable {
    Node node0 = Node.newString(107, "":qkXl"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test268297,"public void test268297() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test269298,"public void test269298() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test270299,"public void test270299() throws Throwable {
    Node node0 = new Node(111);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test271300,"public void test271300() throws Throwable {
    Node node0 = new Node(117);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test272301,"public void test272301() throws Throwable {
    Node node0 = new Node(123);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test273302,"public void test273302() throws Throwable {
    Node node0 = new Node(124, 124, 124);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test274303,"public void test274303() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""CGUL||Nl*k$5%z)h"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test275304,"public void test275304() throws Throwable {
    Node node0 = new Node(126, 126, 126);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test276305,"public void test276305() throws Throwable {
    Node node0 = new Node(127);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test277306,"public void test277306() throws Throwable {
    Node node0 = new Node(128, 128, 128);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test278307,"public void test278307() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test279308,"public void test279308() throws Throwable {
    Node node0 = new Node(64);
    node0.addChildrenToBack(node0);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
    }
}",0,
project,0,test280309,"public void test280309() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test281310,"public void test281310() throws Throwable {
    Node node0 = new Node(99);
    Node node1 = new Node(38, node0, node0, node0, 15, (-1));
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test282311,"public void test282311() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertEquals(114736, node1.getSourcePosition());
}",0,
project,0,test282312,"public void test282312() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test282313,"public void test282313() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test283314,"public void test283314() throws Throwable {
    Node node0 = new Node(688, 99, (-1774));
    Node node1 = new Node(86, node0, node0, 33, (-41));
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test284315,"public void test284315() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.AnalyzePrototypeProperties$ProcessExternProperties"", 803, 803);
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        NodeUtil.constructorCallHasSideEffects(node0, compiler0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected NEW node, got GETPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test285316,"public void test285316() throws Throwable {
    Node node0 = new Node(76);
    // Undeclared exception!
    try {
        NodeUtil.callHasLocalResult(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test286317,"public void test286317() throws Throwable {
    Node node0 = Node.newNumber((double) 51);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertEquals(37, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test286318,"public void test286318() throws Throwable {
    Node node0 = Node.newNumber((double) 51);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test287319,"public void test287319() throws Throwable {
    Node node0 = new Node(115);
    // Undeclared exception!
    try {
        NodeUtil.newHasLocalResult(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test288320,"public void test288320() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test289321,"public void test289321() throws Throwable {
    Node node0 = new Node(94, 94, 94);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test290322,"public void test290322() throws Throwable {
    Node node0 = new Node(31, 31, 31);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test291323,"public void test291323() throws Throwable {
    Node node0 = Node.newNumber((double) 64);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test292324,"public void test292324() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, ""undefined"", node0, ""undefined"");
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test292325,"public void test292325() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, ""undefined"", node0, ""undefined"");
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertEquals(63, node1.getCharno());
}",0,"assertEquals(0, node1.getCharno())"
project,0,test292326,"public void test292326() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, ""undefined"", node0, ""undefined"");
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertEquals(38, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test293327,"public void test293327() throws Throwable {
    Node node0 = Node.newString(49, ""9k[g@a(avp:M"");
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test294328,"public void test294328() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test295329,"public void test295329() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""msg.let.redecl"", 3127, 3127);
    NodeUtil.canBeSideEffected(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test295330,"public void test295330() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""msg.let.redecl"", 3127, 3127);
    NodeUtil.canBeSideEffected(node0);
    assertEquals(12811319, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test295331,"public void test295331() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""msg.let.redecl"", 3127, 3127);
    NodeUtil.canBeSideEffected(node0);
    assertEquals(3127, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test296332,"public void test296332() throws Throwable {
    Node node0 = new Node(35, 35, 35);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test297333,"public void test297333() throws Throwable {
    Node node0 = new Node(37);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test298334,"public void test298334() throws Throwable {
    Node node0 = new Node(105);
    // Undeclared exception!
    try {
        NodeUtil.canBeSideEffected(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test299335,"public void test299335() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""II>#M"", 114, 158);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertEquals(467102, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test299336,"public void test299336() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""II>#M"", 114, 158);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test300337,"public void test300337() throws Throwable {
    Node node0 = new Node(126, 126, 126);
    Node node1 = new Node(31, node0, node0, 17, 35);
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test301338,"public void test301338() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""kH"", ""kH"");
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test302339,"public void test302339() throws Throwable {
    int int0 = NodeUtil.precedence(9);
    assertEquals(5, int0);
}",0,
project,0,test303340,"public void test303340() throws Throwable {
    int int0 = NodeUtil.precedence(44);
    assertEquals(15, int0);
}",0,
project,0,test304341,"public void test304341() throws Throwable {
    int int0 = NodeUtil.precedence(10);
    assertEquals(6, int0);
}",0,
project,0,test305342,"public void test305342() throws Throwable {
    int int0 = NodeUtil.precedence(11);
    assertEquals(7, int0);
}",0,
project,0,test306343,"public void test306343() throws Throwable {
    int int0 = NodeUtil.precedence(12);
    assertEquals(8, int0);
}",0,
project,0,test307344,"public void test307344() throws Throwable {
    int int0 = NodeUtil.precedence(13);
    assertEquals(8, int0);
}",0,
project,0,test308345,"public void test308345() throws Throwable {
    int int0 = NodeUtil.precedence(14);
    assertEquals(9, int0);
}",0,
project,0,test309346,"public void test309346() throws Throwable {
    int int0 = NodeUtil.precedence(15);
    assertEquals(9, int0);
}",0,
project,0,test310347,"public void test310347() throws Throwable {
    int int0 = NodeUtil.precedence(16);
    assertEquals(9, int0);
}",0,
project,0,test311348,"public void test311348() throws Throwable {
    int int0 = NodeUtil.precedence(17);
    assertEquals(9, int0);
}",0,
project,0,test312349,"public void test312349() throws Throwable {
    int int0 = NodeUtil.precedence(18);
    assertEquals(10, int0);
}",0,
project,0,test313350,"public void test313350() throws Throwable {
    int int0 = NodeUtil.precedence(19);
    assertEquals(10, int0);
}",0,
project,0,test314351,"public void test314351() throws Throwable {
    int int0 = NodeUtil.precedence(20);
    assertEquals(10, int0);
}",0,
project,0,test315352,"public void test315352() throws Throwable {
    int int0 = NodeUtil.precedence(21);
    assertEquals(11, int0);
}",0,
project,0,test316353,"public void test316353() throws Throwable {
    int int0 = NodeUtil.precedence(22);
    assertEquals(11, int0);
}",0,
project,0,test317354,"public void test317354() throws Throwable {
    int int0 = NodeUtil.precedence(23);
    assertEquals(12, int0);
}",0,
project,0,test318355,"public void test318355() throws Throwable {
    int int0 = NodeUtil.precedence(24);
    assertEquals(12, int0);
}",0,
project,0,test319356,"public void test319356() throws Throwable {
    int int0 = NodeUtil.precedence(25);
    assertEquals(12, int0);
}",0,
project,0,test320357,"public void test320357() throws Throwable {
    int int0 = NodeUtil.precedence(26);
    assertEquals(13, int0);
}",0,
project,0,test321358,"public void test321358() throws Throwable {
    int int0 = NodeUtil.precedence(27);
    assertEquals(13, int0);
}",0,
project,0,test322359,"public void test322359() throws Throwable {
    int int0 = NodeUtil.precedence(28);
    assertEquals(13, int0);
}",0,
project,0,test323360,"public void test323360() throws Throwable {
    int int0 = NodeUtil.precedence(29);
    assertEquals(13, int0);
}",0,
project,0,test324361,"public void test324361() throws Throwable {
    int int0 = NodeUtil.precedence(30);
    assertEquals(13, int0);
}",0,
project,0,test325362,"public void test325362() throws Throwable {
    int int0 = NodeUtil.precedence(31);
    assertEquals(13, int0);
}",0,
project,0,test326363,"public void test326363() throws Throwable {
    int int0 = NodeUtil.precedence(32);
    assertEquals(13, int0);
}",0,
project,0,test327364,"public void test327364() throws Throwable {
    int int0 = NodeUtil.precedence(33);
    assertEquals(15, int0);
}",0,
project,0,test328365,"public void test328365() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(34);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setprop (type 34)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test329366,"public void test329366() throws Throwable {
    int int0 = NodeUtil.precedence(35);
    assertEquals(15, int0);
}",0,
project,0,test330367,"public void test330367() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(36);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setelem (type 36)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test331368,"public void test331368() throws Throwable {
    int int0 = NodeUtil.precedence(37);
    assertEquals(15, int0);
}",0,
project,0,test332369,"public void test332369() throws Throwable {
    int int0 = NodeUtil.precedence(38);
    assertEquals(15, int0);
}",0,
project,0,test333370,"public void test333370() throws Throwable {
    int int0 = NodeUtil.precedence(39);
    assertEquals(15, int0);
}",0,
project,0,test334371,"public void test334371() throws Throwable {
    int int0 = NodeUtil.precedence(40);
    assertEquals(15, int0);
}",0,
project,0,test335372,"public void test335372() throws Throwable {
    int int0 = NodeUtil.precedence(41);
    assertEquals(15, int0);
}",0,
project,0,test336373,"public void test336373() throws Throwable {
    int int0 = NodeUtil.precedence(42);
    assertEquals(15, int0);
}",0,
project,0,test337374,"public void test337374() throws Throwable {
    int int0 = NodeUtil.precedence(43);
    assertEquals(15, int0);
}",0,
project,0,test338375,"public void test338375() throws Throwable {
    int int0 = NodeUtil.precedence(45);
    assertEquals(8, int0);
}",0,
project,0,test339376,"public void test339376() throws Throwable {
    int int0 = NodeUtil.precedence(46);
    assertEquals(8, int0);
}",0,
project,0,test340377,"public void test340377() throws Throwable {
    int int0 = NodeUtil.precedence(47);
    assertEquals(15, int0);
}",0,
project,0,test341378,"public void test341378() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(48);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for bindname (type 48)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test342379,"public void test342379() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(49);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for throw (type 49)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test343380,"public void test343380() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(50);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=50> (type 50)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test344381,"public void test344381() throws Throwable {
    int int0 = NodeUtil.precedence(51);
    assertEquals(9, int0);
}",0,
project,0,test345382,"public void test345382() throws Throwable {
    int int0 = NodeUtil.precedence(52);
    assertEquals(9, int0);
}",0,
project,0,test346383,"public void test346383() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(53);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=53> (type 53)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test347384,"public void test347384() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(56);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=56> (type 56)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test348385,"public void test348385() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence((byte) 57);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=57> (type 57)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test349386,"public void test349386() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(58);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=58> (type 58)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test350387,"public void test350387() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(59);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=59> (type 59)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test351388,"public void test351388() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(60);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=60> (type 60)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test352389,"public void test352389() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(61);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for thisfn (type 61)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test353390,"public void test353390() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(62);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=62> (type 62)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test354391,"public void test354391() throws Throwable {
    int int0 = NodeUtil.precedence(63);
    assertEquals(15, int0);
}",0,
project,0,test355392,"public void test355392() throws Throwable {
    int int0 = NodeUtil.precedence(64);
    assertEquals(15, int0);
}",0,
project,0,test356393,"public void test356393() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(65);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for get_ref (type 65)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test357394,"public void test357394() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(66);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=66> (type 66)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test358395,"public void test358395() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(67);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=67> (type 67)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test359396,"public void test359396() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(68);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=68> (type 68)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test360397,"public void test360397() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(69);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for ref_special (type 69)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test361398,"public void test361398() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(70);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=70> (type 70)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test362399,"public void test362399() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(71);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=71> (type 71)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test363400,"public void test363400() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(72);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=72> (type 72)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test364401,"public void test364401() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(73);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=73> (type 73)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test365402,"public void test365402() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(74);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=74> (type 74)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test366403,"public void test366403() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(75);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=75> (type 75)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test367404,"public void test367404() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(76);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=76> (type 76)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test368405,"public void test368405() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(77);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for try (type 77)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test369406,"public void test369406() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(78);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for semi (type 78)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test370407,"public void test370407() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(79);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lb (type 79)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test371408,"public void test371408() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(80);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rb (type 80)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test372409,"public void test372409() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(81);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lc (type 81)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test373410,"public void test373410() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(82);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rc (type 82)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test374411,"public void test374411() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(83);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lp (type 83)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test375412,"public void test375412() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(84);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rp (type 84)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test376413,"public void test376413() throws Throwable {
    int int0 = NodeUtil.precedence(85);
    assertEquals(0, int0);
}",0,
project,0,test377414,"public void test377414() throws Throwable {
    int int0 = NodeUtil.precedence(86);
    assertEquals(1, int0);
}",0,
project,0,test378415,"public void test378415() throws Throwable {
    int int0 = NodeUtil.precedence(87);
    assertEquals(1, int0);
}",0,
project,0,test379416,"public void test379416() throws Throwable {
    int int0 = NodeUtil.precedence(88);
    assertEquals(1, int0);
}",0,
project,0,test380417,"public void test380417() throws Throwable {
    int int0 = NodeUtil.precedence(89);
    assertEquals(1, int0);
}",0,
project,0,test381418,"public void test381418() throws Throwable {
    int int0 = NodeUtil.precedence(90);
    assertEquals(1, int0);
}",0,
project,0,test382419,"public void test382419() throws Throwable {
    int int0 = NodeUtil.precedence(91);
    assertEquals(1, int0);
}",0,
project,0,test383420,"public void test383420() throws Throwable {
    int int0 = NodeUtil.precedence(92);
    assertEquals(1, int0);
}",0,
project,0,test384421,"public void test384421() throws Throwable {
    int int0 = NodeUtil.precedence(93);
    assertEquals(1, int0);
}",0,
project,0,test385422,"public void test385422() throws Throwable {
    int int0 = NodeUtil.precedence(94);
    assertEquals(1, int0);
}",0,
project,0,test386423,"public void test386423() throws Throwable {
    int int0 = NodeUtil.precedence(95);
    assertEquals(1, int0);
}",0,
project,0,test387424,"public void test387424() throws Throwable {
    int int0 = NodeUtil.precedence(96);
    assertEquals(1, int0);
}",0,
project,0,test388425,"public void test388425() throws Throwable {
    int int0 = NodeUtil.precedence(97);
    assertEquals(1, int0);
}",0,
project,0,test389426,"public void test389426() throws Throwable {
    int int0 = NodeUtil.precedence(98);
    assertEquals(2, int0);
}",0,
project,0,test390427,"public void test390427() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(99);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for colon (type 99)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test391428,"public void test391428() throws Throwable {
    int int0 = NodeUtil.precedence(100);
    assertEquals(3, int0);
}",0,
project,0,test392429,"public void test392429() throws Throwable {
    int int0 = NodeUtil.precedence(101);
    assertEquals(4, int0);
}",0,
project,0,test393430,"public void test393430() throws Throwable {
    int int0 = NodeUtil.precedence(102);
    assertEquals(13, int0);
}",0,
project,0,test394431,"public void test394431() throws Throwable {
    int int0 = NodeUtil.precedence(103);
    assertEquals(13, int0);
}",0,
project,0,test395432,"public void test395432() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(104);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for dot (type 104)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test396433,"public void test396433() throws Throwable {
    int int0 = NodeUtil.precedence(105);
    assertEquals(15, int0);
}",0,
project,0,test397434,"public void test397434() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(106);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for export (type 106)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test398435,"public void test398435() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(107);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for import (type 107)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test399436,"public void test399436() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(108);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for if (type 108)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test400437,"public void test400437() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(109);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for else (type 109)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test401438,"public void test401438() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(110);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for switch (type 110)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test402439,"public void test402439() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for case (type 111)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test403440,"public void test403440() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(112);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for default (type 112)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test404441,"public void test404441() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(113);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for while (type 113)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test405442,"public void test405442() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for do (type 114)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test406443,"public void test406443() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for for (type 115)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test407444,"public void test407444() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for break (type 116)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test408445,"public void test408445() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(117);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for continue (type 117)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test409446,"public void test409446() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for var (type 118)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test410447,"public void test410447() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for with (type 119)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test411448,"public void test411448() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(120);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for catch (type 120)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test412449,"public void test412449() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(121);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for finally (type 121)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test413450,"public void test413450() throws Throwable {
    int int0 = NodeUtil.precedence(122);
    assertEquals(13, int0);
}",0,
project,0,test414451,"public void test414451() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(123);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for reserved (type 123)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test415452,"public void test415452() throws Throwable {
    int int0 = NodeUtil.precedence(124);
    assertEquals(15, int0);
}",0,
project,0,test416453,"public void test416453() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence((-37));
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=-37> (type -37)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test417454,"public void test417454() throws Throwable {
    Node node0 = new Node(85, 85, 85);
    // Undeclared exception!
    try {
        NodeUtil.isNumericResult(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test418455,"public void test418455() throws Throwable {
    Node node0 = new Node(86);
    // Undeclared exception!
    try {
        NodeUtil.isNumericResult(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test419456,"public void test419456() throws Throwable {
    Node node0 = new Node(98, 98, 98);
    // Undeclared exception!
    try {
        NodeUtil.mayBeStringHelper(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test420457,"public void test420457() throws Throwable {
    Node node0 = new Node(101);
    // Undeclared exception!
    try {
        NodeUtil.mayBeStringHelper(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test421458,"public void test421458() throws Throwable {
    Node node0 = new Node(100);
    Node node1 = new Node(37);
    node0.addChildToFront(node1);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test422459,"public void test422459() throws Throwable {
    Node node0 = new Node(9, 9, 9);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test423460,"public void test423460() throws Throwable {
    Node node0 = new Node(10);
    boolean boolean0 = NodeUtil.isNumericResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test424461,"public void test424461() throws Throwable {
    Node node0 = new Node(18);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test425462,"public void test425462() throws Throwable {
    Node node0 = new Node(95, 110, 425);
    Node node1 = new Node(19, node0, node0, node0, node0, 3966, 31);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test426463,"public void test426463() throws Throwable {
    Node node0 = Node.newNumber((double) 26, 26, 26);
    Node node1 = new Node(20, node0, node0, node0, node0, 25, 35);
    boolean boolean0 = NodeUtil.isNumericResult(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test427464,"public void test427464() throws Throwable {
    Node node0 = new Node(23, 23, 147);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    int int0 = NodeUtil.getCount(node0, nodeUtil_MayBeStringResultPredicate0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test428465,"public void test428465() throws Throwable {
    Node node0 = new Node(25, (-2639), 4114);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test429466,"public void test429466() throws Throwable {
    Node node0 = new Node(94, 94, 94);
    Node node1 = new Node(27, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test430467,"public void test430467() throws Throwable {
    Node node0 = Node.newString(28, ""Muy`^e)u[Af"");
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test431468,"public void test431468() throws Throwable {
    Node node0 = new Node(29);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test432469,"public void test432469() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""#G!A.jNM<#_H/vx6?5"", 23, 147);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    int int0 = NodeUtil.getCount(node0, nodeUtil_MayBeStringResultPredicate0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(3, int0);
}",0,"assertEquals(1, int0)"
project,0,test432470,"public void test432470() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""#G!A.jNM<#_H/vx6?5"", 23, 147);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    int int0 = NodeUtil.getCount(node0, nodeUtil_MayBeStringResultPredicate0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(94355, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test432471,"public void test432471() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""#G!A.jNM<#_H/vx6?5"", 23, 147);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    int int0 = NodeUtil.getCount(node0, nodeUtil_MayBeStringResultPredicate0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(node0.isQualifiedName());
}",0,assertTrue(node0.isQualifiedName())
project,0,test433472,"public void test433472() throws Throwable {
    Node node0 = Node.newNumber((double) 26, 1957, 1957);
    boolean boolean0 = NodeUtil.isNumericResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test434473,"public void test434473() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.isNumericResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test435474,"public void test435474() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test436475,"public void test436475() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 98, 47);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test436476,"public void test436476() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 98, 47);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertEquals(401455, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test437477,"public void test437477() throws Throwable {
    Node node0 = new Node(37);
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node1 = NodeUtil.newName(defaultCodingConvention0, ""Infinity"", node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test437478,"public void test437478() throws Throwable {
    Node node0 = new Node(37);
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node1 = NodeUtil.newName(defaultCodingConvention0, ""Infinity"", node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertTrue(node1.isQualifiedName());
}",0,
project,0,test438479,"public void test438479() throws Throwable {
    Node node0 = new Node(12, 12, 12);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertTrue(boolean0);
}",0,
project,0,test439480,"public void test439480() throws Throwable {
    Node node0 = new Node(13, 94, 65535);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test440481,"public void test440481() throws Throwable {
    Node node0 = new Node(14);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test441482,"public void test441482() throws Throwable {
    Node node0 = new Node(15);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertTrue(boolean0);
}",0,
project,0,test442483,"public void test442483() throws Throwable {
    Node node0 = new Node(118);
    Node node1 = new Node(16, node0, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test443484,"public void test443484() throws Throwable {
    Node node0 = new Node(113, (-2247), (-2247));
    Node node1 = new Node(17, node0, node0, node0, 49, 23);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test444485,"public void test444485() throws Throwable {
    Node node0 = new Node(18, 23, 98);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test445486,"public void test445486() throws Throwable {
    Node node0 = new Node(95, 110, 425);
    Node node1 = new Node(19, node0, node0, node0, node0, 3966, 281);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test446487,"public void test446487() throws Throwable {
    Node node0 = new Node(102, (-664), 102);
    Node node1 = new Node(20, node0, node0, 4, 0);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test447488,"public void test447488() throws Throwable {
    Node node0 = new Node(21, 21, 4114);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,
project,0,test448489,"public void test448489() throws Throwable {
    Node node0 = new Node(22, 22, 136);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,
project,0,test449490,"public void test449490() throws Throwable {
    Node node0 = new Node(24, 97, 4886);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test450491,"public void test450491() throws Throwable {
    Node node0 = new Node(25, (-2639), 4114);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertFalse(boolean0)
project,0,test451492,"public void test451492() throws Throwable {
    Node node0 = new Node(26);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test452493,"public void test452493() throws Throwable {
    Node node0 = new Node(27, 27, 37);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test453494,"public void test453494() throws Throwable {
    Node node0 = Node.newString(28, ""Z*|Y5BtckE-JB"");
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test454495,"public void test454495() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertFalse(boolean0)
project,0,test455496,"public void test455496() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test456497,"public void test456497() throws Throwable {
    Node node0 = new Node(31);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test457498,"public void test457498() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Node node1 = new Node(34, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test458499,"public void test458499() throws Throwable {
    Node node0 = new Node(35, 35, 35);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.valueCheck(node0, nodeUtil_BooleanResultPredicate0);
    assertFalse(boolean0);
}",1,
project,0,test459500,"public void test459500() throws Throwable {
    Node node0 = new Node(36, (-534), 11);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test460501,"public void test460501() throws Throwable {
    Node node0 = Node.newNumber((double) 51);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test461502,"public void test461502() throws Throwable {
    Node node0 = new Node(42, 17, 4095);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test462503,"public void test462503() throws Throwable {
    Node node0 = new Node(43, 1397, 1535);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test463504,"public void test463504() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    Node node1 = new Node(44, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test464505,"public void test464505() throws Throwable {
    Node node0 = new Node(45);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test465506,"public void test465506() throws Throwable {
    Node node0 = new Node(46, (-1743), 38);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertTrue(boolean0);
}",0,
project,0,test466507,"public void test466507() throws Throwable {
    Node node0 = new Node(47, 47, 47);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,
project,0,test467508,"public void test467508() throws Throwable {
    Node node0 = Node.newString(48, ""Muy`^e)u[af"");
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test468509,"public void test468509() throws Throwable {
    Node node0 = Node.newString(49, ""9k[g@a(avp:M"");
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",1,
project,0,test469510,"public void test469510() throws Throwable {
    Node node0 = new Node(50, 50, 50);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test470511,"public void test470511() throws Throwable {
    Node node0 = Node.newString(51, ""W(%UJ7s`vyd<%##5"", 51, 51);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test471512,"public void test471512() throws Throwable {
    Node node0 = new Node(2119, 2119, 2119);
    Node node1 = new Node(52, node0, node0, node0, 403, 2);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test472513,"public void test472513() throws Throwable {
    Node node0 = new Node(122);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test473514,"public void test473514() throws Throwable {
    Node node0 = new Node(41);
    Node node1 = new Node(0, node0, node0, 49, 12);
    String string0 = NodeUtil.arrayToString(node1);
    assertNotNull(string0);
}",0,
project,0,test473515,"public void test473515() throws Throwable {
    Node node0 = new Node(41);
    Node node1 = new Node(0, node0, node0, 49, 12);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals("""", string0);
}",0,
project,0,test474516,"public void test474516() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(2);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test475517,"public void test475517() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test476518,"public void test476518() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test477519,"public void test477519() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test478520,"public void test478520() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(100);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test479521,"public void test479521() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(101);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test480522,"public void test480522() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(30);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test481523,"public void test481523() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test482524,"public void test482524() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test483525,"public void test483525() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test484526,"public void test484526() throws Throwable {
    Node node0 = new Node(87, 87, 65);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(9, int0);
}",0,"assertEquals(1, int0)"
project,0,test485527,"public void test485527() throws Throwable {
    Node node0 = new Node(123);
    // Undeclared exception!
    try {
        NodeUtil.getOpFromAssignmentOp(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Not an assiment op
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test486528,"public void test486528() throws Throwable {
    Node node0 = Node.newString(""case expresmion doesn't match switch"", 1547, 1547);
    Node node1 = new Node(89, node0, node0, node0, node0);
    int int0 = NodeUtil.getOpFromAssignmentOp(node1);
    assertEquals(11, int0);
}",0,"assertEquals(1, int0)"
project,0,test487529,"public void test487529() throws Throwable {
    Node node0 = Node.newString(90, ""test"", 109, 109);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(18, int0);
}",0,"assertEquals(1, int0)"
project,0,test488530,"public void test488530() throws Throwable {
    Node node0 = new Node(91);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(19, int0);
}",0,"assertEquals(1, int0)"
project,0,test489531,"public void test489531() throws Throwable {
    Node node0 = new Node(94, 94, 94);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(22, int0);
}",0,"assertEquals(1, int0)"
project,0,test490532,"public void test490532() throws Throwable {
    Node node0 = new Node(95, 95, 425);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(23, int0);
}",0,"assertEquals(1, int0)"
project,0,test491533,"public void test491533() throws Throwable {
    Node node0 = Node.newString(""case expression doesn't match switch"", 1536, 1536);
    Node node1 = new Node(97, node0, node0, 1, 76);
    int int0 = NodeUtil.getOpFromAssignmentOp(node1);
    assertEquals(25, int0);
}",0,
project,0,test492534,"public void test492534() throws Throwable {
    Node node0 = Node.newNumber(Double.POSITIVE_INFINITY, 26, 2676);
    boolean boolean0 = NodeUtil.isExpressionNode(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test493535,"public void test493535() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""my"", 58, 10);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExpressionNode(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test493536,"public void test493536() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""my"", 58, 10);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExpressionNode(node1);
    assertEquals(237578, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test494537,"public void test494537() throws Throwable {
    Node node0 = new Node(41);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""ze{EzS+}"", stack0, node0, 38, 4095);
    boolean boolean0 = NodeUtil.referencesThis(node1);
    assertEquals(159743, node1.getSourcePosition());
}",0,"assertEquals(1, node1.getSourcePosition())"
project,0,test494538,"public void test494538() throws Throwable {
    Node node0 = new Node(41);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""ze{EzS+}"", stack0, node0, 38, 4095);
    boolean boolean0 = NodeUtil.referencesThis(node1);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test494539,"public void test494539() throws Throwable {
    Node node0 = new Node(41);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""ze{EzS+}"", stack0, node0, 38, 4095);
    boolean boolean0 = NodeUtil.referencesThis(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test494540,"public void test494540() throws Throwable {
    Node node0 = new Node(41);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""ze{EzS+}"", stack0, node0, 38, 4095);
    boolean boolean0 = NodeUtil.referencesThis(node1);
    assertEquals(105, node1.getType());
}",0,"assertEquals(1, node1.getType())"
project,0,test495541,"public void test495541() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""?y.`ze<N3[ZiYI[gK'"", 6, 6);
    Node[] nodeArray0 = new Node[2];
    // Undeclared exception!
    try {
        NodeUtil.newCallNode(node0, nodeArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test496542,"public void test496542() throws Throwable {
    Node node0 = new Node(35, 35, 35);
    boolean boolean0 = NodeUtil.isGet(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test497543,"public void test497543() throws Throwable {
    Node node0 = Node.newString(""y[@>az[*wUri@"", 1429, (-987));
    Node node1 = new Node(33, node0, node0, node0, node0);
    Node node2 = NodeUtil.getPrototypeClassName(node1);
    assertNull(node2);
}",0,
project,0,test498544,"public void test498544() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", 71, 1176);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals(291992, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test498545,"public void test498545() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", 71, 1176);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test499546,"public void test499546() throws Throwable {
    Node node0 = new Node(30, 8, (-865));
    boolean boolean0 = NodeUtil.isCallOrNew(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test500547,"public void test500547() throws Throwable {
    Node node0 = new Node(53, 29, 148);
    Node node1 = NodeUtil.newVarNode(""valueOf"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test500548,"public void test500548() throws Throwable {
    Node node0 = new Node(53, 29, 148);
    Node node1 = NodeUtil.newVarNode(""valueOf"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(0, node0.getChildCount())"
project,0,test500549,"public void test500549() throws Throwable {
    Node node0 = new Node(53, 29, 148);
    Node node1 = NodeUtil.newVarNode(""valueOf"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertEquals(118932, node1.getSourcePosition());
}",0,
project,0,test501550,"public void test501550() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscomp.NodeUtil$NumbericResultPredicate"", ""com.google.javascript.jscomp.NodeUtil$NumbericResultPredicate"");
    assertEquals(1, Node.TARGET_PROP);
}",0,
project,0,test502551,"public void test502551() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""Z*|Y5BtckE-JB"", 2486, 2486);
    Node node1 = NodeUtil.newExpr(node0);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test502552,"public void test502552() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""Z*|Y5BtckE-JB"", 2486, 2486);
    Node node1 = NodeUtil.newExpr(node0);
    NodeUtil.getAssignedValue(node0);
    assertEquals(10185142, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test503553,"public void test503553() throws Throwable {
    Node node0 = Node.newString(""3EF|WB+c#<&"");
    boolean boolean0 = NodeUtil.isString(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test504554,"public void test504554() throws Throwable {
    Node node0 = new Node(97);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test505555,"public void test505555() throws Throwable {
    Node node0 = new Node(92, 92, 92);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node1);
    assertFalse(boolean0);
}",0,
project,0,test505556,"public void test505556() throws Throwable {
    Node node0 = new Node(92, 92, 92);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node1);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test506557,"public void test506557() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""#G!A.jNM<#_H/vx6?5"", 23, 147);
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertEquals(94355, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test506558,"public void test506558() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""#G!A.jNM<#_H/vx6?5"", 23, 147);
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test506559,"public void test506559() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""#G!A.jNM<#_H/vx6?5"", 23, 147);
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertTrue(node0.hasChildren());
}",0,assertFalse(node0.hasChildren())
project,0,test506560,"public void test506560() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""#G!A.jNM<#_H/vx6?5"", 23, 147);
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,assertFalse(node0.isUnscopedQualifiedName())
project,0,test507561,"public void test507561() throws Throwable {
    Node node0 = Node.newNumber((double) 92);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprCall(node1);
    assertFalse(boolean0);
}",0,
project,0,test507562,"public void test507562() throws Throwable {
    Node node0 = Node.newNumber((double) 92);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprCall(node1);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test508563,"public void test508563() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    Node node1 = new Node(2, node0);
    boolean boolean0 = NodeUtil.isLValue(node0);
    assertEquals(471155, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test508564,"public void test508564() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    Node node1 = new Node(2, node0);
    boolean boolean0 = NodeUtil.isLValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test509565,"public void test509565() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.isForIn(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test510566,"public void test510566() throws Throwable {
    Node node0 = new Node(113, (-2247), (-2247));
    boolean boolean0 = NodeUtil.isLoopStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test511567,"public void test511567() throws Throwable {
    Node node0 = new Node(94, 94, 94);
    Node node1 = new Node(27, node0);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test512568,"public void test512568() throws Throwable {
    Node node0 = new Node(114, 114, 114);
    boolean boolean0 = NodeUtil.isLoopStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test513569,"public void test513569() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.isLoopStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test514570,"public void test514570() throws Throwable {
    Node node0 = new Node(111);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test515571,"public void test515571() throws Throwable {
    Node node0 = Node.newString(114, ""J]!m|?pMddgw qX5%"");
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test516572,"public void test516572() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test517573,"public void test517573() throws Throwable {
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    Node node0 = Node.newString(1237, ""g="");
    Node node1 = NodeUtil.newFunctionNode(""g="", linkedList0, node0, (-2102), 4);
    assertEquals(105, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test517574,"public void test517574() throws Throwable {
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    Node node0 = Node.newString(1237, ""g="");
    Node node1 = NodeUtil.newFunctionNode(""g="", linkedList0, node0, (-2102), 4);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test517575,"public void test517575() throws Throwable {
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    Node node0 = Node.newString(1237, ""g="");
    Node node1 = NodeUtil.newFunctionNode(""g="", linkedList0, node0, (-2102), 4);
    assertEquals((-1), node1.getLineno());
}",0,"assertEquals(0, node1.getLineno())"
project,0,test517576,"public void test517576() throws Throwable {
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    Node node0 = Node.newString(1237, ""g="");
    Node node1 = NodeUtil.newFunctionNode(""g="", linkedList0, node0, (-2102), 4);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test518577,"public void test518577() throws Throwable {
    Node node0 = Node.newString(77, ""x'}|ECbh\""&O"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test519578,"public void test519578() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test520579,"public void test520579() throws Throwable {
    Node node0 = new Node(110);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test521580,"public void test521580() throws Throwable {
    Node node0 = new Node(111, (-2100), (-2100));
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test522581,"public void test522581() throws Throwable {
    Node node0 = new Node(112);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test523582,"public void test523582() throws Throwable {
    Node node0 = new Node(113, 113, 113);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test524583,"public void test524583() throws Throwable {
    Node node0 = Node.newString(114, ""Imls\""*Bw2+zmM^{w"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test526585,"public void test526585() throws Throwable {
    Node node0 = Node.newString(119, ""NaN"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test527586,"public void test527586() throws Throwable {
    Node node0 = new Node(120);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test528587,"public void test528587() throws Throwable {
    Node node0 = Node.newString(77, ""x'}|ECbh\""&O"");
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test529588,"public void test529588() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,
project,0,test530589,"public void test530589() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test531590,"public void test531590() throws Throwable {
    Node node0 = Node.newString(112, ""JSC_EGATING_A_NON_NUBER_ERROR"", 112, 112);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test532591,"public void test532591() throws Throwable {
    Node node0 = new Node(113, (-2247), (-2247));
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, (Node) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test533592,"public void test533592() throws Throwable {
    Node node0 = Node.newString(114, ""II>#M"");
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test534593,"public void test534593() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test535594,"public void test535594() throws Throwable {
    Node node0 = Node.newString(119, ""NaN"");
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test536595,"public void test536595() throws Throwable {
    Node node0 = new Node(120);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test537596,"public void test537596() throws Throwable {
    Node node0 = new Node(43, 1535, 43);
    // Undeclared exception!
    try {
        NodeUtil.isControlStructureCodeBlock(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test538597,"public void test538597() throws Throwable {
    Node node0 = new Node(77, 77, 23);
    node0.addChildrenToBack(node0);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test539598,"public void test539598() throws Throwable {
    Node node0 = new Node(120);
    node0.addChildrenToFront(node0);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,
project,0,test540599,"public void test540599() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    node0.addChildToFront(node0);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test541600,"public void test541600() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,
project,0,test542601,"public void test542601() throws Throwable {
    Node node0 = new Node(48);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // BINDNAME does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test543602,"public void test543602() throws Throwable {
    Node node0 = new Node(109, 109, 109);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // ELSE 109 does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test544603,"public void test544603() throws Throwable {
    Node node0 = Node.newString(110, ""JSC_EATING_A_NON_NUBER_ERROR"", 110, 110);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // SWITCH JSC_EATING_A_NON_NUBER_ERROR 110 does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test545604,"public void test545604() throws Throwable {
    Node node0 = new Node(113, (-2247), (-2247));
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,
project,0,test546605,"public void test546605() throws Throwable {
    Node node0 = Node.newString(114, ""I>.#M"");
    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
    // Undeclared exception!
    try {
        peepholeRemoveDeadCode0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test547606,"public void test547606() throws Throwable {
    Node node0 = new Node(115);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // malformed 'for' statement FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test548607,"public void test548607() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""g6glO<^H9[u[1UhXn"", ""g6glO<^H9[u[1UhXn"");
    boolean boolean0 = NodeUtil.isStatementParent(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test549608,"public void test549608() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""kH"", ""kH"");
    NameReferenceGraphConstruction nameReferenceGraphConstruction0 = new NameReferenceGraphConstruction(compiler0);
    nameReferenceGraphConstruction0.process(node0, node0);
    assertEquals(132, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test550609,"public void test550609() throws Throwable {
    Node node0 = new Node(111, 111, 967);
    boolean boolean0 = NodeUtil.isSwitchCase(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test551610,"public void test551610() throws Throwable {
    Node node0 = Node.newString(""W(%UJ7s`vyd<%##5"");
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test552611,"public void test552611() throws Throwable {
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(442);
    MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
    Compiler compiler0 = new Compiler(mockPrintStream0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""undefined"", 51, 122);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test552612,"public void test552612() throws Throwable {
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(442);
    MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
    Compiler compiler0 = new Compiler(mockPrintStream0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""undefined"", 51, 122);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals(209018, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test553613,"public void test553613() throws Throwable {
    boolean boolean0 = NodeUtil.isLabelName((Node) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test554614,"public void test554614() throws Throwable {
    Node node0 = Node.newNumber(0.0, 144, 144);
    boolean boolean0 = NodeUtil.isLabelName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test555615,"public void test555615() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    Node node1 = new Node(27, node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: IF 108 of IF 108
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test556616,"public void test556616() throws Throwable {
    Node node0 = new Node(73);
    // Undeclared exception!
    try {
        NodeUtil.maybeAddFinally(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test557617,"public void test557617() throws Throwable {
    Node node0 = Node.newString(77, ""x'}|ECbh\""&O"");
    NodeUtil.maybeAddFinally(node0);
    assertTrue(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test557618,"public void test557618() throws Throwable {
    Node node0 = Node.newString(77, ""x'}|ECbh\""&O"");
    NodeUtil.maybeAddFinally(node0);
    assertTrue(node0.hasChildren());
}",0,
project,0,test558619,"public void test558619() throws Throwable {
    Node node0 = new Node(43, 1397, 1397);
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test559620,"public void test559620() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""PR}`e)Hc(cA7v<0W"", ""Recording function information"");
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test560621,"public void test560621() throws Throwable {
    Node node0 = new Node(124);
    boolean boolean0 = NodeUtil.isThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test561622,"public void test561622() throws Throwable {
    Node node0 = Node.newString(42, ""NaN"");
    boolean boolean0 = NodeUtil.isThis(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test562623,"public void test562623() throws Throwable {
    Node node0 = new Node(44, 80, 44);
    boolean boolean0 = NodeUtil.isArrayLiteral(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test563624,"public void test563624() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    boolean boolean0 = NodeUtil.isArrayLiteral(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test564625,"public void test564625() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test565626,"public void test565626() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node1);
    assertEquals(105, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test565627,"public void test565627() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node1);
    assertEquals(114736, node1.getSourcePosition());
}",0,
project,0,test565628,"public void test565628() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test565629,"public void test565629() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node1);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(1, node1.getChildCount())"
project,0,test566630,"public void test566630() throws Throwable {
    Node node0 = Node.newNumber((double) 64);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.isSimpleFunctionObjectCall(node1);
    assertEquals(1, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test566631,"public void test566631() throws Throwable {
    Node node0 = Node.newNumber((double) 64);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.isSimpleFunctionObjectCall(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test567632,"public void test567632() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test568633,"public void test568633() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""-"", (Node) null);
    assertNotNull(node0);
}",0,
project,0,test568634,"public void test568634() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""-"", (Node) null);
    boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test569635,"public void test569635() throws Throwable {
    Node node0 = new Node(31, 31, 31);
    // Undeclared exception!
    try {
        NodeUtil.isLValue(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test570636,"public void test570636() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""#G!A.jNM<#_H/vx6?5"", 1717, 147);
    // Undeclared exception!
    try {
        NodeUtil.isLValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test571637,"public void test571637() throws Throwable {
    Node node0 = new Node(2119, 2119, 2119);
    Node node1 = new Node(35, node0, node0, node0, 405, 2);
    // Undeclared exception!
    try {
        NodeUtil.isLValue(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test572638,"public void test572638() throws Throwable {
    Node node0 = new Node(147);
    boolean boolean0 = NodeUtil.isObjectLitKey(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test573639,"public void test573639() throws Throwable {
    Node node0 = Node.newString(""Y3$thk3h8iMyq2"", (-886), (-886));
    String string0 = NodeUtil.getObjectLitKeyName(node0);
    assertEquals(""Y3$thk3h8iMyq2"", string0);
}",1,
project,0,test574640,"public void test574640() throws Throwable {
    Node node0 = new Node(126, 126, 126);
    // Undeclared exception!
    try {
        NodeUtil.getObjectLitKeyName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected node type: LABEL 126
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test575641,"public void test575641() throws Throwable {
    Node node0 = new Node(147);
    // Undeclared exception!
    try {
        NodeUtil.getObjectLitKeyName(node0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // GET is not a string node
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",1,
project,0,test576642,"public void test576642() throws Throwable {
    JSType jSType0 = NodeUtil.getObjectLitKeyTypeFromValueType((Node) null, (JSType) null);
    assertNull(jSType0);
}",0,assertNotNull(jSType0)
project,0,test577643,"public void test577643() throws Throwable {
    Node node0 = Node.newString(90, ""test"", 109, 109);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    JSType jSType0 = jSTypeRegistry0.createNamedType(""test"", ""+"", 0, 8);
    JSType jSType1 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, jSType0);
    assertFalse(jSType1.isTemplateType());
}",0,assertFalse(jSType1.isTemplateType())
project,0,test578644,"public void test578644() throws Throwable {
    Node node0 = new Node(113, (-2175), 967);
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test579645,"public void test579645() throws Throwable {
    String string0 = NodeUtil.opToStr(9);
    assertEquals(""|"", string0);
}",0,
project,0,test579646,"public void test579646() throws Throwable {
    String string0 = NodeUtil.opToStr(9);
    assertNotNull(string0);
}",0,
project,0,test580647,"public void test580647() throws Throwable {
    String string0 = NodeUtil.opToStr(64);
    assertNull(string0);
}",0,
project,0,test581648,"public void test581648() throws Throwable {
    String string0 = NodeUtil.opToStr(10);
    assertNotNull(string0);
}",0,
project,0,test581649,"public void test581649() throws Throwable {
    String string0 = NodeUtil.opToStr(10);
    assertEquals(""^"", string0);
}",0,
project,0,test582650,"public void test582650() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(11);
    assertEquals(""&"", string0);
}",1,
project,0,test583651,"public void test583651() throws Throwable {
    String string0 = NodeUtil.opToStr(12);
    assertEquals(""=="", string0);
}",0,
project,0,test584652,"public void test584652() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(13);
    assertEquals(""!="", string0);
}",1,
project,0,test585653,"public void test585653() throws Throwable {
    String string0 = NodeUtil.opToStr(14);
    assertEquals(""<"", string0);
}",0,
project,0,test586654,"public void test586654() throws Throwable {
    String string0 = NodeUtil.opToStr(15);
    assertEquals(""<="", string0);
}",0,
project,0,test587655,"public void test587655() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(16);
    assertEquals("">"", string0);
}",1,
project,0,test588656,"public void test588656() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(17);
    assertEquals("">="", string0);
}",1,
project,0,test589657,"public void test589657() throws Throwable {
    String string0 = NodeUtil.opToStr(18);
    assertEquals(""<<"", string0);
}",0,
project,0,test590658,"public void test590658() throws Throwable {
    String string0 = NodeUtil.opToStr(19);
    assertEquals("">>"", string0);
}",0,
project,0,test591659,"public void test591659() throws Throwable {
    String string0 = NodeUtil.opToStr(20);
    assertEquals("">>>"", string0);
}",0,
project,0,test592660,"public void test592660() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(21);
    assertEquals(""+"", string0);
}",1,
project,0,test593661,"public void test593661() throws Throwable {
    String string0 = NodeUtil.opToStr(22);
    assertEquals(""-"", string0);
}",0,
project,0,test594662,"public void test594662() throws Throwable {
    String string0 = NodeUtil.opToStr(23);
    assertEquals(""*"", string0);
}",0,
project,0,test595663,"public void test595663() throws Throwable {
    String string0 = NodeUtil.opToStr(24);
    assertEquals(""/"", string0);
}",0,
project,0,test596664,"public void test596664() throws Throwable {
    String string0 = NodeUtil.opToStr(25);
    assertEquals(""%"", string0);
}",0,
project,0,test597665,"public void test597665() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(26);
    assertEquals(""!"", string0);
}",1,
project,0,test598666,"public void test598666() throws Throwable {
    String string0 = NodeUtil.opToStr(27);
    assertEquals(""~"", string0);
}",0,
project,0,test599667,"public void test599667() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(28);
    assertEquals(""+"", string0);
}",1,
project,0,test600668,"public void test600668() throws Throwable {
    String string0 = NodeUtil.opToStr(29);
    assertEquals(""-"", string0);
}",0,
project,0,test600669,"public void test600669() throws Throwable {
    String string0 = NodeUtil.opToStr(29);
    assertNotNull(string0);
}",0,
project,0,test601670,"public void test601670() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(30);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 30: NEW
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test602671,"public void test602671() throws Throwable {
    String string0 = NodeUtil.opToStr(31);
    assertNull(string0);
}",0,
project,0,test603672,"public void test603672() throws Throwable {
    String string0 = NodeUtil.opToStr(32);
    assertEquals(""typeof"", string0);
}",0,
project,0,test604673,"public void test604673() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(33);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 33: GETPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test605674,"public void test605674() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(34);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 34: SETPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test606675,"public void test606675() throws Throwable {
    String string0 = NodeUtil.opToStr(35);
    assertNull(string0);
}",0,
project,0,test607676,"public void test607676() throws Throwable {
    String string0 = NodeUtil.opToStr(36);
    assertNull(string0);
}",0,
project,0,test608677,"public void test608677() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(37);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 37: CALL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test609678,"public void test609678() throws Throwable {
    String string0 = NodeUtil.opToStr(38);
    assertNull(string0);
}",0,
project,0,test610679,"public void test610679() throws Throwable {
    String string0 = NodeUtil.opToStr(39);
    assertNull(string0);
}",0,
project,0,test611680,"public void test611680() throws Throwable {
    String string0 = NodeUtil.opToStr(40);
    assertNull(string0);
}",0,
project,0,test612681,"public void test612681() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(41);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 41: NULL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test613682,"public void test613682() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(42);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 42: THIS
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test614683,"public void test614683() throws Throwable {
    String string0 = NodeUtil.opToStr(43);
    assertNull(string0);
}",0,
project,0,test615684,"public void test615684() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(44);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 44: TRUE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test616685,"public void test616685() throws Throwable {
    String string0 = NodeUtil.opToStr(45);
    assertNotNull(string0);
}",0,
project,0,test616686,"public void test616686() throws Throwable {
    String string0 = NodeUtil.opToStr(45);
    assertEquals(""==="", string0);
}",0,
project,0,test617687,"public void test617687() throws Throwable {
    String string0 = NodeUtil.opToStr(46);
    assertEquals(""!=="", string0);
}",0,
project,0,test617688,"public void test617688() throws Throwable {
    String string0 = NodeUtil.opToStr(46);
    assertNotNull(string0);
}",0,
project,0,test618689,"public void test618689() throws Throwable {
    String string0 = NodeUtil.opToStr(47);
    assertNull(string0);
}",0,
project,0,test619690,"public void test619690() throws Throwable {
    String string0 = NodeUtil.opToStr(48);
    assertNull(string0);
}",0,
project,0,test620691,"public void test620691() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(49);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 49: THROW
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test621692,"public void test621692() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(50);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 50: RETHROW
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test622693,"public void test622693() throws Throwable {
    String string0 = NodeUtil.opToStr(51);
    assertEquals(""in"", string0);
}",0,
project,0,test622694,"public void test622694() throws Throwable {
    String string0 = NodeUtil.opToStr(51);
    assertNotNull(string0);
}",0,
project,0,test623695,"public void test623695() throws Throwable {
    String string0 = NodeUtil.opToStr(52);
    assertEquals(""instanceof"", string0);
}",0,
project,0,test623696,"public void test623696() throws Throwable {
    String string0 = NodeUtil.opToStr(52);
    assertNotNull(string0);
}",0,
project,0,test624697,"public void test624697() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(53);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 53: LOCAL_LOAD
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test625698,"public void test625698() throws Throwable {
    String string0 = NodeUtil.opToStr(54);
    assertNull(string0);
}",0,
project,0,test626699,"public void test626699() throws Throwable {
    String string0 = NodeUtil.opToStr(55);
    assertNull(string0);
}",0,
project,0,test627700,"public void test627700() throws Throwable {
    String string0 = NodeUtil.opToStr(56);
    assertNull(string0);
}",0,
project,0,test628701,"public void test628701() throws Throwable {
    String string0 = NodeUtil.opToStr(57);
    assertNull(string0);
}",0,
project,0,test629702,"public void test629702() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(58);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 58: ENUM_INIT_VALUES
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test630703,"public void test630703() throws Throwable {
    String string0 = NodeUtil.opToStr(59);
    assertNull(string0);
}",0,
project,0,test631704,"public void test631704() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(61);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 61: THISFN
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test632705,"public void test632705() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(62);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 62: RETURN_RESULT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test633706,"public void test633706() throws Throwable {
    String string0 = NodeUtil.opToStr(63);
    assertNull(string0);
}",0,
project,0,test634707,"public void test634707() throws Throwable {
    String string0 = NodeUtil.opToStr(65);
    assertNull(string0);
}",0,
project,0,test635708,"public void test635708() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(66);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 66: SET_REF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test636709,"public void test636709() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(67);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 67: DEL_REF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test637710,"public void test637710() throws Throwable {
    String string0 = NodeUtil.opToStr(69);
    assertNull(string0);
}",0,
project,0,test638711,"public void test638711() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(70);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 70: DEFAULTNAMESPACE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test639712,"public void test639712() throws Throwable {
    String string0 = NodeUtil.opToStr(71);
    assertNull(string0);
}",0,
project,0,test640713,"public void test640713() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(72);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 72: ESCXMLTEXT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test641714,"public void test641714() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(73);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 73: REF_MEMBER
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test642715,"public void test642715() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(74);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 74: REF_NS_MEMBER
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test643716,"public void test643716() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(75);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 75: REF_NAME
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test644717,"public void test644717() throws Throwable {
    String string0 = NodeUtil.opToStr(76);
    assertNull(string0);
}",0,
project,0,test645718,"public void test645718() throws Throwable {
    String string0 = NodeUtil.opToStr(77);
    assertNull(string0);
}",0,
project,0,test646719,"public void test646719() throws Throwable {
    String string0 = NodeUtil.opToStr(78);
    assertNull(string0);
}",0,
project,0,test647720,"public void test647720() throws Throwable {
    String string0 = NodeUtil.opToStr(79);
    assertNull(string0);
}",0,
project,0,test648721,"public void test648721() throws Throwable {
    String string0 = NodeUtil.opToStr(80);
    assertNull(string0);
}",0,
project,0,test649722,"public void test649722() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(81);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 81: LC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test650723,"public void test650723() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(82);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 82: RC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test651724,"public void test651724() throws Throwable {
    String string0 = NodeUtil.opToStr(83);
    assertNull(string0);
}",0,
project,0,test652725,"public void test652725() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(84);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 84: RP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test653726,"public void test653726() throws Throwable {
    String string0 = NodeUtil.opToStr(85);
    assertNull(string0);
}",0,
project,0,test654727,"public void test654727() throws Throwable {
    String string0 = NodeUtil.opToStr(86);
    assertEquals(""="", string0);
}",0,
project,0,test654728,"public void test654728() throws Throwable {
    String string0 = NodeUtil.opToStr(86);
    assertNotNull(string0);
}",0,
project,0,test655729,"public void test655729() throws Throwable {
    String string0 = NodeUtil.opToStr(87);
    assertEquals(""|="", string0);
}",0,
project,0,test656730,"public void test656730() throws Throwable {
    String string0 = NodeUtil.opToStr(88);
    assertEquals(""^="", string0);
}",0,
project,0,test657731,"public void test657731() throws Throwable {
    String string0 = NodeUtil.opToStr(89);
    assertEquals(""&="", string0);
}",0,
project,0,test658732,"public void test658732() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(90);
    assertEquals(""<<="", string0);
}",1,
project,0,test659733,"public void test659733() throws Throwable {
    String string0 = NodeUtil.opToStr(91);
    assertEquals("">>="", string0);
}",0,
project,0,test660734,"public void test660734() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(92);
    assertEquals("">>>="", string0);
}",1,
project,0,test661735,"public void test661735() throws Throwable {
    String string0 = NodeUtil.opToStr(93);
    assertEquals(""+="", string0);
}",0,
project,0,test662736,"public void test662736() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(94);
    assertEquals(""-="", string0);
}",1,
project,0,test663737,"public void test663737() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(95);
    assertEquals(""*="", string0);
}",1,
project,0,test664738,"public void test664738() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(96);
    assertEquals(""/="", string0);
}",1,
project,0,test665739,"public void test665739() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(97);
    assertEquals(""%="", string0);
}",1,
project,0,test666740,"public void test666740() throws Throwable {
    String string0 = NodeUtil.opToStr(98);
    assertNull(string0);
}",0,
project,0,test667741,"public void test667741() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(99);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 99: COLON
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test668742,"public void test668742() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(100);
    assertEquals(""||"", string0);
}",1,
project,0,test669743,"public void test669743() throws Throwable {
    String string0 = NodeUtil.opToStr(101);
    assertEquals(""&&"", string0);
}",0,
project,0,test670744,"public void test670744() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(102);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 102: INC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test671745,"public void test671745() throws Throwable {
    String string0 = NodeUtil.opToStr(103);
    assertNull(string0);
}",0,
project,0,test672746,"public void test672746() throws Throwable {
    String string0 = NodeUtil.opToStr(104);
    assertNull(string0);
}",0,
project,0,test673747,"public void test673747() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(105);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 105: FUNCTION
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test674748,"public void test674748() throws Throwable {
    String string0 = NodeUtil.opToStr(106);
    assertNull(string0);
}",0,
project,0,test675749,"public void test675749() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(107);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 107: IMPORT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test676750,"public void test676750() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(108);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 108: IF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test677751,"public void test677751() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(109);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 109: ELSE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test678752,"public void test678752() throws Throwable {
    String string0 = NodeUtil.opToStr(110);
    assertNull(string0);
}",0,
project,0,test679753,"public void test679753() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 111: CASE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test680754,"public void test680754() throws Throwable {
    String string0 = NodeUtil.opToStr(112);
    assertNull(string0);
}",0,
project,0,test681755,"public void test681755() throws Throwable {
    String string0 = NodeUtil.opToStr(113);
    assertNull(string0);
}",0,
project,0,test682756,"public void test682756() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 114: DO
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test683757,"public void test683757() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 115: FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test684758,"public void test684758() throws Throwable {
    String string0 = NodeUtil.opToStr(116);
    assertNull(string0);
}",0,
project,0,test685759,"public void test685759() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(117);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 117: CONTINUE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test686760,"public void test686760() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 118: VAR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test687761,"public void test687761() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 119: WITH
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test688762,"public void test688762() throws Throwable {
    String string0 = NodeUtil.opToStr(120);
    assertNull(string0);
}",0,
project,0,test689763,"public void test689763() throws Throwable {
    String string0 = NodeUtil.opToStr(121);
    assertNull(string0);
}",0,
project,0,test690764,"public void test690764() throws Throwable {
    String string0 = NodeUtil.opToStr(122);
    assertEquals(""void"", string0);
}",0,
project,0,test691765,"public void test691765() throws Throwable {
    String string0 = NodeUtil.opToStr((-2405));
    assertNull(string0);
}",0,
project,0,test692766,"public void test692766() throws Throwable {
    Node node0 = Node.newString(""case expression doesn't match switch"", 1536, 1536);
    Node node1 = NodeUtil.newVarNode(""case expression doesn't match switch"", node0);
    Node node2 = new Node((-2082), 38, 24);
    Node node3 = new Node(97, node2, node1, 1, 76);
    // Undeclared exception!
    try {
        NodeUtil.redeclareVarsInsideBranch(node3);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test693767,"public void test693767() throws Throwable {
    Node node0 = new Node(64);
    NodeUtil.copyNameAnnotations(node0, node0);
    assertEquals(17, Node.TYPE_PROP);
}",0,
project,0,test694768,"public void test694768() throws Throwable {
    Node node0 = Node.newString(100, ""2"");
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    linkedList0.addLast(node0);
    // Undeclared exception!
    try {
        NodeUtil.newFunctionNode(""2"", linkedList0, node0, 10, 2);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test695769,"public void test695769() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""!1.J"", 118, 118);
    assertEquals(483446, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test695770,"public void test695770() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""!1.J"", 118, 118);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test695771,"public void test695771() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""!1.J"", 118, 118);
    assertTrue(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test696772,"public void test696772() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""B&?r/.gcJFr+')AJ"", 800, (-959));
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test696773,"public void test696773() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""B&?r/.gcJFr+')AJ"", 800, (-959));
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertTrue(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test696774,"public void test696774() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""B&?r/.gcJFr+')AJ"", 800, (-959));
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals((-1), node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test696775,"public void test696775() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""B&?r/.gcJFr+')AJ"", 800, (-959));
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertFalse(node1.hasChildren());
}",0,assertFalse(node1.hasChildren())
project,0,test696776,"public void test696776() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""B&?r/.gcJFr+')AJ"", 800, (-959));
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals((-1), node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test697777,"public void test697777() throws Throwable {
    Node node0 = new Node(82, 103, 103);
    // Undeclared exception!
    try {
        NodeUtil.getRootOfQualifiedName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test698778,"public void test698778() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    // Undeclared exception!
    try {
        NodeUtil.newName(googleCodingConvention0, ""ERROR_FUNCTION_TYPE"", (Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test699779,"public void test699779() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName("".prototype"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test700780,"public void test700780() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""Kpiw"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test701781,"public void test701781() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""true"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test702782,"public void test702782() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "".toV[|/Lse9bBNi|2"", 33, 160);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(135328, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test702783,"public void test702783() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "".toV[|/Lse9bBNi|2"", 33, 160);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertTrue(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test703784,"public void test703784() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""eX'`"", 2805, 2805);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertEquals(11492085, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test703785,"public void test703785() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""eX'`"", 2805, 2805);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test704786,"public void test704786() throws Throwable {
    Node node0 = new Node(124);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test705787,"public void test705787() throws Throwable {
    Node node0 = new Node(2119);
    Node node1 = Node.newNumber((-467.49), (-2), 15);
    Node node2 = new Node(54, node0, node1, node0, 405, 2);
    // Undeclared exception!
    try {
        NodeUtil.newVarNode(""il2XA_c+TPIY+"", node1);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test706788,"public void test706788() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""1bARjaVIE"", 85, 93);
    int int0 = NodeUtil.getNameReferenceCount(node0, ""#cc[3bQ"");
    assertEquals(348253, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test706789,"public void test706789() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""1bARjaVIE"", 85, 93);
    int int0 = NodeUtil.getNameReferenceCount(node0, ""#cc[3bQ"");
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test707790,"public void test707790() throws Throwable {
    Node node0 = new Node(113, (-2175), 967);
    boolean boolean0 = NodeUtil.containsType(node0, 113);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test709793,"public void test709793() throws Throwable {
    Node node0 = new Node(26);
    Node node1 = NodeUtil.newVarNode(""Z1<{#GlM"", node0);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    boolean boolean0 = nodeUtil_MatchDeclaration0.apply(node1);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test710794,"public void test710794() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""CGUL||Nl*k$5%z)h"");
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.valueCheck(node0, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test713797,"public void test713797() throws Throwable {
    Node node0 = Node.newString(""valueOf"", 1536, 1536);
    Node node1 = NodeUtil.newVarNode(""valueOf"", node0);
    boolean boolean0 = NodeUtil.containsFunction(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test713798,"public void test713798() throws Throwable {
    Node node0 = Node.newString(""valueOf"", 1536, 1536);
    Node node1 = NodeUtil.newVarNode(""valueOf"", node0);
    boolean boolean0 = NodeUtil.containsFunction(node1);
    assertEquals(118, node1.getType());
}",0,"assertEquals(1, node1.getType())"
project,0,test713799,"public void test713799() throws Throwable {
    Node node0 = Node.newString(""valueOf"", 1536, 1536);
    Node node1 = NodeUtil.newVarNode(""valueOf"", node0);
    boolean boolean0 = NodeUtil.containsFunction(node1);
    assertEquals(1536, node1.getLineno());
}",0,
project,0,test713800,"public void test713800() throws Throwable {
    Node node0 = Node.newString(""valueOf"", 1536, 1536);
    Node node1 = NodeUtil.newVarNode(""valueOf"", node0);
    boolean boolean0 = NodeUtil.containsFunction(node1);
    assertFalse(node0.hasChildren());
}",0,
project,0,test714801,"public void test714801() throws Throwable {
    Node node0 = new Node((-1084));
    Node node1 = NodeUtil.newVarNode(""split"", node0);
    Node node2 = new Node(4096, node1);
    boolean boolean0 = NodeUtil.isNameReferenced(node2, ""split"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test714802,"public void test714802() throws Throwable {
    Node node0 = new Node((-1084));
    Node node1 = NodeUtil.newVarNode(""split"", node0);
    Node node2 = new Node(4096, node1);
    boolean boolean0 = NodeUtil.isNameReferenced(node2, ""split"");
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test714803,"public void test714803() throws Throwable {
    Node node0 = new Node((-1084));
    Node node1 = NodeUtil.newVarNode(""split"", node0);
    Node node2 = new Node(4096, node1);
    boolean boolean0 = NodeUtil.isNameReferenced(node2, ""split"");
    assertEquals(118, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test715804,"public void test715804() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, nodeUtil_BooleanResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test716805,"public void test716805() throws Throwable {
    Node node0 = new Node(34, 34, 34);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, predicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test717806,"public void test717806() throws Throwable {
    Node node0 = new Node(78);
    // Undeclared exception!
    try {
        NodeUtil.hasFinally(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test718807,"public void test718807() throws Throwable {
    Node node0 = new Node(115);
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test719808,"public void test719808() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test720809,"public void test720809() throws Throwable {
    Node node0 = new Node(87);
    // Undeclared exception!
    try {
        NodeUtil.hasCatchHandler(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test721810,"public void test721810() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""CGUL||Nl*k$5%z)h"");
    boolean boolean0 = NodeUtil.hasCatchHandler(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test722811,"public void test722811() throws Throwable {
    Node node0 = new Node((-5619));
    // Undeclared exception!
    try {
        NodeUtil.getFunctionParameters(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test723812,"public void test723812() throws Throwable {
    Node node0 = new Node(1545, 1545, 1545);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""vWZ"", stack0, node0, (-1418), 89);
    assertEquals(105, node1.getType());
}",0,"assertEquals(1, node1.getType())"
project,0,test723813,"public void test723813() throws Throwable {
    Node node0 = new Node(1545, 1545, 1545);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""vWZ"", stack0, node0, (-1418), 89);
    Node node2 = NodeUtil.getFunctionParameters(node1);
    assertEquals(83, node2.getType());
}",0,"assertEquals(0, node2.getType())"
project,0,test723814,"public void test723814() throws Throwable {
    Node node0 = new Node(1545, 1545, 1545);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""vWZ"", stack0, node0, (-1418), 89);
    Node node2 = NodeUtil.getFunctionParameters(node1);
    assertEquals((-1), node1.getCharno());
}",0,
project,0,test723815,"public void test723815() throws Throwable {
    Node node0 = new Node(1545, 1545, 1545);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""vWZ"", stack0, node0, (-1418), 89);
    Node node2 = NodeUtil.getFunctionParameters(node1);
    assertFalse(node2.hasChildren());
}",0,assertFalse(node2.hasChildren())
project,0,test723816,"public void test723816() throws Throwable {
    Node node0 = new Node(1545, 1545, 1545);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""vWZ"", stack0, node0, (-1418), 89);
    Node node2 = NodeUtil.getFunctionParameters(node1);
    assertEquals((-1), node2.getCharno());
}",0,
project,0,test724817,"public void test724817() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""substr"", ""substr"");
    assertEquals(4096, node0.getSourcePosition());
}",0,
project,0,test725818,"public void test725818() throws Throwable {
    Node node0 = new Node(74);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test726819,"public void test726819() throws Throwable {
    Node node0 = new Node(74);
    node0.addSuppression(""Kci"");
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertEquals(0, jSDocInfo0.getImplementedInterfaceCount());
}",0,
project,0,test727820,"public void test727820() throws Throwable {
    Node node0 = new Node(41);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""ze{EzS+}"", stack0, node0, 38, 4095);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test727821,"public void test727821() throws Throwable {
    Node node0 = new Node(41);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""ze{EzS+}"", stack0, node0, 38, 4095);
    assertEquals(159743, node1.getSourcePosition());
}",0,"assertEquals(1, node1.getSourcePosition())"
project,0,test727822,"public void test727822() throws Throwable {
    Node node0 = new Node(41);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""ze{EzS+}"", stack0, node0, 38, 4095);
    NodeUtil.getInfoForNameNode(node0);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test728823,"public void test728823() throws Throwable {
    Node node0 = Node.newString(""0*U"", 94, 94);
    Node node1 = NodeUtil.newVarNode(""0*U"", node0);
    assertEquals(118, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test728824,"public void test728824() throws Throwable {
    Node node0 = Node.newString(""0*U"", 94, 94);
    Node node1 = NodeUtil.newVarNode(""0*U"", node0);
    assertEquals(94, node1.getCharno());
}",0,
project,0,test728825,"public void test728825() throws Throwable {
    Node node0 = Node.newString(""0*U"", 94, 94);
    Node node1 = NodeUtil.newVarNode(""0*U"", node0);
    NodeUtil.getInfoForNameNode(node0);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test728826,"public void test728826() throws Throwable {
    Node node0 = Node.newString(""0*U"", 94, 94);
    Node node1 = NodeUtil.newVarNode(""0*U"", node0);
    NodeUtil.getInfoForNameNode(node0);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test729827,"public void test729827() throws Throwable {
    Node node0 = new Node((-640));
    // Undeclared exception!
    try {
        NodeUtil.getFunctionJSDocInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test730828,"public void test730828() throws Throwable {
    Node node0 = new Node(105);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionJSDocInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test731829,"public void test731829() throws Throwable {
    Node node0 = new Node(105);
    AstParallelizer astParallelizer0 = AstParallelizer.createNewFunctionLevelAstParallelizer(node0, false);
    List<Node> list0 = astParallelizer0.split();
    Node node1 = NodeUtil.newFunctionNode(""this."", list0, node0, 48, 4);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(1, node1.getChildCount())"
project,0,test731830,"public void test731830() throws Throwable {
    Node node0 = new Node(105);
    AstParallelizer astParallelizer0 = AstParallelizer.createNewFunctionLevelAstParallelizer(node0, false);
    List<Node> list0 = astParallelizer0.split();
    Node node1 = NodeUtil.newFunctionNode(""this."", list0, node0, 48, 4);
    assertEquals(196612, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test731831,"public void test731831() throws Throwable {
    Node node0 = new Node(105);
    AstParallelizer astParallelizer0 = AstParallelizer.createNewFunctionLevelAstParallelizer(node0, false);
    List<Node> list0 = astParallelizer0.split();
    Node node1 = NodeUtil.newFunctionNode(""this."", list0, node0, 48, 4);
    NodeUtil.getFunctionJSDocInfo(node0);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test732832,"public void test732832() throws Throwable {
    Node node0 = new Node(2108);
    String string0 = NodeUtil.getSourceName(node0);
    assertNull(string0);
}",0,
project,0,test733833,"public void test733833() throws Throwable {
    Node node0 = new Node(31, 31, 31);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test734834,"public void test734834() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.AnalyzePrototypeProperties$ProcessExternProperties"", (-1342), (-1342));
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,
project,0,test734835,"public void test734835() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.AnalyzePrototypeProperties$ProcessExternProperties"", (-1342), (-1342));
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test735836,"public void test735836() throws Throwable {
    Node node0 = new Node(34);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETPROP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test736837,"public void test736837() throws Throwable {
    Node node0 = new Node(35, 35, 35);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test737838,"public void test737838() throws Throwable {
    Node node0 = new Node(36);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETELEM
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test738839,"public void test738839() throws Throwable {
    Node node0 = new Node(42);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test739840,"public void test739840() throws Throwable {
    Node node0 = new Node(45);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test740841,"public void test740841() throws Throwable {
    Node node0 = new Node(48, 48, 48);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeBINDNAME 48
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test741842,"public void test741842() throws Throwable {
    Node node0 = new Node(51);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test742843,"public void test742843() throws Throwable {
    Node node0 = new Node(53, 27591, 27591);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLOCAL_LOAD 27591
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test743844,"public void test743844() throws Throwable {
    Node node0 = new Node(54, 54, 54);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeGETVAR 54
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test744845,"public void test744845() throws Throwable {
    Node node0 = new Node((byte) 57, 133, 133);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_INIT_KEYS 133
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test745846,"public void test745846() throws Throwable {
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test746847,"public void test746847() throws Throwable {
    Node node0 = new Node(64);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test747848,"public void test747848() throws Throwable {
    Node node0 = new Node(65);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeGET_REF
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test748849,"public void test748849() throws Throwable {
    Node node0 = new Node(67, 67, 67);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEL_REF 67
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test749850,"public void test749850() throws Throwable {
    Node node0 = new Node(73);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_MEMBER
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test750851,"public void test750851() throws Throwable {
    Node node0 = new Node(74, 74, 74);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_MEMBER 74
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test751852,"public void test751852() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSEMI 78
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test752853,"public void test752853() throws Throwable {
    Node node0 = new Node(81);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLC
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test753854,"public void test753854() throws Throwable {
    Node node0 = new Node(85);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test754855,"public void test754855() throws Throwable {
    Node node0 = new Node(86);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test755856,"public void test755856() throws Throwable {
    Node node0 = new Node(87);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test756857,"public void test756857() throws Throwable {
    Node node0 = new Node(88);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test757858,"public void test757858() throws Throwable {
    Node node0 = new Node(89);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test758859,"public void test758859() throws Throwable {
    Node node0 = Node.newString(90, ""test"", 109, 109);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test759860,"public void test759860() throws Throwable {
    Node node0 = new Node(91);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test760861,"public void test760861() throws Throwable {
    Node node0 = Node.newString(93, ""3EF|WB+c#<&"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test761862,"public void test761862() throws Throwable {
    Node node0 = new Node(94, 94, 94);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test762863,"public void test762863() throws Throwable {
    Node node0 = new Node(95, 95, 425);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test763864,"public void test763864() throws Throwable {
    Node node0 = new Node(96, 74, 96);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test764865,"public void test764865() throws Throwable {
    Node node0 = new Node(97);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test765866,"public void test765866() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test766867,"public void test766867() throws Throwable {
    Node node0 = new Node(99);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCOLON
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test767868,"public void test767868() throws Throwable {
    Node node0 = new Node(101, 118, 1227);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test768869,"public void test768869() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test769870,"public void test769870() throws Throwable {
    Node node0 = new Node(103);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test770871,"public void test770871() throws Throwable {
    Node node0 = new Node(105);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test771872,"public void test771872() throws Throwable {
    Node node0 = new Node(100, 100, 100);
    Node node1 = new Node(47);
    node0.addChildToFront(node1);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test772873,"public void test772873() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""\naent:"", 803, 803);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test772874,"public void test772874() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""\naent:"", 803, 803);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertEquals(3289891, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test773875,"public void test773875() throws Throwable {
    Node node0 = Node.newNumber(8233.0);
    Node node1 = new Node(41);
    Node[] nodeArray0 = new Node[1];
    nodeArray0[0] = node1;
    Node node2 = NodeUtil.newCallNode(node0, nodeArray0);
    Node node3 = NodeUtil.getArgumentForCallOrNew(node2, 12);
    assertNull(node3);
}",0,
project,0,test773876,"public void test773876() throws Throwable {
    Node node0 = Node.newNumber(8233.0);
    Node node1 = new Node(41);
    Node[] nodeArray0 = new Node[1];
    nodeArray0[0] = node1;
    Node node2 = NodeUtil.newCallNode(node0, nodeArray0);
    Node node3 = NodeUtil.getArgumentForCallOrNew(node2, 12);
    assertEquals(2, node2.getChildCount());
}",0,"assertEquals(1, node2.getChildCount())"
project,0,test773877,"public void test773877() throws Throwable {
    Node node0 = Node.newNumber(8233.0);
    Node node1 = new Node(41);
    Node[] nodeArray0 = new Node[1];
    nodeArray0[0] = node1;
    Node node2 = NodeUtil.newCallNode(node0, nodeArray0);
    Node node3 = NodeUtil.getArgumentForCallOrNew(node2, 12);
    assertTrue(node2.hasMoreThanOneChild());
}",0,assertTrue(node2.hasMoreThanOneChild())
