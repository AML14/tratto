project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = Node.newNumber((-2.147483648E9));
    Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
    assertEquals(54, Node.SLASH_V);
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test0022,"public void test0022() throws Throwable {
    Node node0 = Node.newString(27, ""Hik{_ waJs"");
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test0033,"public void test0033() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(28);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test0044,"public void test0044() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(47);
    Node node1 = new Node(29, node0, node0, node0, node0);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.AbstractPeepholeOptimization"", e);
    }
}",0,
project,0,test0055,"public void test0055() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = Node.newString(""com.gogle.jvascript.jscomp.DefaultPassConfg%HJtSwapPassFactory"");
    Node node1 = new Node(32, node0, node0, node0, node0, 2, 1);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test0066,"public void test0066() throws Throwable {
    Node node0 = new Node(85);
    Node node1 = new Node(122, node0, node0, node0, 45, 2);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test0077,"public void test0077() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = Node.newString(""a"");
    Node node1 = Node.newString(""a"");
    Node node2 = new Node(13, node0, node1, node0, node1, 29, (-2647));
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test0088,"public void test0088() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(161);
    Node node1 = Node.newString(12, ""~"");
    Node node2 = new Node(9, node0, node0, node1, 47, 29);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertNotNull(node3);
}",0,
project,0,test0089,"public void test0089() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(161);
    Node node1 = Node.newString(12, ""~"");
    Node node2 = new Node(9, node0, node0, node1, 47, 29);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(0, node3.getChildCount())"
project,0,test00910,"public void test00910() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(560, 560, 560);
    Node node1 = new Node(1, (-2807), 49);
    Node node2 = new Node(10, node0, node1, node1, 306654258, 2060);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertNotNull(node3);
}",0,
project,0,test00911,"public void test00911() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(560, 560, 560);
    Node node1 = new Node(1, (-2807), 49);
    Node node2 = new Node(10, node0, node1, node1, 306654258, 2060);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2060, node3.getCharno());
}",0,
project,0,test01012,"public void test01012() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(543);
    Node node1 = new Node(543, 543, 543);
    Node node2 = new Node(11, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertNotNull(node3);
}",0,
project,0,test01013,"public void test01013() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(543);
    Node node1 = new Node(543, 543, 543);
    Node node2 = new Node(11, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(1, node3.getChildCount())"
project,0,test01114,"public void test01114() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = Node.newString(""JSC_NVALID_GETEL_INDEXERROR"");
    Node node1 = Node.newString(""JSC_NVALID_GETEL_INDEXERROR"", 1, 16);
    Node node2 = new Node(12, node0, node0, node1);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test01215,"public void test01215() throws Throwable {
    Node node0 = new Node(750, 750, 750);
    Node node1 = new Node(1, 12, 12);
    Node node2 = new Node(14, node1, node0, node0, 41, 45);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isHook());
}",0,assertFalse(node3.isHook())
project,0,test01316,"public void test01316() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = Node.newString(""UoN*"");
    Node node1 = Node.newString(""UoN*"");
    Node node2 = new Node(15, node1, node0, node1, node0, 16, 36);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(37, Node.OPT_ARG_NAME);
}",0,
project,0,test01417,"public void test01417() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(62);
    Node node1 = new Node(40, 51, 52);
    Node node2 = new Node(16, node0, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isNoSideEffectsCall());
}",0,assertTrue(node3.isNoSideEffectsCall())
project,0,test01518,"public void test01518() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(82);
    Node node1 = new Node(16, 0, 46);
    Node node2 = new Node(17, node1, node1, node0, 39, 16);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(159760, node3.getSourcePosition());
}",0,"assertEquals(0, node3.getSourcePosition())"
project,0,test01619,"public void test01619() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(82, 82, 82);
    Node node1 = new Node(16, 0, 46);
    Node node2 = new Node(18, node1, node1, node0, 39, 16);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(18, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test01720,"public void test01720() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(550);
    Node node1 = new Node(550, 550, 550);
    Node node2 = new Node(19, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertTrue(node3.hasChildren())
project,0,test01821,"public void test01821() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(514);
    Node node1 = new Node(47);
    Node node2 = new Node(20, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(0, node3.getChildCount())"
project,0,test01922,"public void test01922() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node((-299), (-299), (-299));
    Node node1 = Node.newString(""Fractional bitwise perand: {0}"", 4095, 31);
    Node node2 = new Node(21, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertFalse(node3.hasChildren())
project,0,test02023,"public void test02023() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(106, 106, 106);
    Node node1 = new Node(16, 0, 46);
    Node node2 = new Node(22, node1, node1, node0, 39, 16);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertNotNull(node3);
}",0,
project,0,test02024,"public void test02024() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(106, 106, 106);
    Node node1 = new Node(16, 0, 46);
    Node node2 = new Node(22, node1, node1, node0, 39, 16);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(39, node3.getLineno());
}",0,
project,0,test02125,"public void test02125() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(550, 77, 77);
    Node node1 = new Node(1529, 2, 2);
    Node node2 = new Node(23, node0, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertNotNull(node3);
}",0,
project,0,test02126,"public void test02126() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(550, 77, 77);
    Node node1 = new Node(1529, 2, 2);
    Node node2 = new Node(23, node0, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(23, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test02227,"public void test02227() throws Throwable {
    Node node0 = new Node(8192, (-2174), 8192);
    Node node1 = new Node(1, 28, 37);
    Node node2 = new Node(24, node0, node0, node1, (-520), 44);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertTrue(node3.hasMoreThanOneChild())
project,0,test02228,"public void test02228() throws Throwable {
    Node node0 = new Node(8192, (-2174), 8192);
    Node node1 = new Node(1, 28, 37);
    Node node2 = new Node(24, node0, node0, node1, (-520), 44);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertNotNull(node3);
}",0,
project,0,test02329,"public void test02329() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = Node.newString(141, ""'7]}g6DuY_M@g"");
    Node node1 = Node.newString(12, ""'7]}g6DuY_M@g"");
    Node node2 = new Node(25, node0, node0, node1, 47, 29);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertNotNull(node3);
}",0,
project,0,test02330,"public void test02330() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = Node.newString(141, ""'7]}g6DuY_M@g"");
    Node node1 = Node.newString(12, ""'7]}g6DuY_M@g"");
    Node node2 = new Node(25, node0, node0, node1, 47, 29);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertFalse(node3.hasChildren())
project,0,test02431,"public void test02431() throws Throwable {
    Node node0 = new Node((-1072), (-1072), (-1072));
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node1 = new Node(39);
    Node node2 = new Node(31, node0, node0, node1, 31, 47);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(44, Node.IS_OPTIONAL_PARAM);
}",0,
project,0,test02532,"public void test02532() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(159);
    Node node1 = new Node(29, 16, 16);
    Node node2 = new Node(33, node0, node0, node1, 47, 29);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(33, node3.getType());
}",0,"assertEquals(1, node3.getType())"
project,0,test02633,"public void test02633() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(550);
    Node node1 = new Node(550, 550, 550);
    Node node2 = new Node(34, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isNoSideEffectsCall());
}",0,assertTrue(node3.isNoSideEffectsCall())
project,0,test02734,"public void test02734() throws Throwable {
    Node node0 = new Node(1845);
    Node node1 = new Node(1845, 2, 32);
    Node node2 = new Node(35, node0, node0, node1, 36, 39);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(35, node3.getType());
}",0,"assertEquals(1, node3.getType())"
project,0,test02835,"public void test02835() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(101);
    Node node1 = new Node(31, 43, 54);
    Node node2 = new Node(36, node1, node0, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(4095, Node.MAX_COLUMN_NUMBER);
}",0,
project,0,test02936,"public void test02936() throws Throwable {
    Node node0 = new Node(62);
    Node node1 = new Node(4095, 41, 36);
    Node node2 = new Node(37, node0, node0, node1, 31, 4095);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isContinue());
}",0,
project,0,test03037,"public void test03037() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(507, 507, 507);
    Node node1 = new Node(52, 52, 39);
    Node node2 = new Node(38, node0, node0, node1, node1, 54, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isContinue());
}",0,assertTrue(node3.isContinue())
project,0,test03138,"public void test03138() throws Throwable {
    Node node0 = new Node(798, 798, 798);
    Node node1 = new Node(1, 12, 12);
    Node node2 = new Node(39, node1, node0, node0, 41, 45);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(49, Node.DIRECT_EVAL);
}",0,
project,0,test03239,"public void test03239() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(1395);
    Node node1 = new Node(51, 52, 39);
    Node node2 = new Node(40, node0, node0, node1, node1, 54, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isEmpty());
}",0,assertTrue(node3.isEmpty())
project,0,test03340,"public void test03340() throws Throwable {
    Node node0 = new Node(528);
    Node node1 = new Node(16);
    Node node2 = new Node(41, node1, node1, node0, node0);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(41, Node.BRACELESS_TYPE);
}",0,
project,0,test03441,"public void test03441() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(538, 538, 538);
    Node node1 = new Node(15, 8, 36);
    Node node2 = new Node(42, node1, node0, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(15, Node.NO_SIDE_EFFECTS);
}",0,
project,0,test03542,"public void test03542() throws Throwable {
    Node node0 = new Node(1861, 1861, 1861);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node1 = new Node(37, 49, 36);
    Node node2 = new Node(43, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals((-1), node3.getCharno());
}",0,
project,0,test03643,"public void test03643() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node((-29));
    Node node1 = new Node(52);
    Node node2 = new Node(44, node0, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(39, Node.EMPTY_BLOCK);
}",0,
project,0,test03744,"public void test03744() throws Throwable {
    Node node0 = Node.newString(""JSC_NVALID_GETEL_INDEXERROR"");
    Node node1 = Node.newString(""JSC_NVALID_GETEL_INDEXERROR"", 1, 16);
    Node node2 = new Node(45, node1, node0, node0, 43, 8);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test03845,"public void test03845() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = Node.newString(""UoN*"");
    Node node1 = new Node(63, 1, 52);
    Node node2 = new Node(46, node1, node0, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isCatch());
}",0,assertTrue(node3.isCatch())
project,0,test03946,"public void test03946() throws Throwable {
    Node node0 = new Node(1863);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node1 = new Node(37, 49, 36);
    Node node2 = new Node(47, node0, node0, node1, 31, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isDo());
}",0,assertFalse(node3.isDo())
project,0,test04047,"public void test04047() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = Node.newString("""");
    Node node1 = new Node(8, 2, 31);
    Node node2 = new Node(48, node1, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(8, Node.FLAG_NO_THROWS);
}",0,
project,0,test04148,"public void test04148() throws Throwable {
    Node node0 = new Node(1843, 1843, 1843);
    Node node1 = new Node(1843, 2, 32);
    Node node2 = new Node(49, node0, node0, node0, node1);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isCase());
}",0,assertTrue(node3.isCase())
project,0,test04249,"public void test04249() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(531);
    Node node1 = new Node(42, 52, 39);
    Node node2 = new Node(50, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,
project,0,test04350,"public void test04350() throws Throwable {
    Node node0 = new Node(1861);
    Node node1 = new Node(1861, 2, 32);
    Node node2 = new Node(51, node1, node0, node0, (-1774), 41);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.wasEmptyNode());
}",0,assertTrue(node3.wasEmptyNode())
project,0,test04451,"public void test04451() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = Node.newString(""JSC_NVALID_GETEL_INDEXERROR"");
    Node node1 = Node.newString(54, ""JSC_NVALID_GETEL_INDEXERROR"");
    Node node2 = new Node(52, node0, node1, node1, 35, 48);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.isInstanceOf());
}",0,
project,0,test04552,"public void test04552() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(543);
    Node node1 = new Node(543, 543, 543);
    Node node2 = new Node(53, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isTrue());
}",0,assertTrue(node3.isTrue())
project,0,test04653,"public void test04653() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node((-180));
    Node node1 = new Node(38, 41, 35);
    Node node2 = new Node(54, node0, node1, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(4095, Node.COLUMN_MASK);
}",0,
project,0,test04754,"public void test04754() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(550);
    Node node1 = new Node(550, 550, 550);
    Node node2 = new Node(55, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isBreak());
}",0,assertTrue(node3.isBreak())
project,0,test04855,"public void test04855() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(103);
    Node node1 = new Node(42, 4095, 45);
    Node node2 = new Node(56, node1, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isLocalResultCall());
}",0,assertFalse(node3.isLocalResultCall())
project,0,test04956,"public void test04956() throws Throwable {
    Node node0 = new Node((-725), (-725), (-725));
    Node node1 = new Node((-725));
    Node node2 = new Node(57, node0, node1, node1, 37, 49);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isCase());
}",0,assertTrue(node3.isCase())
project,0,test05057,"public void test05057() throws Throwable {
    Node node0 = new Node(798, 798, 798);
    Node node1 = new Node(1, 12, 12);
    Node node2 = new Node(58, node1, node0, node0, 41, 45);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isHook());
}",0,
project,0,test05158,"public void test05158() throws Throwable {
    Node node0 = new Node(760, 760, 760);
    Node node1 = new Node(1, 12, 12);
    Node node2 = new Node(59, node1, node0, node0, 41, 45);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isWith());
}",0,assertTrue(node3.isWith())
project,0,test05259,"public void test05259() throws Throwable {
    Node node0 = new Node(798, 798, 798);
    Node node1 = new Node(1, 12, 12);
    Node node2 = new Node(60, node1, node0, node0, 41, 45);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isWhile());
}",0,assertTrue(node3.isWhile())
project,0,test05360,"public void test05360() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node((-1793));
    Node node1 = new Node(61, 52, 39);
    Node node2 = new Node(61, node0, node0, node1, node1, 54, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isGetElem());
}",0,assertTrue(node3.isGetElem())
project,0,test05461,"public void test05461() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(550, 550, 550);
    Node node1 = new Node(550, 550, 550);
    Node node2 = new Node(62, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(0, node3.getSideEffectFlags());
}",0,"assertEquals(0, node3.getSideEffectFlags())"
project,0,test05562,"public void test05562() throws Throwable {
    Node node0 = new Node((-725), (-725), (-725));
    Node node1 = new Node((-725));
    Node node2 = new Node(63, node0, node1, node1, 37, 49);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(37, Node.OPT_ARG_NAME);
}",0,
project,0,test05663,"public void test05663() throws Throwable {
    Node node0 = new Node(35);
    Node node1 = new Node(38, (-2608), 12);
    Node node2 = new Node(64, node1, node0, node0, 48, 1387);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isWith());
}",0,assertTrue(node3.isWith())
project,0,test05764,"public void test05764() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(579);
    Node node1 = new Node(579, 579, 579);
    Node node2 = new Node(65, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isSetterDef());
}",0,assertTrue(node3.isSetterDef())
project,0,test05865,"public void test05865() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(531);
    Node node1 = new Node(8, 1440, 39);
    Node node2 = new Node(66, node0, node1, node1, 35, 30);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isNumber());
}",0,assertTrue(node3.isNumber())
project,0,test05966,"public void test05966() throws Throwable {
    Node node0 = new Node(525, 525, 525);
    Node node1 = new Node(525);
    Node node2 = new Node(67, node0, node1, node1, 37, 49);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(29, Node.JSDOC_INFO_PROP);
}",0,
project,0,test06067,"public void test06067() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node((-3077), 68, 85);
    Node node1 = new Node(54, 37, 48);
    Node node2 = new Node(68, node1, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
}",0,
project,0,test06168,"public void test06168() throws Throwable {
    Node node0 = new Node((-746));
    Node node1 = new Node((-746));
    Node node2 = new Node(69, node0, node1, node1, 37, 49);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isTrue());
}",0,assertTrue(node3.isTrue())
project,0,test06269,"public void test06269() throws Throwable {
    Node node0 = new Node(66);
    Node node1 = Node.newNumber((double) 66);
    Node node2 = new Node(70, node1, node0, node0, 70, 44);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isFor());
}",0,
project,0,test06370,"public void test06370() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node((-299));
    Node node1 = new Node(36, 30, 39);
    Node node2 = new Node(71, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isLabel());
}",0,
project,0,test06471,"public void test06471() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(62);
    Node node1 = new Node(43, 35, 85);
    Node node2 = new Node(72, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isOnlyModifiesThisCall());
}",0,assertTrue(node3.isOnlyModifiesThisCall())
project,0,test06572,"public void test06572() throws Throwable {
    Node node0 = new Node(750, 750, 750);
    Node node1 = new Node(1, 12, 12);
    Node node2 = new Node(73, node1, node0, node0, 41, 45);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isNew());
}",0,
project,0,test06673,"public void test06673() throws Throwable {
    Node node0 = new Node(778);
    Node node1 = Node.newString(""Object"", 2, 42);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node2 = new Node(74, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isSetterDef());
}",0,assertTrue(node3.isSetterDef())
project,0,test06774,"public void test06774() throws Throwable {
    Node node0 = new Node(1896, 1896, 1896);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node1 = new Node(37, 49, 36);
    Node node2 = new Node(75, node0, node0, node1, 31, 30);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isCatch());
}",0,
project,0,test06875,"public void test06875() throws Throwable {
    Node node0 = new Node(1863);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node1 = new Node(37, 49, 36);
    Node node2 = new Node(76, node0, node0, node1, 31, 30);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(47, Node.IS_DISPATCHER);
}",0,
project,0,test06976,"public void test06976() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = Node.newString(""HRU'Ma"");
    Node node1 = new Node(47, 15, 29);
    Node node2 = new Node(77, node0, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(4095, Node.COLUMN_MASK);
}",0,
project,0,test07077,"public void test07077() throws Throwable {
    Node node0 = new Node(1845);
    Node node1 = new Node(4095, 4095, 54);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node2 = new Node(78, node0, node1, node1, 38, 15);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(0, Node.SIDE_EFFECTS_ALL);
}",0,
project,0,test07178,"public void test07178() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(538, 538, 538);
    Node node1 = new Node(97, 52, 39);
    Node node2 = new Node(79, node1, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isQuotedString());
}",0,
project,0,test07279,"public void test07279() throws Throwable {
    Node node0 = new Node(776, 776, 776);
    Node node1 = new Node(1, 12, 12);
    Node node2 = new Node(80, node1, node0, node0, 41, 45);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isIn());
}",0,assertTrue(node3.isIn())
project,0,test07380,"public void test07380() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(538, 538, 538);
    Node node1 = new Node(81, 52, 39);
    Node node2 = new Node(81, node0, node0, node1, node1, 54, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(12, Node.COLUMN_BITS);
}",0,
project,0,test07481,"public void test07481() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(2216);
    Node node1 = new Node(12, 54, (-1379));
    Node node2 = new Node(82, node1, node0, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isGetterDef());
}",0,assertTrue(node3.isGetterDef())
project,0,test07582,"public void test07582() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node((-1766));
    Node node1 = new Node(83, 52, 39);
    Node node2 = new Node(83, node0, node0, node1, node1, 54, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(41, Node.BRACELESS_TYPE);
}",0,
project,0,test07683,"public void test07683() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(538);
    Node node1 = new Node(84, 52, 39);
    Node node2 = new Node(84, node0, node0, node1, node1, 54, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isNot());
}",0,assertTrue(node3.isNot())
project,0,test07784,"public void test07784() throws Throwable {
    Node node0 = new Node(93);
    Node node1 = new Node(4095, 41, 36);
    Node node2 = new Node(85, node0, node0, node1, 31, 4095);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(49, Node.DIRECT_EVAL);
}",0,
project,0,test07885,"public void test07885() throws Throwable {
    Node node0 = new Node(82);
    Node node1 = new Node(4095, 41, 36);
    Node node2 = new Node(86, node0, node0, node1, 31, 4095);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(31, node3.getLineno());
}",0,
project,0,test07986,"public void test07986() throws Throwable {
    Node node0 = new Node(534, 534, 534);
    Node node1 = new Node(16, 42, 47);
    Node node2 = new Node(87, node0, node1, node1, 45, 36);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(45, node3.getLineno());
}",0,
project,0,test08087,"public void test08087() throws Throwable {
    Node node0 = new Node(534, 534, 534);
    Node node1 = new Node(16, 42, 47);
    Node node2 = new Node(88, node0, node1, node1, 45, 36);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(0, node3.getChildCount())"
project,0,test08188,"public void test08188() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node((-1793));
    Node node1 = new Node(89, 52, 39);
    Node node2 = new Node(89, node0, node0, node1, node1, 54, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(1, node3.getCharno());
}",0,
project,0,test08289,"public void test08289() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(538, 538, 538);
    Node node1 = new Node(91, 52, 39);
    Node node2 = new Node(91, node0, node0, node1, node1, 54, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertFalse(node3.hasChildren())
project,0,test08390,"public void test08390() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(550);
    Node node1 = new Node(0, 51, 92);
    Node node2 = new Node(92, node1, node0, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(0, node3.getChildCount())"
project,0,test08491,"public void test08491() throws Throwable {
    Node node0 = new Node(99);
    Node node1 = new Node(4095, 41, 36);
    Node node2 = new Node(93, node0, node0, node1, 31, 4095);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(4095, node3.getCharno());
}",0,
project,0,test08592,"public void test08592() throws Throwable {
    Node node0 = new Node(82);
    Node node1 = new Node(4095, 41, 36);
    Node node2 = new Node(94, node0, node0, node1, 31, 4095);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertFalse(node3.hasChildren())
project,0,test08693,"public void test08693() throws Throwable {
    Node node0 = new Node(816, 816, 816);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node1 = new Node(31, 4095, 41);
    Node node2 = new Node(95, node0, node0, node1, 40, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertTrue(node3.hasMoreThanOneChild())
project,0,test08794,"public void test08794() throws Throwable {
    Node node0 = new Node(780, 780, 780);
    Node node1 = new Node(15, 96, (-14));
    Node node2 = new Node(96, node1, node0, node0, 31, 1);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test08895,"public void test08895() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(538, 538, 538);
    Node node1 = new Node(97, 52, 39);
    Node node2 = new Node(97, node0, node0, node1, node1, 54, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(54, node3.getLineno());
}",0,
project,0,test08996,"public void test08996() throws Throwable {
    Node node0 = new Node((-754));
    Node node1 = new Node((-754));
    Node node2 = new Node(98, node0, node1, node1, 37, 49);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isDelProp());
}",0,assertTrue(node3.isDelProp())
project,0,test09097,"public void test09097() throws Throwable {
    Node node0 = new Node(1863, 1863, 1863);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node1 = new Node(37, 49, 36);
    Node node2 = new Node(99, node0, node0, node1, 31, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertNotSame(node0, node3);
}",0,
project,0,test09198,"public void test09198() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(30, 30, 30);
    Node node1 = new Node(45, 30, 32);
    Node node2 = new Node(100, node1, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(0, node3.getChildCount())"
project,0,test09199,"public void test09199() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(30, 30, 30);
    Node node1 = new Node(45, 30, 32);
    Node node2 = new Node(100, node1, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertNotNull(node3);
}",0,
project,0,test092100,"public void test092100() throws Throwable {
    Node node0 = new Node(66);
    Node node1 = Node.newNumber((double) 66);
    Node node2 = new Node(101, node1, node0, node0, 101, 44);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test093101,"public void test093101() throws Throwable {
    Node node0 = new Node(1863);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node1 = new Node(37, 49, 36);
    Node node2 = new Node(4095, node1, node0, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isVarArgs());
}",0,assertTrue(node3.isVarArgs())
project,0,test094102,"public void test094102() throws Throwable {
    Node node0 = new Node(543, 543, 543);
    Node node1 = new Node(122, node0, node0, node0, 45, 2);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    assertEquals(45, node2.getLineno());
}",0,
project,0,test095103,"public void test095103() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node((-274), (-274), (-274));
    Node node1 = new Node(9, 8, 12);
    Node node2 = new Node(21, node1, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(21, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test096104,"public void test096104() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(52, (-274), 30);
    Node node1 = new Node(21, node0);
    Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    assertNotNull(node2);
}",0,
project,0,test096105,"public void test096105() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(52, (-274), 30);
    Node node1 = new Node(21, node0);
    Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    assertEquals(1, node2.getChildCount());
}",0,"assertEquals(1, node2.getChildCount())"
project,0,test097106,"public void test097106() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node((-180));
    Node node1 = new Node(38, 41, 35);
    Node node2 = new Node(29, node1, node0, node0, 2, 43);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // NAME 41 is not a string node
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test098107,"public void test098107() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(71, 71, 71);
    Node node1 = new Node(39, node0, node0, node0, node0);
    Node node2 = new Node(29, node1, node1, node1);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Number node not created with Node.newNumber
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test099108,"public void test099108() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(85);
    Node node1 = new Node(19, node0, node0, node0);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test100109,"public void test100109() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(98, 98, 98);
    Node node1 = new Node(22, node0, node0, node0, 39, 16);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test101110,"public void test101110() throws Throwable {
    Node node0 = new Node(100, 534, 100);
    Node node1 = new Node(29, node0, node0, node0, (-2101), 49);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test102111,"public void test102111() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(101);
    Node node1 = new Node(22, node0, node0, node0, 39, 16);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test103112,"public void test103112() throws Throwable {
    Node node0 = new Node(32, 44, 4);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
    assertFalse(node1.isOnlyModifiesThisCall());
}",0,assertTrue(node1.isOnlyModifiesThisCall())
project,0,test104113,"public void test104113() throws Throwable {
    Node node0 = new Node(827, 827, 827);
    Node node1 = new Node(32, node0, node0, node0, 50, 52);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    assertTrue(node2.isTypeOf());
}",0,assertTrue(node2.isTypeOf())
project,0,test105114,"public void test105114() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(39);
    Node node1 = new Node(32, node0, node0, node0, 54, 4);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test106115,"public void test106115() throws Throwable {
    Node node0 = new Node(43);
    Node node1 = new Node(32, node0, node0, node0, 50, 52);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test107116,"public void test107116() throws Throwable {
    Node node0 = new Node((-155));
    Node node1 = new Node(29, node0, node0, node0, 2, 43);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    assertNotNull(node2);
}",0,
project,0,test107117,"public void test107117() throws Throwable {
    Node node0 = new Node((-155));
    Node node1 = new Node(29, node0, node0, node0, 2, 43);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    assertEquals(8235, node2.getSourcePosition());
}",0,"assertEquals(1, node2.getSourcePosition())"
project,0,test108118,"public void test108118() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Compiler compiler0 = new Compiler();
    peepholeFoldConstants0.beginTraversal(compiler0);
    Node node0 = Node.newString(""J"");
    Node node1 = new Node(29, node0, node0, node0, node0, 46, 35);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test109119,"public void test109119() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(123);
    Node node1 = new Node(16, 0, 46);
    Node node2 = new Node(52, node1, node1, node0, 39, 16);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertFalse(node3.hasChildren())
project,0,test110120,"public void test110120() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = Node.newString(""HRU'Ma"");
    Node node1 = new Node(47, 15, 29);
    Node node2 = new Node(52, node0, node1, node1, 35, 48);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test111121,"public void test111121() throws Throwable {
    Node node0 = new Node(62);
    Node node1 = new Node(4095, 41, 36);
    Node node2 = new Node(86, node0, node0, node1, 31, 4095);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.isAssign());
}",0,assertTrue(node3.isAssign())
project,0,test112122,"public void test112122() throws Throwable {
    Node node0 = new Node(82);
    Node node1 = new Node(4095, 41, 36);
    Node node2 = new Node(86, node0, node0, node1, 31, 4095);
    node1.addChildToFront(node2);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(86, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test113123,"public void test113123() throws Throwable {
    Node node0 = new Node(9973);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node1 = new Node(1);
    Node node2 = new Node(50);
    Node node3 = new Node(90, node0, node2, node1, 54, 1084);
    Node node4 = peepholeFoldConstants0.optimizeSubtree(node3);
    assertTrue(node4.hasChildren());
}",0,assertTrue(node4.hasChildren())
project,0,test114124,"public void test114124() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node((-274));
    Node node1 = Node.newString(""EHO~Cqbxkjp''xTl"", 49, 1);
    Node node2 = new Node(21, node1, node0, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(21, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test115125,"public void test115125() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = Node.newString(""a"");
    Node node1 = Node.newString(""a"");
    Node node2 = new Node(21, node1, node0, node0);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test116126,"public void test116126() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node((-299), (-299), (-299));
    Node node1 = Node.newString(""Fractional bitwise perand: {0}"", 4095, 31);
    node0.setType(47);
    Node node2 = new Node(21, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertFalse(node3.hasChildren())
project,0,test117127,"public void test117127() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(531);
    Node node1 = new Node(43, 52, 39);
    Node node2 = new Node(16, node1, node0, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertTrue(node3.hasChildren())
project,0,test118128,"public void test118128() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(62);
    Node node1 = new Node(29, node0);
    Node node2 = new Node(40, 51, 52);
    Node node3 = new Node(16, node1, node2, node2);
    Node node4 = peepholeFoldConstants0.optimizeSubtree(node3);
    assertFalse(node4.isString());
}",0,assertTrue(node4.isString())
project,0,test119129,"public void test119129() throws Throwable {
    Node node0 = new Node(778);
    Node node1 = new Node(39, 38, 37);
    Node node2 = new Node(16, node1, node0, node0, node0, 45, 47);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(37, Node.OPT_ARG_NAME);
}",0,
project,0,test120130,"public void test120130() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(509, 81, 509);
    Node node1 = new Node(41, node0, 81, 37);
    Node node2 = Node.newString("""", 48, 0);
    Node node3 = new Node(16, node1, node2, node2);
    Node node4 = peepholeFoldConstants0.optimizeSubtree(node3);
    assertFalse(node4.isFor());
}",0,assertTrue(node4.isFor())
project,0,test121131,"public void test121131() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(28, 55, 28);
    Node node1 = new Node(42, 52, 39);
    Node node2 = new Node(16, node1, node0, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(43, Node.IS_CONSTANT_NAME);
}",0,
project,0,test122132,"public void test122132() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(531, 531, 531);
    Node node1 = new Node(44, 52, 39);
    Node node2 = new Node(16, node1, node0, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isWith());
}",0,assertTrue(node3.isWith())
project,0,test123133,"public void test123133() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(540, 540, 540);
    Node node1 = new Node(47, 52, 39);
    Node node2 = new Node(16, node1, node0, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertNull(node3.getSourceFileName());
}",0,assertNotNull(node3.getSourceFileName())
project,0,test124134,"public void test124134() throws Throwable {
    Node node0 = new Node(803, 803, 803);
    Node node1 = new Node(40, 15, (-1));
    Node node2 = new Node(16, node1, node0, node0, 31, 1);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isQuotedString());
}",0,
project,0,test125135,"public void test125135() throws Throwable {
    Node node0 = Node.newString(""JSC_NVALID_GETEL_INDEXERROR"");
    Node node1 = Node.newString(""JSC_NVALID_GETEL_INDEXERROR"", 1, 16);
    Node node2 = new Node(45, node1, node0, node0, 43, 8);
    node1.setString(""com.google.common.base.Predicates$OrPredicate"");
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test126136,"public void test126136() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(30);
    Node node1 = Node.newString(""Fractional bitwise perand: {0}"", 573, 43);
    Node node2 = new Node(35, node1, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node0);
    assertFalse(node3.isCatch());
}",0,
project,0,test127137,"public void test127137() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
    Node node0 = new Node(30);
    Node node1 = new Node(1, node0, node0, node0, 43, 16);
    Node node2 = peepholeFoldConstants0.optimizeSubtree(node0);
    assertEquals(50, Node.FREE_CALL);
}",0,
project,0,test128138,"public void test128138() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(30, 30, 30);
    Node node1 = new Node(35, node0, node0, node0, node0);
    node0.addChildrenToBack(node1);
    Node node2 = peepholeFoldConstants0.optimizeSubtree(node0);
    assertFalse(node2.isGetElem());
}",0,assertTrue(node2.isGetElem())
project,0,test129139,"public void test129139() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
    Node node0 = new Node(159);
    Node node1 = new Node(29, 16, 16);
    node1.setType(40);
    Node node2 = new Node(33, node0, node0, node1, 47, 29);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // String node not created with Node.newString
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
