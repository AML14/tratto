[ {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public String getIdName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(inputId0.getIdName())",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public void hotSwapScript(Node scriptRoot, Node originalRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1313"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public Scope getScope(Var var)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1414"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public Iterable<Var> getAllSymbols()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1515"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public ReferenceCollection getReferences(Var v)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1616"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1717"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1919"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2020"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2121"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2222"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2323"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2424"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2525"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2626"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public boolean isCatch()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isCatch())",
  "exception" : "",
  "testName" : "test2727"
} ]