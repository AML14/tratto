project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test10,"public void test10() throws Throwable {
    SourceFile sourceFile0 = SourceFile.fromFile(""^,Pl%K"");
    JsAst jsAst0 = new JsAst(sourceFile0);
    jsAst0.setSourceFile(sourceFile0);
    assertEquals(""^,Pl%K"", sourceFile0.getOriginalPath());
}",0,
project,0,test21,"public void test21() throws Throwable {
    SourceFile sourceFile0 = SourceFile.fromCode(""|XB12`zHog09(#(_"", """");
    ArrayList<SourceFile> arrayList0 = new ArrayList<SourceFile>();
    Compiler compiler0 = new Compiler();
    ImmutableList.of(sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0);
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compiler0.init((List<SourceFile>) arrayList0, (List<SourceFile>) arrayList0, compilerOptions0);
    JsAst jsAst0 = new JsAst(sourceFile0);
    jsAst0.getAstRoot(compiler0);
    Node node0 = jsAst0.getAstRoot(compiler0);
    assertNotNull(node0);
}",0,
project,0,test22,"public void test22() throws Throwable {
    SourceFile sourceFile0 = SourceFile.fromCode(""|XB12`zHog09(#(_"", """");
    ArrayList<SourceFile> arrayList0 = new ArrayList<SourceFile>();
    Compiler compiler0 = new Compiler();
    ImmutableList.of(sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0);
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compiler0.init((List<SourceFile>) arrayList0, (List<SourceFile>) arrayList0, compilerOptions0);
    JsAst jsAst0 = new JsAst(sourceFile0);
    jsAst0.getAstRoot(compiler0);
    Node node0 = jsAst0.getAstRoot(compiler0);
    assertEquals(4096, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test33,"public void test33() throws Throwable {
    CompilerOptions compilerOptions0 = new CompilerOptions();
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.parseTestCode(""|XB12`zHog09(#(_"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // duplicate key: desc
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test44,"public void test44() throws Throwable {
    SourceFile sourceFile0 = SourceFile.fromCode(""|XB12`zHog09(#(_"", """");
    ArrayList<SourceFile> arrayList0 = new ArrayList<SourceFile>();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    Compiler compiler0 = new Compiler();
    SourceFile sourceFile1 = SourceFile.fromCode(""|XB12`zHog09(#(_"", (String) null);
    ImmutableList<SourceFile> immutableList0 = ImmutableList.of(sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile1);
    compiler0.init((List<SourceFile>) arrayList0, (List<SourceFile>) immutableList0, compilerOptions0);
    JsAst jsAst0 = new JsAst(sourceFile0);
    Node node0 = jsAst0.getAstRoot(compiler0);
    assertEquals((-1), node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test45,"public void test45() throws Throwable {
    SourceFile sourceFile0 = SourceFile.fromCode(""|XB12`zHog09(#(_"", """");
    ArrayList<SourceFile> arrayList0 = new ArrayList<SourceFile>();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    Compiler compiler0 = new Compiler();
    SourceFile sourceFile1 = SourceFile.fromCode(""|XB12`zHog09(#(_"", (String) null);
    ImmutableList<SourceFile> immutableList0 = ImmutableList.of(sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile1);
    compiler0.init((List<SourceFile>) arrayList0, (List<SourceFile>) immutableList0, compilerOptions0);
    JsAst jsAst0 = new JsAst(sourceFile0);
    Node node0 = jsAst0.getAstRoot(compiler0);
    assertNotNull(node0);
}",0,
