project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""comgogle.javascrpt.jscap.D#ultPassConig$8"");
    Node node1 = new Node(120, node0);
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    // Undeclared exception!
    try {
        typedScopeCreator0.createScope(node1, (Scope) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // INTERNAL COMPILER ERROR.
        // Please report this problem.
        // null
        //   Node(CATCH):  [testcode] :-1:-1
        // [source unknown]
        //   Parent: NULL
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test011,"public void test011() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""function JSCompiler_empyFn() {  return function() {}}"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Scope scope0 = typedScopeCreator0.createInitialScope(node0);
    Node node1 = new Node(2, node0);
    Scope scope1 = typedScopeCreator0.createScope(node1, scope0);
    assertEquals(0, compiler0.getWarningCount());
}",0,"assertEquals(0, compiler0.getWarningCount())"
project,0,test012,"public void test012() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""function JSCompiler_empyFn() {  return function() {}}"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Scope scope0 = typedScopeCreator0.createInitialScope(node0);
    Node node1 = new Node(2, node0);
    Scope scope1 = typedScopeCreator0.createScope(node1, scope0);
    assertEquals(1, scope1.getVarCount());
}",0,"assertEquals(1, scope1.getVarCount())"
project,0,test023,"public void test023() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""function JSCompiler_emptyFn() {  return function() {}}"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Scope scope0 = typedScopeCreator0.createInitialScope(node0);
    typedScopeCreator0.patchGlobalScope(scope0, node0);
    typedScopeCreator0.patchGlobalScope(scope0, node0);
    assertEquals(33, scope0.getVarCount());
}",0,
project,0,test024,"public void test024() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""function JSCompiler_emptyFn() {  return function() {}}"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Scope scope0 = typedScopeCreator0.createInitialScope(node0);
    typedScopeCreator0.patchGlobalScope(scope0, node0);
    typedScopeCreator0.patchGlobalScope(scope0, node0);
    assertEquals(0, compiler0.getWarningCount());
}",0,
project,0,test035,"public void test035() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""function JSCompiler_empyFn() {  return function() {}}"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Scope scope0 = typedScopeCreator0.createInitialScope(node0);
    typedScopeCreator0.patchGlobalScope(scope0, node0);
    Node node1 = Normalize.parseAndNormalizeSyntheticCode(compiler0, ""Proxy"", ""Proxy"");
    typedScopeCreator0.patchGlobalScope(scope0, node1);
    assertEquals(33, scope0.getVarCount());
}",0,
project,0,test046,"public void test046() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""function JSComier_empFn() {  return function() {}}"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    ArrayList<JSSourceFile> arrayList0 = new ArrayList<JSSourceFile>();
    ArrayList<JSModule> arrayList1 = new ArrayList<JSModule>();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    compiler0.compileModules(arrayList0, arrayList1, compilerOptions0);
    Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
    assertEquals(33, scope0.getVarCount());
}",0,
project,0,test057,"public void test057() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""Ow=a"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Scope scope0 = typedScopeCreator0.createInitialScope(node0);
    typedScopeCreator0.patchGlobalScope(scope0, node0);
    assertEquals(32, scope0.getVarCount());
}",0,"assertEquals(0, scope0.getVarCount())"
project,0,test068,"public void test068() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""comHgoogle.javascrYpt.jseomp=DefaultPassConfig,28"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Scope scope0 = typedScopeCreator0.createInitialScope(node0);
    typedScopeCreator0.patchGlobalScope(scope0, node0);
    assertEquals(32, scope0.getVarCount());
}",0,
project,0,test079,"public void test079() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""comgo(le.javascrpt.jscap.D#ultPassConig$8"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Node node1 = new Node(41, node0);
    Scope scope0 = typedScopeCreator0.createScope(node1, (Scope) null);
    assertTrue(scope0.isGlobal());
}",0,assertFalse(scope0.isGlobal())
project,0,test0810,"public void test0810() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""com.google.javascript.jscomp.TypedScopeCreator$LocalScopeBuilder"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Node node1 = new Node(43, node0, node0);
    Scope scope0 = typedScopeCreator0.createScope(node1, (Scope) null);
    assertEquals(33, scope0.getVarCount());
}",0,"assertEquals(0, scope0.getVarCount())"
project,0,test0911,"public void test0911() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""comgogle.javascrpt.jscop.DaultPassConig$8"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Node node1 = new Node(44, node0);
    Scope scope0 = typedScopeCreator0.createScope(node1, (Scope) null);
    assertEquals(33, scope0.getVarCount());
}",0,"assertEquals(0, scope0.getVarCount())"
project,0,test1012,"public void test1012() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" mtestcode] "");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Node node1 = new Node(122, node0);
    Scope scope0 = typedScopeCreator0.createScope(node1, (Scope) null);
    assertTrue(scope0.isGlobal());
}",0,assertFalse(scope0.isGlobal())
project,0,test1113,"public void test1113() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""%f,#}k%$QnA<@:)"");
    Node node1 = new Node(64, node0, node0);
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Node node2 = new Node(15, node1);
    node1.addSuppression(""%f,#}k%$QnA<@:)"");
    // Undeclared exception!
    try {
        typedScopeCreator0.createScope(node1, (Scope) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // INTERNAL COMPILER ERROR.
        // Please report this problem.
        // Unexpected node type: SCRIPT [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000499] [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000500]
        //   Node(OBJECTLIT):  [testcode] :-1:-1
        // [source unknown]
        //   Parent(LE):  [testcode] :-1:-1
        // [source unknown]
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test1214,"public void test1214() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""com.google.javascrpt.jscomp.DeaultPassConfi$28"");
    Node node1 = new Node(64, node0, node0);
    node1.removeFirstChild();
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Node node2 = new Node(47, node1);
    Scope scope0 = typedScopeCreator0.createScope(node2, (Scope) null);
    assertFalse(scope0.isLocal());
}",0,assertTrue(scope0.isLocal())
project,0,test1315,"public void test1315() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""goog.tweak.overrideDefaultValue"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    node0.addSuppression(""goog.tweak.overrideDefaultValue"");
    Node node1 = new Node(118, node0);
    // Undeclared exception!
    try {
        typedScopeCreator0.createScope(node1, (Scope) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // INTERNAL COMPILER ERROR.
        // Please report this problem.
        // null
        //   Node(VAR):  [testcode] :-1:-1
        // [source unknown]
        //   Parent: NULL
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test1416,"public void test1416() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" mtestcode] "");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    node0.setType(30);
    Node node1 = new Node(118, node0);
    // Undeclared exception!
    try {
        typedScopeCreator0.createScope(node1, (Scope) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // INTERNAL COMPILER ERROR.
        // Please report this problem.
        // null
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test1517,"public void test1517() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""comHgoogle.javascrYpt.jseomp=DefaultPassConfig,28"");
    Node node1 = new Node(118, node0, node0);
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    node1.addSuppression(""comHgoogle.javascrYpt.jseomp=DefaultPassConfig,28"");
    // Undeclared exception!
    try {
        typedScopeCreator0.createScope(node1, (Scope) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // INTERNAL COMPILER ERROR.
        // Please report this problem.
        // null
        //   Node(VAR):  [testcode] :-1:-1
        // [source unknown]
        //   Parent: NULL
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test1618,"public void test1618() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""jQuery.prototype"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Node node1 = new Node(37, node0);
    Scope scope0 = typedScopeCreator0.createScope(node1, (Scope) null);
    Scope scope1 = typedScopeCreator0.createScope(node0, scope0);
    assertEquals(33, scope0.getVarCount());
}",0,"assertEquals(0, scope0.getVarCount())"
project,0,test1619,"public void test1619() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""jQuery.prototype"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Node node1 = new Node(37, node0);
    Scope scope0 = typedScopeCreator0.createScope(node1, (Scope) null);
    Scope scope1 = typedScopeCreator0.createScope(node0, scope0);
    assertEquals(1, scope1.getVarCount());
}",0,
project,0,test1720,"public void test1720() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""jQuery.prototype"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Node node1 = compiler0.parseSyntheticCode(""jQuery.prototype"", ""jQuery.prototype"");
    Node node2 = new Node(1, node0, node1, 38, 47);
    Scope scope0 = typedScopeCreator0.createScope(node2, (Scope) null);
    assertEquals(33, scope0.getVarCount());
}",0,"assertEquals(0, scope0.getVarCount())"
project,0,test1821,"public void test1821() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""com.google.javascript.rhino.jstype.ValueType"", ""com.google.javascript.rhino.jstype.ValueType"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Scope scope0 = typedScopeCreator0.createInitialScope(node0);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
    Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
    Node node2 = new Node(54, node1);
    // Undeclared exception!
    try {
        typedScopeCreator0.createScope(node2, scope0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test1922,"public void test1922() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""com.google.javascript.rhino.jstype.ValueType"", ""com.google.javascript.rhino.jstype.ValueType"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    Scope scope0 = typedScopeCreator0.createInitialScope(node0);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
    Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
    Node node2 = new Node(54, node1);
    Node node3 = new Node(65536, node2);
    Scope scope1 = typedScopeCreator0.createScope(node3, scope0);
    assertTrue(scope1.isLocal());
}",0,assertFalse(scope1.isLocal())
