[ {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public ReferenceCollection getReferenceCollection(Var v)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(referenceCollectingCallback_ReferenceCollection0)",
  "exception" : "",
  "testName" : "test077"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public boolean isOnlyModifiesThisCall()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isOnlyModifiesThisCall())",
  "exception" : "",
  "testName" : "test099"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1010"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public boolean isUnscopedQualifiedName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node1.isUnscopedQualifiedName())",
  "exception" : "",
  "testName" : "test1111"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test1212"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test1313"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test1414"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1515"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test1616"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test1717"
}, {
  "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1818"
} ]