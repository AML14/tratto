[ {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0000"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0011"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0022"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node2.getCharno())",
  "exception" : "",
  "testName" : "test0033"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0044"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0055"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0056"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0067"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test0068"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node2.getCharno())",
  "exception" : "",
  "testName" : "test0079"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00810"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node2.getCharno())",
  "exception" : "",
  "testName" : "test00911"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01012"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01113"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node2.getChildCount())",
  "exception" : "",
  "testName" : "test01214"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01315"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test01416"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01517"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node2.hasChildren())",
  "exception" : "",
  "testName" : "test01518"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node2.hasChildren())",
  "exception" : "",
  "testName" : "test01619"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01620"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01721"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node2.getChildCount())",
  "exception" : "",
  "testName" : "test01722"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01823"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01924"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02025"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean wasEmptyNode()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node2.wasEmptyNode())",
  "exception" : "",
  "testName" : "test02126"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean isLocalResultCall()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node2.isLocalResultCall())",
  "exception" : "",
  "testName" : "test02227"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02328"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02429"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02530"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02631"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02732"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02833"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02934"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node2.getType())",
  "exception" : "",
  "testName" : "test03035"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03136"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03237"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03338"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03439"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03540"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node2.getCharno())",
  "exception" : "",
  "testName" : "test03641"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean isVarArgs()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node2.isVarArgs())",
  "exception" : "",
  "testName" : "test03742"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03843"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03944"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04045"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04146"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04247"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04348"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getSideEffectFlags()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node2.getSideEffectFlags())",
  "exception" : "",
  "testName" : "test04449"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04550"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node2.getCharno())",
  "exception" : "",
  "testName" : "test04651"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean isOnlyModifiesThisCall()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node2.isOnlyModifiesThisCall())",
  "exception" : "",
  "testName" : "test04752"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04853"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04954"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05055"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node2.hasChildren())",
  "exception" : "",
  "testName" : "test05156"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05257"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05358"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05459"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05560"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05661"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05762"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05863"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05964"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06065"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node2.hasOneChild())",
  "exception" : "",
  "testName" : "test06166"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06267"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06368"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06469"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06570"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06671"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06772"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getLineno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06873"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06974"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node2.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test07075"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07176"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node2.getChildCount())",
  "exception" : "",
  "testName" : "test07277"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07378"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07479"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07580"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07681"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test07782"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07883"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07984"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean isQualifiedName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node2.isQualifiedName())",
  "exception" : "",
  "testName" : "test08085"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08186"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08287"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node2.hasChildren())",
  "exception" : "",
  "testName" : "test08388"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08389"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08490"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getLineno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node2.getLineno())",
  "exception" : "",
  "testName" : "test08491"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08592"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08693"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08794"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08895"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08996"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test08997"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node2.getChildCount())",
  "exception" : "",
  "testName" : "test09098"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09099"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test091100"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test092101"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test093102"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test094103"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test095104"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test096105"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test097106"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node2.hasOneChild())",
  "exception" : "",
  "testName" : "test098107"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test099108"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test100109"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test101110"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test102111"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node2.getChildCount())",
  "exception" : "",
  "testName" : "test103112"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test104113"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test104114"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test105115"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test106116"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test107117"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test108118"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test109119"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test110120"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test111121"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test111122"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test112123"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getLineno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test113124"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test114125"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test115126"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test116127"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test117128"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test118129"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test119130"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test120131"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test121132"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test122133"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test123134"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node2.getChildCount())",
  "exception" : "",
  "testName" : "test124135"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test125136"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node2.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test126137"
} ]