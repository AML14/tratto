[ {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node0.getType())",
  "exception" : "",
  "testName" : "test0000"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isSyntheticBlock()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node0.isSyntheticBlock())",
  "exception" : "",
  "testName" : "test0001"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node parseInputs()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0002"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String toSource(final JSModule module)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0013"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String[] toSourceArray()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0024"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String toSource()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0035"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0046"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test0047"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String[] toSourceArray(final JSModule module)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0058"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void init(JSSourceFile[] externs, JSModule[] modules, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0069"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "CssRenamingMap getCssRenamingMap()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00911"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "boolean hasRegExpGlobalReferences()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test01012"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node collectionRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01313"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void rebuildInputsFromModules()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01414"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "boolean precheck()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test01515"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "ControlFlowGraph<Node> computeCFG()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01616"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "VariableMap getPropertyMap()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(variableMap0)",
  "exception" : "",
  "testName" : "test01717"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node parseSyntheticCode(String js)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01818"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void processDefines()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01919"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "static <T> T runCallableWithLargeStack(final Callable<T> callable)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02020"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public LanguageMode languageMode()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02121"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void setCssRenamingMap(CssRenamingMap map)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02222"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02323"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "VariableMap getVariableMap()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02424"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "FunctionInformationMap getFunctionalInformationMap()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02525"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void parse()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02626"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Supplier<String> getUniqueNameIdSupplier()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(supplier0)",
  "exception" : "",
  "testName" : "test02727"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "SymbolTable buildKnownSymbolTable()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02828"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void recordFunctionInformation()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02929"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "List<CompilerInput> getExternsInOrder()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03030"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "String toSource(Node n)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03131"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test03132"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "JSModuleGraph getModuleGraph()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03233"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public SourceMap getSourceMap()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03334"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03435"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Node getRoot()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03536"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "List<CompilerInput> getInputsForTesting()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03637"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compile(JSSourceFile extern, JSModule[] modules, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03738"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public JSError[] getMessages()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04039"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "List<CompilerInput> getExternsForTesting()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(list0)",
  "exception" : "",
  "testName" : "test04140"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void removeTryCatchFinally()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04241"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Scope getTopScope()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(scope0)",
  "exception" : "",
  "testName" : "test04342"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "ReferenceMap getGlobalVarReferences()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04443"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node parseInputs()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05049"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test05050"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public ErrorManager getErrorManager()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(errorManager0)",
  "exception" : "",
  "testName" : "test05151"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test05152"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test05253"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05254"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test05355"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.hasErrors())",
  "exception" : "",
  "testName" : "test05456"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compileModules(List<JSSourceFile> externs, List<JSModule> modules, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05457"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test05558"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compileModules(List<JSSourceFile> externs, List<JSModule> modules, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05559"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isExtern()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(jSSourceFile0.isExtern())",
  "exception" : "",
  "testName" : "test05660"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test05761"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compile(List<JSSourceFile> externs, List<JSSourceFile> inputs, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05762"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compile(List<JSSourceFile> externs, List<JSSourceFile> inputs, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05863"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compileModules(List<JSSourceFile> externs, List<JSModule> modules, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05964"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06065"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "static <T> T runCallable(final Callable<T> callable, boolean useLargeStackThread, boolean trace)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06166"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "static <T> T runCallable(final Callable<T> callable, boolean useLargeStackThread, boolean trace)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06267"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "static <T> T runCallable(final Callable<T> callable, boolean useLargeStackThread, boolean trace)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06368"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "static <T> T runCallable(final Callable<T> callable, boolean useLargeStackThread, boolean trace)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06469"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void setPassConfig(PassConfig passes)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06670"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isExtern()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(jSSourceFile0.isExtern())",
  "exception" : "",
  "testName" : "test06771"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test06772"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void stripCode(Set<String> stripTypes, Set<String> stripNameSuffixes, Set<String> stripTypePrefixes, Set<String> stripNamePrefixes)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06873"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void optimize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06974"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void endPass()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07075"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void stripCode(Set<String> stripTypes, Set<String> stripNameSuffixes, Set<String> stripTypePrefixes, Set<String> stripNamePrefixes)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07176"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "boolean areNodesEqualForInlining(Node n1, Node n2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07277"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "protected void removeExternInput(String name)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07378"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test07479"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public CompilerInput newExternInput(String name)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07580"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public CompilerInput newExternInput(String name)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07681"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void addIncrementalSourceAst(JsAst ast)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07782"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test07883"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node0.getChildCount())",
  "exception" : "",
  "testName" : "test07984"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "boolean replaceIncrementalSourceAst(JsAst ast)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07985"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public ErrorManager getErrorManager()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08086"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08087"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test08188"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public ReverseAbstractInterpreter getReverseAbstractInterpreter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(reverseAbstractInterpreter0)",
  "exception" : "",
  "testName" : "test08189"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test08290"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "TypeValidator getTypeValidator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08291"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test08392"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "boolean isInliningForbidden()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08897"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test08898"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test08999"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean acceptEcmaScript5()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test089100"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, jSError0.getCharno())",
  "exception" : "",
  "testName" : "test090101"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void throwInternalError(String message, Exception cause)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test091102"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compile(List<JSSourceFile> externs, List<JSSourceFile> inputs, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test092103"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Region getSourceRegion(String sourceName, int lineNumber)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(region0)",
  "exception" : "",
  "testName" : "test093104"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test094105"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Region getSourceRegion(String sourceName, int lineNumber)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test095106"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test095107"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node getNodeForCodeInsertion(JSModule module)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test096108"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String getSourceFileName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(node0.getSourceFileName())",
  "exception" : "",
  "testName" : "test097109"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test097110"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getSourcePosition()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node0.getSourcePosition())",
  "exception" : "",
  "testName" : "test097111"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node getNodeForCodeInsertion(JSModule module)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test098112"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node getNodeForCodeInsertion(JSModule module)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test099113"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String getAstDotGraph() throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test100114"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test101115"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String getAstDotGraph() throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test101116"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test102117"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node collectionRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test103118"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node collectionRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test104119"
} ]