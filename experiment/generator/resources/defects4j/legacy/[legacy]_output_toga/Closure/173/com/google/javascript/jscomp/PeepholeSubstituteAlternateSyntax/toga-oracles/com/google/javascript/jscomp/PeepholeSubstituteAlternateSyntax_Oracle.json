[ {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test044"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public boolean isRegExp()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isRegExp())",
  "exception" : "",
  "testName" : "test055"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test066"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test077"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node2.hasOneChild())",
  "exception" : "",
  "testName" : "test088"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test089"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public boolean isTypeOf()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isTypeOf())",
  "exception" : "",
  "testName" : "test0910"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public boolean isCall()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1011"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node1.getCharno())",
  "exception" : "",
  "testName" : "test1112"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1213"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1314"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public boolean isAdd()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isAdd())",
  "exception" : "",
  "testName" : "test1415"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "static boolean containsUnicodeEscape(String s)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test1516"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "static boolean containsUnicodeEscape(String s)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test1617"
} ]