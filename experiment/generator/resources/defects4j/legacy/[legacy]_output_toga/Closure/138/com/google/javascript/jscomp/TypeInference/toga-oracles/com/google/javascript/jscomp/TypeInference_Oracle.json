[ {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0000"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0011"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "Multimap<Scope, Var> getAssignedOuterLocalVars()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0022"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0033"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0044"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0105"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0127"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01510"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01611"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01813"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01914"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02015"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02116"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02217"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02419"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02823"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02924"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03025"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03126"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03227"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03328"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03530"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03631"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03732"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03833"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04035"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04136"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04237"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04338"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04439"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04641"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04742"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04944"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05045"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05146"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05247"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06156"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06459"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06762"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06964"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07166"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07469"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07570"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08277"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08378"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08479"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08580"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08782"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08984"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09590"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09792"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09893"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09994"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test10095"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test10196"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test10398"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test10499"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test108103"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test110105"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test111106"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test112107"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test113108"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test114109"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test115110"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test116111"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test117112"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test118113"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "static BooleanLiteralSet getBooleanOutcomes(BooleanLiteralSet left, BooleanLiteralSet right, boolean condition)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test119114"
} ]