[ {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0010"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public TypeCheck(AbstractCompiler compiler, ReverseAbstractInterpreter reverseInterpreter, JSTypeRegistry typeRegistry, CheckLevel reportMissingOverride, CheckLevel reportUnknownTypes)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0021"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void process(Node externsRoot, Node jsRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0032"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void process(Node externsRoot, Node jsRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0043"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public Scope processForTesting(Node externsRoot, Node jsRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0054"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public Scope processForTesting(Node externsRoot, Node jsRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0065"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public Scope processForTesting(Node externsRoot, Node jsRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0076"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0087"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0098"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public String getSourceName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(nodeTraversal0.getSourceName())",
  "exception" : "",
  "testName" : "test0109"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getWarningCount())",
  "exception" : "",
  "testName" : "test01110"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01211"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01312"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01413"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01514"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01615"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01716"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01817"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01818"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isGetProp()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isGetProp())",
  "exception" : "",
  "testName" : "test01919"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isTry()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isTry())",
  "exception" : "",
  "testName" : "test02020"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getLineNumber()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, nodeTraversal0.getLineNumber())",
  "exception" : "",
  "testName" : "test02121"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isWhile()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02222"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02323"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02424"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isGetElem()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isGetElem())",
  "exception" : "",
  "testName" : "test02525"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02626"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02727"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02828"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getLineno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02929"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03030"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03131"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03232"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03333"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node1.hasChildren())",
  "exception" : "",
  "testName" : "test03434"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isInc()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03535"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03636"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03737"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isDo()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node1.isDo())",
  "exception" : "",
  "testName" : "test03838"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03939"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04040"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isAdd()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04141"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04242"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node0.hasChildren())",
  "exception" : "",
  "testName" : "test04343"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04444"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isInc()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isInc())",
  "exception" : "",
  "testName" : "test04545"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04646"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04747"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04848"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public double getProgress()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04949"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05050"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05151"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05252"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05353"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05454"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05555"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05656"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05757"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05858"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05959"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06060"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06161"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06363"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06464"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test06465"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06566"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06667"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isGetProp()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isGetProp())",
  "exception" : "",
  "testName" : "test06768"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06869"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isTry()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isTry())",
  "exception" : "",
  "testName" : "test06970"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07071"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07172"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07273"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isWith()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isWith())",
  "exception" : "",
  "testName" : "test07374"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isBlock()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07475"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07576"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isAssignAdd()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isAssignAdd())",
  "exception" : "",
  "testName" : "test07677"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07778"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07879"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isInstanceOf()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isInstanceOf())",
  "exception" : "",
  "testName" : "test07980"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isInstanceOf()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isInstanceOf())",
  "exception" : "",
  "testName" : "test08081"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08182"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node1.getType())",
  "exception" : "",
  "testName" : "test08283"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isThrow()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08384"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08485"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isGetElem()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isGetElem())",
  "exception" : "",
  "testName" : "test08586"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08687"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08788"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08889"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08990"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09091"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09192"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09293"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09394"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09495"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09596"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09697"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09798"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09899"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test099100"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test100101"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test101102"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test102103"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test103104"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test104105"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test105106"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test106107"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isNE()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isNE())",
  "exception" : "",
  "testName" : "test107108"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.hasErrors())",
  "exception" : "",
  "testName" : "test109110"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test109111"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test110112"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test111113"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node0.hasOneChild())",
  "exception" : "",
  "testName" : "test112114"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test113115"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test114116"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test115117"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test116118"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test116119"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test117120"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test118121"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test119122"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test120123"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test121124"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test122125"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test122126"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test123127"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test124128"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test124129"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test124130"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test125131"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "double getTypedPercent()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test126132"
} ]