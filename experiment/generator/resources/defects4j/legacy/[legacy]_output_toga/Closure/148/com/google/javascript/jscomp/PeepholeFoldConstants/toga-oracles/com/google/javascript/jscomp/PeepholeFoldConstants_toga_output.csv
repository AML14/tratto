project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(88);
    Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
    assertEquals(42, Node.NO_SIDE_EFFECTS_CALL);
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(63, 63, 63);
    Node node1 = new Node(32, node0, node0);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test0022,"public void test0022() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(60, 60, 60);
    Node node1 = new Node(36, node0, node0, node0);
    Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    assertNotNull(node2);
}",0,
project,0,test0023,"public void test0023() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(60, 60, 60);
    Node node1 = new Node(36, node0, node0, node0);
    Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    assertTrue(node2.hasChildren());
}",0,assertTrue(node2.hasChildren())
project,0,test0034,"public void test0034() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(12);
    Node node1 = new Node(37, node0, node0, node0, 38, 2);
    Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    assertNotNull(node2);
}",0,
project,0,test0035,"public void test0035() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(12);
    Node node1 = new Node(37, node0, node0, node0, 38, 2);
    Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    assertTrue(node2.hasChildren());
}",0,assertTrue(node2.hasChildren())
project,0,test0046,"public void test0046() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(40, 40, 40);
    Node node1 = new Node(43);
    Node node2 = new Node(46, node0, node1, node1, node1, 23, (-2));
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(0, node3.getChildCount())"
project,0,test0057,"public void test0057() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = Node.newNumber((-1.1394187181572306));
    SyntheticAst syntheticAst0 = new SyntheticAst(""wdx692>stGKIVx|\""90"");
    Compiler compiler0 = new Compiler();
    Node node1 = syntheticAst0.getAstRoot(compiler0);
    Node node2 = new Node(9, node0, node0, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(49, Node.DIRECT_EVAL);
}",0,
project,0,test0068,"public void test0068() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(1073741836);
    Node node1 = Node.newNumber((double) 1073741836);
    Node node2 = new Node(10, node0, node1, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(10, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test0079,"public void test0079() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(39, 39, 39);
    Node node1 = Node.newNumber((double) 0, 1, 27);
    Node node2 = new Node(11, node1, node0);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Number node not created with Node.newNumber
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test00810,"public void test00810() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(39, 39, 39);
    Node node1 = new Node(43);
    Node node2 = new Node(12, node0, node1, 9, 23);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(0, node3.getChildCount())"
project,0,test00911,"public void test00911() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = Node.newNumber(3892.9297185293644);
    Node node1 = Node.newNumber(0.0);
    Node node2 = new Node(13, node1, node0, node0, node0);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test01012,"public void test01012() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(43);
    Node node1 = Node.newString(41, ""pJ"");
    Node node2 = new Node(14, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertTrue(node3.hasChildren())
project,0,test01113,"public void test01113() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(2677, 2677, 2677);
    Node node1 = Node.newNumber((double) (-3));
    Node node2 = new Node(15, node1, node1, node0, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(1, node3.getChildCount())"
project,0,test01214,"public void test01214() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(44);
    Node node1 = new Node(43);
    Node node2 = new Node(16, node1, node0, 13, 38);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertFalse(node3.hasMoreThanOneChild())
project,0,test01315,"public void test01315() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = Node.newString("""");
    Node node1 = Node.newString("""");
    Node node2 = new Node(17, node0, node1, node1, 36, 24);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(36, node3.getLineno());
}",0,
project,0,test01416,"public void test01416() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(49, 49, 49);
    Node node1 = new Node(43);
    Node node2 = new Node(18, node1, node0, node0, 44, 18);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(18, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test01517,"public void test01517() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(39, 39, 39);
    Node node1 = Node.newNumber((double) 0, 29, 1);
    Node node2 = new Node(19, node1, node0, node0, 23, 4095);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Number node not created with Node.newNumber
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test01618,"public void test01618() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = Node.newString(""6):3Pt"");
    Node node1 = Node.newString(17, ""6):3Pt"", 6, 4);
    Node node2 = new Node(20, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertFalse(node3.hasChildren())
project,0,test01719,"public void test01719() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(41);
    Node node1 = Node.newString(""length"", 0, 39);
    Node node2 = new Node(21, node0, node1, node1, 40, 37);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test01820,"public void test01820() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(41);
    Node node1 = Node.newNumber((double) 1, 4095, 2);
    Node node2 = new Node(22, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,
project,0,test01921,"public void test01921() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = Node.newNumber(52112.6136655164);
    Node node1 = Node.newNumber((double) 36);
    Node node2 = new Node(23, node0, node1, node0, node1);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test02022,"public void test02022() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(40);
    Node node1 = new Node((-2));
    Node node2 = new Node(24, node1, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(1, node3.getChildCount())"
project,0,test02123,"public void test02123() throws Throwable {
    Node node0 = new Node((-1820), (-1820), (-1820));
    Node node1 = new Node(1, 32, 29);
    Node node2 = new Node(25, node1, node0, node0, 24, 31);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(25, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test02224,"public void test02224() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(39, 39, 39);
    Node node1 = new Node(3);
    Node node2 = new Node(28, node1, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertTrue(node3.hasChildren())
project,0,test02325,"public void test02325() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(1073741836);
    Node node1 = Node.newNumber((double) 1073741836);
    Node node2 = new Node(30, node0, node1, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertTrue(node3.hasMoreThanOneChild())
project,0,test02426,"public void test02426() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(29, 29, 29);
    Node node1 = new Node(39, 8, (-3));
    Node node2 = new Node(31, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(1, node3.getChildCount())"
project,0,test02527,"public void test02527() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(40, 40, 40);
    Node node1 = Node.newString(""length"", 2, 22);
    Node node2 = new Node(33, node0, node1, node1, 1, 20);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // String node not created with Node.newString
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test02628,"public void test02628() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(49);
    Node node1 = new Node(43);
    Node node2 = new Node(34, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(34, node3.getType());
}",0,"assertEquals(1, node3.getType())"
project,0,test02729,"public void test02729() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(63);
    Node node1 = new Node(10);
    Node node2 = new Node(35, node0, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertTrue(node3.hasChildren())
project,0,test02830,"public void test02830() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(60, 60, 60);
    Node node1 = new Node(3);
    Node node2 = new Node(36, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(1, node3.getChildCount())"
project,0,test02931,"public void test02931() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(39, 39, 39);
    Node node1 = new Node(3);
    Node node2 = new Node(38, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,
project,0,test03032,"public void test03032() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(60);
    Node node1 = new Node(43);
    Node node2 = new Node(39, node0, node1, 26, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertTrue(node3.hasChildren())
project,0,test03133,"public void test03133() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(49, 49, 49);
    Node node1 = new Node(43);
    Node node2 = new Node(40, node1, node0, node0, 38, 2);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(40, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test03234,"public void test03234() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(49);
    Node node1 = new Node(43);
    Node node2 = new Node(41, node1, node0, node0, 38, 2);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertTrue(node3.hasMoreThanOneChild())
project,0,test03335,"public void test03335() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(62);
    Node node1 = Node.newNumber((double) 3);
    Node node2 = new Node(42, node0, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertTrue(node3.hasMoreThanOneChild())
project,0,test03436,"public void test03436() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(2760);
    Node node1 = new Node(43);
    Node node2 = new Node(43, node0, node0, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertFalse(node3.hasChildren())
project,0,test03537,"public void test03537() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node((-3));
    Node node1 = new Node(43);
    Node node2 = new Node(44, node1, node0, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(44, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test03638,"public void test03638() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(44, 44, 44);
    Node node1 = new Node(43);
    Node node2 = new Node(45, node0, node1, 71, 34);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test03739,"public void test03739() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node((-1106));
    Node node1 = new Node(1);
    Node node2 = new Node(47, node0, node1, 35, 24);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(35, node3.getLineno());
}",0,
project,0,test03840,"public void test03840() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(1465);
    Node node1 = new Node(2);
    Node node2 = new Node(48, node0, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(48, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test03941,"public void test03941() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node((-1803));
    Node node1 = new Node(20);
    Node node2 = new Node(49, node0, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,
project,0,test04042,"public void test04042() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(2677);
    Node node1 = new Node(18);
    Node node2 = new Node(50, node0, node0, node1, 31, 41);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertFalse(node3.hasMoreThanOneChild())
project,0,test04143,"public void test04143() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node((-55));
    Node node1 = new Node(4);
    Node node2 = new Node(51, node0, node1, node1, 1130, 5);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(1130, node3.getLineno());
}",0,"assertEquals(0, node3.getLineno())"
project,0,test04244,"public void test04244() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(190, 190, 190);
    Node node1 = new Node(14);
    Node node2 = new Node(52, node0, node0, node1, (-3), 31);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertFalse(node3.hasChildren())
project,0,test04345,"public void test04345() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(2677);
    Node node1 = new Node(25);
    Node node2 = new Node(53, node0, node0, node1, 6, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(0, node3.getChildCount())"
project,0,test04446,"public void test04446() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(49);
    Node node1 = new Node(36);
    Node node2 = new Node(54, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertFalse(node3.hasChildren())
project,0,test04547,"public void test04547() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node((-364));
    Node node1 = new Node(4);
    Node node2 = new Node(55, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(0, node3.getChildCount())"
project,0,test04648,"public void test04648() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(31, 31, 31);
    Node node1 = Node.newString(8, ""Shift amount out of bounds: {0}"");
    Node node2 = new Node(56, node0, node0, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(0, node3.getChildCount())"
project,0,test04749,"public void test04749() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(46);
    Node node1 = new Node(25);
    Node node2 = new Node(57, node0, node0, node1, 6, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(57, node3.getType());
}",0,"assertEquals(1, node3.getType())"
project,0,test04850,"public void test04850() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(49, 49, 49);
    Node node1 = Node.newString(""("");
    Node node2 = new Node(58, node1, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(0, node3.getChildCount())"
project,0,test04951,"public void test04951() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(2677);
    Node node1 = new Node(25);
    Node node2 = new Node(59, node0, node0, node1, 6, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(59, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test05052,"public void test05052() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(40);
    Node node1 = new Node(3);
    Node node2 = new Node(60, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(60, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test05153,"public void test05153() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(40);
    Node node1 = new Node(3);
    Node node2 = new Node(61, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertTrue(node3.hasMoreThanOneChild())
project,0,test05254,"public void test05254() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(60, 60, 60);
    Node node1 = new Node(43);
    Node node2 = new Node(62, node1, node0, node0, 38, 2);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,
project,0,test05355,"public void test05355() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(2677);
    Node node1 = new Node(25);
    Node node2 = new Node(63, node0, node0, node1, 6, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(1, node3.getChildCount())"
project,0,test05456,"public void test05456() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node((-2317), (-2317), (-2317));
    Node node1 = new Node(46, 8, 4095);
    Node node2 = new Node(64, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,
project,0,test05557,"public void test05557() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(58);
    Node node1 = new Node(50);
    Node node2 = new Node(65, node0, node0, node1, 4095, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertTrue(node3.hasChildren())
project,0,test05658,"public void test05658() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(69, 69, 69);
    Node node1 = new Node(43);
    Node node2 = new Node(66, node1, node0, node0, 38, 2);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getCharno());
}",0,"assertEquals(0, node3.getCharno())"
project,0,test05759,"public void test05759() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node((-1312), (-1312), (-1312));
    Node node1 = new Node(1);
    Node node2 = new Node(67, node1, node0, node0, 35, 4);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(67, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test05860,"public void test05860() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node((-2317), (-2317), (-2317));
    Node node1 = new Node(46, 8, 4095);
    Node node2 = new Node(68, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(1, node3.getChildCount())"
project,0,test05961,"public void test05961() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(49);
    Node node1 = new Node(88);
    Node node2 = new Node(69, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertTrue(node3.hasChildren())
project,0,test06062,"public void test06062() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(21);
    Node node1 = new Node(43);
    Node node2 = new Node(70, node1, node0, node0, 38, 2);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertFalse(node3.hasChildren())
project,0,test06163,"public void test06163() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(96);
    Node node1 = Node.newNumber((double) 18);
    Node node2 = new Node(71, node0, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,
project,0,test06264,"public void test06264() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(427);
    Node node1 = new Node(29, 2, 42);
    Node node2 = new Node(72, node1, node1, node0, 11, (-3));
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertTrue(node3.hasMoreThanOneChild())
project,0,test06365,"public void test06365() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(48, 48, 48);
    Node node1 = new Node(2);
    Node node2 = new Node(73, node0, node1, node1, 3, 38);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(0, node3.getChildCount())"
project,0,test06466,"public void test06466() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(40);
    Node node1 = Node.newNumber((double) 0, 29, 1);
    Node node2 = new Node(74, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(0, node3.getChildCount())"
project,0,test06567,"public void test06567() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(75, 75, 75);
    Node node1 = Node.newString(7, ""Packages"");
    Node node2 = new Node(75, node1, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,
project,0,test06668,"public void test06668() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(924, 924, 924);
    Node node1 = new Node(47);
    Node node2 = new Node(76, node0, node1, node1, 5, 9);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(76, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test06769,"public void test06769() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(20, 20, 20);
    Node node1 = new Node(43);
    Node node2 = new Node(77, node1, node0, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertTrue(node3.hasChildren())
project,0,test06870,"public void test06870() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(44, 44, 44);
    Node node1 = new Node(100);
    Node node2 = new Node(78, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,
project,0,test06971,"public void test06971() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node((-30), (-30), (-30));
    Node node1 = new Node(4);
    Node node2 = new Node(79, node1, node0, node0, 42, 50);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(50, node3.getCharno());
}",0,"assertEquals(0, node3.getCharno())"
project,0,test07072,"public void test07072() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(1163, 1163, 1163);
    Node node1 = new Node(25);
    Node node2 = new Node(80, node0, node0, node1, 6, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(1, node3.getCharno());
}",0,"assertEquals(0, node3.getCharno())"
project,0,test07173,"public void test07173() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(70, 70, 70);
    Node node1 = Node.newString("".4rl$RJL=2jIgc"", 58, 37);
    Node node2 = new Node(81, node0, node0, node1, 36, 0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(0, node3.getCharno());
}",0,"assertEquals(0, node3.getCharno())"
project,0,test07274,"public void test07274() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(60);
    Node node1 = new Node(43);
    Node node2 = new Node(82, node1, node0, node0, 38, 2);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getCharno());
}",0,"assertEquals(0, node3.getCharno())"
project,0,test07375,"public void test07375() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(83, 83, 83);
    Node node1 = Node.newString(7, ""Packages"");
    Node node2 = new Node(83, node1, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(0, node3.getChildCount())"
project,0,test07476,"public void test07476() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(70, 70, 70);
    Node node1 = Node.newString(""msg.not.ctor"");
    Node node2 = new Node(84, node1, node0, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(84, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test07577,"public void test07577() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(39, 39, 39);
    Node node1 = new Node(3);
    Node node2 = new Node(85, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertTrue(node3.hasMoreThanOneChild())
project,0,test07678,"public void test07678() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(12, 12, 12);
    Node node1 = new Node(44, 39, 27);
    Node node2 = new Node(86, node1, node0, node0, 38, 2);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertTrue(node3.hasMoreThanOneChild())
project,0,test07779,"public void test07779() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(1163, 1163, 1163);
    Node node1 = new Node(25);
    Node node2 = new Node(87, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(1, node3.getChildCount())"
project,0,test07880,"public void test07880() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(1073741824);
    Node node1 = Node.newNumber((double) 1073741824);
    Node node2 = new Node(88, node0, node1, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertFalse(node3.hasMoreThanOneChild())
project,0,test07981,"public void test07981() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(49, 49, 49);
    Node node1 = new Node(20);
    Node node2 = new Node(89, node0, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(1, node3.getChildCount())"
project,0,test08082,"public void test08082() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(98);
    Node node1 = new Node(1009);
    Node node2 = new Node(90, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertTrue(node3.hasMoreThanOneChild())
project,0,test08183,"public void test08183() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(10);
    Node node1 = new Node(43);
    Node node2 = new Node(91, node1, node0, node0, 38, 2);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(38, node3.getLineno());
}",0,"assertEquals(0, node3.getLineno())"
project,0,test08284,"public void test08284() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(61);
    Node node1 = new Node(3);
    Node node2 = new Node(92, node1, node0, node0, (-49), 25);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertFalse(node3.hasChildren())
project,0,test08385,"public void test08385() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(1073741806, 1073741806, 1073741806);
    Node node1 = Node.newNumber((double) 1073741806);
    Node node2 = new Node(93, node0, node1, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(93, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test08486,"public void test08486() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node((-1794));
    Node node1 = new Node(33);
    Node node2 = new Node(94, node1, node0, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertFalse(node3.hasChildren())
project,0,test08587,"public void test08587() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(60);
    Node node1 = new Node(43);
    Node node2 = new Node(95, node1, node0, node0, 38, 2);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getCharno());
}",0,
project,0,test08688,"public void test08688() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(1073741836);
    Node node1 = Node.newNumber((double) 1073741836);
    Node node2 = new Node(96, node0, node1, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertFalse(node3.hasChildren())
project,0,test08789,"public void test08789() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(1073741824, 1073741824, 1073741824);
    Node node1 = Node.newNumber((double) 1073741824);
    Node node2 = new Node(97, node0, node1, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(1, node3.getChildCount())"
project,0,test08890,"public void test08890() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(245);
    Node node1 = new Node(44);
    Node node2 = new Node(98, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(0, node3.getChildCount())"
project,0,test08991,"public void test08991() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(60);
    Node node1 = new Node(43);
    Node node2 = new Node(99, node1, node1, node0, 14, 38);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,
project,0,test09092,"public void test09092() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(47, 47, 47);
    Node node1 = Node.newNumber((double) 2);
    Node node2 = new Node(100, node0, node0, node0, node1);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test09193,"public void test09193() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(1073741824, 1073741824, 1073741824);
    Node node1 = new Node(15);
    Node node2 = new Node(101, node0, node1, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertTrue(node3.hasMoreThanOneChild())
project,0,test09294,"public void test09294() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node((-1802));
    Node node1 = new Node(16);
    Node node2 = new Node(4, node1, node1, node0);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(4, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test09395,"public void test09395() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(32, 32, 32);
    Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
    assertEquals(3, Node.CONTINUE_PROP);
}",0,
project,0,test09496,"public void test09496() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(2635);
    Node node1 = new Node(32, node0, node0, node0, node0);
    Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    assertEquals(32, node2.getType());
}",0,"assertEquals(0, node2.getType())"
project,0,test09597,"public void test09597() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = Node.newNumber((-30.492577972));
    Node node1 = new Node(32, node0, node0, node0, node0);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test09698,"public void test09698() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(40);
    Node node1 = new Node(32, node0, node0, node0, node0);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test09799,"public void test09799() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(41);
    Node node1 = new Node(32, node0, node0, node0, node0);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test098100,"public void test098100() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(43);
    Node node1 = new Node(32, node0, node0, 5, 23);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test099101,"public void test099101() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(44);
    Node node1 = new Node(32, node0, node0);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test100102,"public void test100102() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(47, 47, 47);
    Node node1 = new Node(32, node0, node0);
    Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    assertTrue(node2.hasChildren());
}",0,assertTrue(node2.hasChildren())
project,0,test101103,"public void test101103() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(64, 64, 64);
    Node node1 = new Node(32, node0, node0);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test102104,"public void test102104() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(590, 590, 590);
    Node node1 = new Node(27, node0, node0, node0, 28, 8);
    Node node2 = new Node(46, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node1);
    assertEquals(27, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test103105,"public void test103105() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = Node.newString(""\""F#!&`^'HrLJ"");
    Node node1 = new Node(27, node0, node0, node0, 28, 8);
    Node node2 = new Node(46, node1, node1);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.AbstractPeepholeOptimization"", e);
    }
}",0,
project,0,test104106,"public void test104106() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(26);
    Node node1 = new Node(44, 39, 27);
    node0.addChildToFront(node1);
    Node node2 = new Node(86, node0, node0, node0, 38, 2);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test105107,"public void test105107() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(44);
    Node node1 = new Node(43);
    Node node2 = new Node(29, node1, node1, node1, node1);
    Node node3 = new Node(2, node0, node2);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.AbstractPeepholeOptimization"", e);
    }
}",0,
project,0,test106108,"public void test106108() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(41);
    Node node1 = new Node(26, node0);
    node0.addChildToFront(node1);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test107109,"public void test107109() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(67);
    Node node1 = Node.newString(""JSC_EVAL_ASSIGNMENT"");
    Node node2 = new Node(52, node1, node0, node0, 50, 10);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(1, node3.getChildCount())"
project,0,test108110,"public void test108110() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node((-55), (-55), (-55));
    node0.setType(40);
    Node node1 = Node.newString(""!G~;Ngpq;k"");
    Node node2 = new Node(52, node0, node0, node1, (-3), 31);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test109111,"public void test109111() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(12, 12, 12);
    Node node1 = new Node(44, 39, 27);
    node0.addChildToFront(node1);
    Node node2 = new Node(43);
    Node node3 = new Node(86, node2, node0, node0, 38, 2);
    Node node4 = peepholeFoldConstants0.optimizeSubtree(node3);
    assertEquals(2, node4.getCharno());
}",0,"assertEquals(0, node4.getCharno())"
project,0,test110112,"public void test110112() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(21, 21, 21);
    Node node1 = new Node(43);
    Node node2 = new Node(100, node1, node0, node0, 38, 2);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test111113,"public void test111113() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(44);
    Node node1 = new Node(43);
    Node node2 = new Node(101, node0, node0, node1);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test112114,"public void test112114() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(21, 21, 21);
    Node node1 = new Node(43);
    Node node2 = new Node(101, node1, node0, node0, 38, 2);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test113115,"public void test113115() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(1073741824);
    Node node1 = Node.newNumber((double) 1073741824);
    Node node2 = new Node(101, node0, node1, node1, node1);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test114116,"public void test114116() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(61, 61, 61);
    Node node1 = new Node(43);
    Node node2 = new Node(21, node0, node0, node1, 31, (-2));
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(21, node3.getType());
}",0,"assertEquals(0, node3.getType())"
project,0,test115117,"public void test115117() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(40);
    Node node1 = Node.newNumber((double) 0, 29, 1);
    Node node2 = new Node(21, node0, node1);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // String node not created with Node.newString
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test116118,"public void test116118() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(44);
    Node node1 = new Node(43);
    Node node2 = new Node(21, node0, node0, node1, 31, (-2));
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getChildCount());
}",0,"assertEquals(0, node3.getChildCount())"
project,0,test117119,"public void test117119() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = Node.newNumber(46.25530162836321);
    Compiler compiler0 = new Compiler();
    Node node1 = compiler0.parseTestCode(""com.google.javascript.jscomp.ClosureReverseAbstractInterpretr$TypeRestiction"");
    Node node2 = Node.newNumber((double) 48);
    Node node3 = new Node(21, node0, node2, node2, node1);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node3);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test118120,"public void test118120() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(74);
    Node node1 = new Node(43);
    Node node2 = new Node(21, node1, node0, 40, 15);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertTrue(node3.hasMoreThanOneChild())
project,0,test119121,"public void test119121() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(37);
    Node node1 = new Node(20);
    Node node2 = new Node(9, node1, node1, node0, 2, 2);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertFalse(node3.isUnscopedQualifiedName());
}",0,
project,0,test120122,"public void test120122() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = Node.newNumber((-1.1394187181572306));
    SyntheticAst syntheticAst0 = new SyntheticAst(""wdx692>stGKIVx|\""90"");
    Compiler compiler0 = new Compiler();
    Node node1 = syntheticAst0.getAstRoot(compiler0);
    Node node2 = Node.newNumber((-1.1394187181572306));
    Node node3 = new Node(9, node0, node2, node1, node1);
    Node node4 = peepholeFoldConstants0.optimizeSubtree(node3);
    assertTrue(node4.hasMoreThanOneChild());
}",0,assertTrue(node4.hasMoreThanOneChild())
project,0,test121123,"public void test121123() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(70, 70, 70);
    Node node1 = Node.newNumber((double) 40, 29, 1);
    Node node2 = new Node(19, node1, node0, node0, 36, 4095);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertTrue(node3.hasChildren())
project,0,test122124,"public void test122124() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(2677);
    Node node1 = new Node(25);
    Node node2 = new Node(13, node0, node0, node1, 6, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(6, node3.getLineno());
}",0,"assertEquals(0, node3.getLineno())"
project,0,test123125,"public void test123125() throws Throwable {
    Node node0 = new Node(81);
    Node node1 = new Node(10);
    Node node2 = new Node(16, node1, node0, node0, 11, 19);
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertTrue(node3.hasChildren())
project,0,test124126,"public void test124126() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(42);
    Node node1 = Node.newNumber((double) 21);
    Node node2 = new Node(14, node0, node1, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertTrue(node3.hasMoreThanOneChild())
project,0,test125127,"public void test125127() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(41);
    Node node1 = new Node(43);
    Node node2 = new Node(12, node0, node1, 9, 23);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test126128,"public void test126128() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(42);
    Node node1 = Node.newNumber((double) 21);
    node1.setType(42);
    Node node2 = new Node(14, node0, node1, node0, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertTrue(node3.hasMoreThanOneChild())
project,0,test127129,"public void test127129() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(44);
    Node node1 = new Node(43);
    Node node2 = new Node(46, node0, node1, node1, node1, 23, (-2));
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test128130,"public void test128130() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(43);
    Node node1 = new Node(43);
    Node node2 = new Node(12, node0, node1, 9, 23);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test129131,"public void test129131() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node((-30));
    node0.setType(40);
    Node node1 = new Node(40);
    Node node2 = new Node(12, node1, node1, node0, 16, 20);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // String node not created with Node.newString
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test130132,"public void test130132() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(870, 870, 870);
    node0.setType(40);
    Node node1 = Node.newString(""`%pu{(s"");
    Node node2 = new Node(13, node1, node0);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // String node not created with Node.newString
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test131133,"public void test131133() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node((-46), (-46), (-46));
    node0.setType(40);
    Node node1 = Node.newString("".4rl$RJL=2jIgc"", 27, 35);
    Node node2 = new Node(45, node0, node0, node1, (-3), 31);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // String node not created with Node.newString
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test132134,"public void test132134() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node((-55), (-55), (-55));
    node0.setType(40);
    Node node1 = Node.newString(""!G~;Ngpq;k"");
    Node node2 = new Node(46, node0, node0, node1, (-3), 31);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // String node not created with Node.newString
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test133135,"public void test133135() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(37);
    Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
    assertEquals(26, Node.DIRECTCALL_PROP);
}",0,
project,0,test134136,"public void test134136() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(12);
    Node node1 = new Node(33);
    Node node2 = new Node(37, node1, node0, node0, 38, 2);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(2, node3.getCharno());
}",0,"assertEquals(0, node3.getCharno())"
project,0,test135137,"public void test135137() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(1163, 1163, 1163);
    Node node1 = new Node(25);
    Node node2 = new Node(37, node0, node0, node1, 6, 1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,
project,0,test136138,"public void test136138() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(74);
    Node node1 = new Node(43);
    Node node2 = new Node(35, node0, node1, node1);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(27, Node.SPECIALCALL_PROP);
}",0,
project,0,test137139,"public void test137139() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(32, 32, 32);
    Node node1 = new Node(43);
    Node node2 = new Node(33, node1, node0, node0, 38, 2);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasMoreThanOneChild());
}",0,assertTrue(node3.hasMoreThanOneChild())
project,0,test138140,"public void test138140() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(66, 66, 66);
    Node node1 = Node.newString(""engh"", 2, 22);
    Node node2 = new Node(33, node0, node0, node1, 19, 20);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertTrue(node3.hasChildren());
}",0,assertTrue(node3.hasChildren())
project,0,test139141,"public void test139141() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(63);
    Node node1 = Node.newString(""length"", 2, 22);
    Node node2 = new Node(33, node0, node0, node1, 1, 20);
    // Undeclared exception!
    try {
        peepholeFoldConstants0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeFoldConstants"", e);
    }
}",0,
project,0,test140142,"public void test140142() throws Throwable {
    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
    Node node0 = new Node(66, 66, 66);
    Node node1 = Node.newString(""length"", 2, 22);
    Node node2 = new Node(33, node0, node0, node1, 19, 20);
    Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    assertEquals(19, node3.getLineno());
}",0,
