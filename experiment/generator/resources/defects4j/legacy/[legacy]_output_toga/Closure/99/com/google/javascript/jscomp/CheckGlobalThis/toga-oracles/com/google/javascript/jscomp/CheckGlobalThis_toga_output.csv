project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Compiler compiler0 = new Compiler();
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis(compiler0, checkLevel0);
    Node node0 = new Node(32, 32, 32);
    Node node1 = new Node(86, node0, 25, 29);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkGlobalThis0);
    checkGlobalThis0.shouldTraverse(nodeTraversal0, node0, node1);
    boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node0, node1);
    assertTrue(boolean0);
}",0,
project,0,test011,"public void test011() throws Throwable {
    Compiler compiler0 = new Compiler();
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    Node node0 = new Node(105, 105, 105);
    JSDocInfo jSDocInfo0 = new JSDocInfo();
    node0.setJSDocInfo(jSDocInfo0);
    CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis(compiler0, checkLevel0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkGlobalThis0);
    boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node0, node0);
    assertFalse(boolean0);
}",0,
project,0,test022,"public void test022() throws Throwable {
    Compiler compiler0 = new Compiler();
    CheckLevel checkLevel0 = CheckLevel.OFF;
    CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis(compiler0, checkLevel0);
    Node node0 = Node.newString(105, ""prototype"", 105, 105);
    Node node1 = new Node(125, node0, 16, (-3356));
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkGlobalThis0);
    boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node0, node1);
    assertTrue(boolean0);
}",0,
project,0,test033,"public void test033() throws Throwable {
    Compiler compiler0 = new Compiler();
    CheckLevel checkLevel0 = CheckLevel.OFF;
    CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis(compiler0, checkLevel0);
    Node node0 = Node.newString(105, ""O"", 105, 105);
    Node node1 = new Node(132, node0, 25, 29);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkGlobalThis0);
    boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node0, node1);
    assertTrue(boolean0);
}",0,
project,0,test044,"public void test044() throws Throwable {
    Compiler compiler0 = new Compiler();
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    Node node0 = new Node(105, 105, 105);
    Node node1 = new Node(38, node0, 38, 10);
    JSDocInfo jSDocInfo0 = new JSDocInfo();
    node1.setJSDocInfo(jSDocInfo0);
    CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis(compiler0, checkLevel0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkGlobalThis0);
    boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node0, node1);
    assertTrue(boolean0);
}",0,
project,0,test055,"public void test055() throws Throwable {
    Compiler compiler0 = new Compiler();
    CheckLevel checkLevel0 = CheckLevel.OFF;
    CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis(compiler0, checkLevel0);
    Node node0 = Node.newString(105, ""O"", 105, 105);
    Node node1 = new Node(86, node0, 25, 29);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkGlobalThis0);
    boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node0, node1);
    assertTrue(boolean0);
}",0,
project,0,test066,"public void test066() throws Throwable {
    Compiler compiler0 = new Compiler();
    CheckLevel checkLevel0 = CheckLevel.OFF;
    CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis(compiler0, checkLevel0);
    Node node0 = new Node(42);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkGlobalThis0);
    nodeTraversal0.traverse(node0);
    assertEquals(0, Node.BOTH);
}",1,
project,0,test077,"public void test077() throws Throwable {
    Compiler compiler0 = new Compiler();
    CheckLevel checkLevel0 = CheckLevel.OFF;
    CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis(compiler0, checkLevel0);
    Node node0 = Node.newString(38, "".prototype."", 38, 38);
    Node node1 = new Node(86, node0, 25, 48);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkGlobalThis0);
    boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node1, node1);
    assertFalse(boolean0);
}",0,
project,0,test088,"public void test088() throws Throwable {
    Compiler compiler0 = new Compiler();
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis(compiler0, checkLevel0);
    Node node0 = new Node(32, 32, 32);
    Node node1 = new Node(86, node0, 25, 29);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkGlobalThis0);
    boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node1, node1);
    assertTrue(boolean0);
}",0,
project,0,test099,"public void test099() throws Throwable {
    Compiler compiler0 = new Compiler();
    CheckLevel checkLevel0 = CheckLevel.OFF;
    CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis(compiler0, checkLevel0);
    Node node0 = Node.newString(38, ""iK-b0$9 jaKtkL/WR"", 38, 38);
    Node node1 = new Node(86, node0, 25, 29);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkGlobalThis0);
    boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node1, node1);
    assertTrue(boolean0);
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    Compiler compiler0 = new Compiler();
    CheckLevel checkLevel0 = CheckLevel.OFF;
    CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis(compiler0, checkLevel0);
    Node node0 = new Node(32);
    Node node1 = new Node(86, node0, 25, 29);
    checkGlobalThis0.shouldTraverse((NodeTraversal) null, node0, node1);
    Node node2 = new Node(42, 25, 0);
    // Undeclared exception!
    try {
        checkGlobalThis0.visit((NodeTraversal) null, node2, node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CheckGlobalThis"", e);
    }
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    Compiler compiler0 = new Compiler();
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis(compiler0, checkLevel0);
    Node node0 = new Node(32, 32, 32);
    Node node1 = new Node(86, node0, 25, 29);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkGlobalThis0);
    nodeTraversal0.traverse(node1);
    assertEquals(50, Node.LAST_PROP);
}",1,
project,0,test1212,"public void test1212() throws Throwable {
    Compiler compiler0 = new Compiler();
    CheckLevel checkLevel0 = CheckLevel.OFF;
    CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis(compiler0, checkLevel0);
    Node node0 = new Node(42);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkGlobalThis0);
    Node node1 = new Node(33, node0, node0, node0, 28, 1);
    // Undeclared exception!
    try {
        nodeTraversal0.traverse(node1);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test1313,"public void test1313() throws Throwable {
    Compiler compiler0 = new Compiler();
    CheckLevel checkLevel0 = CheckLevel.OFF;
    CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis(compiler0, checkLevel0);
    Node node0 = new Node(105);
    Node node1 = new Node(38, node0, node0, node0, 17, 1);
    Node node2 = new Node(0, node1, 43, 16);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkGlobalThis0);
    boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node0, node1);
    assertTrue(boolean0);
}",0,
