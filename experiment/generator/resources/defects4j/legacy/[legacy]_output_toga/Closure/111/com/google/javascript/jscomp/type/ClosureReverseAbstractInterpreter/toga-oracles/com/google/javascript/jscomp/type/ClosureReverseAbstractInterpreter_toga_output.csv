project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test00,"public void test00() throws Throwable {
    Node node0 = new Node(1283, 1283, 1283);
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);
    FlowScope flowScope0 = closureReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, false);
    assertNull(flowScope0);
}",0,
project,0,test11,"public void test11() throws Throwable {
    Node node0 = Node.newString(""API tried to add two incompatible type tags. This should have been blocked and emitted a warning."");
    Node node1 = new Node(37, node0, node0, node0, 4095, 52);
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);
    FlowScope flowScope0 = closureReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, true);
    assertNull(flowScope0);
}",0,
project,0,test22,"public void test22() throws Throwable {
    Node node0 = Node.newString(""API tried to add two incompatible type tags. This should have been blocked and emitted a warning."");
    Node node1 = Node.newString(54, ""API tried to add two incompatible type tags. This should have been blocked and emitted a warning."", 0, 43);
    Node node2 = new Node(37, node1, node1, node0, 4095, 52);
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);
    FlowScope flowScope0 = closureReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node2, (FlowScope) null, true);
    assertNull(flowScope0);
}",0,
