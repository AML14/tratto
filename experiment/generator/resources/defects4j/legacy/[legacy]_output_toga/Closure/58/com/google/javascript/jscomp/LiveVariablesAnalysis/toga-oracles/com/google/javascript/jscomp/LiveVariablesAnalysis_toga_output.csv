project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test011,"public void test011() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    // Undeclared exception!
    try {
        liveVariablesAnalysis0.getVarIndex(""arguments"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.LiveVariablesAnalysis"", e);
    }
}",0,
project,0,test065,"public void test065() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""}A=P@Yq[Qhyj"", ""}A=P@Yq[Qhyj"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    LiveVariablesAnalysis.LiveVariableLattice liveVariablesAnalysis_LiveVariableLattice0 = liveVariablesAnalysis0.createEntryLattice();
    LiveVariablesAnalysis.LiveVariableLattice liveVariablesAnalysis_LiveVariableLattice1 = liveVariablesAnalysis0.join(liveVariablesAnalysis_LiveVariableLattice0, liveVariablesAnalysis_LiveVariableLattice0);
    assertNotSame(liveVariablesAnalysis_LiveVariableLattice0, liveVariablesAnalysis_LiveVariableLattice1);
}",0,
project,0,test097,"public void test097() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""R"", ""R"");
    Node node1 = Node.newString(118, ""R"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node1, (Scope) null);
    node1.addChildrenToFront(node0);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    // Undeclared exception!
    try {
        liveVariablesAnalysis0.analyze(32);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test108,"public void test108() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""eJp {+KUEi:~ !9q=Xw,"", ""eJp {+KUEi:~ !9q=Xw,"");
    Node node1 = Node.newString(98, ""eJp {+KUEi:~ !9q=Xw,"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    // Undeclared exception!
    try {
        liveVariablesAnalysis0.analyze(4);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.LiveVariablesAnalysis"", e);
    }
}",1,
project,0,test119,"public void test119() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "")Gg8=cacX>>r|gD"", "")Gg8=cacX>>r|gD"");
    Node node1 = Node.newString(100, ""Should be unreachable."");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    // Undeclared exception!
    try {
        liveVariablesAnalysis0.analyze(2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.LiveVariablesAnalysis"", e);
    }
}",1,
project,0,test1210,"public void test1210() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""%"", ""%"");
    Node node1 = Node.newString(101, ""%"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    // Undeclared exception!
    try {
        liveVariablesAnalysis0.analyze(35);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.LiveVariablesAnalysis"", e);
    }
}",1,
project,0,test1411,"public void test1411() throws Throwable {
    Compiler compiler0 = new Compiler();
    Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    Node node0 = Node.newString(108, """");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    // Undeclared exception!
    try {
        liveVariablesAnalysis0.analyze(5);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.LiveVariablesAnalysis"", e);
    }
}",1,
project,0,test1512,"public void test1512() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""%"", ""%"");
    Node node1 = Node.newString(113, ""%"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    // Undeclared exception!
    try {
        liveVariablesAnalysis0.analyze(15);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.LiveVariablesAnalysis"", e);
    }
}",1,
project,0,test1613,"public void test1613() throws Throwable {
    Compiler compiler0 = new Compiler();
    Normalize.parseAndNormalizeTestCode(compiler0, ""U.Pv<"", ""U.Pv<"");
    Node node0 = Node.newString(114, ""U.Pv<"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    // Undeclared exception!
    try {
        liveVariablesAnalysis0.analyze(1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.LiveVariablesAnalysis"", e);
    }
}",1,
project,0,test1714,"public void test1714() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscmp.LiveVaiabesAnalysis$LiveVariableJoinOp"", ""com.google.javascript.jscmp.LiveVaiabesAnalysis$LiveVariableJoinOp"");
    Node node1 = Node.newString(115, ""com.google.javascript.jscmp.LiveVaiabesAnalysis$LiveVariableJoinOp"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    // Undeclared exception!
    try {
        liveVariablesAnalysis0.analyze(36);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // malformed 'for' statement FOR com.google.javascript.jscmp.LiveVaiabesAnalysis$LiveVariableJoinOp
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test2115,"public void test2115() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""R"", ""R"");
    Node node1 = Node.newString(118, ""R"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node1, (Scope) null);
    scope0.declare(""R"", node0, (JSType) null, (CompilerInput) null, true);
    node1.addChildrenToFront(node0);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    // Undeclared exception!
    try {
        liveVariablesAnalysis0.analyze(32);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
