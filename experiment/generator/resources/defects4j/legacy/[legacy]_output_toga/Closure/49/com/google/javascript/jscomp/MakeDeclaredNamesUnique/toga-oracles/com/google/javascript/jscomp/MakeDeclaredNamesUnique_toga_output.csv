project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Compiler compiler0 = new Compiler();
    MakeDeclaredNamesUnique.getContextualRenameInverter(compiler0);
    // Undeclared exception!
    try {
        Normalize.parseAndNormalizeTestCode(compiler0, ""arguments"", ""arguments"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // duplicate key: consistentIdGenerator
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test011,"public void test011() throws Throwable {
    MakeDeclaredNamesUnique makeDeclaredNamesUnique0 = new MakeDeclaredNamesUnique();
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.parseTestCode(""function JSCompiler_mptyFn() {  return function() {}}"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // duplicate key: consistentIdGenerator
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test022,"public void test022() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.parseTestCode(""function JSCompiler_emptyFn() {  return function() {}}"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // duplicate key: consistentIdGenerator
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    MakeDeclaredNamesUnique makeDeclaredNamesUnique0 = new MakeDeclaredNamesUnique();
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.parseTestCode(""function JSCompiler_mptyFn() {  return function() {}}"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // duplicate key: consistentIdGenerator
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test044,"public void test044() throws Throwable {
    RenameLabels.DefaultNameSupplier renameLabels_DefaultNameSupplier0 = new RenameLabels.DefaultNameSupplier();
    MakeDeclaredNamesUnique.BoilerplateRenamer makeDeclaredNamesUnique_BoilerplateRenamer0 = new MakeDeclaredNamesUnique.BoilerplateRenamer(renameLabels_DefaultNameSupplier0, ""GJ"");
    MakeDeclaredNamesUnique makeDeclaredNamesUnique0 = new MakeDeclaredNamesUnique(makeDeclaredNamesUnique_BoilerplateRenamer0);
    Compiler compiler0 = new Compiler();
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, makeDeclaredNamesUnique0, (ScopeCreator) null);
    Node node0 = new Node(120);
    // Undeclared exception!
    try {
        makeDeclaredNamesUnique0.visit(nodeTraversal0, node0, node0);
        fail(""Expecting exception: NoSuchElementException"");
    } catch (NoSuchElementException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.ArrayDeque"", e);
    }
}",0,
project,0,test066,"public void test066() throws Throwable {
    MakeDeclaredNamesUnique makeDeclaredNamesUnique0 = new MakeDeclaredNamesUnique();
    Node node0 = new Node(105);
    Compiler compiler0 = new Compiler();
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, makeDeclaredNamesUnique0);
    // Undeclared exception!
    try {
        nodeTraversal0.traverse(node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // INTERNAL COMPILER ERROR.
        // Please report this problem.
        // null
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test077,"public void test077() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    Compiler compiler0 = new Compiler();
    MakeDeclaredNamesUnique makeDeclaredNamesUnique0 = new MakeDeclaredNamesUnique((MakeDeclaredNamesUnique.Renamer) null);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, makeDeclaredNamesUnique0);
    // Undeclared exception!
    try {
        nodeTraversal0.traverse(node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test088,"public void test088() throws Throwable {
    MakeDeclaredNamesUnique makeDeclaredNamesUnique0 = new MakeDeclaredNamesUnique();
    Compiler compiler0 = new Compiler();
    Node node0 = new Node(120);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, makeDeclaredNamesUnique0);
    // Undeclared exception!
    try {
        nodeTraversal0.traverse(node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    Compiler compiler0 = new Compiler();
    MakeDeclaredNamesUnique.getContextualRenameInverter(compiler0);
    // Undeclared exception!
    try {
        compiler0.parseTestCode(""function JSCompiler_mptyFn() {  return function() {}}"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // duplicate key: consistentIdGenerator
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
