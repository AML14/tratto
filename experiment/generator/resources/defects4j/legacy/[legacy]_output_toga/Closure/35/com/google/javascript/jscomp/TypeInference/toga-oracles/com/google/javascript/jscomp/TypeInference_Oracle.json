[ {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0000"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0011"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0022"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0033"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0044"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0055"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0066"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0088"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0099"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01010"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01111"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01212"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01313"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01414"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01515"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01616"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01717"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01818"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01919"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02020"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02121"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02222"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02323"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02424"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02525"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02626"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02727"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02828"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02929"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03030"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03131"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03232"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03333"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03434"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03535"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03636"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03737"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03838"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03939"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04040"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04141"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04242"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04343"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04444"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04545"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04646"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04747"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04848"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04949"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05050"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05151"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05252"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05353"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05454"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05555"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05656"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05757"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05858"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05959"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06060"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06161"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06262"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06363"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06464"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06565"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06666"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06767"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06868"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06969"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07070"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07171"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07272"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07373"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07474"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07575"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07676"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07777"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07878"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07979"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08080"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08181"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08282"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08383"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08484"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08585"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08686"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08787"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08888"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08989"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09090"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09191"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09292"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09393"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09494"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09595"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09696"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09797"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09898"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09999"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test100100"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test101101"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test102102"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test103103"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test104104"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test105105"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test106106"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test107107"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test108108"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test109109"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test110110"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test111111"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test112112"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test113113"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test114114"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test115115"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test116116"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test117117"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test119119"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test120120"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test121121"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "public boolean hasCachedValues()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test122122"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test122123"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test123124"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test124125"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test125126"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test126127"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "public boolean hasCachedValues()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(objectType0.hasCachedValues())",
  "exception" : "",
  "testName" : "test127128"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "static BooleanLiteralSet getBooleanOutcomes(BooleanLiteralSet left, BooleanLiteralSet right, boolean condition)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test128129"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "FlowScope flowThrough(Node n, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test129130"
} ]