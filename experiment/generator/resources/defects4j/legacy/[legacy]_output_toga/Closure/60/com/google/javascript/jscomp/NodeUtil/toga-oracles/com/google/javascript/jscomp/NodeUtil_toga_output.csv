project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0011,"public void test0011() throws Throwable {
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    Node node0 = Node.newString(""!"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test0022,"public void test0022() throws Throwable {
    Node node0 = new Node(30);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForCallOrNew(node0, 45);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test0033,"public void test0033() throws Throwable {
    Node node0 = Node.newString(""cjF/7<]z#"", 22, 22);
    boolean boolean0 = NodeUtil.containsFunction(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0044,"public void test0044() throws Throwable {
    Node node0 = new Node(10, 10, 10);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test0055,"public void test0055() throws Throwable {
    Node node0 = Node.newString("""", (-2157), (-1731));
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test0066,"public void test0066() throws Throwable {
    Node node0 = new Node((byte) 105);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(0, Node.LABEL_ID_PROP);
}",0,
project,0,test0077,"public void test0077() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    // Undeclared exception!
    try {
        NodeUtil.getPrototypePropertyName(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test0088,"public void test0088() throws Throwable {
    Node node0 = new Node(10, 10, 10);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test0099,"public void test0099() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""^="");
    // Undeclared exception!
    try {
        NodeUtil.functionCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected CALL node, got BLOCK
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01010,"public void test01010() throws Throwable {
    Node node0 = new Node(3042);
    boolean boolean0 = NodeUtil.containsCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01111,"public void test01111() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    // Undeclared exception!
    try {
        NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, ""0p-W<BH'1rj.PD-tL"", (Node) null, ""0p-W<BH'1rj.PD-tL"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test01212,"public void test01212() throws Throwable {
    Node node0 = Node.newString(105, ""RegExp"", 105, 105);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForFunction(node0, 49);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01313,"public void test01313() throws Throwable {
    Node node0 = new Node(60);
    // Undeclared exception!
    try {
        NodeUtil.isVarArgsFunction(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test01414,"public void test01414() throws Throwable {
    Node node0 = Node.newString((-35), """");
    int int0 = NodeUtil.getNameReferenceCount(node0, """");
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test01515,"public void test01515() throws Throwable {
    Node node0 = new Node(41, 3031, 2778);
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(77);
    int int0 = NodeUtil.getNodeTypeReferenceCount(node0, (-559), nodeUtil_MatchNodeType0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test01616,"public void test01616() throws Throwable {
    Node node0 = new Node(60);
    // Undeclared exception!
    try {
        NodeUtil.constructorCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected NEW node, got ENUM_ID
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01717,"public void test01717() throws Throwable {
    Node node0 = new Node(17, 17, 17);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test01818,"public void test01818() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.getFunctionBody((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test01919,"public void test01919() throws Throwable {
    Node node0 = new Node(46);
    boolean boolean0 = NodeUtil.isFunctionObjectCallOrApply(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02020,"public void test02020() throws Throwable {
    Node node0 = new Node(46);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02021,"public void test02021() throws Throwable {
    Node node0 = new Node(46);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(node1.hasChildren());
}",0,assertFalse(node1.hasChildren())
project,0,test02122,"public void test02122() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""javascript"", ""javascript"");
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02223,"public void test02223() throws Throwable {
    Node node0 = new Node(71);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02324,"public void test02324() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02425,"public void test02425() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    assertNotNull(node0);
}",0,
project,0,test02426,"public void test02426() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(122, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test02727,"public void test02727() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02828,"public void test02828() throws Throwable {
    Node node0 = new Node(98, 98, 98);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02929,"public void test02929() throws Throwable {
    Node node0 = new Node(100, 100, 100);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03030,"public void test03030() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.getPureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03131,"public void test03131() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""undefined"", (-165), (-165));
    Node node1 = new Node(26, node0, node0, node0);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test03332,"public void test03332() throws Throwable {
    Node node0 = Node.newString(""a%xzBsW;[eU/+=o;("");
    Node node1 = new Node(26, node0, 32, 27);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNotNull(double0);
}",1,
project,0,test03333,"public void test03333() throws Throwable {
    Node node0 = Node.newString(""a%xzBsW;[eU/+=o;("");
    Node node1 = new Node(26, node0, 32, 27);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(0.0, (double) double0, 0.01);
}",1,
project,0,test04234,"public void test04234() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", (-2996), 2);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals((-1), node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test04235,"public void test04235() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", (-2996), 2);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04236,"public void test04236() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", (-2996), 2);
    NodeUtil.getImpureBooleanValue(node0);
    assertTrue(node0.isQualifiedName());
}",0,
project,0,test04337,"public void test04337() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 8052, (-349));
    NodeUtil.getPureBooleanValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04338,"public void test04338() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 8052, (-349));
    NodeUtil.getPureBooleanValue(node0);
    assertEquals((-1), node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test04439,"public void test04439() throws Throwable {
    Node node0 = Node.newString(""a%xzBsW;[eU/+=o;("");
    Node node1 = new Node(26, node0, 32, 27);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertNotNull(string0);
}",0,
project,0,test04440,"public void test04440() throws Throwable {
    Node node0 = Node.newString(""a%xzBsW;[eU/+=o;("");
    Node node1 = new Node(26, node0, 32, 27);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals(""false"", string0);
}",0,assertNotNull(string0)
project,0,test04541,"public void test04541() throws Throwable {
    Node node0 = new Node(64);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",0,
project,0,test04542,"public void test04542() throws Throwable {
    Node node0 = new Node(64);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test04643,"public void test04643() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""pototfype"", 127, 127);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertNull(string0);
}",0,
project,0,test04644,"public void test04644() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""pototfype"", 127, 127);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(520319, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test04645,"public void test04645() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""pototfype"", 127, 127);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04646,"public void test04646() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""pototfype"", 127, 127);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertTrue(node0.isQualifiedName());
}",0,assertTrue(node0.isQualifiedName())
project,0,test04747,"public void test04747() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    String string0 = NodeUtil.arrayToString(node0);
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test04748,"public void test04748() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    String string0 = NodeUtil.arrayToString(node0);
    assertEquals(""0"", string0);
}",0,
project,0,test04749,"public void test04749() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    String string0 = NodeUtil.arrayToString(node0);
    assertEquals(122, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04850,"public void test04850() throws Throwable {
    Node node0 = Node.newString(""="", 92, 955);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""="", string0);
}",0,
project,0,test04951,"public void test04951() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile(""-"");
    Node node0 = compiler0.parse(jSSourceFile0);
    Node node1 = new Node(41, node0, 1772, (-3028));
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(""null"", string0);
}",0,
project,0,test05052,"public void test05052() throws Throwable {
    Node node0 = Node.newString(43, ""est"");
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(""false"", string0);
}",0,
project,0,test05153,"public void test05153() throws Throwable {
    Node node0 = new Node(44, 21, 44);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""true"", string0);
}",0,
project,0,test05254,"public void test05254() throws Throwable {
    Node node0 = new Node(63);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test05255,"public void test05255() throws Throwable {
    Node node0 = new Node(63);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",0,
project,0,test05356,"public void test05356() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""undefined"", string0);
}",0,
project,0,test05357,"public void test05357() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    String string0 = NodeUtil.getStringValue(node0);
    assertNotNull(string0);
}",0,
project,0,test05458,"public void test05458() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""NaN"", 1877, (byte) 110);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""NaN"", string0);
}",0,
project,0,test05459,"public void test05459() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""NaN"", 1877, (byte) 110);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(7688302, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test05460,"public void test05460() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""NaN"", 1877, (byte) 110);
    String string0 = NodeUtil.getStringValue(node0);
    assertNotNull(string0);
}",0,
project,0,test05561,"public void test05561() throws Throwable {
    Node node0 = Node.newNumber(2933.3175924983193);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""2933.3175924983193"", string0);
}",0,
project,0,test05662,"public void test05662() throws Throwable {
    Node node0 = Node.newString(64, ""!/D@L+(SKYe`X8V"", 64, 64);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals("""", string0);
}",0,
project,0,test05663,"public void test05663() throws Throwable {
    Node node0 = Node.newString(64, ""!/D@L+(SKYe`X8V"", 64, 64);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertNotNull(string0);
}",0,
project,0,test05664,"public void test05664() throws Throwable {
    Node node0 = Node.newString(64, ""!/D@L+(SKYe`X8V"", 64, 64);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals(64, node1.getCharno());
}",0,
project,0,test05765,"public void test05765() throws Throwable {
    JSSourceFile jSSourceFile0 = JSSourceFile.fromCode(""javascrupt"", ""javascrupt"");
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parse(jSSourceFile0);
    String string0 = NodeUtil.arrayToString(node0);
    assertNull(string0);
}",0,
project,0,test05866,"public void test05866() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test05967,"public void test05967() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""W_r4"", 2323, 2323);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test05968,"public void test05968() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""W_r4"", 2323, 2323);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(9517331, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test05969,"public void test05969() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""W_r4"", 2323, 2323);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",1,
project,0,test06070,"public void test06070() throws Throwable {
    Node node0 = new Node(39, 39, 39);
    // Undeclared exception!
    try {
        NodeUtil.getNumberValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Number node not created with Node.newNumber
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",1,
project,0,test06171,"public void test06171() throws Throwable {
    Node node0 = Node.newString(""\u000B"", 67, 594);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test06272,"public void test06272() throws Throwable {
    Node node0 = new Node(41);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test06373,"public void test06373() throws Throwable {
    Node node0 = new Node(43);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test06474,"public void test06474() throws Throwable {
    Node node0 = new Node(44);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(1.0, (double) double0, 0.01);
}",0,
project,0,test06575,"public void test06575() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test06576,"public void test06576() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",0,
project,0,test06677,"public void test06677() throws Throwable {
    Node node0 = new Node(28);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test06778,"public void test06778() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""infinity"", (byte) 105, (byte) 105);
    Node node1 = new Node(26, node0, 32, 27);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNull(double0);
}",1,
project,0,test06779,"public void test06779() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""infinity"", (byte) 105, (byte) 105);
    Node node1 = new Node(26, node0, 32, 27);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(38, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test06780,"public void test06780() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""infinity"", (byte) 105, (byte) 105);
    Node node1 = new Node(26, node0, 32, 27);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(430185, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test06881,"public void test06881() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""&"");
    assertNotNull(double0);
}",0,
project,0,test06882,"public void test06882() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""&"");
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test06983,"public void test06983() throws Throwable {
    Node node0 = Node.newString(""0W7M,|qoZZ3!Xv4Ox"", 114, 114);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",1,
project,0,test06984,"public void test06984() throws Throwable {
    Node node0 = Node.newString(""0W7M,|qoZZ3!Xv4Ox"", 114, 114);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",1,
project,0,test07085,"public void test07085() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""-infinity"");
    assertNull(double0);
}",0,
project,0,test07186,"public void test07186() throws Throwable {
    Node node0 = Node.newString(""infinity"", (-382), 13);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",1,
project,0,test07287,"public void test07287() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""+infinity"");
    assertNull(double0);
}",0,
project,0,test07388,"public void test07388() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue("" type: "");
    assertNotNull(double0);
}",0,
project,0,test07389,"public void test07389() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue("" type: "");
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test08090,"public void test08090() throws Throwable {
    Node node0 = Node.newString(""infinity"");
    Node node1 = new Node(26, node0, 32, 27);
    boolean boolean0 = NodeUtil.isImmutableValue(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test08191,"public void test08191() throws Throwable {
    Node node0 = new Node(29);
    // Undeclared exception!
    try {
        NodeUtil.isImmutableValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test08292,"public void test08292() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""SETTER"", 117, 127);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test08293,"public void test08293() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""SETTER"", 117, 127);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(479359, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test08294,"public void test08294() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""SETTER"", 117, 127);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test08395,"public void test08395() throws Throwable {
    Node node0 = Node.newString(41, ""prototype"");
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(18);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
    assertTrue(boolean0);
}",0,
project,0,test08496,"public void test08496() throws Throwable {
    Node node0 = new Node(43);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test08597,"public void test08597() throws Throwable {
    Node node0 = new Node(44);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test08698,"public void test08698() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    boolean boolean0 = NodeUtil.isImmutableValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test08799,"public void test08799() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", (-1), 16);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test087100,"public void test087100() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", (-1), 16);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test087101,"public void test087101() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", (-1), 16);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test088102,"public void test088102() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""NaN"", 1877, (byte) 110);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertEquals(7688302, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test088103,"public void test088103() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""NaN"", 1877, (byte) 110);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test088104,"public void test088104() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""NaN"", 1877, (byte) 110);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test089105,"public void test089105() throws Throwable {
    Node node0 = Node.newNumber((-635.0));
    Node node1 = new Node(63, node0);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, false);
    assertTrue(boolean0);
}",0,
project,0,test090106,"public void test090106() throws Throwable {
    Node node0 = Node.newString(64, ""!/D@L+(SKYe`X8V"", 64, 64);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    node0.addChildToFront(node1);
    assertEquals(122, node1.getType());
}",0,"assertEquals(1, node1.getType())"
project,0,test090107,"public void test090107() throws Throwable {
    Node node0 = Node.newString(64, ""!/D@L+(SKYe`X8V"", 64, 64);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    node0.addChildToFront(node1);
    assertEquals(64, node1.getCharno());
}",0,
project,0,test090108,"public void test090108() throws Throwable {
    Node node0 = Node.newString(64, ""!/D@L+(SKYe`X8V"", 64, 64);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    node0.addChildToFront(node1);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,
project,0,test091109,"public void test091109() throws Throwable {
    Node node0 = new Node((byte) 105);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertFalse(boolean0);
}",0,
project,0,test092110,"public void test092110() throws Throwable {
    Node node0 = new Node((byte) 105);
    Node node1 = new Node(1, node0);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
    assertTrue(boolean0);
}",0,
project,0,test093111,"public void test093111() throws Throwable {
    Node node0 = new Node(63);
    Node node1 = new Node(11, node0, 1, 43);
    Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test094112,"public void test094112() throws Throwable {
    Node node0 = new Node(12, 86, 999);
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test095113,"public void test095113() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""JSC_UNDEFINED_NAME"", (-4417), 100);
    Node node1 = new Node(13, node0, 4095, 39);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, compilerOptions0.stripTypes);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test095114,"public void test095114() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""JSC_UNDEFINED_NAME"", (-4417), 100);
    Node node1 = new Node(13, node0, 4095, 39);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, compilerOptions0.stripTypes);
    assertFalse(boolean0);
}",0,
project,0,test095115,"public void test095115() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""JSC_UNDEFINED_NAME"", (-4417), 100);
    Node node1 = new Node(13, node0, 4095, 39);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, compilerOptions0.stripTypes);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test096116,"public void test096116() throws Throwable {
    Node node0 = new Node(15);
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test097117,"public void test097117() throws Throwable {
    Node node0 = new Node(16);
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test098118,"public void test098118() throws Throwable {
    Node node0 = new Node(17);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, set0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test099119,"public void test099119() throws Throwable {
    Node node0 = new Node(18);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, set0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test100120,"public void test100120() throws Throwable {
    Node node0 = Node.newString(10, ""pV)]$x~6m]Sm/91$pq"");
    Node node1 = new Node(19, 1, 28);
    node0.addChildrenToBack(node1);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypePrefixes);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test101121,"public void test101121() throws Throwable {
    Node node0 = new Node(20);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNameSuffixes);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test102122,"public void test102122() throws Throwable {
    Node node0 = new Node(21);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, linkedHashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test103123,"public void test103123() throws Throwable {
    Node node0 = new Node((byte) (-111));
    Node node1 = new Node(22, node0, 30, 51);
    Compiler compiler0 = new Compiler();
    GatherRawExports gatherRawExports0 = new GatherRawExports(compiler0);
    Set<String> set0 = gatherRawExports0.getExportedVariableNames();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test104124,"public void test104124() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""ZoDlEMUv*wroRqTZ"", (byte) 101, (byte) 101);
    Node node1 = new Node(26, node0, 42, 91);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test104125,"public void test104125() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""ZoDlEMUv*wroRqTZ"", (byte) 101, (byte) 101);
    Node node1 = new Node(26, node0, 42, 91);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertEquals(413797, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test104126,"public void test104126() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""ZoDlEMUv*wroRqTZ"", (byte) 101, (byte) 101);
    Node node1 = new Node(26, node0, 42, 91);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test105127,"public void test105127() throws Throwable {
    Node node0 = new Node(27, 27, 27);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, compilerOptions0.aliasableStrings);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test106128,"public void test106128() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Expected CALL node, got "");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Expected CALL node, got "", 111, 111);
    Node node1 = new Node(28, node0, (-2329), 2850);
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertEquals(454767, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test106129,"public void test106129() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Expected CALL node, got "");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Expected CALL node, got "", 111, 111);
    Node node1 = new Node(28, node0, (-2329), 2850);
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test106130,"public void test106130() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Expected CALL node, got "");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Expected CALL node, got "", 111, 111);
    Node node1 = new Node(28, node0, (-2329), 2850);
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test107131,"public void test107131() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test108132,"public void test108132() throws Throwable {
    Node node0 = new Node(30);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNamePrefixes);
    assertFalse(boolean0);
}",0,
project,0,test109133,"public void test109133() throws Throwable {
    Node node0 = Node.newString(32, ""pV)]$x~6m]Sm/91$pq"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(""n H:i]_PsR%['0>4l%;"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
    assertFalse(boolean0);
}",0,
project,0,test110134,"public void test110134() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods((AbstractCompiler) null);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
    Node node1 = new Node(33, node0, node0, 33, 1546);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test111135,"public void test111135() throws Throwable {
    Node node0 = Node.newString(1979, ""m[x<H+zEYt~0YeA"", 181, (-229));
    Node node1 = new Node(34, node0, 90, 11);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test112136,"public void test112136() throws Throwable {
    HashSet<String> hashSet0 = new HashSet<String>();
    Node node0 = new Node(35);
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test113137,"public void test113137() throws Throwable {
    Node node0 = new Node(36);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.aliasableStrings);
    assertFalse(boolean0);
}",0,
project,0,test114138,"public void test114138() throws Throwable {
    Node node0 = new Node(37);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
    assertFalse(boolean0);
}",0,
project,0,test115139,"public void test115139() throws Throwable {
    Node node0 = new Node(46);
    Node node1 = Node.newNumber((double) 8, 6, 1);
    node0.addChildrenToBack(node1);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypePrefixes);
    assertTrue(boolean0);
}",0,
project,0,test116140,"public void test116140() throws Throwable {
    Node node0 = Node.newString(""0W7M,|qo%Z3!XKv4Ox"", 125, 125);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertTrue(boolean0);
}",0,
project,0,test117141,"public void test117141() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile(""-"");
    Node node0 = compiler0.parse(jSSourceFile0);
    Node node1 = new Node(41, node0, 1772, (-3028));
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test118142,"public void test118142() throws Throwable {
    Node node0 = new Node(42);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
    assertFalse(boolean0);
}",0,
project,0,test119143,"public void test119143() throws Throwable {
    Node node0 = new Node(43);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypePrefixes);
    assertTrue(boolean0);
}",0,
project,0,test120144,"public void test120144() throws Throwable {
    Node node0 = new Node(44, 5, 2);
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertTrue(boolean0);
}",0,
project,0,test121145,"public void test121145() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""^="");
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test122146,"public void test122146() throws Throwable {
    Node node0 = new Node(10, 10, 10);
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test123147,"public void test123147() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile(""c:NRJ2x+i}6+7"");
    Node node0 = compiler0.parse(jSSourceFile0);
    node0.addChildrenToBack(node0);
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test124148,"public void test124148() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test125149,"public void test125149() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test126150,"public void test126150() throws Throwable {
    Node node0 = new Node(12, 86, 999);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test127151,"public void test127151() throws Throwable {
    Node node0 = new Node(94);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    Node node1 = new Node(13, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test128152,"public void test128152() throws Throwable {
    Node node0 = new Node(14);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test129153,"public void test129153() throws Throwable {
    Node node0 = new Node(127);
    Node node1 = new Node(15, node0, 46, 47);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test130154,"public void test130154() throws Throwable {
    Node node0 = new Node(16);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test131155,"public void test131155() throws Throwable {
    Node node0 = new Node(17, 17, 17);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test132156,"public void test132156() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(18);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test133157,"public void test133157() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(19);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test134158,"public void test134158() throws Throwable {
    Node node0 = new Node(20);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test135159,"public void test135159() throws Throwable {
    Node node0 = new Node(21);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test136160,"public void test136160() throws Throwable {
    Node node0 = new Node(23, 17, 14);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test137161,"public void test137161() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(24);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test138162,"public void test138162() throws Throwable {
    Node node0 = new Node(25, 25, 25);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test139163,"public void test139163() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(26);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test140164,"public void test140164() throws Throwable {
    Node node0 = new Node(112, 3, 3);
    Node node1 = new Node(28, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test141165,"public void test141165() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(29);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test142166,"public void test142166() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    boolean boolean0 = NodeUtil.isSimpleOperator(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test143167,"public void test143167() throws Throwable {
    Node node0 = new Node(31, 31, 31);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test144168,"public void test144168() throws Throwable {
    Node node0 = Node.newString(32, ""pV)]$x~6m]Sm/91$pq"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test145169,"public void test145169() throws Throwable {
    Node node0 = new Node(33);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test146170,"public void test146170() throws Throwable {
    Node node0 = new Node((byte) (-111));
    Node node1 = new Node(34, node0, node0);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETPROP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test147171,"public void test147171() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    Node node1 = new Node(35, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test148172,"public void test148172() throws Throwable {
    Node node0 = new Node(36, 36, 36);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test149173,"public void test149173() throws Throwable {
    Node node0 = new Node(37);
    boolean boolean0 = NodeUtil.isSimpleOperator(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test150174,"public void test150174() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(38);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test151175,"public void test151175() throws Throwable {
    Node node0 = new Node(39, 39, 39);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test152176,"public void test152176() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(42);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test153177,"public void test153177() throws Throwable {
    Node node0 = new Node(45);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test154178,"public void test154178() throws Throwable {
    Node node0 = new Node(46);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test155179,"public void test155179() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(47);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test156180,"public void test156180() throws Throwable {
    Node node0 = new Node(48, 41, 2027);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test157181,"public void test157181() throws Throwable {
    Node node0 = new Node(50, 50, 50);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test158182,"public void test158182() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(51);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test159183,"public void test159183() throws Throwable {
    Node node0 = new Node(52, 631, 631);
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(48);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
    assertTrue(boolean0);
}",0,
project,0,test160184,"public void test160184() throws Throwable {
    Node node0 = new Node(53);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test161185,"public void test161185() throws Throwable {
    Node node0 = new Node(55);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test162186,"public void test162186() throws Throwable {
    Node node0 = new Node(56);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test163187,"public void test163187() throws Throwable {
    Node node0 = new Node(58);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test164188,"public void test164188() throws Throwable {
    Node node0 = new Node(59);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_NEXT
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test165189,"public void test165189() throws Throwable {
    Node node0 = new Node(60, 60, 60);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_ID 60
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test166190,"public void test166190() throws Throwable {
    Node node0 = new Node(61, 61, 61);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, predicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHISFN 61
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test167191,"public void test167191() throws Throwable {
    Node node0 = new Node(62, 111, 111);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRETURN_RESULT 111
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test168192,"public void test168192() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(63);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test169193,"public void test169193() throws Throwable {
    Node node0 = new Node(66, 8, 12);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test170194,"public void test170194() throws Throwable {
    Node node0 = new Node(67, 67, (-4173));
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEL_REF
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test171195,"public void test171195() throws Throwable {
    Node node0 = new Node(68);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test172196,"public void test172196() throws Throwable {
    Node node0 = new Node(69);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test173197,"public void test173197() throws Throwable {
    Node node0 = new Node(71);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test174198,"public void test174198() throws Throwable {
    Node node0 = new Node(72);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test175199,"public void test175199() throws Throwable {
    Node node0 = new Node(73, 73, 73);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test176200,"public void test176200() throws Throwable {
    Node node0 = new Node(74);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_MEMBER
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test177201,"public void test177201() throws Throwable {
    Node node0 = new Node(75, 75, 75);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test178202,"public void test178202() throws Throwable {
    Node node0 = new Node(76);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, (Predicate<Node>) null);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_NAME
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test179203,"public void test179203() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTRY 77
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test180204,"public void test180204() throws Throwable {
    Node node0 = new Node(78);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test181205,"public void test181205() throws Throwable {
    Node node0 = new Node(79);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test182206,"public void test182206() throws Throwable {
    Node node0 = new Node(80);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRB
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test183207,"public void test183207() throws Throwable {
    Node node0 = new Node(81);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test184208,"public void test184208() throws Throwable {
    Node node0 = new Node(82);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test185209,"public void test185209() throws Throwable {
    Node node0 = new Node(83);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test186210,"public void test186210() throws Throwable {
    Node node0 = new Node(84, 84, 84);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRP 84
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test187211,"public void test187211() throws Throwable {
    Node node0 = Node.newString(85, ""2hv& Agp"", 24, 26);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test188212,"public void test188212() throws Throwable {
    Node node0 = new Node(22, 22, 22);
    Node node1 = new Node(86, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test189213,"public void test189213() throws Throwable {
    Node node0 = new Node(87);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test190214,"public void test190214() throws Throwable {
    Node node0 = new Node(88, 88, 88);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test191215,"public void test191215() throws Throwable {
    Node node0 = new Node(89, 4942, 89);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test192216,"public void test192216() throws Throwable {
    Node node0 = new Node(90, 90, 90);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test193217,"public void test193217() throws Throwable {
    Node node0 = new Node(91, 91, 91);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test194218,"public void test194218() throws Throwable {
    Node node0 = new Node(92);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test195219,"public void test195219() throws Throwable {
    Node node0 = new Node(93, 102, 93);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test196220,"public void test196220() throws Throwable {
    Node node0 = new Node(94);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test197221,"public void test197221() throws Throwable {
    Node node0 = new Node(95);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test198222,"public void test198222() throws Throwable {
    Node node0 = new Node(96, 96, 96);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test199223,"public void test199223() throws Throwable {
    Node node0 = new Node(97);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test200224,"public void test200224() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(98);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test201225,"public void test201225() throws Throwable {
    Node node0 = new Node(99, 115, 115);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test202226,"public void test202226() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(100);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test203227,"public void test203227() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(101);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test204228,"public void test204228() throws Throwable {
    Node node0 = new Node(103);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test205229,"public void test205229() throws Throwable {
    Node node0 = new Node(104, (-2145), 113);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDOT
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test206230,"public void test206230() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType((byte) 105);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test207231,"public void test207231() throws Throwable {
    Node node0 = new Node(106);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test208232,"public void test208232() throws Throwable {
    Node node0 = new Node(107);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test209233,"public void test209233() throws Throwable {
    Node node0 = new Node(108);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeIF
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test210234,"public void test210234() throws Throwable {
    Node node0 = new Node(109);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test211235,"public void test211235() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(110);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test212236,"public void test212236() throws Throwable {
    Node node0 = new Node(46);
    Node node1 = new Node(113, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test213237,"public void test213237() throws Throwable {
    Node node0 = new Node(114, 114, 67);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test214238,"public void test214238() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test215239,"public void test215239() throws Throwable {
    Node node0 = new Node(116, 108, 116);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test216240,"public void test216240() throws Throwable {
    Node node0 = new Node(117, 65536, 161);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test217241,"public void test217241() throws Throwable {
    Node node0 = new Node(118);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeVAR
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test218242,"public void test218242() throws Throwable {
    Node node0 = new Node(120, 120, 120);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test219243,"public void test219243() throws Throwable {
    Node node0 = new Node(121);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test220244,"public void test220244() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test221245,"public void test221245() throws Throwable {
    Node node0 = new Node(30);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test222246,"public void test222246() throws Throwable {
    Node node0 = new Node(34, 1, 27);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test223247,"public void test223247() throws Throwable {
    Node node0 = Node.newString("""", (-2157), (-1731));
    Node node1 = new Node(37, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test224248,"public void test224248() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test225249,"public void test225249() throws Throwable {
    Node node0 = new Node(42, 42, 42);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test226250,"public void test226250() throws Throwable {
    Node node0 = new Node(44, 21, 44);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test227251,"public void test227251() throws Throwable {
    Node node0 = new Node(47, 12, 9);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test228252,"public void test228252() throws Throwable {
    Node node0 = new Node(49, 7, 2535);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test229253,"public void test229253() throws Throwable {
    Node node0 = new Node((byte) 105);
    Node node1 = new Node(51, node0, node0, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test230254,"public void test230254() throws Throwable {
    Node node0 = new Node(52);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test231255,"public void test231255() throws Throwable {
    Node node0 = new Node(59);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test232256,"public void test232256() throws Throwable {
    Node node0 = new Node(60, 60, 60);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test233257,"public void test233257() throws Throwable {
    Node node0 = new Node(67, 67, 67);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test234258,"public void test234258() throws Throwable {
    Node node0 = new Node(76, 60, 76);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test235259,"public void test235259() throws Throwable {
    Node node0 = new Node(77, 52, 52);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test236260,"public void test236260() throws Throwable {
    Node node0 = new Node(80);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test237261,"public void test237261() throws Throwable {
    Node node0 = new Node(83);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test238262,"public void test238262() throws Throwable {
    Node node0 = new Node(84, 84, 84);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test239263,"public void test239263() throws Throwable {
    Node node0 = new Node(98);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test240264,"public void test240264() throws Throwable {
    Node node0 = new Node(100, 100, 100);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test241265,"public void test241265() throws Throwable {
    Node node0 = new Node(101, 101, 101);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test242266,"public void test242266() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test243267,"public void test243267() throws Throwable {
    Node node0 = new Node(104, 104, 104);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test244268,"public void test244268() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test245269,"public void test245269() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test246270,"public void test246270() throws Throwable {
    Node node0 = new Node(111);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test247271,"public void test247271() throws Throwable {
    Node node0 = new Node(142);
    Node node1 = NodeUtil.newVarNode(""Ld16PwWb"", node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test247272,"public void test247272() throws Throwable {
    Node node0 = new Node(142);
    Node node1 = NodeUtil.newVarNode(""Ld16PwWb"", node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test247273,"public void test247273() throws Throwable {
    Node node0 = new Node(142);
    Node node1 = NodeUtil.newVarNode(""Ld16PwWb"", node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(118, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test248274,"public void test248274() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test249275,"public void test249275() throws Throwable {
    Node node0 = new Node((byte) 123);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test250276,"public void test250276() throws Throwable {
    Node node0 = Node.newString(124, ""7X*}%"");
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test251277,"public void test251277() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""^="");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test252278,"public void test252278() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = Node.newString(126, "",%muZ\""L^%zo"");
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test253279,"public void test253279() throws Throwable {
    Node node0 = new Node(128);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test254280,"public void test254280() throws Throwable {
    Node node0 = new Node(64);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test256281,"public void test256281() throws Throwable {
    Node node0 = new Node((byte) 105, (byte) 105, (byte) 105);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test257282,"public void test257282() throws Throwable {
    Node node0 = new Node(65, 43, 43);
    Node node1 = new Node(86, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test258283,"public void test258283() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    Node node1 = new Node(86, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test259284,"public void test259284() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    node0.addChildrenToBack(node0);
    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager((Logger) null);
    Compiler compiler0 = new Compiler(loggerErrorManager0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test260285,"public void test260285() throws Throwable {
    Node node0 = new Node(73);
    // Undeclared exception!
    try {
        NodeUtil.callHasLocalResult(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test261286,"public void test261286() throws Throwable {
    Node node0 = new Node((-2157), (-1731), (-1731));
    Node node1 = new Node(37, node0);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,
project,0,test262287,"public void test262287() throws Throwable {
    Node node0 = Node.newNumber(770.0, (-1502), (-1502));
    // Undeclared exception!
    try {
        NodeUtil.newHasLocalResult(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test263288,"public void test263288() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
    assertFalse(boolean0);
}",0,
project,0,test264289,"public void test264289() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    Compiler compiler0 = new Compiler();
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test265290,"public void test265290() throws Throwable {
    Node node0 = Node.newString(31, ""j,$$"");
    Logger logger0 = Tracer.logger;
    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
    Compiler compiler0 = new Compiler(loggerErrorManager0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test266291,"public void test266291() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString("""", (-2158), (-1731));
    Node node1 = new Node(37, node0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test267292,"public void test267292() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Compiler compiler0 = new Compiler();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""E-^D<H[$H865!"", (-1814), 98);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertEquals((-1), node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test267293,"public void test267293() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Compiler compiler0 = new Compiler();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""E-^D<H[$H865!"", (-1814), 98);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test267294,"public void test267294() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Compiler compiler0 = new Compiler();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""E-^D<H[$H865!"", (-1814), 98);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test268295,"public void test268295() throws Throwable {
    Node node0 = Node.newString(49, ""Or("");
    Compiler compiler0 = new Compiler();
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test269296,"public void test269296() throws Throwable {
    Node node0 = Node.newString(102, ""0W7M,|qoZZ3!Xv4Ox"", (-2340), (-1667));
    Compiler compiler0 = new Compiler();
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test270297,"public void test270297() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(103, ""3"", 916, (-1809));
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test271298,"public void test271298() throws Throwable {
    Node node0 = new Node(30);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test272299,"public void test272299() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscomp.ExploitAssigns"", ""com.google.javascript.jscomp.ExploitAssigns"");
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test273300,"public void test273300() throws Throwable {
    Node node0 = Node.newString("""", (-2157), (-1731));
    Node node1 = new Node(37, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test274301,"public void test274301() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""E-^D<H[$H865!"", (-1814), 98);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test274302,"public void test274302() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""E-^D<H[$H865!"", (-1814), 98);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertEquals((-1), node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test275303,"public void test275303() throws Throwable {
    int int0 = NodeUtil.precedence(9);
    assertEquals(5, int0);
}",0,
project,0,test276304,"public void test276304() throws Throwable {
    int int0 = NodeUtil.precedence(86);
    assertEquals(1, int0);
}",0,
project,0,test277305,"public void test277305() throws Throwable {
    int int0 = NodeUtil.precedence(10);
    assertEquals(6, int0);
}",0,
project,0,test278306,"public void test278306() throws Throwable {
    int int0 = NodeUtil.precedence(11);
    assertEquals(7, int0);
}",0,
project,0,test279307,"public void test279307() throws Throwable {
    int int0 = NodeUtil.precedence(12);
    assertEquals(8, int0);
}",0,
project,0,test280308,"public void test280308() throws Throwable {
    int int0 = NodeUtil.precedence(13);
    assertEquals(8, int0);
}",0,
project,0,test281309,"public void test281309() throws Throwable {
    int int0 = NodeUtil.precedence(14);
    assertEquals(9, int0);
}",0,
project,0,test282310,"public void test282310() throws Throwable {
    int int0 = NodeUtil.precedence(15);
    assertEquals(9, int0);
}",0,
project,0,test283311,"public void test283311() throws Throwable {
    int int0 = NodeUtil.precedence(16);
    assertEquals(9, int0);
}",0,
project,0,test284312,"public void test284312() throws Throwable {
    int int0 = NodeUtil.precedence(17);
    assertEquals(9, int0);
}",0,
project,0,test285313,"public void test285313() throws Throwable {
    int int0 = NodeUtil.precedence(18);
    assertEquals(10, int0);
}",0,
project,0,test286314,"public void test286314() throws Throwable {
    int int0 = NodeUtil.precedence(19);
    assertEquals(10, int0);
}",0,
project,0,test287315,"public void test287315() throws Throwable {
    int int0 = NodeUtil.precedence(20);
    assertEquals(10, int0);
}",0,
project,0,test288316,"public void test288316() throws Throwable {
    int int0 = NodeUtil.precedence(21);
    assertEquals(11, int0);
}",0,
project,0,test289317,"public void test289317() throws Throwable {
    int int0 = NodeUtil.precedence(22);
    assertEquals(11, int0);
}",0,
project,0,test290318,"public void test290318() throws Throwable {
    int int0 = NodeUtil.precedence(23);
    assertEquals(12, int0);
}",0,
project,0,test291319,"public void test291319() throws Throwable {
    int int0 = NodeUtil.precedence(24);
    assertEquals(12, int0);
}",0,
project,0,test292320,"public void test292320() throws Throwable {
    int int0 = NodeUtil.precedence(25);
    assertEquals(12, int0);
}",0,
project,0,test293321,"public void test293321() throws Throwable {
    int int0 = NodeUtil.precedence(26);
    assertEquals(13, int0);
}",0,
project,0,test294322,"public void test294322() throws Throwable {
    int int0 = NodeUtil.precedence(27);
    assertEquals(13, int0);
}",0,
project,0,test295323,"public void test295323() throws Throwable {
    int int0 = NodeUtil.precedence(28);
    assertEquals(13, int0);
}",0,
project,0,test296324,"public void test296324() throws Throwable {
    int int0 = NodeUtil.precedence(29);
    assertEquals(13, int0);
}",0,
project,0,test297325,"public void test297325() throws Throwable {
    int int0 = NodeUtil.precedence(30);
    assertEquals(13, int0);
}",0,
project,0,test298326,"public void test298326() throws Throwable {
    int int0 = NodeUtil.precedence(31);
    assertEquals(13, int0);
}",0,
project,0,test299327,"public void test299327() throws Throwable {
    int int0 = NodeUtil.precedence(32);
    assertEquals(13, int0);
}",0,
project,0,test300328,"public void test300328() throws Throwable {
    int int0 = NodeUtil.precedence(33);
    assertEquals(15, int0);
}",0,
project,0,test301329,"public void test301329() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(34);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setprop (type 34)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test302330,"public void test302330() throws Throwable {
    int int0 = NodeUtil.precedence(35);
    assertEquals(15, int0);
}",0,
project,0,test303331,"public void test303331() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(36);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setelem (type 36)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test304332,"public void test304332() throws Throwable {
    int int0 = NodeUtil.precedence(37);
    assertEquals(15, int0);
}",0,
project,0,test305333,"public void test305333() throws Throwable {
    int int0 = NodeUtil.precedence(38);
    assertEquals(15, int0);
}",0,
project,0,test306334,"public void test306334() throws Throwable {
    int int0 = NodeUtil.precedence(39);
    assertEquals(15, int0);
}",0,
project,0,test307335,"public void test307335() throws Throwable {
    int int0 = NodeUtil.precedence(40);
    assertEquals(15, int0);
}",0,
project,0,test308336,"public void test308336() throws Throwable {
    int int0 = NodeUtil.precedence(41);
    assertEquals(15, int0);
}",0,
project,0,test309337,"public void test309337() throws Throwable {
    int int0 = NodeUtil.precedence(42);
    assertEquals(15, int0);
}",0,
project,0,test310338,"public void test310338() throws Throwable {
    int int0 = NodeUtil.precedence(43);
    assertEquals(15, int0);
}",0,
project,0,test311339,"public void test311339() throws Throwable {
    int int0 = NodeUtil.precedence(44);
    assertEquals(15, int0);
}",0,
project,0,test312340,"public void test312340() throws Throwable {
    int int0 = NodeUtil.precedence(45);
    assertEquals(8, int0);
}",0,
project,0,test313341,"public void test313341() throws Throwable {
    int int0 = NodeUtil.precedence(46);
    assertEquals(8, int0);
}",0,
project,0,test314342,"public void test314342() throws Throwable {
    int int0 = NodeUtil.precedence(47);
    assertEquals(15, int0);
}",0,
project,0,test315343,"public void test315343() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(48);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for bindname (type 48)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test316344,"public void test316344() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(49);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for throw (type 49)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test317345,"public void test317345() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(50);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=50> (type 50)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test318346,"public void test318346() throws Throwable {
    int int0 = NodeUtil.precedence(51);
    assertEquals(9, int0);
}",0,
project,0,test319347,"public void test319347() throws Throwable {
    int int0 = NodeUtil.precedence(52);
    assertEquals(9, int0);
}",0,
project,0,test320348,"public void test320348() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(54);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for getvar (type 54)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test321349,"public void test321349() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(56);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=56> (type 56)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test322350,"public void test322350() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(58);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=58> (type 58)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test323351,"public void test323351() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(59);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=59> (type 59)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test324352,"public void test324352() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(62);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=62> (type 62)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test325353,"public void test325353() throws Throwable {
    int int0 = NodeUtil.precedence(63);
    assertEquals(15, int0);
}",0,
project,0,test326354,"public void test326354() throws Throwable {
    int int0 = NodeUtil.precedence(64);
    assertEquals(15, int0);
}",0,
project,0,test327355,"public void test327355() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(65);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for get_ref (type 65)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test328356,"public void test328356() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(66);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=66> (type 66)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test329357,"public void test329357() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(67);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=67> (type 67)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test330358,"public void test330358() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(68);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=68> (type 68)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test331359,"public void test331359() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(69);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for ref_special (type 69)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test332360,"public void test332360() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(70);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=70> (type 70)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test333361,"public void test333361() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(71);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=71> (type 71)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test334362,"public void test334362() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(72);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=72> (type 72)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test335363,"public void test335363() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(73);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=73> (type 73)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test336364,"public void test336364() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(74);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=74> (type 74)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test337365,"public void test337365() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(75);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=75> (type 75)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test338366,"public void test338366() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(76);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=76> (type 76)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test339367,"public void test339367() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(77);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for try (type 77)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test340368,"public void test340368() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(78);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for semi (type 78)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test341369,"public void test341369() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(79);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lb (type 79)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test342370,"public void test342370() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(80);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rb (type 80)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test343371,"public void test343371() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(81);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lc (type 81)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test344372,"public void test344372() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(82);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rc (type 82)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test345373,"public void test345373() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(83);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lp (type 83)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test346374,"public void test346374() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(84);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rp (type 84)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test347375,"public void test347375() throws Throwable {
    int int0 = NodeUtil.precedence(85);
    assertEquals(0, int0);
}",0,
project,0,test348376,"public void test348376() throws Throwable {
    int int0 = NodeUtil.precedence(87);
    assertEquals(1, int0);
}",0,
project,0,test349377,"public void test349377() throws Throwable {
    int int0 = NodeUtil.precedence(88);
    assertEquals(1, int0);
}",0,
project,0,test350378,"public void test350378() throws Throwable {
    int int0 = NodeUtil.precedence(89);
    assertEquals(1, int0);
}",0,
project,0,test351379,"public void test351379() throws Throwable {
    int int0 = NodeUtil.precedence(90);
    assertEquals(1, int0);
}",0,
project,0,test352380,"public void test352380() throws Throwable {
    int int0 = NodeUtil.precedence(91);
    assertEquals(1, int0);
}",0,
project,0,test353381,"public void test353381() throws Throwable {
    int int0 = NodeUtil.precedence(92);
    assertEquals(1, int0);
}",0,
project,0,test354382,"public void test354382() throws Throwable {
    int int0 = NodeUtil.precedence(93);
    assertEquals(1, int0);
}",0,
project,0,test355383,"public void test355383() throws Throwable {
    int int0 = NodeUtil.precedence(94);
    assertEquals(1, int0);
}",0,
project,0,test356384,"public void test356384() throws Throwable {
    int int0 = NodeUtil.precedence(95);
    assertEquals(1, int0);
}",0,
project,0,test357385,"public void test357385() throws Throwable {
    int int0 = NodeUtil.precedence(96);
    assertEquals(1, int0);
}",0,
project,0,test358386,"public void test358386() throws Throwable {
    int int0 = NodeUtil.precedence(97);
    assertEquals(1, int0);
}",0,
project,0,test359387,"public void test359387() throws Throwable {
    int int0 = NodeUtil.precedence(98);
    assertEquals(2, int0);
}",0,
project,0,test360388,"public void test360388() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(99);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for colon (type 99)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test361389,"public void test361389() throws Throwable {
    int int0 = NodeUtil.precedence(100);
    assertEquals(3, int0);
}",0,
project,0,test362390,"public void test362390() throws Throwable {
    int int0 = NodeUtil.precedence((byte) 101);
    assertEquals(4, int0);
}",0,
project,0,test363391,"public void test363391() throws Throwable {
    int int0 = NodeUtil.precedence(102);
    assertEquals(13, int0);
}",0,
project,0,test364392,"public void test364392() throws Throwable {
    int int0 = NodeUtil.precedence(103);
    assertEquals(13, int0);
}",0,
project,0,test365393,"public void test365393() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(104);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for dot (type 104)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test366394,"public void test366394() throws Throwable {
    int int0 = NodeUtil.precedence(105);
    assertEquals(15, int0);
}",0,
project,0,test367395,"public void test367395() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(106);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for export (type 106)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test368396,"public void test368396() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(107);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for import (type 107)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test369397,"public void test369397() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(108);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for if (type 108)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test370398,"public void test370398() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(109);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for else (type 109)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test371399,"public void test371399() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(110);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for switch (type 110)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test372400,"public void test372400() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for case (type 111)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test373401,"public void test373401() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(112);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for default (type 112)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test374402,"public void test374402() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(113);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for while (type 113)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test375403,"public void test375403() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for do (type 114)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test376404,"public void test376404() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for for (type 115)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test377405,"public void test377405() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for break (type 116)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test378406,"public void test378406() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(117);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for continue (type 117)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test379407,"public void test379407() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for var (type 118)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test380408,"public void test380408() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for with (type 119)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test381409,"public void test381409() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(120);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for catch (type 120)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test382410,"public void test382410() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(121);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for finally (type 121)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test383411,"public void test383411() throws Throwable {
    int int0 = NodeUtil.precedence(122);
    assertEquals(13, int0);
}",0,
project,0,test384412,"public void test384412() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(123);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for reserved (type 123)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test385413,"public void test385413() throws Throwable {
    int int0 = NodeUtil.precedence(124);
    assertEquals(15, int0);
}",0,
project,0,test386414,"public void test386414() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(4095);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=4095> (type 4095)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test387415,"public void test387415() throws Throwable {
    Node node0 = Node.newString(85, ""#Jk[@A$iPo#cZ'pM)Oh"", 120, 120);
    // Undeclared exception!
    try {
        NodeUtil.mayBeString(node0, false);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test388416,"public void test388416() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    // Undeclared exception!
    try {
        NodeUtil.isBooleanResult(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test389417,"public void test389417() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.isBooleanResult(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test390418,"public void test390418() throws Throwable {
    Node node0 = Node.newString(""b"", 67, 67);
    Node node1 = new Node(100, node0);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test391419,"public void test391419() throws Throwable {
    Node node0 = new Node(101, 101, 101);
    // Undeclared exception!
    try {
        NodeUtil.isNumericResult(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test392420,"public void test392420() throws Throwable {
    Node node0 = Node.newString(""b"", 67, 67);
    Node node1 = new Node(100, node0);
    boolean boolean0 = NodeUtil.mayBeString(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test393421,"public void test393421() throws Throwable {
    Node node0 = new Node(9, 33, 2);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.has(node0, nodeUtil_MayBeStringResultPredicate0, nodeUtil_MayBeStringResultPredicate0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test394422,"public void test394422() throws Throwable {
    Node node0 = new Node(11);
    boolean boolean0 = NodeUtil.isNumericResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test395423,"public void test395423() throws Throwable {
    Node node0 = new Node(18, 18, 18);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test396424,"public void test396424() throws Throwable {
    Node node0 = new Node(19);
    boolean boolean0 = NodeUtil.mayBeString(node0, true);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test397425,"public void test397425() throws Throwable {
    Node node0 = new Node(20);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test398426,"public void test398426() throws Throwable {
    Node node0 = Node.newString((-1667), ""Expected CALL node, got "");
    Node node1 = new Node(21, node0, 2, 12);
    boolean boolean0 = NodeUtil.mayBeString(node1, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test399427,"public void test399427() throws Throwable {
    Node node0 = new Node(22);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test400428,"public void test400428() throws Throwable {
    Node node0 = new Node(92);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    Node node1 = new Node(23, node0, node0);
    int int0 = NodeUtil.getCount(node1, nodeUtil_MayBeStringResultPredicate0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test401429,"public void test401429() throws Throwable {
    Node node0 = new Node(24, 730, 41);
    boolean boolean0 = NodeUtil.mayBeString(node0, true);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test403431,"public void test403431() throws Throwable {
    Node node0 = new Node(28);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.valueCheck(node0, nodeUtil_MayBeStringResultPredicate0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test404432,"public void test404432() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test405433,"public void test405433() throws Throwable {
    Node node0 = Node.newNumber((-148.689299441848));
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test406434,"public void test406434() throws Throwable {
    Node node0 = new Node(102, 102, 102);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test407435,"public void test407435() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.isNumericResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test408436,"public void test408436() throws Throwable {
    Node node0 = new Node(12);
    Node node1 = new Node(21, node0, 2, 12);
    boolean boolean0 = NodeUtil.mayBeString(node1, true);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test409438,"public void test409438() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""NaN"", 116, (-2996));
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = nodeUtil_MayBeStringResultPredicate0.apply(node0);
    assertEquals((-1), node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test410439,"public void test410439() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", (-1), 16);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test410440,"public void test410440() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", (-1), 16);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertEquals((-1), node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test411441,"public void test411441() throws Throwable {
    Node node0 = new Node(13, 5, 2);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test412442,"public void test412442() throws Throwable {
    Node node0 = Node.newString(""b"", 67, 67);
    Node node1 = new Node(14, node0);
    boolean boolean0 = NodeUtil.mayBeString(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test413443,"public void test413443() throws Throwable {
    Node node0 = new Node(15);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test414444,"public void test414444() throws Throwable {
    Node node0 = new Node(16);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test415445,"public void test415445() throws Throwable {
    Node node0 = new Node(18, 3194, 18);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test416446,"public void test416446() throws Throwable {
    Node node0 = new Node(20);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test417447,"public void test417447() throws Throwable {
    Node node0 = new Node((byte) (-111));
    Node node1 = new Node(22, node0, 30, 51);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test418448,"public void test418448() throws Throwable {
    Node node0 = new Node(23, 23, 23);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test419449,"public void test419449() throws Throwable {
    Node node0 = new Node(24, 33, 41);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertFalse(boolean0)
project,0,test420450,"public void test420450() throws Throwable {
    Node node0 = new Node(25, 25, 25);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test421451,"public void test421451() throws Throwable {
    Node node0 = new Node(26, 26, 26);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test422452,"public void test422452() throws Throwable {
    Node node0 = new Node(27, 27, 27);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test423453,"public void test423453() throws Throwable {
    Node node0 = new Node(28, 120, (-32));
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test424454,"public void test424454() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test426456,"public void test426456() throws Throwable {
    Node node0 = new Node(32, 32, 32);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test427457,"public void test427457() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "".;O`Slcy%_p3X"", 127, 127);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(520319, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test427458,"public void test427458() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "".;O`Slcy%_p3X"", 127, 127);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test427459,"public void test427459() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "".;O`Slcy%_p3X"", 127, 127);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test428460,"public void test428460() throws Throwable {
    Node node0 = new Node(34, 34, 34);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test429461,"public void test429461() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    node0.setType(35);
    boolean boolean0 = NodeUtil.mayBeString(node0, true);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test430462,"public void test430462() throws Throwable {
    Node node0 = new Node(36);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test431463,"public void test431463() throws Throwable {
    Node node0 = new Node(37);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test432464,"public void test432464() throws Throwable {
    Node node0 = Node.newNumber(1605.0);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test433465,"public void test433465() throws Throwable {
    Node node0 = new Node(41, 24, 24);
    boolean boolean0 = NodeUtil.mayBeString(node0, true);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test434466,"public void test434466() throws Throwable {
    Node node0 = new Node(42);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test435467,"public void test435467() throws Throwable {
    Node node0 = Node.newString(43, ""est"");
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test436468,"public void test436468() throws Throwable {
    Node node0 = new Node(44, 21, 44);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test437469,"public void test437469() throws Throwable {
    Node node0 = new Node(46);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test439471,"public void test439471() throws Throwable {
    Node node0 = new Node(48);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test441473,"public void test441473() throws Throwable {
    Node node0 = new Node(50);
    boolean boolean0 = NodeUtil.mayBeString(node0, true);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test442474,"public void test442474() throws Throwable {
    Node node0 = new Node(51);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test443475,"public void test443475() throws Throwable {
    Node node0 = new Node(52, 52, 52);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test444476,"public void test444476() throws Throwable {
    Node node0 = Node.newString(41, ""&"");
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals("""", string0);
}",0,
project,0,test445477,"public void test445477() throws Throwable {
    Node node0 = Node.newString(""@pnfp"");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.mayBeString(node1, true);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test446478,"public void test446478() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test447479,"public void test447479() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test448480,"public void test448480() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test449481,"public void test449481() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test450482,"public void test450482() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(100);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test451483,"public void test451483() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(101);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test452484,"public void test452484() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(19);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test453485,"public void test453485() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test454486,"public void test454486() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test455487,"public void test455487() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test456488,"public void test456488() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test457489,"public void test457489() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative((-1223));
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test458490,"public void test458490() throws Throwable {
    Node node0 = Node.newString(""a%xzBsW;[eU/+=o;("");
    // Undeclared exception!
    try {
        NodeUtil.getOpFromAssignmentOp(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Not an assiment op
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test459491,"public void test459491() throws Throwable {
    Node node0 = new Node(97);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(25, int0);
}",0,"assertEquals(1, int0)"
project,0,test460492,"public void test460492() throws Throwable {
    Node node0 = Node.newString(""0W7M,|qo%Z3!XKv4Ox"", 125, 125);
    boolean boolean0 = NodeUtil.isExpressionNode(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test461493,"public void test461493() throws Throwable {
    Node node0 = new Node(114, 114, (-30));
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExpressionNode(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test462494,"public void test462494() throws Throwable {
    Node node0 = new Node((byte) 105);
    Node node1 = new Node(51, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.referencesThis(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test463495,"public void test463495() throws Throwable {
    Node node0 = new Node(105);
    // Undeclared exception!
    try {
        NodeUtil.referencesThis(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil$MatchNodeType"", e);
    }
}",0,
project,0,test464496,"public void test464496() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test464497,"public void test464497() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test464498,"public void test464498() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertFalse(node0.hasOneChild());
}",0,assertFalse(node0.hasOneChild())
project,0,test464499,"public void test464499() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertEquals(7690069, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test465500,"public void test465500() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test465501,"public void test465501() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(7690069, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test465502,"public void test465502() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertNull(node1);
}",0,
project,0,test465503,"public void test465503() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,
project,0,test465504,"public void test465504() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(1877, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test466505,"public void test466505() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    Node node1 = NodeUtil.newVarNode(""NaN"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test466506,"public void test466506() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    Node node1 = NodeUtil.newVarNode(""NaN"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertFalse(node0.hasChildren());
}",0,assertFalse(node0.hasChildren())
project,0,test466507,"public void test466507() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    Node node1 = NodeUtil.newVarNode(""NaN"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertEquals(208947, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test467508,"public void test467508() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""ptotfype"", 98, 98);
    Node node1 = new Node(9, node0, 98, (-2091));
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test467509,"public void test467509() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""ptotfype"", 98, 98);
    Node node1 = new Node(9, node0, 98, (-2091));
    NodeUtil.getAssignedValue(node0);
    assertEquals(401506, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test467510,"public void test467510() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""ptotfype"", 98, 98);
    Node node1 = new Node(9, node0, 98, (-2091));
    NodeUtil.getAssignedValue(node0);
    assertEquals(98, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test468511,"public void test468511() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""javascript"", ""javascript"");
    boolean boolean0 = NodeUtil.isString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test469512,"public void test469512() throws Throwable {
    Node node0 = Node.newString(""0W7M,|qo%Z3!XKv4Ox"", 125, 125);
    boolean boolean0 = NodeUtil.isString(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test470513,"public void test470513() throws Throwable {
    Node node0 = new Node(114, 2009, 60);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test471514,"public void test471514() throws Throwable {
    JSSourceFile jSSourceFile0 = JSSourceFile.fromCode(""jav3ascrupt"", ""jav3ascrupt"");
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parse(jSSourceFile0);
    PeepholeCollectPropertyAssignments peepholeCollectPropertyAssignments0 = new PeepholeCollectPropertyAssignments();
    Node node1 = peepholeCollectPropertyAssignments0.optimizeSubtree(node0);
    assertFalse(node1.hasMoreThanOneChild());
}",0,assertTrue(node1.hasMoreThanOneChild())
project,0,test472515,"public void test472515() throws Throwable {
    Node node0 = Node.newString(86, ""UUAq%}"");
    boolean boolean0 = NodeUtil.isAssign(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test473516,"public void test473516() throws Throwable {
    Node node0 = new Node(18, 18, 18);
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test474517,"public void test474517() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""y46qHKv--EBMJ"", (byte) 100, (-4417));
    Node node1 = new Node(7, node0, 88, 37);
    boolean boolean0 = NodeUtil.isLValue(node0);
    assertFalse(boolean0);
}",1,
project,0,test474518,"public void test474518() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""y46qHKv--EBMJ"", (byte) 100, (-4417));
    Node node1 = new Node(7, node0, 88, 37);
    boolean boolean0 = NodeUtil.isLValue(node0);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test474519,"public void test474519() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""y46qHKv--EBMJ"", (byte) 100, (-4417));
    Node node1 = new Node(7, node0, 88, 37);
    boolean boolean0 = NodeUtil.isLValue(node0);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test475520,"public void test475520() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // malformed 'for' statement FOR 115
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test476521,"public void test476521() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    Node node1 = new Node(113, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test477522,"public void test477522() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    boolean boolean0 = NodeUtil.isLoopStructure(node0);
    assertTrue(boolean0);
}",0,
project,0,test478523,"public void test478523() throws Throwable {
    Node node0 = new Node(113);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test479524,"public void test479524() throws Throwable {
    Node node0 = new Node(114, 114, 114);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test480525,"public void test480525() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test481526,"public void test481526() throws Throwable {
    Compiler compiler0 = new Compiler();
    SyntheticAst syntheticAst0 = new SyntheticAst(""Ds"");
    Node node0 = syntheticAst0.getAstRoot(compiler0);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test482527,"public void test482527() throws Throwable {
    Node node0 = new Node(3641, 3641, 3641);
    Node node1 = NodeUtil.newVarNode(""{6\""[~"", node0);
    assertEquals(3641, node1.getCharno());
}",0,
project,0,test482528,"public void test482528() throws Throwable {
    Node node0 = new Node(3641, 3641, 3641);
    Node node1 = NodeUtil.newVarNode(""{6\""[~"", node0);
    assertEquals(118, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test482529,"public void test482529() throws Throwable {
    Node node0 = new Node(3641, 3641, 3641);
    Node node1 = NodeUtil.newVarNode(""{6\""[~"", node0);
    assertFalse(node0.hasOneChild());
}",0,
project,0,test482530,"public void test482530() throws Throwable {
    Node node0 = new Node(3641, 3641, 3641);
    Node node1 = NodeUtil.newVarNode(""{6\""[~"", node0);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test483531,"public void test483531() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node0, 4, 4);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test483532,"public void test483532() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node0, 4, 4);
    assertEquals(105, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test483533,"public void test483533() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node0, 4, 4);
    assertEquals(16388, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test483534,"public void test483534() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node0, 4, 4);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test484535,"public void test484535() throws Throwable {
    Node node0 = Node.newString((int) (byte) 77, ""DS(-"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test485536,"public void test485536() throws Throwable {
    Node node0 = new Node(111);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test486537,"public void test486537() throws Throwable {
    Node node0 = Node.newString((int) (byte) 110, ""Na"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test487538,"public void test487538() throws Throwable {
    Node node0 = new Node(46);
    Node node1 = new Node(113, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.isControlStructure(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test488539,"public void test488539() throws Throwable {
    Node node0 = Node.newString(""pV)]$x~6m]Sm/91$pq"");
    Node node1 = new Node(114, node0, 1, 40);
    boolean boolean0 = NodeUtil.isControlStructure(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test489540,"public void test489540() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test490541,"public void test490541() throws Throwable {
    Node node0 = new Node(119, 1858, (-928));
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test491542,"public void test491542() throws Throwable {
    Node node0 = new Node(120);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test492543,"public void test492543() throws Throwable {
    Node node0 = Node.newString(126, ""%="", 36, (-3));
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test493544,"public void test493544() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test494545,"public void test494545() throws Throwable {
    Node node0 = Node.newString(64, ""!/D@L+(SKYe`X8V"", 64, 64);
    // Undeclared exception!
    try {
        NodeUtil.isControlStructureCodeBlock(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test495546,"public void test495546() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test496547,"public void test496547() throws Throwable {
    Node node0 = new Node(111);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test497548,"public void test497548() throws Throwable {
    Node node0 = new Node(112);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test498549,"public void test498549() throws Throwable {
    Node node0 = new Node(113);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test499550,"public void test499550() throws Throwable {
    Node node0 = Node.newString(""pV)]$x~6m]Sm/91$pq"");
    Node node1 = new Node(114, node0, 1, 40);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node1, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test500551,"public void test500551() throws Throwable {
    Node node0 = new Node(119, 1858, (-939));
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test501552,"public void test501552() throws Throwable {
    Node node0 = new Node(120);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,
project,0,test502553,"public void test502553() throws Throwable {
    Node node0 = new Node(115, 105, 105);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, (Node) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test503554,"public void test503554() throws Throwable {
    Node node0 = new Node(114, 2009, 60);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test504555,"public void test504555() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    node0.addChildToFront(node0);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test505556,"public void test505556() throws Throwable {
    Node node0 = Node.newString((int) (byte) 110, ""NaN"");
    node0.addChildrenToBack(node0);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test506557,"public void test506557() throws Throwable {
    Node node0 = Node.newString((int) (byte) 110, ""Na"");
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // SWITCH Na does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test507558,"public void test507558() throws Throwable {
    Node node0 = new Node(111, 111, 111);
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test508559,"public void test508559() throws Throwable {
    Node node0 = new Node(112, 112, 112);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // DEFAULT 112 does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test509560,"public void test509560() throws Throwable {
    Node node0 = new Node(114, 114, (-30));
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test510561,"public void test510561() throws Throwable {
    Node node0 = Node.newString((int) (byte) 77, ""DS(-"");
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // TRY DS(- does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test511562,"public void test511562() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""==="", ""==="");
    String string0 = NodeUtil.getSourceName(node0);
    assertEquals("" [testcode] "", string0);
}",0,
project,0,test511563,"public void test511563() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""==="", ""==="");
    String string0 = NodeUtil.getSourceName(node0);
    assertNotNull(string0);
}",0,
project,0,test512564,"public void test512564() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile(""c:NRJ2x+i}6+7"");
    Node node0 = compiler0.parse(jSSourceFile0);
    boolean boolean0 = NodeUtil.isStatementParent(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test513565,"public void test513565() throws Throwable {
    Compiler compiler0 = new Compiler((PrintStream) null);
    Node node0 = compiler0.parseTestCode("""");
    boolean boolean0 = NodeUtil.isStatementParent(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test514566,"public void test514566() throws Throwable {
    Node node0 = Node.newString(111, ""GRQ`7"");
    Node node1 = new Node((-2), node0, (-1), 16);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test515567,"public void test515567() throws Throwable {
    Node node0 = new Node(112, 112, 112);
    Node node1 = new Node(15, node0, 114, 47);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test516568,"public void test516568() throws Throwable {
    Node node0 = new Node(21);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test517569,"public void test517569() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""infinity"", (-4101), (-4101));
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test518570,"public void test518570() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", 30, (-1349));
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test518571,"public void test518571() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", 30, (-1349));
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals((-1), node0.getLineno());
}",0,
project,0,test519572,"public void test519572() throws Throwable {
    boolean boolean0 = NodeUtil.isLabelName((Node) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test520573,"public void test520573() throws Throwable {
    Node node0 = new Node(46);
    boolean boolean0 = NodeUtil.isLabelName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test521574,"public void test521574() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    node0.addChildToFront(node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: TRY 77 of TRY 77
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test522575,"public void test522575() throws Throwable {
    Node node0 = Node.newString(120, ""^l"");
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test523576,"public void test523576() throws Throwable {
    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile(""javascript"");
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parse(jSSourceFile0);
    Node node1 = new Node((-5052), node0, 25, 0);
    NodeUtil.removeChild(node0, node0);
    assertEquals(22, Node.TARGETBLOCK_PROP);
}",0,
project,0,test524577,"public void test524577() throws Throwable {
    Node node0 = Node.newString(63, ""Xt,xC*ns_Pswj]"");
    Node node1 = new Node(125, node0, 38, 27);
    NodeUtil.removeChild(node1, node0);
    assertFalse(node1.hasChildren());
}",0,assertFalse(node1.hasChildren())
project,0,test524578,"public void test524578() throws Throwable {
    Node node0 = Node.newString(63, ""Xt,xC*ns_Pswj]"");
    Node node1 = new Node(125, node0, 38, 27);
    NodeUtil.removeChild(node1, node0);
    assertEquals(0, node1.getChildCount());
}",0,"assertEquals(1, node1.getChildCount())"
project,0,test525579,"public void test525579() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    Node node1 = NodeUtil.newVarNode(""NaN"", node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node1, node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // node is not a child
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test526580,"public void test526580() throws Throwable {
    Node node0 = Node.newString(147, ""Unexpected const change.\n  name: "", 147, 147);
    // Undeclared exception!
    try {
        NodeUtil.maybeAddFinally(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test527581,"public void test527581() throws Throwable {
    Node node0 = new Node(77);
    NodeUtil.maybeAddFinally(node0);
    assertEquals(1, node0.getChildCount());
}",0,"assertEquals(0, node0.getChildCount())"
project,0,test527582,"public void test527582() throws Throwable {
    Node node0 = new Node(77);
    NodeUtil.maybeAddFinally(node0);
    assertTrue(node0.hasChildren());
}",0,assertFalse(node0.hasChildren())
project,0,test528583,"public void test528583() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test529584,"public void test529584() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""="");
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test530585,"public void test530585() throws Throwable {
    Node node0 = new Node(37);
    boolean boolean0 = NodeUtil.isCallOrNew(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test531586,"public void test531586() throws Throwable {
    Node node0 = new Node(127);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForCallOrNew(node0, 28);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test532587,"public void test532587() throws Throwable {
    Node node0 = new Node(35);
    boolean boolean0 = NodeUtil.isThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test533588,"public void test533588() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""infinity"", (byte) 105, (byte) 105);
    boolean boolean0 = NodeUtil.isArrayLiteral(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test533589,"public void test533589() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""infinity"", (byte) 105, (byte) 105);
    boolean boolean0 = NodeUtil.isArrayLiteral(node0);
    assertEquals(430185, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test534590,"public void test534590() throws Throwable {
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.isArrayLiteral(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test535591,"public void test535591() throws Throwable {
    Node node0 = new Node(26, 26, 26);
    boolean boolean0 = NodeUtil.isHoistedFunctionDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test536592,"public void test536592() throws Throwable {
    Node node0 = new Node(114, 114, (-30));
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test537593,"public void test537593() throws Throwable {
    Node node0 = new Node((byte) 105);
    Node node1 = new Node(51, node0, node0, node0, node0);
    // Undeclared exception!
    try {
        NodeUtil.isEmptyFunctionExpression(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test538594,"public void test538594() throws Throwable {
    Node node0 = Node.newString("""", (-2157), (-1731));
    Node node1 = new Node(37, node0);
    boolean boolean0 = NodeUtil.isSimpleFunctionObjectCall(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test539595,"public void test539595() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test540596,"public void test540596() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""I%*6)5+TI"", (Node) null);
    assertNotNull(node0);
}",0,
project,0,test540597,"public void test540597() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""I%*6)5+TI"", (Node) null);
    boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test541598,"public void test541598() throws Throwable {
    Node node0 = Node.newString(""]@jJ\""*"");
    // Undeclared exception!
    try {
        NodeUtil.isLValue(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test542599,"public void test542599() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    // Undeclared exception!
    try {
        NodeUtil.isLValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test543600,"public void test543600() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""]@jJ\""*"", node0);
    Node node2 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node1, 4, 4);
    assertEquals(16388, node2.getSourcePosition());
}",0,
project,0,test543601,"public void test543601() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""]@jJ\""*"", node0);
    Node node2 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node1, 4, 4);
    assertEquals(38, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test543602,"public void test543602() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""]@jJ\""*"", node0);
    Node node2 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node1, 4, 4);
    assertEquals(3, node2.getChildCount());
}",0,
project,0,test543603,"public void test543603() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""]@jJ\""*"", node0);
    Node node2 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node1, 4, 4);
    assertEquals(105, node2.getType());
}",0,"assertEquals(0, node2.getType())"
project,0,test543604,"public void test543604() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""]@jJ\""*"", node0);
    Node node2 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node1, 4, 4);
    boolean boolean0 = NodeUtil.isLValue(node1);
    assertFalse(boolean0);
}",1,
project,0,test544605,"public void test544605() throws Throwable {
    Node node0 = Node.newString(147, ""Unexpected const change.\n  name: "", 147, 147);
    boolean boolean0 = NodeUtil.isObjectLitKey(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test545606,"public void test545606() throws Throwable {
    Node node0 = Node.newString(""0W7M,|qo%Z3!XKv4Ox"", 125, 125);
    String string0 = NodeUtil.getObjectLitKeyName(node0);
    assertEquals(""0W7M,|qo%Z3!XKv4Ox"", string0);
}",1,
project,0,test546607,"public void test546607() throws Throwable {
    Node node0 = new Node(30);
    // Undeclared exception!
    try {
        NodeUtil.getObjectLitKeyName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected node type: NEW
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test547608,"public void test547608() throws Throwable {
    Node node0 = Node.newString(147, ""Unexpected const change.\n  name: "", 147, 147);
    String string0 = NodeUtil.getObjectLitKeyName(node0);
    assertEquals(""Unexpected const change.\n  name: "", string0);
}",1,
project,0,test548609,"public void test548609() throws Throwable {
    Node node0 = Node.newString(102, "">"");
    JSType jSType0 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, (JSType) null);
    assertNull(jSType0);
}",0,assertNotNull(jSType0)
project,0,test549610,"public void test549610() throws Throwable {
    Node node0 = new Node(102);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    JSType jSType0 = jSTypeRegistry0.createNamedType("">"", "".!lB_@F\""!"", 1, 46);
    JSType jSType1 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, jSType0);
    assertFalse(jSType1.isEnumType());
}",0,assertFalse(jSType1.isEnumType())
project,0,test550611,"public void test550611() throws Throwable {
    Node node0 = new Node(43, 29, 19);
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test551612,"public void test551612() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(9);
    assertEquals(""|"", string0);
}",1,
project,0,test552613,"public void test552613() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(88);
    assertEquals(""^="", string0);
}",1,
project,0,test553614,"public void test553614() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(10);
    assertEquals(""^"", string0);
}",1,
project,0,test554615,"public void test554615() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(11);
    assertEquals(""&"", string0);
}",1,
project,0,test555616,"public void test555616() throws Throwable {
    String string0 = NodeUtil.opToStr(12);
    assertEquals(""=="", string0);
}",0,
project,0,test556617,"public void test556617() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(13);
    assertEquals(""!="", string0);
}",1,
project,0,test557618,"public void test557618() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(14);
    assertEquals(""<"", string0);
}",1,
project,0,test558619,"public void test558619() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(15);
    assertEquals(""<="", string0);
}",1,
project,0,test559620,"public void test559620() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(16);
    assertEquals("">"", string0);
}",1,
project,0,test560621,"public void test560621() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(17);
    assertEquals("">="", string0);
}",1,
project,0,test561622,"public void test561622() throws Throwable {
    String string0 = NodeUtil.opToStr(18);
    assertEquals(""<<"", string0);
}",0,
project,0,test562623,"public void test562623() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(19);
    assertEquals("">>"", string0);
}",1,
project,0,test563624,"public void test563624() throws Throwable {
    String string0 = NodeUtil.opToStr(20);
    assertEquals("">>>"", string0);
}",0,
project,0,test564625,"public void test564625() throws Throwable {
    String string0 = NodeUtil.opToStr(21);
    assertEquals(""+"", string0);
}",0,
project,0,test565626,"public void test565626() throws Throwable {
    String string0 = NodeUtil.opToStr(22);
    assertEquals(""-"", string0);
}",0,
project,0,test566627,"public void test566627() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(23);
    assertEquals(""*"", string0);
}",1,
project,0,test567628,"public void test567628() throws Throwable {
    String string0 = NodeUtil.opToStr(24);
    assertEquals(""/"", string0);
}",0,
project,0,test568629,"public void test568629() throws Throwable {
    String string0 = NodeUtil.opToStr(25);
    assertEquals(""%"", string0);
}",0,
project,0,test569630,"public void test569630() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(26);
    assertEquals(""!"", string0);
}",1,
project,0,test570631,"public void test570631() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(27);
    assertEquals(""~"", string0);
}",1,
project,0,test571632,"public void test571632() throws Throwable {
    String string0 = NodeUtil.opToStr(28);
    assertEquals(""+"", string0);
}",0,
project,0,test572633,"public void test572633() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(29);
    assertEquals(""-"", string0);
}",1,
project,0,test573634,"public void test573634() throws Throwable {
    String string0 = NodeUtil.opToStr(30);
    assertNull(string0);
}",0,
project,0,test574635,"public void test574635() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(31);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 31: DELPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test575636,"public void test575636() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(32);
    assertEquals(""typeof"", string0);
}",1,
project,0,test576637,"public void test576637() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(33);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 33: GETPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test577638,"public void test577638() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(34);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 34: SETPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test578639,"public void test578639() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(35);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 35: GETELEM
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test579640,"public void test579640() throws Throwable {
    String string0 = NodeUtil.opToStr(36);
    assertNull(string0);
}",0,
project,0,test580641,"public void test580641() throws Throwable {
    String string0 = NodeUtil.opToStr(37);
    assertNull(string0);
}",0,
project,0,test581642,"public void test581642() throws Throwable {
    String string0 = NodeUtil.opToStr(38);
    assertNull(string0);
}",0,
project,0,test582643,"public void test582643() throws Throwable {
    String string0 = NodeUtil.opToStr(39);
    assertNull(string0);
}",0,
project,0,test583644,"public void test583644() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(40);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 40: STRING
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test584645,"public void test584645() throws Throwable {
    String string0 = NodeUtil.opToStr(41);
    assertNull(string0);
}",0,
project,0,test585646,"public void test585646() throws Throwable {
    String string0 = NodeUtil.opToStr(42);
    assertNull(string0);
}",0,
project,0,test586647,"public void test586647() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(43);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 43: FALSE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test587648,"public void test587648() throws Throwable {
    String string0 = NodeUtil.opToStr(44);
    assertNull(string0);
}",0,
project,0,test588649,"public void test588649() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(45);
    assertEquals(""==="", string0);
}",1,
project,0,test589650,"public void test589650() throws Throwable {
    String string0 = NodeUtil.opToStr(46);
    assertEquals(""!=="", string0);
}",0,
project,0,test590651,"public void test590651() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(47);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 47: REGEXP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test591652,"public void test591652() throws Throwable {
    String string0 = NodeUtil.opToStr(48);
    assertNull(string0);
}",0,
project,0,test592653,"public void test592653() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(49);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 49: THROW
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test593654,"public void test593654() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(50);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 50: RETHROW
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test594655,"public void test594655() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(51);
    assertEquals(""in"", string0);
}",1,
project,0,test595656,"public void test595656() throws Throwable {
    String string0 = NodeUtil.opToStr(52);
    assertEquals(""instanceof"", string0);
}",0,
project,0,test596657,"public void test596657() throws Throwable {
    String string0 = NodeUtil.opToStr(53);
    assertNull(string0);
}",0,
project,0,test597658,"public void test597658() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(54);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 54: GETVAR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test598659,"public void test598659() throws Throwable {
    String string0 = NodeUtil.opToStr(55);
    assertNull(string0);
}",0,
project,0,test599660,"public void test599660() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(56);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 56: CATCH_SCOPE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test600661,"public void test600661() throws Throwable {
    String string0 = NodeUtil.opToStr(57);
    assertNull(string0);
}",0,
project,0,test601662,"public void test601662() throws Throwable {
    String string0 = NodeUtil.opToStr(59);
    assertNull(string0);
}",0,
project,0,test602663,"public void test602663() throws Throwable {
    String string0 = NodeUtil.opToStr(60);
    assertNull(string0);
}",0,
project,0,test603664,"public void test603664() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(61);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 61: THISFN
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test604665,"public void test604665() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(62);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 62: RETURN_RESULT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test605666,"public void test605666() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(63);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 63: ARRAYLIT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test606667,"public void test606667() throws Throwable {
    String string0 = NodeUtil.opToStr(64);
    assertNull(string0);
}",0,
project,0,test607668,"public void test607668() throws Throwable {
    String string0 = NodeUtil.opToStr(65);
    assertNull(string0);
}",0,
project,0,test608669,"public void test608669() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(66);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 66: SET_REF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test609670,"public void test609670() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(67);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 67: DEL_REF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test610671,"public void test610671() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(68);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 68: REF_CALL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test611672,"public void test611672() throws Throwable {
    String string0 = NodeUtil.opToStr(71);
    assertNull(string0);
}",0,
project,0,test612673,"public void test612673() throws Throwable {
    String string0 = NodeUtil.opToStr(72);
    assertNull(string0);
}",0,
project,0,test613674,"public void test613674() throws Throwable {
    String string0 = NodeUtil.opToStr(73);
    assertNull(string0);
}",0,
project,0,test614675,"public void test614675() throws Throwable {
    String string0 = NodeUtil.opToStr(74);
    assertNull(string0);
}",0,
project,0,test615676,"public void test615676() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(75);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 75: REF_NAME
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test616677,"public void test616677() throws Throwable {
    String string0 = NodeUtil.opToStr(76);
    assertNull(string0);
}",0,
project,0,test617678,"public void test617678() throws Throwable {
    String string0 = NodeUtil.opToStr(77);
    assertNull(string0);
}",0,
project,0,test618679,"public void test618679() throws Throwable {
    String string0 = NodeUtil.opToStr(78);
    assertNull(string0);
}",0,
project,0,test619680,"public void test619680() throws Throwable {
    String string0 = NodeUtil.opToStr(79);
    assertNull(string0);
}",0,
project,0,test620681,"public void test620681() throws Throwable {
    String string0 = NodeUtil.opToStr(80);
    assertNull(string0);
}",0,
project,0,test621682,"public void test621682() throws Throwable {
    String string0 = NodeUtil.opToStr(81);
    assertNull(string0);
}",0,
project,0,test622683,"public void test622683() throws Throwable {
    String string0 = NodeUtil.opToStr(82);
    assertNull(string0);
}",0,
project,0,test623684,"public void test623684() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail((byte) 83);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 83: LP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test624685,"public void test624685() throws Throwable {
    String string0 = NodeUtil.opToStr(84);
    assertNull(string0);
}",0,
project,0,test625686,"public void test625686() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(85);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 85: COMMA
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test626687,"public void test626687() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(86);
    assertEquals(""="", string0);
}",1,
project,0,test627688,"public void test627688() throws Throwable {
    String string0 = NodeUtil.opToStr(87);
    assertEquals(""|="", string0);
}",0,
project,0,test628689,"public void test628689() throws Throwable {
    String string0 = NodeUtil.opToStr(89);
    assertEquals(""&="", string0);
}",0,
project,0,test629690,"public void test629690() throws Throwable {
    String string0 = NodeUtil.opToStr(90);
    assertEquals(""<<="", string0);
}",0,
project,0,test630691,"public void test630691() throws Throwable {
    String string0 = NodeUtil.opToStr(91);
    assertEquals("">>="", string0);
}",0,
project,0,test631692,"public void test631692() throws Throwable {
    String string0 = NodeUtil.opToStr(92);
    assertEquals("">>>="", string0);
}",0,
project,0,test632693,"public void test632693() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(94);
    assertEquals(""-="", string0);
}",1,
project,0,test633694,"public void test633694() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(95);
    assertEquals(""*="", string0);
}",1,
project,0,test634695,"public void test634695() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(96);
    assertEquals(""/="", string0);
}",1,
project,0,test635696,"public void test635696() throws Throwable {
    String string0 = NodeUtil.opToStr(97);
    assertEquals(""%="", string0);
}",0,
project,0,test636697,"public void test636697() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(98);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 98: HOOK
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test637698,"public void test637698() throws Throwable {
    String string0 = NodeUtil.opToStr(99);
    assertNull(string0);
}",0,
project,0,test638699,"public void test638699() throws Throwable {
    String string0 = NodeUtil.opToStr(100);
    assertEquals(""||"", string0);
}",0,
project,0,test639700,"public void test639700() throws Throwable {
    String string0 = NodeUtil.opToStr(101);
    assertEquals(""&&"", string0);
}",0,
project,0,test640701,"public void test640701() throws Throwable {
    String string0 = NodeUtil.opToStr(102);
    assertNull(string0);
}",0,
project,0,test641702,"public void test641702() throws Throwable {
    String string0 = NodeUtil.opToStr(103);
    assertNull(string0);
}",0,
project,0,test642703,"public void test642703() throws Throwable {
    String string0 = NodeUtil.opToStr(104);
    assertNull(string0);
}",0,
project,0,test643704,"public void test643704() throws Throwable {
    String string0 = NodeUtil.opToStr(105);
    assertNull(string0);
}",0,
project,0,test644705,"public void test644705() throws Throwable {
    String string0 = NodeUtil.opToStr(106);
    assertNull(string0);
}",0,
project,0,test645706,"public void test645706() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(107);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 107: IMPORT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test646707,"public void test646707() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(108);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 108: IF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test647708,"public void test647708() throws Throwable {
    String string0 = NodeUtil.opToStr(109);
    assertNull(string0);
}",0,
project,0,test648709,"public void test648709() throws Throwable {
    String string0 = NodeUtil.opToStr(110);
    assertNull(string0);
}",0,
project,0,test649710,"public void test649710() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 111: CASE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test650711,"public void test650711() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(112);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 112: DEFAULT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test651712,"public void test651712() throws Throwable {
    String string0 = NodeUtil.opToStr(113);
    assertNull(string0);
}",0,
project,0,test652713,"public void test652713() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 114: DO
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test653714,"public void test653714() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 115: FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test654715,"public void test654715() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 116: BREAK
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test655716,"public void test655716() throws Throwable {
    String string0 = NodeUtil.opToStr(117);
    assertNull(string0);
}",0,
project,0,test656717,"public void test656717() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 118: VAR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test657718,"public void test657718() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 119: WITH
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test658719,"public void test658719() throws Throwable {
    String string0 = NodeUtil.opToStr(120);
    assertNull(string0);
}",0,
project,0,test659720,"public void test659720() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(121);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 121: FINALLY
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test660721,"public void test660721() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(122);
    assertEquals(""void"", string0);
}",1,
project,0,test661722,"public void test661722() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail((-1382));
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // -1382
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test662723,"public void test662723() throws Throwable {
    Node node0 = new Node(113);
    NodeUtil.copyNameAnnotations(node0, node0);
    assertEquals(9, Node.FIXUPS_PROP);
}",0,
project,0,test663724,"public void test663724() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""+"", (Node) null);
    Node[] nodeArray0 = new Node[1];
    nodeArray0[0] = node0;
    Node node1 = new Node(8, nodeArray0);
    // Undeclared exception!
    try {
        NodeUtil.redeclareVarsInsideBranch(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test664725,"public void test664725() throws Throwable {
    Node node0 = new Node(73);
    Stack<Node> stack0 = new Stack<Node>();
    stack0.add(node0);
    // Undeclared exception!
    try {
        NodeUtil.newFunctionNode(""="", stack0, node0, 40, (-1537));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test665726,"public void test665726() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(7690069, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test665727,"public void test665727() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(7690069, node1.getSourcePosition());
}",0,"assertEquals(1, node1.getSourcePosition())"
project,0,test665728,"public void test665728() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertFalse(node1.hasChildren());
}",0,assertFalse(node1.hasChildren())
project,0,test665729,"public void test665729() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertTrue(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test665730,"public void test665730() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test666731,"public void test666731() throws Throwable {
    Node node0 = Node.newString(41, ""&"");
    // Undeclared exception!
    try {
        NodeUtil.getRootOfQualifiedName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test667732,"public void test667732() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    // Undeclared exception!
    try {
        NodeUtil.newName(googleCodingConvention0, ""X"", (Node) null, ""Unexpected node type:"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test668733,"public void test668733() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""google"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test669734,"public void test669734() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""hK~feU-.rEMv<ZTc;("");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test670735,"public void test670735() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""in"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test671736,"public void test671736() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""pototfype"", 127, 127);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(520319, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test671737,"public void test671737() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""pototfype"", 127, 127);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(127, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test672738,"public void test672738() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""javascript"", ""javascript"");
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(28, Node.DEBUGSOURCE_PROP);
}",0,
project,0,test673739,"public void test673739() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Zio!X(b^2}~s"", (-1), (-1));
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test674740,"public void test674740() throws Throwable {
    Node node0 = new Node(26);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test675741,"public void test675741() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""y|Ld16VPwWb"");
    boolean boolean0 = NodeUtil.isNameReferenced(node0, ""y|Ld16VPwWb"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test676742,"public void test676742() throws Throwable {
    Node node0 = new Node(42);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test678745,"public void test678745() throws Throwable {
    Node node0 = new Node(127, 127, 127);
    Node node1 = NodeUtil.newVarNode(""google"", node0);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    boolean boolean0 = nodeUtil_MatchDeclaration0.apply(node1);
    assertEquals(520319, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test680747,"public void test680747() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""y46qHKv--EBMJ"", (byte) 100, (-4417));
    Node node1 = new Node(7, node0, 88, 37);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test680748,"public void test680748() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""y46qHKv--EBMJ"", (byte) 100, (-4417));
    Node node1 = new Node(7, node0, 88, 37);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertFalse(boolean0);
}",0,
project,0,test680749,"public void test680749() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""y46qHKv--EBMJ"", (byte) 100, (-4417));
    Node node1 = new Node(7, node0, 88, 37);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertEquals((-1), node0.getLineno());
}",0,
project,0,test681750,"public void test681750() throws Throwable {
    Node node0 = Node.newString(97, ""gq+GBjO"");
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    Node node1 = new Node(27, node0, node0);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    boolean boolean0 = NodeUtil.has(node1, nodeUtil_MayBeStringResultPredicate0, predicate0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test682751,"public void test682751() throws Throwable {
    Node node0 = new Node(98);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    int int0 = NodeUtil.getCount(node0, sourceMap_DetailLevel0, nodeUtil_BooleanResultPredicate0);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test684752,"public void test684752() throws Throwable {
    Node node0 = Node.newString(95, ""UUAq*]"");
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test685753,"public void test685753() throws Throwable {
    Node node0 = new Node(73);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    Node node1 = NodeUtil.newVarNode(""void"", node0);
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node1, (NodeUtil.Visitor) null, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test686754,"public void test686754() throws Throwable {
    Node node0 = new Node(84);
    // Undeclared exception!
    try {
        NodeUtil.hasFinally(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test687755,"public void test687755() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test688756,"public void test688756() throws Throwable {
    Node node0 = new Node(77);
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test689757,"public void test689757() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    // Undeclared exception!
    try {
        NodeUtil.hasCatchHandler(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test690758,"public void test690758() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""%p"");
    boolean boolean0 = NodeUtil.hasCatchHandler(node0);
    assertFalse(boolean0);
}",0,
project,0,test691759,"public void test691759() throws Throwable {
    Node node0 = new Node((byte) 16);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionParameters(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test692760,"public void test692760() throws Throwable {
    Node node0 = new Node((byte) 105, (byte) 105, (byte) 105);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionParameters(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test693761,"public void test693761() throws Throwable {
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode((Node) null);
    assertNull(jSDocInfo0);
}",0,
project,0,test694762,"public void test694762() throws Throwable {
    Node node0 = new Node(75, 75, 75);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test695763,"public void test695763() throws Throwable {
    Node node0 = new Node(33, 59, 59);
    node0.addSuppression(""di6!c"");
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0.getLicense());
}",0,
project,0,test696764,"public void test696764() throws Throwable {
    Node node0 = new Node(55);
    Node node1 = new Node(55, node0, node0);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test697765,"public void test697765() throws Throwable {
    Node node0 = new Node(115, 105, 105);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionJSDocInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test698766,"public void test698766() throws Throwable {
    Node node0 = new Node((byte) 105);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionJSDocInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test699767,"public void test699767() throws Throwable {
    Node node0 = new Node((byte) 105);
    Node node1 = new Node(15, node0, node0, node0);
    JSDocInfo jSDocInfo0 = NodeUtil.getFunctionJSDocInfo(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test700768,"public void test700768() throws Throwable {
    Node node0 = new Node(46);
    String string0 = NodeUtil.getSourceName(node0);
    assertNull(string0);
}",0,
project,0,test701769,"public void test701769() throws Throwable {
    Node node0 = new Node(33, 59, 59);
    // Undeclared exception!
    try {
        NodeUtil.newCallNode(node0, (Node[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test702770,"public void test702770() throws Throwable {
    Node node0 = new Node(37);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    assertTrue(node1.hasOneChild());
}",0,assertTrue(node1.hasOneChild())
project,0,test702771,"public void test702771() throws Throwable {
    Node node0 = new Node(37);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    assertEquals(37, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test703772,"public void test703772() throws Throwable {
    Node node0 = new Node(102, 102, 102);
    Node[] nodeArray0 = new Node[3];
    // Undeclared exception!
    try {
        NodeUtil.newCallNode(node0, nodeArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test704773,"public void test704773() throws Throwable {
    Node node0 = new Node(31);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test705774,"public void test705774() throws Throwable {
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    Node node0 = Node.newString(32, ""pV)]$x~6m]Sm/91$pq"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test706775,"public void test706775() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    Node node1 = new Node(35, node0, 39, 4095);
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(17);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchNodeType0);
    assertFalse(boolean0);
}",0,
project,0,test707776,"public void test707776() throws Throwable {
    Node node0 = new Node(36, 36, 36);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETELEM 36
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test708777,"public void test708777() throws Throwable {
    Node node0 = new Node(42, 13, 42);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,
project,0,test709778,"public void test709778() throws Throwable {
    Node node0 = new Node(45);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test710779,"public void test710779() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test711780,"public void test711780() throws Throwable {
    Node node0 = new Node(47);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test712781,"public void test712781() throws Throwable {
    Node node0 = new Node(48, 48, 2530);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeBINDNAME 48
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test713782,"public void test713782() throws Throwable {
    Node node0 = new Node(49);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHROW
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test714783,"public void test714783() throws Throwable {
    Node node0 = new Node(50);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRETHROW
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test715784,"public void test715784() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test716785,"public void test716785() throws Throwable {
    Node node0 = new Node(53, 53, 52);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLOCAL_LOAD 53
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test717786,"public void test717786() throws Throwable {
    Node node0 = new Node(55);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETVAR
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test718787,"public void test718787() throws Throwable {
    Node node0 = new Node(56);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCATCH_SCOPE
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test719788,"public void test719788() throws Throwable {
    Node node0 = new Node(58);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_INIT_VALUES
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test720789,"public void test720789() throws Throwable {
    Node node0 = new Node(63);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test721790,"public void test721790() throws Throwable {
    Node node0 = new Node(64);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test722791,"public void test722791() throws Throwable {
    Node node0 = new Node(68, 68, 68);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_CALL 68
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test723792,"public void test723792() throws Throwable {
    Node node0 = Node.newString(""8u^!EG#/3dG0"", 41, (-2241));
    Node node1 = new Node(69, node0);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_SPECIAL
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test724793,"public void test724793() throws Throwable {
    Node node0 = Node.newString(70, ""arguments"");
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEFAULTNAMESPACE arguments
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test725794,"public void test725794() throws Throwable {
    Node node0 = new Node(71);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLATTR
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test726795,"public void test726795() throws Throwable {
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(536870912);
    Node node0 = new Node(72, 536870912, 72);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLTEXT 0
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test727796,"public void test727796() throws Throwable {
    Node node0 = new Node(73);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_MEMBER
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test728797,"public void test728797() throws Throwable {
    Node node0 = new Node(75);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NAME
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test729798,"public void test729798() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSEMI 78
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test730799,"public void test730799() throws Throwable {
    Node node0 = new Node(79, 79, 79);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLB 79
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test731800,"public void test731800() throws Throwable {
    Node node0 = new Node(81, 81, 81);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLC 81
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test732801,"public void test732801() throws Throwable {
    Node node0 = new Node(82);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRC
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test733802,"public void test733802() throws Throwable {
    Node node0 = new Node(85);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test734803,"public void test734803() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test735804,"public void test735804() throws Throwable {
    Node node0 = new Node(87);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test736805,"public void test736805() throws Throwable {
    Node node0 = new Node(88, 88, 88);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test737806,"public void test737806() throws Throwable {
    Node node0 = new Node(89, (-695), 41);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test738807,"public void test738807() throws Throwable {
    Node node0 = new Node(90, 90, 90);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test739808,"public void test739808() throws Throwable {
    Node node0 = new Node(91);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test740809,"public void test740809() throws Throwable {
    Node node0 = new Node(92, 916, 92);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test741810,"public void test741810() throws Throwable {
    Node node0 = new Node(93);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test742811,"public void test742811() throws Throwable {
    Node node0 = new Node(94);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test743812,"public void test743812() throws Throwable {
    Node node0 = new Node(95);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test744813,"public void test744813() throws Throwable {
    Node node0 = new Node(96);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test745814,"public void test745814() throws Throwable {
    Node node0 = new Node(97);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test746815,"public void test746815() throws Throwable {
    Node node0 = new Node(98);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test747816,"public void test747816() throws Throwable {
    Node node0 = new Node(99);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCOLON
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test748817,"public void test748817() throws Throwable {
    Node node0 = new Node(101, 101, 117);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test749818,"public void test749818() throws Throwable {
    Node node0 = new Node(102);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test750819,"public void test750819() throws Throwable {
    Node node0 = Node.newString(103, ""1xu$?x^(vY"");
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test751820,"public void test751820() throws Throwable {
    Node node0 = new Node((byte) 105, (byte) 105, (byte) 105);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test752821,"public void test752821() throws Throwable {
    Node node0 = new Node(100, 100, 100);
    Node node1 = new Node(27);
    node0.addChildrenToBack(node1);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test753822,"public void test753822() throws Throwable {
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType((-2192));
    Node node0 = Node.newString("""", (-2192), (-1720));
    Node node1 = new Node(37, node0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchNodeType0);
    assertFalse(boolean0);
}",0,
project,0,test754823,"public void test754823() throws Throwable {
    Node node0 = new Node(30);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
