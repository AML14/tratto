project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.isNameReferenced(node0, ""-"", nodeUtil_BooleanResultPredicate0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0001,"public void test0001() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.isNameReferenced(node0, ""-"", nodeUtil_BooleanResultPredicate0);
    assertTrue(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test0012,"public void test0012() throws Throwable {
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(34);
    Node node0 = new Node(34);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 34
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test0023,"public void test0023() throws Throwable {
    Node node0 = Node.newString(""T7Sy92eFqD%ux5K;;_"", (-1466), (-2593));
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForCallOrNew(node0, 48);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test0034,"public void test0034() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.containsFunction((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil$MatchNodeType"", e);
    }
}",0,
project,0,test0045,"public void test0045() throws Throwable {
    Node node0 = new Node(26);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test0056,"public void test0056() throws Throwable {
    Node node0 = new Node(147);
    boolean boolean0 = NodeUtil.isFunctionObjectCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0067,"public void test0067() throws Throwable {
    Node node0 = new Node(104, 88, (-2908));
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0078,"public void test0078() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""infinity"");
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertFalse(node0.isGetProp());
}",0,assertTrue(node0.isGetProp())
project,0,test0079,"public void test0079() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""infinity"");
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test00810,"public void test00810() throws Throwable {
    Node node0 = new Node(151);
    // Undeclared exception!
    try {
        NodeUtil.getPrototypePropertyName(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test00911,"public void test00911() throws Throwable {
    Node node0 = new Node(26);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test01012,"public void test01012() throws Throwable {
    Node node0 = new Node(79, 79, 79);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test01113,"public void test01113() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.functionCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected CALL node, got HOOK
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01214,"public void test01214() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test01315,"public void test01315() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention(jqueryCodingConvention0);
    Node node0 = new Node((-12), 184, 147);
    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, ""."", node0, ""."");
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, compilerOptions0.stripTypePrefixes);
    assertTrue(boolean0);
}",0,
project,0,test01316,"public void test01316() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention(jqueryCodingConvention0);
    Node node0 = new Node((-12), 184, 147);
    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, ""."", node0, ""."");
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, compilerOptions0.stripTypePrefixes);
    assertTrue(node1.hasMoreThanOneChild());
}",0,assertTrue(node1.hasMoreThanOneChild())
project,0,test01317,"public void test01317() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention(jqueryCodingConvention0);
    Node node0 = new Node((-12), 184, 147);
    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, ""."", node0, ""."");
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, compilerOptions0.stripTypePrefixes);
    assertEquals(147, node1.getCharno());
}",0,
project,0,test01418,"public void test01418() throws Throwable {
    Node node0 = new Node(70);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForFunction(node0, 41);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test01519,"public void test01519() throws Throwable {
    Node node0 = new Node(163);
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    // Undeclared exception!
    try {
        NodeUtil.newName(jqueryCodingConvention0, (String) null, node0, (String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // StringNode: str is null
        //
        verifyException(""com.google.javascript.rhino.Node$StringNode"", e);
    }
}",0,
project,0,test01620,"public void test01620() throws Throwable {
    Node node0 = new Node(85, 85, 85);
    // Undeclared exception!
    try {
        NodeUtil.isVarArgsFunction(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test01721,"public void test01721() throws Throwable {
    Node node0 = Node.newString(421, ""8B|=1yD;.lXT(FYG"");
    int int0 = NodeUtil.getNameReferenceCount(node0, ""=J\""Ls-x;"");
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test01822,"public void test01822() throws Throwable {
    Node node0 = new Node(105);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test01923,"public void test01923() throws Throwable {
    Node node0 = new Node(30);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test02024,"public void test02024() throws Throwable {
    Node node0 = Node.newString(""B-c5o"");
    // Undeclared exception!
    try {
        NodeUtil.constructorCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected NEW node, got STRING
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02125,"public void test02125() throws Throwable {
    Node node0 = new Node(65256);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionBody(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test02226,"public void test02226() throws Throwable {
    Node node0 = new Node(21);
    boolean boolean0 = NodeUtil.isFunctionObjectApply(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02327,"public void test02327() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.getFunctionParameters((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test02428,"public void test02428() throws Throwable {
    Node node0 = new Node(116);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02529,"public void test02529() throws Throwable {
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
    Node node0 = Node.newString(42, ""6wY"", 103, 41);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertFalse(boolean0);
}",0,
project,0,test02930,"public void test02930() throws Throwable {
    Node node0 = new Node(85);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03031,"public void test03031() throws Throwable {
    Node node0 = new Node(86);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03132,"public void test03132() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03233,"public void test03233() throws Throwable {
    Node node0 = new Node(101);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03334,"public void test03334() throws Throwable {
    Node node0 = new Node((-425));
    Node node1 = NodeUtil.newUndefinedNode(node0);
    NodeUtil.getImpureBooleanValue(node1);
    assertEquals(1, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test03335,"public void test03335() throws Throwable {
    Node node0 = new Node((-425));
    Node node1 = NodeUtil.newUndefinedNode(node0);
    NodeUtil.getImpureBooleanValue(node1);
    assertNotSame(node0, node1);
}",0,
project,0,test03436,"public void test03436() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.getPureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test04037,"public void test04037() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    NodeUtil.getImpureBooleanValue(node0);
    assertTrue(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test04038,"public void test04038() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(44, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04439,"public void test04439() throws Throwable {
    Node node0 = new Node(148);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    NodeUtil.getPureBooleanValue(node1);
    assertEquals(122, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test04440,"public void test04440() throws Throwable {
    Node node0 = new Node(148);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    NodeUtil.getPureBooleanValue(node1);
    assertNotSame(node0, node1);
}",0,
project,0,test04741,"public void test04741() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(35, node0, node0, node0, node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(""false"", string0);
}",0,assertNotNull(string0)
project,0,test04742,"public void test04742() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(35, node0, node0, node0, node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test04843,"public void test04843() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""+u)C"");
    String string0 = NodeUtil.getStringValue(node0);
    assertNull(string0);
}",0,
project,0,test04944,"public void test04944() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertTrue(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test04945,"public void test04945() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test04946,"public void test04946() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(""0"", string0);
}",0,assertNotNull(string0)
project,0,test05047,"public void test05047() throws Throwable {
    Node node0 = Node.newString(""freeze"", (-30), (-30));
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""freeze"", string0);
}",0,
project,0,test05148,"public void test05148() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = new Node(41, node0, node0, (-2394), 8233);
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(""null"", string0);
}",0,
project,0,test05149,"public void test05149() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = new Node(41, node0, node0, (-2394), 8233);
    String string0 = NodeUtil.getStringValue(node1);
    assertFalse(node0.isFalse());
}",0,assertTrue(node0.isFalse())
project,0,test05250,"public void test05250() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = new Node(35, node0, node0, node0, node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test05251,"public void test05251() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = new Node(35, node0, node0, node0, node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(""true"", string0);
}",0,
project,0,test05352,"public void test05352() throws Throwable {
    Node node0 = new Node(63);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",0,
project,0,test05353,"public void test05353() throws Throwable {
    Node node0 = new Node(63);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test05454,"public void test05454() throws Throwable {
    Node node0 = Node.newString(9, "")UCvX{#oj6),g,7i5_"", 154, 9);
    Node node1 = new Node(64, node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test05455,"public void test05455() throws Throwable {
    Node node0 = Node.newString(9, "")UCvX{#oj6),g,7i5_"", 154, 9);
    Node node1 = new Node(64, node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNotNull(double0);
}",0,
project,0,test05556,"public void test05556() throws Throwable {
    Node node0 = new Node(151, 151, 151);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getStringValue(node1);
    assertNotNull(string0);
}",0,
project,0,test05557,"public void test05557() throws Throwable {
    Node node0 = new Node(151, 151, 151);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(""undefined"", string0);
}",0,
project,0,test05558,"public void test05558() throws Throwable {
    Node node0 = new Node(151, 151, 151);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(151, node1.getLineno());
}",0,
project,0,test05659,"public void test05659() throws Throwable {
    Node node0 = new Node(154);
    // Undeclared exception!
    try {
        NodeUtil.getArrayElementStringValue(node0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // STRING_KEY is not a string node
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test05760,"public void test05760() throws Throwable {
    Node node0 = new Node(143);
    Node node1 = new Node(10, node0, node0, node0, node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertNull(string0);
}",0,
project,0,test05861,"public void test05861() throws Throwable {
    Node node0 = Node.newNumber(758.720087545682, 4095, 2);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(""758.720087545682"", string0);
}",0,
project,0,test05962,"public void test05962() throws Throwable {
    Node node0 = new Node(151, 151, 151);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals("""", string0);
}",0,
project,0,test05963,"public void test05963() throws Throwable {
    Node node0 = new Node(151, 151, 151);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertNotNull(string0);
}",0,
project,0,test05964,"public void test05964() throws Throwable {
    Node node0 = new Node(151, 151, 151);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals(618647, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test06065,"public void test06065() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.getNumberValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test06166,"public void test06166() throws Throwable {
    Node node0 = Node.newString(137, ""z'4h4d6"", 102, 137);
    Node node1 = new Node(29, node0, node0, 22, 15);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNull(double0);
}",1,
project,0,test06267,"public void test06267() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""infinity"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",1,
project,0,test06368,"public void test06368() throws Throwable {
    Node node0 = Node.newNumber(1.0, (-4121), (-4121));
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(1.0, (double) double0, 0.01);
}",0,
project,0,test06469,"public void test06469() throws Throwable {
    Node node0 = Node.newString(""infinity"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test06570,"public void test06570() throws Throwable {
    Node node0 = new Node(41, 50, 31);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",1,
project,0,test06671,"public void test06671() throws Throwable {
    Node node0 = new Node(43);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test06772,"public void test06772() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(1.0, (double) double0, 0.01);
}",0,
project,0,test06873,"public void test06873() throws Throwable {
    Node node0 = new Node(154);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test06874,"public void test06874() throws Throwable {
    Node node0 = new Node(154);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNotNull(double0);
}",0,
project,0,test06975,"public void test06975() throws Throwable {
    Node node0 = new Node(173);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test07076,"public void test07076() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = Node.newString(154, "")UCvX{#oj6),g,7i5_"", 154, 154);
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""undefined"", node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",1,
project,0,test07077,"public void test07077() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = Node.newString(154, "")UCvX{#oj6),g,7i5_"", 154, 154);
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""undefined"", node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNotNull(double0);
}",1,
project,0,test07178,"public void test07178() throws Throwable {
    Node node0 = new Node(29);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test07279,"public void test07279() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""<="");
    assertNotNull(double0);
}",0,
project,0,test07280,"public void test07280() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""<="");
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test07381,"public void test07381() throws Throwable {
    Node node0 = Node.newString(""-&<&"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test07382,"public void test07382() throws Throwable {
    Node node0 = Node.newString(""-&<&"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",0,
project,0,test07483,"public void test07483() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""+)}L*R"");
    assertNotNull(double0);
}",0,
project,0,test07484,"public void test07484() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""+)}L*R"");
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test07585,"public void test07585() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""-infinity"");
    assertNull(double0);
}",0,
project,0,test07686,"public void test07686() throws Throwable {
    String string0 = NodeUtil.trimJsWhiteSpace(""Strings used more than once:\n"");
    assertEquals(""Strings used more than once:"", string0);
}",0,
project,0,test07787,"public void test07787() throws Throwable {
    String string0 = NodeUtil.trimJsWhiteSpace("" *YZs8%zfr-m)/>*`:"");
    assertEquals(""*YZs8%zfr-m)/>*`:"", string0);
}",0,
project,0,test08388,"public void test08388() throws Throwable {
    Node node0 = new Node(126);
    String string0 = NodeUtil.getNearestFunctionName(node0);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test08489,"public void test08489() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.isLiteralValue(node0, true);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test08590,"public void test08590() throws Throwable {
    Node node0 = new Node(50, 50, 50);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 50
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test08691,"public void test08691() throws Throwable {
    Node node0 = new Node(143);
    Node node1 = new Node(29, node0);
    boolean boolean0 = NodeUtil.isImmutableValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test08792,"public void test08792() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""infinity"");
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
    assertFalse(boolean0);
}",0,
project,0,test08893,"public void test08893() throws Throwable {
    Node node0 = new Node(156);
    Node node1 = new Node(39, node0, 1, 53);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test08994,"public void test08994() throws Throwable {
    Node node0 = Node.newString(""_or{c/h!jMM6"", 85, 85);
    Node node1 = new Node(87, node0, node0, 46, 48);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test09095,"public void test09095() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""+u)C"");
    Node node1 = new Node(41, node0, node0, node0, node0);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test09196,"public void test09196() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test09197,"public void test09197() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    NodeUtil.evaluatesToLocalValue(node0);
    assertEquals(43, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test09298,"public void test09298() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test09299,"public void test09299() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    NodeUtil.evaluatesToLocalValue(node0);
    assertEquals(44, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test093100,"public void test093100() throws Throwable {
    Node node0 = new Node((-266));
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, false);
    assertTrue(boolean0);
}",0,
project,0,test094101,"public void test094101() throws Throwable {
    Node node0 = Node.newString(8200, "".infinity"", 738, 738);
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""Infinity"", node0);
    boolean boolean0 = NodeUtil.isImmutableValue(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test095102,"public void test095102() throws Throwable {
    Node node0 = new Node(127, 127, 127);
    Node node1 = new Node(12, node0, 44, 44);
    boolean boolean0 = NodeUtil.isSymmetricOperation(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test096103,"public void test096103() throws Throwable {
    Node node0 = new Node(1220);
    Node node1 = new Node(45, node0, node0, node0);
    boolean boolean0 = NodeUtil.isSymmetricOperation(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test097104,"public void test097104() throws Throwable {
    Node node0 = Node.newString(46, ""JSCompiler_returnArg"", 109, 32);
    ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
    // Undeclared exception!
    try {
        reorderConstantExpression0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test098105,"public void test098105() throws Throwable {
    Node node0 = new Node(26);
    ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
    Node node1 = reorderConstantExpression0.optimizeSubtree(node0);
    assertFalse(node1.isFalse());
}",0,assertTrue(node1.isFalse())
project,0,test099106,"public void test099106() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    Node node1 = new Node(15, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.isRelationalOperation(node1);
    assertTrue(boolean0);
}",1,
project,0,test099107,"public void test099107() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    Node node1 = new Node(15, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.isRelationalOperation(node1);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(0, node0.getChildCount())"
project,0,test100108,"public void test100108() throws Throwable {
    Node node0 = Node.newString(16, ""JSCompiler_returnArg"", 38, 43);
    ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
    // Undeclared exception!
    try {
        reorderConstantExpression0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test101109,"public void test101109() throws Throwable {
    int int0 = NodeUtil.getInverseOperator(14);
    assertEquals(16, int0);
}",1,
project,0,test102110,"public void test102110() throws Throwable {
    int int0 = NodeUtil.getInverseOperator(1431);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test103111,"public void test103111() throws Throwable {
    int int0 = NodeUtil.getInverseOperator(15);
    assertEquals(17, int0);
}",0,"assertEquals(0, int0)"
project,0,test104112,"public void test104112() throws Throwable {
    int int0 = NodeUtil.getInverseOperator(16);
    assertEquals(14, int0);
}",0,"assertEquals(0, int0)"
project,0,test105113,"public void test105113() throws Throwable {
    int int0 = NodeUtil.getInverseOperator(17);
    assertEquals(15, int0);
}",0,"assertEquals(0, int0)"
project,0,test106114,"public void test106114() throws Throwable {
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
    assertTrue(boolean0);
}",0,
project,0,test107115,"public void test107115() throws Throwable {
    Node node0 = new Node(64, 111, 94);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,
project,0,test108116,"public void test108116() throws Throwable {
    Node node0 = new Node(91);
    Node node1 = new Node(105, node0, node0, 46, 48);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, false);
    assertFalse(boolean0);
}",0,
project,0,test109117,"public void test109117() throws Throwable {
    Node node0 = new Node(91);
    Node node1 = new Node(105, node0, node0, 46, 48);
    // Undeclared exception!
    try {
        NodeUtil.isLiteralValue(node1, true);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test110118,"public void test110118() throws Throwable {
    Node node0 = Node.newString(9, "")UCvX{#oj6),g,7i5_"");
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNameSuffixes);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test111119,"public void test111119() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNameSuffixes);
    assertTrue(boolean0);
}",0,
project,0,test111120,"public void test111120() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNameSuffixes);
    assertFalse(node0.isFalse());
}",0,assertTrue(node0.isFalse())
project,0,test112121,"public void test112121() throws Throwable {
    Node node0 = new Node(11);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, compilerOptions0.aliasableStrings);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test113122,"public void test113122() throws Throwable {
    Node node0 = new Node(154);
    Node node1 = new Node(12, node0, node0, node0, node0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test114123,"public void test114123() throws Throwable {
    Node node0 = new Node(137, 137, 137);
    Node node1 = new Node(15, node0);
    Stack<String> stack0 = new Stack<String>();
    TreeSet<String> treeSet0 = new TreeSet<String>(stack0);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test115124,"public void test115124() throws Throwable {
    Node node0 = new Node(17, 82, 1988);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test116125,"public void test116125() throws Throwable {
    Node node0 = new Node(19);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test117126,"public void test117126() throws Throwable {
    Node node0 = Node.newString(21, ""o}6GuzK3\""DgaN\""IJ"", (-3315), 240);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test118127,"public void test118127() throws Throwable {
    Node node0 = new Node(23, 61, 1988);
    Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, set0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test119128,"public void test119128() throws Throwable {
    Node node0 = new Node(25, 1, 55);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test120129,"public void test120129() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test121130,"public void test121130() throws Throwable {
    Node node0 = new Node(28);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypePrefixes);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test122131,"public void test122131() throws Throwable {
    Node node0 = Node.newString(29, "">>>="");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test123132,"public void test123132() throws Throwable {
    Node node0 = new Node(30);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test124133,"public void test124133() throws Throwable {
    Node node0 = new Node(25, (-4024), (-4024));
    Node node1 = new Node(31, node0);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test125134,"public void test125134() throws Throwable {
    Node node0 = new Node(68);
    Node node1 = new Node(32, node0, node0, node0, node0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test126135,"public void test126135() throws Throwable {
    Node node0 = new Node(34);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypePrefixes);
    assertFalse(boolean0);
}",0,
project,0,test127136,"public void test127136() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, "">>>="");
    Node node1 = new Node(36, node0, node0, node0, node0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test128137,"public void test128137() throws Throwable {
    Node node0 = new Node(37);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNamePrefixes);
    assertFalse(boolean0);
}",0,
project,0,test129138,"public void test129138() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "">="");
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test130139,"public void test130139() throws Throwable {
    Node node0 = Node.newNumber((double) (-1340));
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertTrue(boolean0);
}",0,
project,0,test131140,"public void test131140() throws Throwable {
    Node node0 = Node.newString(""$]/CD"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertTrue(boolean0);
}",0,
project,0,test132141,"public void test132141() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""+u)C"");
    Node node1 = new Node(41, node0, node0, node0, node0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test133142,"public void test133142() throws Throwable {
    Node node0 = new Node(42, 55, 12);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test134143,"public void test134143() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNameSuffixes);
    assertTrue(boolean0);
}",0,
project,0,test134144,"public void test134144() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNameSuffixes);
    assertEquals(43, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test135145,"public void test135145() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    treeSet0.add(""com.google.javascript.jscomp.JsMessage$1"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertTrue(boolean0);
}",0,
project,0,test135146,"public void test135146() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    treeSet0.add(""com.google.javascript.jscomp.JsMessage$1"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertFalse(node0.isName());
}",0,assertTrue(node0.isName())
project,0,test136147,"public void test136147() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""infinity"");
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test137148,"public void test137148() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test138149,"public void test138149() throws Throwable {
    Node node0 = new Node(143);
    Node node1 = new Node(10, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertTrue(boolean0);
}",0,
project,0,test139150,"public void test139150() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test140151,"public void test140151() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(12);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test141152,"public void test141152() throws Throwable {
    Node node0 = new Node(13);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test142153,"public void test142153() throws Throwable {
    Node node0 = new Node(14);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test143154,"public void test143154() throws Throwable {
    Node node0 = new Node(137, 137, 137);
    Node node1 = new Node(15, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test144155,"public void test144155() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(16);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test145156,"public void test145156() throws Throwable {
    Node node0 = new Node(17, 17, 17);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test146157,"public void test146157() throws Throwable {
    Node node0 = new Node(98);
    Node node1 = new Node(18, node0, 45, 36);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test147158,"public void test147158() throws Throwable {
    Node node0 = new Node(19);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test148159,"public void test148159() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(20);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test149160,"public void test149160() throws Throwable {
    Node node0 = new Node(21);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test150161,"public void test150161() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(22);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test151162,"public void test151162() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test152163,"public void test152163() throws Throwable {
    Node node0 = Node.newString(24, ""yp5X"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test153164,"public void test153164() throws Throwable {
    Node node0 = new Node(25, 25, 25);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test154165,"public void test154165() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(27);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test155166,"public void test155166() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(28);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test156167,"public void test156167() throws Throwable {
    Node node0 = Node.newString(""-&<&"");
    Node node1 = new Node(29, node0);
    boolean boolean0 = NodeUtil.isSimpleOperator(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test157168,"public void test157168() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(30);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test158169,"public void test158169() throws Throwable {
    Node node0 = new Node(156, 16, 16);
    Node node1 = new Node(31, node0, 29, 52);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test159170,"public void test159170() throws Throwable {
    Node node0 = new Node(32, 2365, 2365);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test160171,"public void test160171() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test160172,"public void test160172() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test161173,"public void test161173() throws Throwable {
    Node node0 = new Node(34);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test162174,"public void test162174() throws Throwable {
    Node node0 = new Node(36);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 36
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test163175,"public void test163175() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(37);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test164176,"public void test164176() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(38);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test165177,"public void test165177() throws Throwable {
    Node node0 = Node.newString(""%M:`&`W4n"");
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test166178,"public void test166178() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(42);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test167179,"public void test167179() throws Throwable {
    Node node0 = new Node(1220);
    Node node1 = new Node(45, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test168180,"public void test168180() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = new Node(46, node0, 4, 4095);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test168181,"public void test168181() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = new Node(46, node0, 4, 4095);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(node0.isFalse());
}",0,assertTrue(node0.isFalse())
project,0,test169182,"public void test169182() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(47);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test170183,"public void test170183() throws Throwable {
    Node node0 = new Node(48);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 48
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test171184,"public void test171184() throws Throwable {
    Node node0 = new Node(139, 139, 139);
    Node node1 = new Node(49, node0, node0);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1, predicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHROW
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test172185,"public void test172185() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(51);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test173186,"public void test173186() throws Throwable {
    Node node0 = new Node(52, (-820), 52);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test174187,"public void test174187() throws Throwable {
    Node node0 = new Node(53);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test175188,"public void test175188() throws Throwable {
    Node node0 = Node.newString(""d_I&9AJW]["", 64, 64);
    Node node1 = new Node(54, node0, node0, 45, 8);
    PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
    boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test176189,"public void test176189() throws Throwable {
    Node node0 = new Node(55);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test177190,"public void test177190() throws Throwable {
    Node node0 = new Node(56, 12, 56);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 56
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test178191,"public void test178191() throws Throwable {
    Node node0 = new Node(57, 118, 57);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test179192,"public void test179192() throws Throwable {
    Node node0 = new Node(58);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test180193,"public void test180193() throws Throwable {
    Node node0 = new Node(61);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test181194,"public void test181194() throws Throwable {
    Node node0 = new Node(62);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test182195,"public void test182195() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(63);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test183196,"public void test183196() throws Throwable {
    Node node0 = Node.newString(26, "")UCvX{#oj6),g,7i5_"");
    Node node1 = new Node(64, node0);
    boolean boolean0 = NodeUtil.isSimpleOperator(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test184197,"public void test184197() throws Throwable {
    Node node0 = new Node(65);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 65
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test185198,"public void test185198() throws Throwable {
    Node node0 = new Node(66, 66, 66);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test186199,"public void test186199() throws Throwable {
    Node node0 = new Node(68, 68, 68);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test187200,"public void test187200() throws Throwable {
    Node node0 = new Node(69);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test188201,"public void test188201() throws Throwable {
    Node node0 = new Node(70);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test189202,"public void test189202() throws Throwable {
    Node node0 = new Node(71);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 71
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test190203,"public void test190203() throws Throwable {
    Node node0 = new Node(72);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test191204,"public void test191204() throws Throwable {
    Node node0 = new Node(74);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 74
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test192205,"public void test192205() throws Throwable {
    Node node0 = new Node(75, 75, 75);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 75
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test193206,"public void test193206() throws Throwable {
    Node node0 = new Node(76);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 76
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test194207,"public void test194207() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTRY 77
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test195208,"public void test195208() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test196209,"public void test196209() throws Throwable {
    Node node0 = new Node(80);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test197210,"public void test197210() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(81);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test198211,"public void test198211() throws Throwable {
    Node node0 = new Node(82);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test199212,"public void test199212() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodePARAM_LIST
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test200213,"public void test200213() throws Throwable {
    Node node0 = new Node(85);
    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
    boolean boolean0 = peepholeRemoveDeadCode0.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test201214,"public void test201214() throws Throwable {
    Node node0 = new Node(86);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test202215,"public void test202215() throws Throwable {
    Node node0 = new Node(48);
    Node node1 = new Node(88, node0, 1, 43);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test203216,"public void test203216() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(89);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test204217,"public void test204217() throws Throwable {
    Node node0 = new Node(90, 98, 98);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test205218,"public void test205218() throws Throwable {
    Node node0 = new Node(91);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test206219,"public void test206219() throws Throwable {
    Node node0 = Node.newString(92, ""variable {0} is undeclared"", (-9), 92);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test207220,"public void test207220() throws Throwable {
    Node node0 = new Node(93, 93, 93);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test208221,"public void test208221() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(94);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test209222,"public void test209222() throws Throwable {
    Node node0 = new Node(95);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test210223,"public void test210223() throws Throwable {
    Node node0 = new Node(96, 96, 96);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test211224,"public void test211224() throws Throwable {
    Node node0 = new Node(35);
    Node node1 = new Node(97, node0, 88, 1861);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test212225,"public void test212225() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(98);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test213226,"public void test213226() throws Throwable {
    Node node0 = new Node(99, 99, 99);
    PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
    boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test214227,"public void test214227() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(101);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test215228,"public void test215228() throws Throwable {
    Node node0 = new Node(102, 98, 98);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test216229,"public void test216229() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,
project,0,test217230,"public void test217230() throws Throwable {
    Node node0 = Node.newString(104, ""variable {0} is undeclared"", 92, 92);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, predicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 104
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test218231,"public void test218231() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(105);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test219232,"public void test219232() throws Throwable {
    Node node0 = new Node(106, 106, 106);
    PeepholeFoldWithTypes peepholeFoldWithTypes0 = new PeepholeFoldWithTypes();
    boolean boolean0 = peepholeFoldWithTypes0.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test220233,"public void test220233() throws Throwable {
    Node node0 = new Node(107, (-1779), (-1779));
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test221234,"public void test221234() throws Throwable {
    Node node0 = new Node(108, 2287, 2287);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeIF 2287
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test222235,"public void test222235() throws Throwable {
    Node node0 = new Node(109, (-1750), (-1750));
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test223236,"public void test223236() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(110);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test224237,"public void test224237() throws Throwable {
    Node node0 = new Node(112, 2165, (-1687));
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test225238,"public void test225238() throws Throwable {
    Node node0 = new Node(113);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test226239,"public void test226239() throws Throwable {
    Node node0 = new Node(114, 113, 279);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test227240,"public void test227240() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test228241,"public void test228241() throws Throwable {
    Node node0 = new Node(117);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test229242,"public void test229242() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(118);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test230243,"public void test230243() throws Throwable {
    Node node0 = new Node(66);
    Node node1 = new Node(120, node0, node0, 17, 42);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchDeclaration0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCATCH 17
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test231244,"public void test231244() throws Throwable {
    Node node0 = new Node(121);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test232245,"public void test232245() throws Throwable {
    Node node0 = Node.newString(9, "")UCvX{#oj6),g,7i5_"", 154, 9);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test232246,"public void test232246() throws Throwable {
    Node node0 = Node.newString(9, "")UCvX{#oj6),g,7i5_"", 154, 9);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(122, node1.getType());
}",0,"assertEquals(1, node1.getType())"
project,0,test232247,"public void test232247() throws Throwable {
    Node node0 = Node.newString(9, "")UCvX{#oj6),g,7i5_"", 154, 9);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(154, node1.getLineno());
}",0,"assertEquals(0, node1.getLineno())"
project,0,test233248,"public void test233248() throws Throwable {
    Node node0 = new Node((-4107), (-4107), (-4107));
    Node node1 = new Node(30, node0, 36, 2);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test234249,"public void test234249() throws Throwable {
    Node node0 = new Node(36, 103, (-1459145716));
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test235250,"public void test235250() throws Throwable {
    Node node0 = new Node(156);
    Node node1 = new Node(37, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test236251,"public void test236251() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""null"");
    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
    // Undeclared exception!
    try {
        peepholeRemoveDeadCode0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test237252,"public void test237252() throws Throwable {
    Node node0 = new Node(84);
    Node node1 = new Node(42, node0, (-519), 37);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test238253,"public void test238253() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
    boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test239254,"public void test239254() throws Throwable {
    Node node0 = new Node(154);
    Node node1 = new Node(47, node0, node0, 55, 55);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test240255,"public void test240255() throws Throwable {
    Node node0 = new Node(49);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test241256,"public void test241256() throws Throwable {
    Node node0 = new Node(50, 50, 50);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test242257,"public void test242257() throws Throwable {
    Node node0 = new Node(51);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test243258,"public void test243258() throws Throwable {
    Node node0 = new Node(65);
    PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
    boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test244259,"public void test244259() throws Throwable {
    Node node0 = new Node(71);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test245260,"public void test245260() throws Throwable {
    Node node0 = new Node(74);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test246261,"public void test246261() throws Throwable {
    Node node0 = new Node(85);
    Node node1 = new Node(76, node0, 1, 41);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test247262,"public void test247262() throws Throwable {
    Node node0 = new Node(77, 77, 97);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test248263,"public void test248263() throws Throwable {
    Vector<JSType> vector0 = new Vector<JSType>();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test249264,"public void test249264() throws Throwable {
    Node node0 = new Node(59);
    Node node1 = new Node(100, node0, 3406, 1394);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test250265,"public void test250265() throws Throwable {
    Node node0 = new Node(101);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test251266,"public void test251266() throws Throwable {
    Node node0 = new Node(104, (-1408), (-1716));
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test252267,"public void test252267() throws Throwable {
    Node node0 = new Node(108);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test253268,"public void test253268() throws Throwable {
    Node node0 = new Node(110, 957, 957);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test254269,"public void test254269() throws Throwable {
    Node node0 = new Node(111, 102, 137);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test255270,"public void test255270() throws Throwable {
    Node node0 = new Node(116, 116, 116);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test256271,"public void test256271() throws Throwable {
    Node node0 = new Node(4, 190, 4);
    Node node1 = NodeUtil.newVarNode(""function"", node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(node1.isVar());
}",0,
project,0,test256272,"public void test256272() throws Throwable {
    Node node0 = new Node(4, 190, 4);
    Node node1 = NodeUtil.newVarNode(""function"", node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(190, node1.getLineno());
}",0,
project,0,test256273,"public void test256273() throws Throwable {
    Node node0 = new Node(4, 190, 4);
    Node node1 = NodeUtil.newVarNode(""function"", node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test256274,"public void test256274() throws Throwable {
    Node node0 = new Node(4, 190, 4);
    Node node1 = NodeUtil.newVarNode(""function"", node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(node0.hasOneChild());
}",0,
project,0,test257275,"public void test257275() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test258276,"public void test258276() throws Throwable {
    Node node0 = new Node(120);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test259277,"public void test259277() throws Throwable {
    Node node0 = new Node(124);
    PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
    boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test260278,"public void test260278() throws Throwable {
    Node node0 = new Node(125, 2371, 2371);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test261279,"public void test261279() throws Throwable {
    Node node0 = Node.newString(126, "")UCvX{#oj6),g,7i5_"", 61, 131);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test262280,"public void test262280() throws Throwable {
    Node node0 = new Node(127, 127, 127);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test263281,"public void test263281() throws Throwable {
    Node node0 = new Node(128);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test264282,"public void test264282() throws Throwable {
    Node node0 = new Node(131);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test265283,"public void test265283() throws Throwable {
    Node node0 = new Node(132, 2371, 2371);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test266284,"public void test266284() throws Throwable {
    Node node0 = new Node(133);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test267285,"public void test267285() throws Throwable {
    Node node0 = new Node(134);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test268286,"public void test268286() throws Throwable {
    Node node0 = new Node(135);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test269287,"public void test269287() throws Throwable {
    Node node0 = new Node(126, 126, 126);
    Node node1 = new Node(136, node0, 43, 55);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test270288,"public void test270288() throws Throwable {
    Node node0 = new Node(98);
    Node node1 = new Node(138, node0, 45, 36);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test271289,"public void test271289() throws Throwable {
    Node node0 = new Node(139, 139, 139);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test272290,"public void test272290() throws Throwable {
    Node node0 = new Node(143);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test273291,"public void test273291() throws Throwable {
    Node node0 = new Node(144, 144, 144);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test274292,"public void test274292() throws Throwable {
    Node node0 = new Node(145);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test275293,"public void test275293() throws Throwable {
    Node node0 = new Node(147);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test276294,"public void test276294() throws Throwable {
    Node node0 = new Node(148);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test277295,"public void test277295() throws Throwable {
    Node node0 = new Node(150);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test278296,"public void test278296() throws Throwable {
    Node node0 = new Node(151);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test279297,"public void test279297() throws Throwable {
    Node node0 = new Node(152);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test280298,"public void test280298() throws Throwable {
    Node node0 = new Node(153, 153, 153);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test281299,"public void test281299() throws Throwable {
    Node node0 = new Node(154);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test282300,"public void test282300() throws Throwable {
    Node node0 = new Node(64, 111, 94);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test283301,"public void test283301() throws Throwable {
    Node node0 = new Node(64, 111, 94);
    node0.addChildToFront(node0);
    // Undeclared exception!
    try {
        NodeUtil.getPureBooleanValue(node0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
    }
}",0,
project,0,test284302,"public void test284302() throws Throwable {
    Node node0 = new Node(105);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test285303,"public void test285303() throws Throwable {
    Node node0 = new Node(119, 145, 119);
    Node node1 = new Node(30, node0, 51, 42);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test286304,"public void test286304() throws Throwable {
    Node node0 = new Node(96, 96, 96);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test287305,"public void test287305() throws Throwable {
    Node node0 = new Node(31);
    PeepholeFoldWithTypes peepholeFoldWithTypes0 = new PeepholeFoldWithTypes();
    boolean boolean0 = peepholeFoldWithTypes0.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test288306,"public void test288306() throws Throwable {
    Node node0 = new Node(105);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test289307,"public void test289307() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""infinity"");
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test290308,"public void test290308() throws Throwable {
    Node node0 = new Node(49);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test291309,"public void test291309() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test292310,"public void test292310() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",1,
project,0,test293311,"public void test293311() throws Throwable {
    Node node0 = new Node(30, 35, 0);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, compilerOptions0.stripNameSuffixes);
    assertTrue(boolean0);
}",0,
project,0,test294312,"public void test294312() throws Throwable {
    Node node0 = new Node(35, 35, 35);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, compilerOptions0.stripNamePrefixes);
    assertTrue(boolean0);
}",0,
project,0,test295313,"public void test295313() throws Throwable {
    Node node0 = new Node(37, 16, 8232);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, compilerOptions0.stripTypes);
    assertTrue(boolean0);
}",0,
project,0,test296314,"public void test296314() throws Throwable {
    Node node0 = new Node(105);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.canBeSideEffected(node0, compilerOptions0.stripTypes);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test297315,"public void test297315() throws Throwable {
    Node node0 = new Node(70);
    Node node1 = new Node(31, node0, node0, 12, 47);
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test298316,"public void test298316() throws Throwable {
    Node node0 = new Node(3);
    Node node1 = NodeUtil.newVarNode(""."", node0);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, compilerOptions0.aliasableStrings);
    assertFalse(node1.isName());
}",0,assertTrue(node1.isName())
project,0,test298317,"public void test298317() throws Throwable {
    Node node0 = new Node(3);
    Node node1 = NodeUtil.newVarNode(""."", node0);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, compilerOptions0.aliasableStrings);
    assertTrue(boolean0);
}",0,
project,0,test298318,"public void test298318() throws Throwable {
    Node node0 = new Node(3);
    Node node1 = NodeUtil.newVarNode(""."", node0);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, compilerOptions0.aliasableStrings);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test299319,"public void test299319() throws Throwable {
    int int0 = NodeUtil.precedence(9);
    assertEquals(5, int0);
}",0,
project,0,test300320,"public void test300320() throws Throwable {
    int int0 = NodeUtil.precedence(103);
    assertEquals(13, int0);
}",0,
project,0,test301321,"public void test301321() throws Throwable {
    int int0 = NodeUtil.precedence(10);
    assertEquals(6, int0);
}",0,
project,0,test302322,"public void test302322() throws Throwable {
    int int0 = NodeUtil.precedence(11);
    assertEquals(7, int0);
}",0,
project,0,test303323,"public void test303323() throws Throwable {
    int int0 = NodeUtil.precedence(12);
    assertEquals(8, int0);
}",0,
project,0,test304324,"public void test304324() throws Throwable {
    int int0 = NodeUtil.precedence(13);
    assertEquals(8, int0);
}",0,
project,0,test305325,"public void test305325() throws Throwable {
    int int0 = NodeUtil.precedence(14);
    assertEquals(9, int0);
}",0,
project,0,test306326,"public void test306326() throws Throwable {
    int int0 = NodeUtil.precedence(15);
    assertEquals(9, int0);
}",0,
project,0,test307327,"public void test307327() throws Throwable {
    int int0 = NodeUtil.precedence(16);
    assertEquals(9, int0);
}",0,
project,0,test308328,"public void test308328() throws Throwable {
    int int0 = NodeUtil.precedence(17);
    assertEquals(9, int0);
}",0,
project,0,test309329,"public void test309329() throws Throwable {
    int int0 = NodeUtil.precedence(18);
    assertEquals(10, int0);
}",0,
project,0,test310330,"public void test310330() throws Throwable {
    int int0 = NodeUtil.precedence(19);
    assertEquals(10, int0);
}",0,
project,0,test311331,"public void test311331() throws Throwable {
    int int0 = NodeUtil.precedence(20);
    assertEquals(10, int0);
}",0,
project,0,test312332,"public void test312332() throws Throwable {
    int int0 = NodeUtil.precedence(21);
    assertEquals(11, int0);
}",0,
project,0,test313333,"public void test313333() throws Throwable {
    int int0 = NodeUtil.precedence(22);
    assertEquals(11, int0);
}",0,
project,0,test314334,"public void test314334() throws Throwable {
    int int0 = NodeUtil.precedence(23);
    assertEquals(12, int0);
}",0,
project,0,test315335,"public void test315335() throws Throwable {
    int int0 = NodeUtil.precedence(24);
    assertEquals(12, int0);
}",0,
project,0,test316336,"public void test316336() throws Throwable {
    int int0 = NodeUtil.precedence(25);
    assertEquals(12, int0);
}",0,
project,0,test317337,"public void test317337() throws Throwable {
    int int0 = NodeUtil.precedence(26);
    assertEquals(13, int0);
}",0,
project,0,test318338,"public void test318338() throws Throwable {
    int int0 = NodeUtil.precedence(27);
    assertEquals(13, int0);
}",0,
project,0,test319339,"public void test319339() throws Throwable {
    int int0 = NodeUtil.precedence(28);
    assertEquals(13, int0);
}",0,
project,0,test320340,"public void test320340() throws Throwable {
    int int0 = NodeUtil.precedence(29);
    assertEquals(13, int0);
}",0,
project,0,test321341,"public void test321341() throws Throwable {
    int int0 = NodeUtil.precedence(30);
    assertEquals(13, int0);
}",0,
project,0,test322342,"public void test322342() throws Throwable {
    int int0 = NodeUtil.precedence(31);
    assertEquals(13, int0);
}",0,
project,0,test323343,"public void test323343() throws Throwable {
    int int0 = NodeUtil.precedence(32);
    assertEquals(13, int0);
}",0,
project,0,test324344,"public void test324344() throws Throwable {
    int int0 = NodeUtil.precedence(33);
    assertEquals(15, int0);
}",0,
project,0,test325345,"public void test325345() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(34);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 34
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test326346,"public void test326346() throws Throwable {
    int int0 = NodeUtil.precedence(35);
    assertEquals(15, int0);
}",0,
project,0,test327347,"public void test327347() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(36);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 36
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test328348,"public void test328348() throws Throwable {
    int int0 = NodeUtil.precedence(37);
    assertEquals(15, int0);
}",0,
project,0,test329349,"public void test329349() throws Throwable {
    int int0 = NodeUtil.precedence(38);
    assertEquals(15, int0);
}",0,
project,0,test330350,"public void test330350() throws Throwable {
    int int0 = NodeUtil.precedence(39);
    assertEquals(15, int0);
}",0,
project,0,test331351,"public void test331351() throws Throwable {
    int int0 = NodeUtil.precedence(40);
    assertEquals(15, int0);
}",0,
project,0,test332352,"public void test332352() throws Throwable {
    int int0 = NodeUtil.precedence(41);
    assertEquals(15, int0);
}",0,
project,0,test333353,"public void test333353() throws Throwable {
    int int0 = NodeUtil.precedence(42);
    assertEquals(15, int0);
}",0,
project,0,test334354,"public void test334354() throws Throwable {
    int int0 = NodeUtil.precedence(43);
    assertEquals(15, int0);
}",0,
project,0,test335355,"public void test335355() throws Throwable {
    int int0 = NodeUtil.precedence(44);
    assertEquals(15, int0);
}",0,
project,0,test336356,"public void test336356() throws Throwable {
    int int0 = NodeUtil.precedence(45);
    assertEquals(8, int0);
}",0,
project,0,test337357,"public void test337357() throws Throwable {
    int int0 = NodeUtil.precedence(46);
    assertEquals(8, int0);
}",0,
project,0,test338358,"public void test338358() throws Throwable {
    int int0 = NodeUtil.precedence(47);
    assertEquals(15, int0);
}",0,
project,0,test339359,"public void test339359() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(48);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 48
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test340360,"public void test340360() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(49);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for THROW (type 49)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test341361,"public void test341361() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(50);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 50
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test342362,"public void test342362() throws Throwable {
    int int0 = NodeUtil.precedence(51);
    assertEquals(9, int0);
}",0,
project,0,test343363,"public void test343363() throws Throwable {
    int int0 = NodeUtil.precedence(52);
    assertEquals(9, int0);
}",0,
project,0,test344364,"public void test344364() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(53);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 53
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test345365,"public void test345365() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(54);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 54
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test346366,"public void test346366() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(55);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 55
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test347367,"public void test347367() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(57);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 57
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test348368,"public void test348368() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(58);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 58
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test349369,"public void test349369() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(59);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 59
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test350370,"public void test350370() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(61);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 61
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test351371,"public void test351371() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(62);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 62
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test352372,"public void test352372() throws Throwable {
    int int0 = NodeUtil.precedence(63);
    assertEquals(15, int0);
}",0,
project,0,test353373,"public void test353373() throws Throwable {
    int int0 = NodeUtil.precedence(64);
    assertEquals(15, int0);
}",0,
project,0,test354374,"public void test354374() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(65);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 65
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test355375,"public void test355375() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(66);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 66
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test356376,"public void test356376() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(67);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 67
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test357377,"public void test357377() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(68);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 68
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test358378,"public void test358378() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(69);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 69
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test359379,"public void test359379() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(70);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 70
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test360380,"public void test360380() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(71);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 71
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test361381,"public void test361381() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(72);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 72
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test362382,"public void test362382() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(74);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 74
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test363383,"public void test363383() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(75);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 75
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test364384,"public void test364384() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(76);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 76
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test365385,"public void test365385() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(77);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for TRY (type 77)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test366386,"public void test366386() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(79);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 79
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test367387,"public void test367387() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(80);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 80
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test368388,"public void test368388() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(81);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 81
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test369389,"public void test369389() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(82);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 82
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test370390,"public void test370390() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(83);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for PARAM_LIST (type 83)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test371391,"public void test371391() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(84);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 84
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test372392,"public void test372392() throws Throwable {
    int int0 = NodeUtil.precedence(85);
    assertEquals(0, int0);
}",0,
project,0,test373393,"public void test373393() throws Throwable {
    int int0 = NodeUtil.precedence(86);
    assertEquals(1, int0);
}",0,
project,0,test374394,"public void test374394() throws Throwable {
    int int0 = NodeUtil.precedence(87);
    assertEquals(1, int0);
}",0,
project,0,test375395,"public void test375395() throws Throwable {
    int int0 = NodeUtil.precedence(88);
    assertEquals(1, int0);
}",0,
project,0,test376396,"public void test376396() throws Throwable {
    int int0 = NodeUtil.precedence(89);
    assertEquals(1, int0);
}",0,
project,0,test377397,"public void test377397() throws Throwable {
    int int0 = NodeUtil.precedence(90);
    assertEquals(1, int0);
}",0,
project,0,test378398,"public void test378398() throws Throwable {
    int int0 = NodeUtil.precedence(91);
    assertEquals(1, int0);
}",0,
project,0,test379399,"public void test379399() throws Throwable {
    int int0 = NodeUtil.precedence(92);
    assertEquals(1, int0);
}",0,
project,0,test380400,"public void test380400() throws Throwable {
    int int0 = NodeUtil.precedence(93);
    assertEquals(1, int0);
}",0,
project,0,test381401,"public void test381401() throws Throwable {
    int int0 = NodeUtil.precedence(94);
    assertEquals(1, int0);
}",0,
project,0,test382402,"public void test382402() throws Throwable {
    int int0 = NodeUtil.precedence(95);
    assertEquals(1, int0);
}",0,
project,0,test383403,"public void test383403() throws Throwable {
    int int0 = NodeUtil.precedence(96);
    assertEquals(1, int0);
}",0,
project,0,test384404,"public void test384404() throws Throwable {
    int int0 = NodeUtil.precedence(97);
    assertEquals(1, int0);
}",0,
project,0,test385405,"public void test385405() throws Throwable {
    int int0 = NodeUtil.precedence(98);
    assertEquals(2, int0);
}",0,
project,0,test386406,"public void test386406() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(99);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 99
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test387407,"public void test387407() throws Throwable {
    int int0 = NodeUtil.precedence(100);
    assertEquals(3, int0);
}",0,
project,0,test388408,"public void test388408() throws Throwable {
    int int0 = NodeUtil.precedence(101);
    assertEquals(4, int0);
}",0,
project,0,test389409,"public void test389409() throws Throwable {
    int int0 = NodeUtil.precedence(102);
    assertEquals(13, int0);
}",0,
project,0,test390410,"public void test390410() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(104);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 104
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test391411,"public void test391411() throws Throwable {
    int int0 = NodeUtil.precedence(105);
    assertEquals(15, int0);
}",0,
project,0,test392412,"public void test392412() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(106);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 106
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test393413,"public void test393413() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(107);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 107
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test394414,"public void test394414() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(108);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for IF (type 108)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test395415,"public void test395415() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(109);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 109
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test396416,"public void test396416() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(110);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for SWITCH (type 110)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test397417,"public void test397417() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for CASE (type 111)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test398418,"public void test398418() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(112);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for DEFAULT_CASE (type 112)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test399419,"public void test399419() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(113);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for WHILE (type 113)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test400420,"public void test400420() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for DO (type 114)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test401421,"public void test401421() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for FOR (type 115)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test402422,"public void test402422() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for BREAK (type 116)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test403423,"public void test403423() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(117);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for CONTINUE (type 117)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test404424,"public void test404424() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for VAR (type 118)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test405425,"public void test405425() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for WITH (type 119)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test406426,"public void test406426() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(120);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for CATCH (type 120)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test407427,"public void test407427() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(121);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 121
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test408428,"public void test408428() throws Throwable {
    int int0 = NodeUtil.precedence(122);
    assertEquals(13, int0);
}",0,
project,0,test409429,"public void test409429() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(123);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 123
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test410430,"public void test410430() throws Throwable {
    int int0 = NodeUtil.precedence(124);
    assertEquals(15, int0);
}",0,
project,0,test411431,"public void test411431() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(125);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for BLOCK (type 125)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test412432,"public void test412432() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(126);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for LABEL (type 126)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test413433,"public void test413433() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(127);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 127
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test414434,"public void test414434() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(128);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 128
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test415435,"public void test415435() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(129);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 129
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test416436,"public void test416436() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(130);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for EXPR_RESULT (type 130)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test417437,"public void test417437() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(131);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 131
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test418438,"public void test418438() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(132);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for SCRIPT (type 132)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test419439,"public void test419439() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(133);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 133
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test420440,"public void test420440() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(134);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 134
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test421441,"public void test421441() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(135);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 135
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test422442,"public void test422442() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(136);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 136
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test423443,"public void test423443() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(137);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 137
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test424444,"public void test424444() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(138);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 138
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test425445,"public void test425445() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(139);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 139
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test426446,"public void test426446() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(140);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 140
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test427447,"public void test427447() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(141);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 141
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test428448,"public void test428448() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(142);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 142
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test429449,"public void test429449() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(143);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 143
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test430450,"public void test430450() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(144);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 144
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test431451,"public void test431451() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(145);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 145
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test432452,"public void test432452() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(146);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 146
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test433453,"public void test433453() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(147);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for GETTER_DEF (type 147)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test434454,"public void test434454() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(148);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for SETTER_DEF (type 148)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test435455,"public void test435455() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(149);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for CONST (type 149)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test436456,"public void test436456() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(150);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 150
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test437457,"public void test437457() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(151);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 151
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test438458,"public void test438458() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(152);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for DEBUGGER (type 152)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test439459,"public void test439459() throws Throwable {
    int int0 = NodeUtil.precedence(154);
    assertEquals(15, int0);
}",0,
project,0,test440460,"public void test440460() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(4);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for RETURN (type 4)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test441461,"public void test441461() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""49Xi}"");
    boolean boolean0 = NodeUtil.isNullOrUndefined(node0);
    assertFalse(boolean0);
}",0,assertFalse(boolean0)
project,0,test442462,"public void test442462() throws Throwable {
    Node node0 = new Node(31);
    Node node1 = new Node(41, node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals("""", string0);
}",0,
project,0,test443463,"public void test443463() throws Throwable {
    Node node0 = new Node(85);
    // Undeclared exception!
    try {
        NodeUtil.isBooleanResult(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test444464,"public void test444464() throws Throwable {
    Node node0 = new Node(86);
    // Undeclared exception!
    try {
        NodeUtil.mayBeStringHelper(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test445465,"public void test445465() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.isBooleanResult(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test446466,"public void test446466() throws Throwable {
    Node node0 = new Node(100);
    // Undeclared exception!
    try {
        NodeUtil.mayBeStringHelper(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test447467,"public void test447467() throws Throwable {
    Node node0 = new Node(16, 16, 16);
    Node node1 = new Node(101, node0, 51, 16);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test448468,"public void test448468() throws Throwable {
    Node node0 = new Node(85);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    // Undeclared exception!
    try {
        NodeUtil.anyResultsMatch(node0, predicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test449469,"public void test449469() throws Throwable {
    Node node0 = new Node(86);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    // Undeclared exception!
    try {
        NodeUtil.anyResultsMatch(node0, nodeUtil_MatchShallowStatement0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test450470,"public void test450470() throws Throwable {
    Node node0 = new Node(98);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    // Undeclared exception!
    try {
        NodeUtil.anyResultsMatch(node0, nodeUtil_MatchShallowStatement0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test451471,"public void test451471() throws Throwable {
    Node node0 = new Node(100, 16, 113);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.anyResultsMatch(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test452472,"public void test452472() throws Throwable {
    Node node0 = new Node(159, 16, 16);
    Node node1 = new Node(101, node0, 51, 16);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.anyResultsMatch(node1, nodeUtil_MatchShallowStatement0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test453473,"public void test453473() throws Throwable {
    Node node0 = new Node(156, 16, (-937));
    Node node1 = new Node(101, node0, 51, 16);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    boolean boolean0 = NodeUtil.anyResultsMatch(node1, predicate0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test454474,"public void test454474() throws Throwable {
    Node node0 = new Node(9, 113, 9);
    boolean boolean0 = NodeUtil.isNumericResultHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test455475,"public void test455475() throws Throwable {
    Node node0 = new Node(11);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test456476,"public void test456476() throws Throwable {
    Node node0 = new Node(18);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test458478,"public void test458478() throws Throwable {
    Node node0 = new Node(63);
    Node node1 = new Node(20, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test459479,"public void test459479() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(23, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test459480,"public void test459480() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(23, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertEquals(43, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test460481,"public void test460481() throws Throwable {
    Node node0 = new Node(25, 1, 31);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test461482,"public void test461482() throws Throwable {
    Node node0 = new Node(28, 28, 28);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test462483,"public void test462483() throws Throwable {
    Node node0 = new Node(3644, (-937), 3644);
    Node node1 = new Node(29, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test463484,"public void test463484() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""infinity"");
    boolean boolean0 = NodeUtil.isNumericResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test464485,"public void test464485() throws Throwable {
    Node node0 = Node.newNumber(0.0, 79, 80);
    boolean boolean0 = NodeUtil.isNumericResultHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test465486,"public void test465486() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test466487,"public void test466487() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.isNumericResultHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test467488,"public void test467488() throws Throwable {
    Node node0 = new Node(21);
    Node node1 = NodeUtil.newVarNode("",[F\""q"", node0);
    node0.addChildToFront(node1);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertEquals(1, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test467489,"public void test467489() throws Throwable {
    Node node0 = new Node(21);
    Node node1 = NodeUtil.newVarNode("",[F\""q"", node0);
    node0.addChildToFront(node1);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test468490,"public void test468490() throws Throwable {
    Node node0 = new Node(101);
    Node node1 = new Node(12, node0, 44, 44);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test469491,"public void test469491() throws Throwable {
    Node node0 = new Node((-2432));
    Node node1 = new Node(13, node0, 40, (-223));
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test470492,"public void test470492() throws Throwable {
    Node node0 = new Node(14);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test471493,"public void test471493() throws Throwable {
    Node node0 = new Node(137, 137, 137);
    Node node1 = new Node(15, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test472494,"public void test472494() throws Throwable {
    Node node0 = new Node(17, 2371, 2371);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    int int0 = NodeUtil.getCount(node0, nodeUtil_BooleanResultPredicate0, nodeUtil_BooleanResultPredicate0);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test473495,"public void test473495() throws Throwable {
    Node node0 = new Node(98);
    Node node1 = new Node(18, node0);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test474496,"public void test474496() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(23, node0);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertFalse(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test474497,"public void test474497() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(23, node0);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test475498,"public void test475498() throws Throwable {
    Node node0 = Node.newString(24, ""y5X"");
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test476499,"public void test476499() throws Throwable {
    Node node0 = new Node(25, 2, 31);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test477500,"public void test477500() throws Throwable {
    Node node0 = new Node(28);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test478501,"public void test478501() throws Throwable {
    Node node0 = Node.newString(""-&<&"");
    Node node1 = new Node(29, node0);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test479502,"public void test479502() throws Throwable {
    Node node0 = new Node(74);
    Node node1 = new Node(31, node0, node0, 12, 47);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test480503,"public void test480503() throws Throwable {
    Node node0 = new Node(32, 2365, 2365);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    int int0 = NodeUtil.getCount(node0, nodeUtil_BooleanResultPredicate0, nodeUtil_BooleanResultPredicate0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test481504,"public void test481504() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test481505,"public void test481505() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test482506,"public void test482506() throws Throwable {
    Node node0 = new Node(34);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",1,
project,0,test483507,"public void test483507() throws Throwable {
    Node node0 = new Node(35, 35, 35);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test484508,"public void test484508() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, "">>>="");
    Node node1 = new Node(36, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test485509,"public void test485509() throws Throwable {
    Node node0 = new Node(173);
    Node node1 = new Node(37, node0, node0, node0);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_BooleanResultPredicate0);
    assertFalse(boolean0);
}",0,
project,0,test486510,"public void test486510() throws Throwable {
    Node node0 = Node.newNumber(1.0, (-4121), (-4121));
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    int int0 = NodeUtil.getNodeTypeReferenceCount(node0, 38, nodeUtil_BooleanResultPredicate0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test487511,"public void test487511() throws Throwable {
    Node node0 = Node.newString(""_or{c/h!jMM6"", 85, 85);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test488512,"public void test488512() throws Throwable {
    Node node0 = new Node((-2385), 17, 112);
    Node node1 = new Node(41, node0);
    boolean boolean0 = NodeUtil.mayBeString(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test489513,"public void test489513() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(42, node0);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test489514,"public void test489514() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(42, node0);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertFalse(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test490515,"public void test490515() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test491516,"public void test491516() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(45, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test491517,"public void test491517() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(45, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test492518,"public void test492518() throws Throwable {
    Node node0 = Node.newString(46, ""JSCompiler_returnArg"", 109, 32);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test493519,"public void test493519() throws Throwable {
    Node node0 = new Node(47, 2076, 16);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
    int int0 = NodeUtil.getNodeTypeReferenceCount(node0, 118, nodeUtil_BooleanResultPredicate0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test494520,"public void test494520() throws Throwable {
    Node node0 = new Node(3, 3, 3);
    Node node1 = new Node(48, node0, 54, 8);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test495521,"public void test495521() throws Throwable {
    Node node0 = new Node(49, 31, 51);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    int int0 = NodeUtil.getNodeTypeReferenceCount(node0, 16, nodeUtil_BooleanResultPredicate0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test496522,"public void test496522() throws Throwable {
    Node node0 = new Node(50, 50, 50);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test498524,"public void test498524() throws Throwable {
    Node node0 = new Node((-1305), (-1305), (-1305));
    Node node1 = new Node(52, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test499525,"public void test499525() throws Throwable {
    Node node0 = new Node(122, 122, 122);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test500526,"public void test500526() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test501527,"public void test501527() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(32);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test502528,"public void test502528() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test503529,"public void test503529() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(100);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test504530,"public void test504530() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(101);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test505531,"public void test505531() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test506532,"public void test506532() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(24);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test507533,"public void test507533() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test508534,"public void test508534() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test509535,"public void test509535() throws Throwable {
    Node node0 = new Node(89);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test510536,"public void test510536() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    // Undeclared exception!
    try {
        NodeUtil.getOpFromAssignmentOp(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Not an assignment op:FALSE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test511537,"public void test511537() throws Throwable {
    Node node0 = new Node(88, 88, 88);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(10, int0);
}",0,"assertEquals(1, int0)"
project,0,test512538,"public void test512538() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    assertTrue(node0.isFalse());
}",0,assertTrue(node0.isFalse())
project,0,test512539,"public void test512539() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    node0.setType(92);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(20, int0);
}",0,"assertEquals(1, int0)"
project,0,test513540,"public void test513540() throws Throwable {
    Node node0 = new Node(124);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test514541,"public void test514541() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscomp.DefaultPassConfig$60"", ""j:Q:"");
    assertEquals(1, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test515542,"public void test515542() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""null"");
    ExploitAssigns exploitAssigns0 = new ExploitAssigns();
    Node node1 = exploitAssigns0.optimizeSubtree(node0);
    assertFalse(node1.isEmpty());
}",0,assertTrue(node1.isEmpty())
project,0,test516543,"public void test516543() throws Throwable {
    Node node0 = new Node(76);
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test517544,"public void test517544() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    boolean boolean0 = NodeUtil.isForIn(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test518545,"public void test518545() throws Throwable {
    Node node0 = Node.newString(""m"");
    Node node1 = new Node(113, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test519546,"public void test519546() throws Throwable {
    Node node0 = new Node(156);
    Node node1 = new Node(39, node0, 1, 53);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test520547,"public void test520547() throws Throwable {
    Node node0 = Node.newString(""m"");
    Node node1 = new Node(113, node0, node0, node0, node0);
    Node node2 = NodeUtil.getLoopCodeBlock(node1);
    assertFalse(node2.isObjectLit());
}",0,assertTrue(node2.isObjectLit())
project,0,test521548,"public void test521548() throws Throwable {
    Node node0 = new Node(85);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test522549,"public void test522549() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test523550,"public void test523550() throws Throwable {
    Node node0 = new Node(77);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test524551,"public void test524551() throws Throwable {
    Node node0 = new Node(108, (-2447), (-937));
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test525552,"public void test525552() throws Throwable {
    Node node0 = new Node(110, 957, 957);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test526553,"public void test526553() throws Throwable {
    Node node0 = new Node(112, (-937), (-1687));
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test527554,"public void test527554() throws Throwable {
    Node node0 = new Node(113);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test528555,"public void test528555() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test529556,"public void test529556() throws Throwable {
    Node node0 = new Node(119);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test530557,"public void test530557() throws Throwable {
    Node node0 = Node.newString(120, ""F"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test531558,"public void test531558() throws Throwable {
    Node node0 = Node.newString(126, "")UCvX{#oj6),g,7i5_"", 61, 131);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test532559,"public void test532559() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test533560,"public void test533560() throws Throwable {
    Node node0 = new Node(108);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test534561,"public void test534561() throws Throwable {
    Node node0 = new Node(112);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test535562,"public void test535562() throws Throwable {
    Node node0 = new Node(113);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test536563,"public void test536563() throws Throwable {
    Node node0 = Node.newString(126, "")UCvX{#oj6),g,7i5_"", 61, 131);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test537564,"public void test537564() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    // Undeclared exception!
    try {
        NodeUtil.isControlStructureCodeBlock(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test538565,"public void test538565() throws Throwable {
    Node node0 = new Node(115, 26, 838);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, (Node) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test539566,"public void test539566() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // FALSE 43 does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test540567,"public void test540567() throws Throwable {
    Node node0 = new Node(112, 2165, (-1687));
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // DEFAULT_CASE does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test541568,"public void test541568() throws Throwable {
    Node node0 = new Node(113);
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test542569,"public void test542569() throws Throwable {
    Node node0 = new Node(115);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // malformed 'for' statement FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test543570,"public void test543570() throws Throwable {
    Node node0 = new Node(139);
    Node node1 = new Node(125, node0, node0, node0);
    boolean boolean0 = NodeUtil.isStatementBlock(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test544571,"public void test544571() throws Throwable {
    Node node0 = new Node(125, 2371, 2371);
    boolean boolean0 = NodeUtil.isStatementParent(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test545572,"public void test545572() throws Throwable {
    Node node0 = new Node(132, 2371, 2371);
    boolean boolean0 = NodeUtil.isStatementParent(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test546573,"public void test546573() throws Throwable {
    Node node0 = new Node(112, (-1687), (-1687));
    Node node1 = new Node(55, node0, node0, 1, 4113);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test547574,"public void test547574() throws Throwable {
    Node node0 = new Node(32, 2365, 2365);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test548575,"public void test548575() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = Node.newString(154, """", 154, 154);
    Node node1 = NodeUtil.newName(googleCodingConvention0, """", node0);
    boolean boolean0 = NodeUtil.isReferenceName(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test549576,"public void test549576() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = Node.newString(""qD Q46J`b"", (-9), (-9));
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""qD Q46J`b"", node0);
    boolean boolean0 = NodeUtil.isReferenceName(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test550577,"public void test550577() throws Throwable {
    Node node0 = new Node(156, 16, (-914));
    Node node1 = new Node(101, node0, 51, 16);
    Compiler compiler0 = new Compiler();
    Node node2 = compiler0.parseTestCode(""779/J)"");
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node2, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test551578,"public void test551578() throws Throwable {
    Node node0 = new Node(85);
    Node node1 = new Node(76, node0, 1, 41);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: COMMA of COMMA
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test552579,"public void test552579() throws Throwable {
    Node node0 = new Node(77, 8199, 8199);
    NodeUtil.maybeAddFinally(node0);
    assertEquals(1, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test552580,"public void test552580() throws Throwable {
    Node node0 = new Node(77, 8199, 8199);
    NodeUtil.maybeAddFinally(node0);
    assertTrue(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test553581,"public void test553581() throws Throwable {
    Node node0 = new Node(105);
    Node node1 = new Node(53, node0, (-824), 55);
    boolean boolean0 = NodeUtil.isHoistedFunctionDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test554582,"public void test554582() throws Throwable {
    Node node0 = Node.newString(""d_I&9AJW]["", 64, 64);
    boolean boolean0 = NodeUtil.isBleedingFunctionName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test555583,"public void test555583() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""f"");
    // Undeclared exception!
    try {
        NodeUtil.isBleedingFunctionName(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test556584,"public void test556584() throws Throwable {
    Node node0 = new Node(58);
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test557585,"public void test557585() throws Throwable {
    Node node0 = Node.newString(63, ""!ESQQnJgD/{Vz+32GL"", 110, 4367);
    Node node1 = new Node(37, node0, node0, 39, (-31));
    boolean boolean0 = NodeUtil.isObjectCallMethod(node1, ""!ESQQnJgD/{Vz+32GL"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test558586,"public void test558586() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test559587,"public void test559587() throws Throwable {
    Node node0 = new Node(3);
    Node node1 = NodeUtil.newVarNode(""."", node0);
    boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node1);
    assertFalse(node0.hasChildren());
}",0,assertFalse(node0.hasChildren())
project,0,test559588,"public void test559588() throws Throwable {
    Node node0 = new Node(3);
    Node node1 = NodeUtil.newVarNode(""."", node0);
    boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test560589,"public void test560589() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""M4aU*3HqbT!8cIf"");
    boolean boolean0 = NodeUtil.isLValue(node0);
    assertFalse(boolean0);
}",1,
project,0,test561590,"public void test561590() throws Throwable {
    Node node0 = new Node(8257);
    // Undeclared exception!
    try {
        NodeUtil.isLValue(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test562591,"public void test562591() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(35, node0);
    boolean boolean0 = NodeUtil.isLValue(node1);
    assertTrue(node0.isFalse());
}",0,assertTrue(node0.isFalse())
project,0,test562592,"public void test562592() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(35, node0);
    boolean boolean0 = NodeUtil.isLValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test563593,"public void test563593() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "".%"");
    Node node1 = new Node(19, node0, node0, 40, 1675);
    boolean boolean0 = NodeUtil.isLValue(node0);
    assertFalse(boolean0);
}",1,
project,0,test563594,"public void test563594() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "".%"");
    Node node1 = new Node(19, node0, node0, 40, 1675);
    boolean boolean0 = NodeUtil.isLValue(node0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test564595,"public void test564595() throws Throwable {
    Node node0 = new Node(147);
    boolean boolean0 = NodeUtil.isObjectLitKey(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test565596,"public void test565596() throws Throwable {
    Node node0 = new Node(154, 154, 154);
    Node node1 = new Node(49, node0, node0, 1545, 49);
    // Undeclared exception!
    try {
        NodeUtil.getBestLValueName(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test566597,"public void test566597() throws Throwable {
    Node node0 = new Node(147);
    // Undeclared exception!
    try {
        NodeUtil.getObjectLitKeyName(node0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // GETTER_DEF is not a string node
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test567598,"public void test567598() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    // Undeclared exception!
    try {
        NodeUtil.getObjectLitKeyName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected node type: WITH 119
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test568599,"public void test568599() throws Throwable {
    Node node0 = new Node(154);
    // Undeclared exception!
    try {
        NodeUtil.getObjectLitKeyName(node0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // STRING_KEY is not a string node
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test569600,"public void test569600() throws Throwable {
    Node node0 = new Node(116, 116, 116);
    JSType jSType0 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, (JSType) null);
    assertNull(jSType0);
}",0,
project,0,test570601,"public void test570601() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
    JSType jSType0 = modificationVisitor0.caseVoidType();
    Node node0 = new Node(105);
    JSType jSType1 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, jSType0);
    assertFalse(jSType1.isFunctionPrototypeType());
}",0,
project,0,test571602,"public void test571602() throws Throwable {
    Node node0 = new Node(147, 2588, 2588);
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test572603,"public void test572603() throws Throwable {
    Node node0 = new Node(58, 1099, 1099);
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test573604,"public void test573604() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(9);
    assertEquals(""|"", string0);
}",1,
project,0,test574605,"public void test574605() throws Throwable {
    String string0 = NodeUtil.opToStr(45);
    assertEquals(""==="", string0);
}",0,
project,0,test575606,"public void test575606() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(10);
    assertEquals(""^"", string0);
}",1,
project,0,test576607,"public void test576607() throws Throwable {
    String string0 = NodeUtil.opToStr(11);
    assertEquals(""&"", string0);
}",0,
project,0,test577608,"public void test577608() throws Throwable {
    String string0 = NodeUtil.opToStr(12);
    assertEquals(""=="", string0);
}",0,
project,0,test578609,"public void test578609() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(13);
    assertEquals(""!="", string0);
}",1,
project,0,test579610,"public void test579610() throws Throwable {
    String string0 = NodeUtil.opToStr(14);
    assertEquals(""<"", string0);
}",0,
project,0,test580611,"public void test580611() throws Throwable {
    String string0 = NodeUtil.opToStr(15);
    assertEquals(""<="", string0);
}",0,
project,0,test581612,"public void test581612() throws Throwable {
    String string0 = NodeUtil.opToStr(16);
    assertEquals("">"", string0);
}",0,
project,0,test582613,"public void test582613() throws Throwable {
    String string0 = NodeUtil.opToStr(17);
    assertEquals("">="", string0);
}",0,
project,0,test583614,"public void test583614() throws Throwable {
    String string0 = NodeUtil.opToStr(18);
    assertEquals(""<<"", string0);
}",0,
project,0,test584615,"public void test584615() throws Throwable {
    String string0 = NodeUtil.opToStr(19);
    assertEquals("">>"", string0);
}",0,
project,0,test585616,"public void test585616() throws Throwable {
    String string0 = NodeUtil.opToStr(20);
    assertEquals("">>>"", string0);
}",0,
project,0,test586617,"public void test586617() throws Throwable {
    String string0 = NodeUtil.opToStr(21);
    assertEquals(""+"", string0);
}",0,
project,0,test587618,"public void test587618() throws Throwable {
    String string0 = NodeUtil.opToStr(22);
    assertEquals(""-"", string0);
}",0,
project,0,test588619,"public void test588619() throws Throwable {
    String string0 = NodeUtil.opToStr(23);
    assertEquals(""*"", string0);
}",0,
project,0,test589620,"public void test589620() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(24);
    assertEquals(""/"", string0);
}",1,
project,0,test590621,"public void test590621() throws Throwable {
    String string0 = NodeUtil.opToStr(25);
    assertEquals(""%"", string0);
}",0,
project,0,test591622,"public void test591622() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(26);
    assertEquals(""!"", string0);
}",1,
project,0,test592623,"public void test592623() throws Throwable {
    String string0 = NodeUtil.opToStr(27);
    assertEquals(""~"", string0);
}",0,
project,0,test593624,"public void test593624() throws Throwable {
    String string0 = NodeUtil.opToStr(28);
    assertEquals(""+"", string0);
}",0,
project,0,test594625,"public void test594625() throws Throwable {
    String string0 = NodeUtil.opToStr(29);
    assertNotNull(string0);
}",0,
project,0,test594626,"public void test594626() throws Throwable {
    String string0 = NodeUtil.opToStr(29);
    assertEquals(""-"", string0);
}",0,
project,0,test595627,"public void test595627() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(30);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 30: NEW
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test596628,"public void test596628() throws Throwable {
    String string0 = NodeUtil.opToStr(31);
    assertNull(string0);
}",0,
project,0,test597629,"public void test597629() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(32);
    assertEquals(""typeof"", string0);
}",1,
project,0,test598630,"public void test598630() throws Throwable {
    String string0 = NodeUtil.opToStr(33);
    assertNull(string0);
}",0,
project,0,test599631,"public void test599631() throws Throwable {
    String string0 = NodeUtil.opToStr(34);
    assertNull(string0);
}",0,
project,0,test600632,"public void test600632() throws Throwable {
    String string0 = NodeUtil.opToStr(35);
    assertNull(string0);
}",0,
project,0,test601633,"public void test601633() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(36);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 36
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test602634,"public void test602634() throws Throwable {
    String string0 = NodeUtil.opToStr(37);
    assertNull(string0);
}",0,
project,0,test603635,"public void test603635() throws Throwable {
    String string0 = NodeUtil.opToStr(38);
    assertNull(string0);
}",0,
project,0,test604636,"public void test604636() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(39);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 39: NUMBER
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test605637,"public void test605637() throws Throwable {
    String string0 = NodeUtil.opToStr(40);
    assertNull(string0);
}",0,
project,0,test606638,"public void test606638() throws Throwable {
    String string0 = NodeUtil.opToStr(41);
    assertNull(string0);
}",0,
project,0,test607639,"public void test607639() throws Throwable {
    String string0 = NodeUtil.opToStr(42);
    assertNull(string0);
}",0,
project,0,test608640,"public void test608640() throws Throwable {
    String string0 = NodeUtil.opToStr(43);
    assertNull(string0);
}",0,
project,0,test609641,"public void test609641() throws Throwable {
    String string0 = NodeUtil.opToStr(44);
    assertNull(string0);
}",0,
project,0,test610642,"public void test610642() throws Throwable {
    String string0 = NodeUtil.opToStr(46);
    assertEquals(""!=="", string0);
}",0,
project,0,test611643,"public void test611643() throws Throwable {
    String string0 = NodeUtil.opToStr(47);
    assertNull(string0);
}",0,
project,0,test612644,"public void test612644() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(48);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 48
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test613645,"public void test613645() throws Throwable {
    String string0 = NodeUtil.opToStr(49);
    assertNull(string0);
}",0,
project,0,test614646,"public void test614646() throws Throwable {
    String string0 = NodeUtil.opToStr(50);
    assertNull(string0);
}",0,
project,0,test615647,"public void test615647() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(51);
    assertEquals(""in"", string0);
}",1,
project,0,test616648,"public void test616648() throws Throwable {
    String string0 = NodeUtil.opToStr(52);
    assertEquals(""instanceof"", string0);
}",0,
project,0,test617649,"public void test617649() throws Throwable {
    String string0 = NodeUtil.opToStr(53);
    assertNull(string0);
}",0,
project,0,test618650,"public void test618650() throws Throwable {
    String string0 = NodeUtil.opToStr(54);
    assertNull(string0);
}",0,
project,0,test619651,"public void test619651() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(55);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 55
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test620652,"public void test620652() throws Throwable {
    String string0 = NodeUtil.opToStr(56);
    assertNull(string0);
}",0,
project,0,test621653,"public void test621653() throws Throwable {
    String string0 = NodeUtil.opToStr(57);
    assertNull(string0);
}",0,
project,0,test622654,"public void test622654() throws Throwable {
    String string0 = NodeUtil.opToStr(58);
    assertNull(string0);
}",0,
project,0,test623655,"public void test623655() throws Throwable {
    String string0 = NodeUtil.opToStr(59);
    assertNull(string0);
}",0,
project,0,test624656,"public void test624656() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail('<');
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 60
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test625657,"public void test625657() throws Throwable {
    String string0 = NodeUtil.opToStr(61);
    assertNull(string0);
}",0,
project,0,test626658,"public void test626658() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(62);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 62
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test627659,"public void test627659() throws Throwable {
    String string0 = NodeUtil.opToStr(63);
    assertNull(string0);
}",0,
project,0,test628660,"public void test628660() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(64);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 64: OBJECTLIT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test629661,"public void test629661() throws Throwable {
    String string0 = NodeUtil.opToStr(65);
    assertNull(string0);
}",0,
project,0,test630662,"public void test630662() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(66);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 66
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test631663,"public void test631663() throws Throwable {
    String string0 = NodeUtil.opToStr(67);
    assertNull(string0);
}",0,
project,0,test632664,"public void test632664() throws Throwable {
    String string0 = NodeUtil.opToStr(68);
    assertNull(string0);
}",0,
project,0,test633665,"public void test633665() throws Throwable {
    String string0 = NodeUtil.opToStr(70);
    assertNull(string0);
}",0,
project,0,test634666,"public void test634666() throws Throwable {
    String string0 = NodeUtil.opToStr(71);
    assertNull(string0);
}",0,
project,0,test635667,"public void test635667() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(72);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 72
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test636668,"public void test636668() throws Throwable {
    String string0 = NodeUtil.opToStr(73);
    assertNull(string0);
}",0,
project,0,test637669,"public void test637669() throws Throwable {
    String string0 = NodeUtil.opToStr(74);
    assertNull(string0);
}",0,
project,0,test638670,"public void test638670() throws Throwable {
    String string0 = NodeUtil.opToStr(75);
    assertNull(string0);
}",0,
project,0,test639671,"public void test639671() throws Throwable {
    String string0 = NodeUtil.opToStr(76);
    assertNull(string0);
}",0,
project,0,test640672,"public void test640672() throws Throwable {
    String string0 = NodeUtil.opToStr(77);
    assertNull(string0);
}",0,
project,0,test641673,"public void test641673() throws Throwable {
    String string0 = NodeUtil.opToStr(78);
    assertNull(string0);
}",0,
project,0,test642674,"public void test642674() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(79);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 79
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test643675,"public void test643675() throws Throwable {
    String string0 = NodeUtil.opToStr(80);
    assertNull(string0);
}",0,
project,0,test644676,"public void test644676() throws Throwable {
    String string0 = NodeUtil.opToStr(81);
    assertNull(string0);
}",0,
project,0,test645677,"public void test645677() throws Throwable {
    String string0 = NodeUtil.opToStr(83);
    assertNull(string0);
}",0,
project,0,test646678,"public void test646678() throws Throwable {
    String string0 = NodeUtil.opToStr(84);
    assertNull(string0);
}",0,
project,0,test647679,"public void test647679() throws Throwable {
    String string0 = NodeUtil.opToStr(85);
    assertNull(string0);
}",0,
project,0,test648680,"public void test648680() throws Throwable {
    String string0 = NodeUtil.opToStr(86);
    assertEquals(""="", string0);
}",0,
project,0,test649681,"public void test649681() throws Throwable {
    String string0 = NodeUtil.opToStr(87);
    assertEquals(""|="", string0);
}",0,
project,0,test650682,"public void test650682() throws Throwable {
    String string0 = NodeUtil.opToStr(88);
    assertEquals(""^="", string0);
}",0,
project,0,test651683,"public void test651683() throws Throwable {
    String string0 = NodeUtil.opToStr(89);
    assertEquals(""&="", string0);
}",0,
project,0,test652684,"public void test652684() throws Throwable {
    String string0 = NodeUtil.opToStr(90);
    assertEquals(""<<="", string0);
}",0,
project,0,test653685,"public void test653685() throws Throwable {
    String string0 = NodeUtil.opToStr(91);
    assertEquals("">>="", string0);
}",0,
project,0,test654686,"public void test654686() throws Throwable {
    String string0 = NodeUtil.opToStr(92);
    assertEquals("">>>="", string0);
}",0,
project,0,test655687,"public void test655687() throws Throwable {
    String string0 = NodeUtil.opToStr(93);
    assertEquals(""+="", string0);
}",0,
project,0,test656688,"public void test656688() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(94);
    assertEquals(""-="", string0);
}",1,
project,0,test657689,"public void test657689() throws Throwable {
    String string0 = NodeUtil.opToStr(95);
    assertEquals(""*="", string0);
}",0,
project,0,test658690,"public void test658690() throws Throwable {
    String string0 = NodeUtil.opToStr(96);
    assertEquals(""/="", string0);
}",0,
project,0,test659691,"public void test659691() throws Throwable {
    String string0 = NodeUtil.opToStr(97);
    assertEquals(""%="", string0);
}",0,
project,0,test660692,"public void test660692() throws Throwable {
    String string0 = NodeUtil.opToStr(98);
    assertNull(string0);
}",0,
project,0,test661693,"public void test661693() throws Throwable {
    String string0 = NodeUtil.opToStr(99);
    assertNull(string0);
}",0,
project,0,test662694,"public void test662694() throws Throwable {
    String string0 = NodeUtil.opToStr(100);
    assertEquals(""||"", string0);
}",0,
project,0,test663695,"public void test663695() throws Throwable {
    String string0 = NodeUtil.opToStr(101);
    assertEquals(""&&"", string0);
}",0,
project,0,test664696,"public void test664696() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(102);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 102: INC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test665697,"public void test665697() throws Throwable {
    String string0 = NodeUtil.opToStr(103);
    assertNull(string0);
}",0,
project,0,test666698,"public void test666698() throws Throwable {
    String string0 = NodeUtil.opToStr(104);
    assertNull(string0);
}",0,
project,0,test667699,"public void test667699() throws Throwable {
    String string0 = NodeUtil.opToStr(105);
    assertNull(string0);
}",0,
project,0,test668700,"public void test668700() throws Throwable {
    String string0 = NodeUtil.opToStr(106);
    assertNull(string0);
}",0,
project,0,test669701,"public void test669701() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(107);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 107
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test670702,"public void test670702() throws Throwable {
    String string0 = NodeUtil.opToStr(108);
    assertNull(string0);
}",0,
project,0,test671703,"public void test671703() throws Throwable {
    String string0 = NodeUtil.opToStr(109);
    assertNull(string0);
}",0,
project,0,test672704,"public void test672704() throws Throwable {
    String string0 = NodeUtil.opToStr(110);
    assertNull(string0);
}",0,
project,0,test673705,"public void test673705() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 111: CASE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test674706,"public void test674706() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(112);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 112: DEFAULT_CASE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test675707,"public void test675707() throws Throwable {
    String string0 = NodeUtil.opToStr(113);
    assertNull(string0);
}",0,
project,0,test676708,"public void test676708() throws Throwable {
    String string0 = NodeUtil.opToStr(114);
    assertNull(string0);
}",0,
project,0,test677709,"public void test677709() throws Throwable {
    String string0 = NodeUtil.opToStr(115);
    assertNull(string0);
}",0,
project,0,test678710,"public void test678710() throws Throwable {
    String string0 = NodeUtil.opToStr(116);
    assertNull(string0);
}",0,
project,0,test679711,"public void test679711() throws Throwable {
    String string0 = NodeUtil.opToStr(117);
    assertNull(string0);
}",0,
project,0,test680712,"public void test680712() throws Throwable {
    String string0 = NodeUtil.opToStr(118);
    assertNull(string0);
}",0,
project,0,test681713,"public void test681713() throws Throwable {
    String string0 = NodeUtil.opToStr(119);
    assertNull(string0);
}",0,
project,0,test682714,"public void test682714() throws Throwable {
    String string0 = NodeUtil.opToStr(120);
    assertNull(string0);
}",0,
project,0,test683715,"public void test683715() throws Throwable {
    String string0 = NodeUtil.opToStr(121);
    assertNull(string0);
}",0,
project,0,test684716,"public void test684716() throws Throwable {
    String string0 = NodeUtil.opToStr(122);
    assertEquals(""void"", string0);
}",0,
project,0,test685717,"public void test685717() throws Throwable {
    String string0 = NodeUtil.opToStr(7);
    assertNull(string0);
}",0,
project,0,test686718,"public void test686718() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""infinity"");
    Node node1 = NodeUtil.newVarNode(""checkType"", node0);
    // Undeclared exception!
    try {
        NodeUtil.redeclareVarsInsideBranch(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test687719,"public void test687719() throws Throwable {
    Node node0 = new Node(35, 35, 35);
    NodeUtil.copyNameAnnotations(node0, node0);
    assertNull(node0.getSourceFileName());
}",0,assertNotNull(node0.getSourceFileName())
project,0,test688720,"public void test688720() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(googleCodingConvention0);
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""@\rS8TDI/YY="");
    NodeUtil.getRootOfQualifiedName(node0);
    assertFalse(node0.isGetProp());
}",0,assertTrue(node0.isGetProp())
project,0,test688721,"public void test688721() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(googleCodingConvention0);
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""@\rS8TDI/YY="");
    NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test689722,"public void test689722() throws Throwable {
    Node node0 = new Node(14);
    // Undeclared exception!
    try {
        NodeUtil.getRootOfQualifiedName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test690723,"public void test690723() throws Throwable {
    Node node0 = Node.newString(738, ""T&(Gf3*l{c"", 18, 1425);
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""PROPERTY"", node0);
    assertFalse(node1.hasMoreThanOneChild());
}",0,assertTrue(node1.hasMoreThanOneChild())
project,0,test691724,"public void test691724() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""function"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test692725,"public void test692725() throws Throwable {
    boolean boolean0 = NodeUtil.isValidQualifiedName(""PROPERTY"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test693726,"public void test693726() throws Throwable {
    boolean boolean0 = NodeUtil.isValidQualifiedName(""UTF-16LE."");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test694727,"public void test694727() throws Throwable {
    boolean boolean0 = NodeUtil.isValidQualifiedName("".~]LIvezO*_.`e"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test695728,"public void test695728() throws Throwable {
    boolean boolean0 = NodeUtil.isValidQualifiedName(""j:Q:"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test696729,"public void test696729() throws Throwable {
    Node node0 = new Node(88, 88, 88);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test697730,"public void test697730() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, "">>>="");
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test698731,"public void test698731() throws Throwable {
    Node node0 = new Node((-4935));
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test699732,"public void test699732() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertNull(node1);
}",0,
project,0,test699733,"public void test699733() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test699734,"public void test699734() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test700735,"public void test700735() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    assertEquals(48, Node.DIRECTIVES);
}",0,
project,0,test701736,"public void test701736() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""3"", (Node) null);
    assertEquals(8, Node.FLAG_NO_THROWS);
}",0,
project,0,test702737,"public void test702737() throws Throwable {
    Node node0 = new Node(3);
    Node node1 = NodeUtil.newVarNode(""."", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""."");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test702738,"public void test702738() throws Throwable {
    Node node0 = new Node(3);
    Node node1 = NodeUtil.newVarNode(""."", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""."");
    assertFalse(node0.hasChildren());
}",0,assertFalse(node0.hasChildren())
project,0,test703739,"public void test703739() throws Throwable {
    Node node0 = new Node(151);
    Node node1 = NodeUtil.newVarNode(""Oa{PJ<iJ[:0G"", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""mEw.9s7x!(Y"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test703740,"public void test703740() throws Throwable {
    Node node0 = new Node(151);
    Node node1 = NodeUtil.newVarNode(""Oa{PJ<iJ[:0G"", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""mEw.9s7x!(Y"");
    assertFalse(node0.hasChildren());
}",0,
project,0,test704741,"public void test704741() throws Throwable {
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(63);
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.allResultsMatch(node0, nodeUtil_MatchNodeType0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test705742,"public void test705742() throws Throwable {
    Node node0 = Node.newString(154, "")UCvX{#oj6),g,7i5_"", 154, 154);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    boolean boolean0 = NodeUtil.anyResultsMatch(node0, nodeUtil_MatchDeclaration0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test707744,"public void test707744() throws Throwable {
    Node node0 = new Node(112);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    int int0 = NodeUtil.getCount(node0, nodeUtil_MatchShallowStatement0, nodeUtil_NumbericResultPredicate0);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test708745,"public void test708745() throws Throwable {
    Node node0 = Node.newString(""8B|=1yD;.lXT(FYG"");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""o!k%l5%Ho,?S3t'muH)"", nodeUtil_MatchShallowStatement0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test708746,"public void test708746() throws Throwable {
    Node node0 = Node.newString(""8B|=1yD;.lXT(FYG"");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""o!k%l5%Ho,?S3t'muH)"", nodeUtil_MatchShallowStatement0);
    assertTrue(node1.isVoid());
}",0,assertTrue(node1.isVoid())
project,0,test709747,"public void test709747() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    Node node1 = NodeUtil.newVarNode("".infinity"", node0);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    int int0 = NodeUtil.getCount(node1, predicate0, predicate0);
    assertEquals(3, int0);
}",0,"assertEquals(1, int0)"
project,0,test709748,"public void test709748() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    Node node1 = NodeUtil.newVarNode("".infinity"", node0);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    int int0 = NodeUtil.getCount(node1, predicate0, predicate0);
    assertEquals(119, node1.getCharno());
}",0,
project,0,test710749,"public void test710749() throws Throwable {
    Node node0 = new Node(127, 127, 127);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, nodeUtil_BooleanResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test711750,"public void test711750() throws Throwable {
    Node node0 = new Node(28);
    Node node1 = new Node(52, node0, node0, node0, node0, 50, 1);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node1, (NodeUtil.Visitor) null, predicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test712751,"public void test712751() throws Throwable {
    Node node0 = Node.newString(""-&<&"");
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    boolean boolean0 = NodeUtil.isConstantByConvention(googleCodingConvention0, node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test713752,"public void test713752() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""_Vg'G\u0005-XxY5s$"");
    Compiler compiler0 = new Compiler();
    Node node0 = syntheticAst0.getAstRoot(compiler0);
    PeepholeFoldWithTypes peepholeFoldWithTypes0 = new PeepholeFoldWithTypes();
    // Undeclared exception!
    try {
        peepholeFoldWithTypes0.error(compiler0.MOTION_ITERATIONS_ERROR, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.AbstractPeepholeOptimization"", e);
    }
}",0,
project,0,test714753,"public void test714753() throws Throwable {
    Node node0 = new Node(22);
    String string0 = NodeUtil.getSourceName(node0);
    assertNull(string0);
}",0,
project,0,test715754,"public void test715754() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""v>>@cg"", ""E"");
    StaticSourceFile staticSourceFile0 = NodeUtil.getSourceFile(node0);
    assertEquals(""[testcode]"", staticSourceFile0.getName());
}",0,assertNotNull(staticSourceFile0.getName())
project,0,test716755,"public void test716755() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    NodeUtil.getSourceFile(node0);
    assertTrue(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test716756,"public void test716756() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    NodeUtil.getSourceFile(node0);
    assertEquals(44, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test717757,"public void test717757() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "".%"");
    NodeUtil.getInputId(node0);
    assertTrue(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test717758,"public void test717758() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "".%"");
    NodeUtil.getInputId(node0);
    assertTrue(node0.hasChildren());
}",0,assertFalse(node0.hasChildren())
project,0,test718759,"public void test718759() throws Throwable {
    Node node0 = new Node((-971));
    Node[] nodeArray0 = new Node[1];
    // Undeclared exception!
    try {
        NodeUtil.newCallNode(node0, nodeArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test719760,"public void test719760() throws Throwable {
    Node node0 = new Node(31);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, compilerOptions0.sourceMapDetailLevel);
    assertTrue(boolean0);
}",0,
project,0,test720761,"public void test720761() throws Throwable {
    Node node0 = new Node(32, 1436, 37);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test721762,"public void test721762() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(node0.hasMoreThanOneChild());
}",0,assertFalse(node0.hasMoreThanOneChild())
project,0,test721763,"public void test721763() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test722764,"public void test722764() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(35, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test722765,"public void test722765() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(35, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertEquals(43, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test723766,"public void test723766() throws Throwable {
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    Node node0 = Node.newString(45, ""6wY"", 45, 1966);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, predicate0);
    assertTrue(boolean0);
}",0,
project,0,test724767,"public void test724767() throws Throwable {
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    Node node0 = Node.newString(47, ""6wY"", 3, 62);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, predicate0);
    assertTrue(boolean0);
}",0,
project,0,test725768,"public void test725768() throws Throwable {
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(51);
    Node node0 = new Node(51);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
    assertTrue(boolean0);
}",0,
project,0,test726769,"public void test726769() throws Throwable {
    Node node0 = new Node(52, (-804), 52);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test727770,"public void test727770() throws Throwable {
    Node node0 = new Node(53);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 53
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test728771,"public void test728771() throws Throwable {
    Node node0 = new Node(54, 55, (-1536));
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 54
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test729772,"public void test729772() throws Throwable {
    Node node0 = new Node(55, 55, 55);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 55
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test730773,"public void test730773() throws Throwable {
    Node node0 = new Node(59);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 59
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test731774,"public void test731774() throws Throwable {
    Node node0 = Node.newString(61, ""/="", 61, 61);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, predicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 61
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test732775,"public void test732775() throws Throwable {
    Node node0 = new Node(62);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 62
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test733776,"public void test733776() throws Throwable {
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test734777,"public void test734777() throws Throwable {
    Node node0 = new Node(64, 111, 94);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test735778,"public void test735778() throws Throwable {
    Node node0 = new Node(66, 66, 66);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, predicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 66
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test736779,"public void test736779() throws Throwable {
    Node node0 = new Node(68, 68, 68);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 68
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test737780,"public void test737780() throws Throwable {
    Node node0 = new Node(69);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 69
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test738781,"public void test738781() throws Throwable {
    Node node0 = new Node(70);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 70
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test739782,"public void test739782() throws Throwable {
    Node node0 = new Node(72, 72, (-139));
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 72
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test740783,"public void test740783() throws Throwable {
    Node node0 = new Node(80);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 80
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test741784,"public void test741784() throws Throwable {
    Node node0 = new Node(82);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 82
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test742785,"public void test742785() throws Throwable {
    Node node0 = new Node(84);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, predicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 84
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test743786,"public void test743786() throws Throwable {
    Node node0 = new Node(85);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test744787,"public void test744787() throws Throwable {
    Node node0 = new Node(86);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, compilerOptions0.sourceMapDetailLevel);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test745788,"public void test745788() throws Throwable {
    Node node0 = new Node(87, 87, 87);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test746789,"public void test746789() throws Throwable {
    Node node0 = new Node(88);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test747790,"public void test747790() throws Throwable {
    Node node0 = new Node(90);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test748791,"public void test748791() throws Throwable {
    Node node0 = new Node(91);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test749792,"public void test749792() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    node0.setType(92);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test750793,"public void test750793() throws Throwable {
    Node node0 = new Node(96, 96, 96);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test751794,"public void test751794() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test752795,"public void test752795() throws Throwable {
    Node node0 = new Node(99, 99, 99);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 99
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test753796,"public void test753796() throws Throwable {
    Node node0 = new Node(101);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test754797,"public void test754797() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test755798,"public void test755798() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test756799,"public void test756799() throws Throwable {
    Node node0 = new Node(105);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test757800,"public void test757800() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""p"", node0);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, predicate0);
    assertEquals(43, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test757801,"public void test757801() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""p"", node0);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, predicate0);
    assertTrue(boolean0);
}",0,
project,0,test758802,"public void test758802() throws Throwable {
    Node node0 = new Node(30);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertFalse(boolean0)
project,0,test759803,"public void test759803() throws Throwable {
    Node node0 = new Node(3812, 3812, (-613));
    node0.addSuppression(""$\""QjR(}5jt@%1"");
    JSDocInfo jSDocInfo0 = NodeUtil.getBestJSDocInfo(node0);
    assertNull(jSDocInfo0.getSourceName());
}",0,assertNotNull(jSDocInfo0.getSourceName())
project,0,test760804,"public void test760804() throws Throwable {
    Node node0 = new Node(32, 2365, 2365);
    JSDocInfo jSDocInfo0 = NodeUtil.getBestJSDocInfo(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test761805,"public void test761805() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(35, node0, node0, node0, node0);
    NodeUtil.getBestJSDocInfo(node0);
    assertFalse(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test761806,"public void test761806() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(35, node0, node0, node0, node0);
    NodeUtil.getBestJSDocInfo(node0);
    assertEquals(43, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test762807,"public void test762807() throws Throwable {
    Node node0 = new Node((-1687));
    NodeUtil.newVarNode(""Y"", node0);
    NodeUtil.getBestJSDocInfo(node0);
    assertFalse(node0.hasOneChild());
}",0,assertFalse(node0.hasOneChild())
project,0,test762808,"public void test762808() throws Throwable {
    Node node0 = new Node((-1687));
    NodeUtil.newVarNode(""Y"", node0);
    NodeUtil.getBestJSDocInfo(node0);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test763809,"public void test763809() throws Throwable {
    Node node0 = new Node(91);
    Node node1 = new Node(105, node0, node0, 46, 48);
    JSDocInfo jSDocInfo0 = NodeUtil.getBestJSDocInfo(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test764810,"public void test764810() throws Throwable {
    Node node0 = new Node(139);
    Node node1 = new Node(125, node0, node0, node0);
    Node node2 = NodeUtil.getBestLValue(node0);
    assertNull(node2);
}",0,"assertEquals(node1, node2)"
project,0,test765811,"public void test765811() throws Throwable {
    Node node0 = new Node(127, 127, 127);
    Node node1 = new Node(12, node0, 44, 44);
    Node node2 = NodeUtil.getRValueOfLValue(node0);
    assertNull(node2);
}",0,
project,0,test766812,"public void test766812() throws Throwable {
    Node node0 = NodeUtil.getBestLValueOwner((Node) null);
    assertNull(node0);
}",0,
project,0,test767813,"public void test767813() throws Throwable {
    Node node0 = new Node(98);
    Node node1 = NodeUtil.getBestLValueOwner(node0);
    assertNull(node1);
}",0,
project,0,test768814,"public void test768814() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = new Node(0, node0, node0, node0, node0);
    NodeUtil.getBestLValueOwner(node0);
    assertEquals(44, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test768815,"public void test768815() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = new Node(0, node0, node0, node0, node0);
    NodeUtil.getBestLValueOwner(node0);
    assertFalse(node0.isFalse());
}",0,assertTrue(node0.isFalse())
project,0,test769816,"public void test769816() throws Throwable {
    String string0 = NodeUtil.getBestLValueName((Node) null);
    assertNull(string0);
}",0,
project,0,test770817,"public void test770817() throws Throwable {
    Node node0 = new Node(88, 88, 88);
    String string0 = NodeUtil.getBestLValueName(node0);
    assertNull(string0);
}",0,
project,0,test771818,"public void test771818() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    Node node1 = new Node(26, node0, node0, node0, node0, 48, 4095);
    String string0 = NodeUtil.getBestLValueName(node0);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test772819,"public void test772819() throws Throwable {
    Node node0 = new Node(88, 88, 88);
    Node node1 = new Node(55, node0, node0);
    boolean boolean0 = NodeUtil.isExpressionResultUsed(node0);
    assertTrue(boolean0);
}",0,
project,0,test773820,"public void test773820() throws Throwable {
    Node node0 = new Node(98, 98, 98);
    NodeUtil.newExpr(node0);
    // Undeclared exception!
    try {
        NodeUtil.isExecutedExactlyOnce(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test775821,"public void test775821() throws Throwable {
    Node node0 = new Node(105);
    node0.addChildToFront(node0);
    boolean boolean0 = NodeUtil.isExecutedExactlyOnce(node0);
    assertTrue(boolean0);
}",0,
project,0,test776822,"public void test776822() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    JSType[] jSTypeArray0 = new JSType[0];
    Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
    Node node1 = NodeUtil.numberNode(Double.NEGATIVE_INFINITY, node0);
    assertEquals(29, node1.getType());
}",0,
project,0,test777823,"public void test777823() throws Throwable {
    Node node0 = new Node(98);
    Node node1 = NodeUtil.numberNode(Double.NaN, node0);
    assertEquals(38, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test778824,"public void test778824() throws Throwable {
    Node node0 = NodeUtil.numberNode(Double.POSITIVE_INFINITY, (Node) null);
    assertFalse(node0.isNumber());
}",0,assertTrue(node0.isNumber())
project,0,test778825,"public void test778825() throws Throwable {
    Node node0 = NodeUtil.numberNode(Double.POSITIVE_INFINITY, (Node) null);
    assertNotNull(node0);
}",0,
project,0,test779826,"public void test779826() throws Throwable {
    Node node0 = Node.newString(""&%HC^\""wA:p"", 15, 9);
    Node node1 = NodeUtil.numberNode(9, node0);
    assertTrue(node1.isNumber());
}",0,assertTrue(node1.isNumber())
project,0,test779827,"public void test779827() throws Throwable {
    Node node0 = Node.newString(""&%HC^\""wA:p"", 15, 9);
    Node node1 = NodeUtil.numberNode(9, node0);
    assertEquals(9, node1.getCharno());
}",0,"assertEquals(0, node1.getCharno())"
