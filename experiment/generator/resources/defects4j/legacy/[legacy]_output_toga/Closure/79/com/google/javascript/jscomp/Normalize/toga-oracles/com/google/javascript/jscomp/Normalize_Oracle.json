[ {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "static Node getBoilerplateCode(AbstractCompiler compiler, @Nullable String logFunction)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node0.getCharno())",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test044"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test055"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public boolean isOnlyModifiesThisCall()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isOnlyModifiesThisCall())",
  "exception" : "",
  "testName" : "test088"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test099"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public boolean isVarArgs()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node0.isVarArgs())",
  "exception" : "",
  "testName" : "test1010"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1111"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public int getSideEffectFlags()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node0.getSideEffectFlags())",
  "exception" : "",
  "testName" : "test1212"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public boolean isUnscopedQualifiedName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node0.isUnscopedQualifiedName())",
  "exception" : "",
  "testName" : "test1313"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1414"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1515"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "static Node parseAndNormalizeTestCode(AbstractCompiler compiler, String code, String prefix)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1616"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1717"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1818"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1919"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2020"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2121"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test2222"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node1.getChildCount())",
  "exception" : "",
  "testName" : "test2223"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2324"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public int getLineno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2425"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node1.getChildCount())",
  "exception" : "",
  "testName" : "test2426"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.hasOneChild())",
  "exception" : "",
  "testName" : "test2427"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node1.getChildCount())",
  "exception" : "",
  "testName" : "test2528"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2529"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test2530"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2631"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node1.getChildCount())",
  "exception" : "",
  "testName" : "test2732"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node1.getCharno())",
  "exception" : "",
  "testName" : "test2733"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public int getLineno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2734"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.hasChildren())",
  "exception" : "",
  "testName" : "test2835"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node1.getChildCount())",
  "exception" : "",
  "testName" : "test2836"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test2837"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node1.getCharno())",
  "exception" : "",
  "testName" : "test2938"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2939"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node0.hasChildren())",
  "exception" : "",
  "testName" : "test2940"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node1.getChildCount())",
  "exception" : "",
  "testName" : "test3041"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node0.hasOneChild())",
  "exception" : "",
  "testName" : "test3042"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public int getLineno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3043"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node1.getCharno())",
  "exception" : "",
  "testName" : "test3044"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3145"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3246"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3347"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test3448"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.hasOneChild())",
  "exception" : "",
  "testName" : "test3449"
}, {
  "className" : "com.google.javascript.jscomp.Normalize",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3550"
} ]