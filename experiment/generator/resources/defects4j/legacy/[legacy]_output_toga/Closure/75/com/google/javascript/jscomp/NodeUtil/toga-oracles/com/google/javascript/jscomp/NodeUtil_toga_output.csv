project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0011,"public void test0011() throws Throwable {
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    Node node0 = Node.newNumber((double) 1021, 1021, 1021);
    boolean boolean0 = NodeUtil.has(node0, nodeUtil_MatchDeclaration0, nodeUtil_MatchDeclaration0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0022,"public void test0022() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(82, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test0023,"public void test0023() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test0024,"public void test0024() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(1905, node0.getLineno());
}",0,
project,0,test0035,"public void test0035() throws Throwable {
    Node node0 = new Node(58, 58, 58);
    boolean boolean0 = NodeUtil.containsFunction(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0046,"public void test0046() throws Throwable {
    Node node0 = Node.newNumber(33.2116);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForCallOrNew(node0, 0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test0057,"public void test0057() throws Throwable {
    Node node0 = Node.newString(21, ""mMxI/6~"", 21, 21);
    // Undeclared exception!
    try {
        NodeUtil.mayBeString(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test0068,"public void test0068() throws Throwable {
    Node node0 = Node.newNumber((double) 114);
    boolean boolean0 = NodeUtil.isSimpleFunctionObjectCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0079,"public void test0079() throws Throwable {
    Node node0 = new Node(87);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test00810,"public void test00810() throws Throwable {
    Node node0 = Node.newString(""QCP'=+2.zp,D3"");
    // Undeclared exception!
    try {
        NodeUtil.getPrototypePropertyName(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test00911,"public void test00911() throws Throwable {
    Node node0 = new Node(87);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test01012,"public void test01012() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,
project,0,test01113,"public void test01113() throws Throwable {
    Node node0 = new Node(116, 116, 116);
    // Undeclared exception!
    try {
        NodeUtil.functionCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected CALL node, got BREAK
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01214,"public void test01214() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    // Undeclared exception!
    try {
        NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, ""infinity"", (Node) null, ""q{&T!UNd()9gNj{I"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test01315,"public void test01315() throws Throwable {
    Node node0 = Node.newString(""N@L'Nfb6Q\""^"");
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForFunction(node0, 4095);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test01416,"public void test01416() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""cWK"", 561, 561);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""cWK"", node0, ""cWK"");
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test01417,"public void test01417() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""cWK"", 561, 561);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""cWK"", node0, ""cWK"");
    assertNotSame(node1, node0);
}",0,
project,0,test01418,"public void test01418() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""cWK"", 561, 561);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""cWK"", node0, ""cWK"");
    assertEquals(561, node0.getLineno());
}",0,
project,0,test01419,"public void test01419() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""cWK"", 561, 561);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""cWK"", node0, ""cWK"");
    assertEquals(561, node1.getCharno());
}",0,
project,0,test01420,"public void test01420() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""cWK"", 561, 561);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""cWK"", node0, ""cWK"");
    assertTrue(node1.isUnscopedQualifiedName());
}",0,assertFalse(node1.isUnscopedQualifiedName())
project,0,test01521,"public void test01521() throws Throwable {
    Node node0 = new Node(120);
    // Undeclared exception!
    try {
        NodeUtil.isVarArgsFunction(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test01622,"public void test01622() throws Throwable {
    Node node0 = new Node(117);
    int int0 = NodeUtil.getNameReferenceCount(node0, (String) null);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test01723,"public void test01723() throws Throwable {
    Node node0 = new Node(68);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionBody(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test01824,"public void test01824() throws Throwable {
    Node node0 = new Node(71);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLATTR
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01925,"public void test01925() throws Throwable {
    Node node0 = new Node(147);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test01926,"public void test01926() throws Throwable {
    Node node0 = new Node(147);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(130, node1.getType());
}",0,
project,0,test02027,"public void test02027() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""cW$"", ""cW$"");
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test02128,"public void test02128() throws Throwable {
    Node node0 = Node.newString(129, ""`=(kWsmx.ih>"", 129, 110);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02629,"public void test02629() throws Throwable {
    Node node0 = new Node(86);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02730,"public void test02730() throws Throwable {
    Node node0 = new Node(98, 98, 98);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02831,"public void test02831() throws Throwable {
    Node node0 = Node.newString(100, ""&"");
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02932,"public void test02932() throws Throwable {
    Node node0 = Node.newString("".prototype"");
    node0.setType(101);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test03133,"public void test03133() throws Throwable {
    LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
    Logger logger0 = Logger.getLogger(""undefined"");
    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(lightweightMessageFormatter0, logger0);
    Compiler compiler0 = new Compiler(loggerErrorManager0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""undefined"", 8233, 8233);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test03134,"public void test03134() throws Throwable {
    LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
    Logger logger0 = Logger.getLogger(""undefined"");
    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(lightweightMessageFormatter0, logger0);
    Compiler compiler0 = new Compiler(loggerErrorManager0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""undefined"", 8233, 8233);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(8233, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test04035,"public void test04035() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""Undefined"", 35, 35);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(35, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test04036,"public void test04036() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""Undefined"", 35, 35);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04037,"public void test04037() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""Undefined"", 35, 35);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(35, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test04138,"public void test04138() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 122, 1045);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(1045, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test04139,"public void test04139() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 122, 1045);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04140,"public void test04140() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 122, 1045);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(122, node0.getLineno());
}",0,
project,0,test04341,"public void test04341() throws Throwable {
    Node node0 = new Node(43);
    Node node1 = new Node(26, node0, 5, 18);
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(""true"", string0);
}",0,
project,0,test04342,"public void test04342() throws Throwable {
    Node node0 = new Node(43);
    Node node1 = new Node(26, node0, 5, 18);
    String string0 = NodeUtil.getStringValue(node1);
    assertNotNull(string0);
}",0,
project,0,test04443,"public void test04443() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(119, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test04444,"public void test04444() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(119, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test04445,"public void test04445() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(38, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test04446,"public void test04446() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    String string0 = NodeUtil.arrayToString(node1);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test04447,"public void test04447() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    String string0 = NodeUtil.arrayToString(node1);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,assertFalse(node0.isUnscopedQualifiedName())
project,0,test04548,"public void test04548() throws Throwable {
    Node node0 = Node.newNumber((-1829.131));
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""-1829.131"", string0);
}",0,
project,0,test04649,"public void test04649() throws Throwable {
    Node node0 = Node.newString(""yIqGgn+u-yP{)=6vt(:"");
    Node node1 = new Node(2, node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertNotNull(string0);
}",0,
project,0,test04650,"public void test04650() throws Throwable {
    Node node0 = Node.newString(""yIqGgn+u-yP{)=6vt(:"");
    Node node1 = new Node(2, node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(""yIqGgn+u-yP{)=6vt(:"", string0);
}",0,
project,0,test04751,"public void test04751() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""false"", string0);
}",0,
project,0,test04852,"public void test04852() throws Throwable {
    Node node0 = new Node(59);
    Node node1 = new Node(44, node0, 4, 74);
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(""true"", string0);
}",0,
project,0,test04953,"public void test04953() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test04954,"public void test04954() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",0,
project,0,test05055,"public void test05055() throws Throwable {
    Node node0 = Node.newNumber(2236.1222158928294);
    Node node1 = new Node(122, node0, 27, (-2416));
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(""undefined"", string0);
}",0,
project,0,test05156,"public void test05156() throws Throwable {
    Node node0 = Node.newString(147, ""vL.rxg5N"");
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertNull(string0);
}",0,
project,0,test05257,"public void test05257() throws Throwable {
    Node node0 = Node.newNumber((double) 30, 30, 30);
    String string0 = NodeUtil.getObjectLitKeyName(node0);
    assertEquals(""30"", string0);
}",0,
project,0,test05358,"public void test05358() throws Throwable {
    Node node0 = new Node(43);
    Node node1 = new Node(26, node0, 5, 18);
    node0.setType(8);
    String string0 = NodeUtil.getStringValue(node1);
    assertNull(string0);
}",0,
project,0,test05459,"public void test05459() throws Throwable {
    Node node0 = Node.newNumber(2236.1222158928294);
    Node node1 = new Node(122, node0, 27, (-2416));
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test05560,"public void test05560() throws Throwable {
    Node node0 = Node.newString(124, ""+infinity"", 255, 46);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals("""", string0);
}",0,
project,0,test05661,"public void test05661() throws Throwable {
    Node node0 = new Node(60, 60, 60);
    Node node1 = new Node(26, node0, 5, 18);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNull(double0);
}",1,
project,0,test05762,"public void test05762() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""R5,&X"", 72, 72);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",1,
project,0,test05763,"public void test05763() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""R5,&X"", 72, 72);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(72, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test05764,"public void test05764() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""R5,&X"", 72, 72);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test05765,"public void test05765() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""R5,&X"", 72, 72);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0, node0.getSideEffectFlags());
}",0,"assertEquals(0, node0.getSideEffectFlags())"
project,0,test05766,"public void test05766() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""R5,&X"", 72, 72);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(72, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test05867,"public void test05867() throws Throwable {
    Node node0 = Node.newNumber(53.0);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(53.0, (double) double0, 0.01);
}",0,
project,0,test05968,"public void test05968() throws Throwable {
    Node node0 = Node.newString(""0rs,+;cJMb"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",0,
project,0,test05969,"public void test05969() throws Throwable {
    Node node0 = Node.newString(""0rs,+;cJMb"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test06070,"public void test06070() throws Throwable {
    Node[] nodeArray0 = new Node[0];
    Node node0 = new Node(41, nodeArray0);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test06171,"public void test06171() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test06272,"public void test06272() throws Throwable {
    Node node0 = Node.newString(63, ""lkj{"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",1,
project,0,test06373,"public void test06373() throws Throwable {
    Node node0 = Node.newNumber(2236.1222158928294);
    Node node1 = new Node(122, node0, 27, (-2416));
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNotNull(double0);
}",0,
project,0,test06374,"public void test06374() throws Throwable {
    Node node0 = Node.newNumber(2236.1222158928294);
    Node node1 = new Node(122, node0, 27, (-2416));
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test06475,"public void test06475() throws Throwable {
    Node node0 = Node.newString(1861, ""printNameReferenceGraph"", 1861, 1861);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test06576,"public void test06576() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    Node node1 = new Node(26, node0, 5, 18);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(1.0, (double) double0, 0.01);
}",1,
project,0,test06677,"public void test06677() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""+aIE"");
    assertNotNull(double0);
}",1,
project,0,test06678,"public void test06678() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""+aIE"");
    assertEquals(Double.NaN, (double) double0, 0.01);
}",1,
project,0,test06779,"public void test06779() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""infinity"");
    assertNull(double0);
}",0,
project,0,test06880,"public void test06880() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""-infinity"");
    assertNull(double0);
}",0,
project,0,test06981,"public void test06981() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue("")\n"");
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test06982,"public void test06982() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue("")\n"");
    assertNotNull(double0);
}",0,
project,0,test07083,"public void test07083() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue("" {G=rUuEGD"");
    assertNotNull(double0);
}",1,
project,0,test07084,"public void test07084() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue("" {G=rUuEGD"");
    assertEquals(Double.NaN, (double) double0, 0.01);
}",1,
project,0,test07885,"public void test07885() throws Throwable {
    Node node0 = new Node(43);
    Node node1 = new Node(26, node0, 5, 18);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, true);
    assertTrue(boolean0);
}",0,
project,0,test07986,"public void test07986() throws Throwable {
    Node node0 = new Node(77);
    Node node1 = new Node(29, node0, node0, node0, 1, (-1));
    boolean boolean0 = NodeUtil.isImmutableValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test08087,"public void test08087() throws Throwable {
    Node node0 = Node.newString(95, ""Kz+$"", 136, 136);
    Node node1 = Node.newNumber((double) 13, 42, 4);
    node0.addChildToFront(node1);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test08188,"public void test08188() throws Throwable {
    Node node0 = Node.newString(""destructuring assignment forbidden"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test08289,"public void test08289() throws Throwable {
    Node node0 = Node.newString(41, "".prototype"");
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test08390,"public void test08390() throws Throwable {
    Node node0 = new Node(44);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test08491,"public void test08491() throws Throwable {
    Node node0 = Node.newString(30, "".rhototype"", 30, (-1));
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.isImmutableValue(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test08592,"public void test08592() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 45, 2);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test08593,"public void test08593() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 45, 2);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertEquals(2, node0.getCharno());
}",0,
project,0,test08594,"public void test08594() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 45, 2);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertEquals(45, node0.getLineno());
}",0,
project,0,test08595,"public void test08595() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 45, 2);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test08696,"public void test08696() throws Throwable {
    Node node0 = Node.newString(64, ""2&pYg?i];Q ]Crg`MP"");
    boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
    assertTrue(boolean0);
}",0,
project,0,test08797,"public void test08797() throws Throwable {
    Node node0 = Node.newString(""cWK"");
    node0.setType(105);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertFalse(boolean0);
}",0,
project,0,test08898,"public void test08898() throws Throwable {
    Node node0 = Node.newString(""o/RYYa}^W\""T;iVBo"");
    node0.setType(105);
    // Undeclared exception!
    try {
        NodeUtil.isLiteralValue(node0, true);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test08999,"public void test08999() throws Throwable {
    Node node0 = Node.newString(9, ""Y\""PSRTVh.rHLE"", 708, 9);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test090100,"public void test090100() throws Throwable {
    Node node0 = Node.newString(""i6|I:I-.Ez_Jq"");
    Node node1 = new Node(10, node0, node0);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, (Set<String>) null);
    assertTrue(boolean0);
}",0,
project,0,test091101,"public void test091101() throws Throwable {
    Node node0 = new Node(131);
    Node node1 = new Node(11, node0, node0);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test092102,"public void test092102() throws Throwable {
    Node node0 = Node.newString(""Unknown precedence for "");
    Node node1 = new Node(12, node0, node0);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test093103,"public void test093103() throws Throwable {
    Node node0 = Node.newString(13, ""null symbol name"", 19, 132);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test094104,"public void test094104() throws Throwable {
    Node node0 = Node.newString(""E"");
    Node node1 = new Node(15, node0, node0);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test095105,"public void test095105() throws Throwable {
    Node node0 = Node.newString((-1058), """");
    Node node1 = new Node(16, node0, node0);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test096106,"public void test096106() throws Throwable {
    Node node0 = new Node(17);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test097107,"public void test097107() throws Throwable {
    Node node0 = new Node(19);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test098108,"public void test098108() throws Throwable {
    Node node0 = Node.newString(20, "".prototype"");
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test099109,"public void test099109() throws Throwable {
    Node node0 = new Node(50);
    Node node1 = new Node(21, node0, node0);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test100110,"public void test100110() throws Throwable {
    Node node0 = Node.newString(22, "".prototype"", 22, (-22));
    Locale locale0 = Locale.KOREA;
    Set<String> set0 = locale0.getUnicodeLocaleAttributes();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, set0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test101111,"public void test101111() throws Throwable {
    Node node0 = new Node(23);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, linkedHashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test102112,"public void test102112() throws Throwable {
    Node node0 = Node.newString(24, "".prototype"", 24, (-39));
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test103113,"public void test103113() throws Throwable {
    Node node0 = Node.newString("">jC"");
    Node node1 = new Node(25, node0, node0);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test104114,"public void test104114() throws Throwable {
    Node node0 = new Node(43);
    Node node1 = new Node(26, node0, 5, 18);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertTrue(boolean0);
}",0,
project,0,test105115,"public void test105115() throws Throwable {
    Node node0 = Node.newString(""24ac/Ln"");
    node0.setType(27);
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test106116,"public void test106116() throws Throwable {
    Node node0 = Node.newString(""i/j$mPXo"");
    Node node1 = new Node(29, node0, node0);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test107117,"public void test107117() throws Throwable {
    Node node0 = Node.newString(30, ""// In7ut %num%"", 30, 30);
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test108118,"public void test108118() throws Throwable {
    Node node0 = Node.newString(31, ""com.google.javascript.rhino.jstype.NumberType"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test109119,"public void test109119() throws Throwable {
    Node node0 = Node.newString(32, ""`(kWsmx.ih>"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test110120,"public void test110120() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertEquals(30, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test110121,"public void test110121() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test110122,"public void test110122() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertEquals(24, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test110123,"public void test110123() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test110124,"public void test110124() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test111125,"public void test111125() throws Throwable {
    Node node0 = Node.newString(""[zMVAP0;eSQ5`$G"");
    Node node1 = new Node(34, node0);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test112126,"public void test112126() throws Throwable {
    Node node0 = Node.newString(35, ""Xr$E"");
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test113127,"public void test113127() throws Throwable {
    Node node0 = Node.newString(37, ""(au"");
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test114128,"public void test114128() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertEquals(55, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test114129,"public void test114129() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test114130,"public void test114130() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertEquals(55, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test114131,"public void test114131() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test115132,"public void test115132() throws Throwable {
    Node node0 = Node.newNumber((double) 13, 42, 4);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test116133,"public void test116133() throws Throwable {
    Node node0 = Node.newString(38, ""`(kWsmx.ih>"");
    Node node1 = new Node(41, node0, node0, node0, node0, 0, 44);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethods;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test117134,"public void test117134() throws Throwable {
    Node node0 = Node.newString(116, ""lprototype"", 116, 116);
    node0.setType(42);
    Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
    assertFalse(boolean0);
}",0,
project,0,test118135,"public void test118135() throws Throwable {
    Node node0 = Node.newString(44, ""ei/l;;+!"", 59, 28);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertTrue(boolean0);
}",0,
project,0,test119136,"public void test119136() throws Throwable {
    Node node0 = Node.newString(45, "".prototype"", 45, (-1422));
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test120137,"public void test120137() throws Throwable {
    Node node0 = Node.newString(46, ""WtK"", 3, 1);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test121138,"public void test121138() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    linkedHashSet0.add(""_3Db2~s"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertEquals(55, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test121139,"public void test121139() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    linkedHashSet0.add(""_3Db2~s"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertEquals(55, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test121140,"public void test121140() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    linkedHashSet0.add(""_3Db2~s"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test122141,"public void test122141() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""$F/)3x.Q&HRB.Pj\"""");
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test123142,"public void test123142() throws Throwable {
    Node node0 = Node.newString(118, ""Shift amount out of bounds: {0}"", 118, 118);
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test124143,"public void test124143() throws Throwable {
    Node node0 = Node.newString(9, "" does not have a condition."", 2421, 2421);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test125144,"public void test125144() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test126145,"public void test126145() throws Throwable {
    Node node0 = new Node(11);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test127146,"public void test127146() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(13);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test128147,"public void test128147() throws Throwable {
    Node node0 = Node.newString(14, ""`=(kWsmx.ih>"");
    boolean boolean0 = NodeUtil.isSimpleOperator(node0);
    assertTrue(boolean0);
}",0,
project,0,test129148,"public void test129148() throws Throwable {
    Node node0 = Node.newString(""E"");
    Node node1 = new Node(15, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test130149,"public void test130149() throws Throwable {
    Node node0 = new Node(16);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test131150,"public void test131150() throws Throwable {
    Node node0 = new Node(17, 17, 17);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test132151,"public void test132151() throws Throwable {
    Node node0 = new Node(18);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test133152,"public void test133152() throws Throwable {
    Node node0 = new Node(19, 19, 19);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test134153,"public void test134153() throws Throwable {
    Node node0 = Node.newString(20, ""// In7ut %num%"", 20, 20);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test135154,"public void test135154() throws Throwable {
    Node node0 = Node.newString(21, "".prototype"", 21, 1858);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test136155,"public void test136155() throws Throwable {
    Node node0 = Node.newString(22, "".prototype"", 22, 22);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test137156,"public void test137156() throws Throwable {
    Node node0 = new Node(23);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test138157,"public void test138157() throws Throwable {
    Node node0 = Node.newString(24, "".prototype"", 24, 24);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test139158,"public void test139158() throws Throwable {
    Node node0 = new Node(25);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test140159,"public void test140159() throws Throwable {
    Node node0 = new Node(26, 26, 26);
    boolean boolean0 = NodeUtil.isSimpleOperator(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test141160,"public void test141160() throws Throwable {
    Node node0 = Node.newString(""o/RYYa}^W\""T;iVBo"");
    node0.setType(27);
    boolean boolean0 = NodeUtil.isSimpleOperator(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test142161,"public void test142161() throws Throwable {
    Node node0 = new Node(28);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test143162,"public void test143162() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""cW$"", ""cW$"");
    Node node1 = new Node(29, node0, 47, 19);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test144163,"public void test144163() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(30);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test145164,"public void test145164() throws Throwable {
    Node node0 = new Node(31, 15, 38);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test146165,"public void test146165() throws Throwable {
    Node node0 = new Node(32, 32, 32);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test147166,"public void test147166() throws Throwable {
    Node node0 = new Node(33);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test148167,"public void test148167() throws Throwable {
    Node node0 = Node.newString(""[zMVP0;eSQ5`$G"");
    Node node1 = new Node(34, node0);
    Node node2 = node1.cloneTree();
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node2);
    assertTrue(boolean0);
}",1,
project,0,test149168,"public void test149168() throws Throwable {
    Node node0 = Node.newString(110, ""\""WY4)j5430RgaVE"");
    Node node1 = new Node(35, node0, 38, 40);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test150169,"public void test150169() throws Throwable {
    Node node0 = new Node(36);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test151170,"public void test151170() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(37);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test152171,"public void test152171() throws Throwable {
    Node node0 = Node.newString(38, ""`(kWsmx.ih>"", 38, 38);
    boolean boolean0 = NodeUtil.isSimpleOperator(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test153172,"public void test153172() throws Throwable {
    Node node0 = Node.newNumber(2228.2115593881085);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,
project,0,test154173,"public void test154173() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(42);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test155174,"public void test155174() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test156175,"public void test156175() throws Throwable {
    Node node0 = Node.newString(45, ""||"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,
project,0,test157176,"public void test157176() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, (Predicate<Node>) null);
    assertTrue(boolean0);
}",0,
project,0,test158177,"public void test158177() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(47);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test159178,"public void test159178() throws Throwable {
    Node node0 = new Node(48);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test160179,"public void test160179() throws Throwable {
    Node node0 = Node.newString(49, ""-infinity"", (-331), 33);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHROW -infinity
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test161180,"public void test161180() throws Throwable {
    Node node0 = new Node(50);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRETHROW
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test162181,"public void test162181() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(51);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test163182,"public void test163182() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(52);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test164183,"public void test164183() throws Throwable {
    Node node0 = new Node(53, 53, 53);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLOCAL_LOAD 53
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test165184,"public void test165184() throws Throwable {
    Node node0 = Node.newString(32, ""`(kWsmx.ih>"");
    node0.setType(54);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeGETVAR `(kWsmx.ih>
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test166185,"public void test166185() throws Throwable {
    Node node0 = new Node(55, 55, 55);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETVAR 55
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test167186,"public void test167186() throws Throwable {
    Node node0 = new Node(56, 56, 56);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCATCH_SCOPE 56
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test168187,"public void test168187() throws Throwable {
    Node node0 = new Node(57, 57, 57);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test169188,"public void test169188() throws Throwable {
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    Node node0 = Node.newString(58, ""arguments"", 901, 1);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_INIT_VALUES arguments 901
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test170189,"public void test170189() throws Throwable {
    Node node0 = new Node(59, 59, 59);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_NEXT 59
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test171190,"public void test171190() throws Throwable {
    Node node0 = Node.newString(60, ""valueOf"");
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_ID valueOf
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test172191,"public void test172191() throws Throwable {
    Node node0 = Node.newString(38, ""`=(kWsmx.ih>"", 38, 38);
    node0.setType(62);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRETURN_RESULT `=(kWsmx.ih> 38
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test173192,"public void test173192() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(63);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test174193,"public void test174193() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(64);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test175194,"public void test175194() throws Throwable {
    Node node0 = Node.newString(65, ""clear"", 591, 591);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeGET_REF clear 591
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test176195,"public void test176195() throws Throwable {
    Node node0 = new Node(66);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSET_REF
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test177196,"public void test177196() throws Throwable {
    Node node0 = new Node(67, 67, 67);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEL_REF 67
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test178197,"public void test178197() throws Throwable {
    Node node0 = new Node(68);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_CALL
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test179198,"public void test179198() throws Throwable {
    Node node0 = new Node(69);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_SPECIAL
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test180199,"public void test180199() throws Throwable {
    Node node0 = new Node(70);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test181200,"public void test181200() throws Throwable {
    Node node0 = new Node(72, 72, 72);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLTEXT 72
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test182201,"public void test182201() throws Throwable {
    Node node0 = new Node(73, 73, 73);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_MEMBER 73
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test183202,"public void test183202() throws Throwable {
    Node node0 = new Node(74);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test184203,"public void test184203() throws Throwable {
    Node node0 = new Node(75, 75, 4);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test185204,"public void test185204() throws Throwable {
    Node node0 = new Node(76);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test186205,"public void test186205() throws Throwable {
    Node node0 = new Node(77);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTRY
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test187206,"public void test187206() throws Throwable {
    Node node0 = new Node(78);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSEMI
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test188207,"public void test188207() throws Throwable {
    Node node0 = new Node(79);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test189208,"public void test189208() throws Throwable {
    Node node0 = new Node(80);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test190209,"public void test190209() throws Throwable {
    Node node0 = new Node(81);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLC
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test191210,"public void test191210() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(82);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test192211,"public void test192211() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test193212,"public void test193212() throws Throwable {
    Node node0 = new Node(84);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test194213,"public void test194213() throws Throwable {
    Node[] nodeArray0 = new Node[0];
    Node node0 = new Node(85, nodeArray0, 85, 85);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test195214,"public void test195214() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test196215,"public void test196215() throws Throwable {
    Node node0 = new Node(88);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test197216,"public void test197216() throws Throwable {
    Node node0 = new Node(89);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test198217,"public void test198217() throws Throwable {
    Node node0 = new Node(90);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test199218,"public void test199218() throws Throwable {
    Node node0 = Node.newString(92, ""r"", 129, (-1768));
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test200219,"public void test200219() throws Throwable {
    Node node0 = new Node(93, 93, 93);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test201220,"public void test201220() throws Throwable {
    Node node0 = new Node(97);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test202221,"public void test202221() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(98);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test203222,"public void test203222() throws Throwable {
    Node node0 = new Node(99);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test204223,"public void test204223() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(100);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test205224,"public void test205224() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(101);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test206225,"public void test206225() throws Throwable {
    Node node0 = new Node(102, 102, 102);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test207226,"public void test207226() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,
project,0,test208227,"public void test208227() throws Throwable {
    Node node0 = Node.newString(104, ""=[+:#h<Z"", (-28), 73);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDOT =[+:#h<Z
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test209228,"public void test209228() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(105);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test210229,"public void test210229() throws Throwable {
    Node node0 = new Node(106);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test211230,"public void test211230() throws Throwable {
    Node node0 = new Node(107, 107, 107);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test212231,"public void test212231() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(108);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test213232,"public void test213232() throws Throwable {
    Node node0 = new Node(109);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test214233,"public void test214233() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSWITCH 110
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test215234,"public void test215234() throws Throwable {
    Node node0 = new Node(111, 111, 111);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test216235,"public void test216235() throws Throwable {
    Node node0 = new Node(112, 112, 112);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test217236,"public void test217236() throws Throwable {
    Node node0 = new Node(116, 116, 116);
    node0.setType(113);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test218237,"public void test218237() throws Throwable {
    Node node0 = new Node(114);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test219238,"public void test219238() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test220239,"public void test220239() throws Throwable {
    Node node0 = new Node(116);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test221240,"public void test221240() throws Throwable {
    Node node0 = Node.newString(116, ""EeE fy|<WA"", 116, 116);
    Node node1 = NodeUtil.newVarNode(""EeE fy|<WA"", node0);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeVAR 116
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test222241,"public void test222241() throws Throwable {
    Node node0 = Node.newString(119, ""// In7ut %num%"", 119, (-1621));
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeWITH // In7ut %num%
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test223242,"public void test223242() throws Throwable {
    Node node0 = new Node(120, 120, 2);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test224243,"public void test224243() throws Throwable {
    Node node0 = new Node(121);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test225244,"public void test225244() throws Throwable {
    Node node0 = new Node(122);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test226245,"public void test226245() throws Throwable {
    Node node0 = Node.newString(147, ""vL.rxg5N"");
    Node node1 = new Node(37, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test227246,"public void test227246() throws Throwable {
    Node node0 = new Node(38);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test228247,"public void test228247() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test229248,"public void test229248() throws Throwable {
    Node node0 = new Node(42, 120, 120);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test230249,"public void test230249() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test231250,"public void test231250() throws Throwable {
    Node node0 = Node.newString(""cWK"");
    node0.setType(44);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test232251,"public void test232251() throws Throwable {
    Node node0 = Node.newString(38, ""`(kWsmx.ih>"");
    node0.setType(46);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test233252,"public void test233252() throws Throwable {
    Node node0 = new Node(47, 47, 47);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test234253,"public void test234253() throws Throwable {
    Node node0 = new Node(49, 49, 49);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test235254,"public void test235254() throws Throwable {
    Node node0 = new Node(50);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test236255,"public void test236255() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test237256,"public void test237256() throws Throwable {
    Node node0 = new Node(53, 53, 53);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test238257,"public void test238257() throws Throwable {
    Node node0 = Node.newString(32, ""`(kWsmx.ih>"");
    node0.setType(54);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test239258,"public void test239258() throws Throwable {
    Node node0 = new Node(55);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test240259,"public void test240259() throws Throwable {
    Node node0 = new Node(56);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test241260,"public void test241260() throws Throwable {
    Node node0 = new Node(58, 58, 58);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test242261,"public void test242261() throws Throwable {
    Node node0 = new Node(59, 59, 59);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test243262,"public void test243262() throws Throwable {
    Node node0 = Node.newString(61, ""typeof"", 61, 61);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test244263,"public void test244263() throws Throwable {
    Node node0 = new Node(62);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test245264,"public void test245264() throws Throwable {
    Node node0 = new Node(65);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test246265,"public void test246265() throws Throwable {
    Node node0 = new Node(66);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test247266,"public void test247266() throws Throwable {
    Node node0 = new Node(68);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test248267,"public void test248267() throws Throwable {
    Node node0 = new Node(69, 69, 69);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test249268,"public void test249268() throws Throwable {
    Node node0 = new Node(72);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test250269,"public void test250269() throws Throwable {
    Node node0 = new Node(73, 73, 73);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test251270,"public void test251270() throws Throwable {
    Node node0 = new Node(77);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test252271,"public void test252271() throws Throwable {
    Node node0 = new Node(78);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test253272,"public void test253272() throws Throwable {
    Node node0 = new Node(81);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test254273,"public void test254273() throws Throwable {
    Node node0 = new Node(98);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test255274,"public void test255274() throws Throwable {
    Node node0 = new Node(100);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test256275,"public void test256275() throws Throwable {
    Node node0 = new Node(101);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test257276,"public void test257276() throws Throwable {
    Node node0 = new Node(104);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test258277,"public void test258277() throws Throwable {
    Node node0 = new Node(108);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test259278,"public void test259278() throws Throwable {
    Node node0 = Node.newString(117, ""-"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test260279,"public void test260279() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""com.google.javascript.jscomp.NodeUtil$MatchDeclaration"", (Node) null);
    assertNotNull(node0);
}",0,
project,0,test260280,"public void test260280() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""com.google.javascript.jscomp.NodeUtil$MatchDeclaration"", (Node) null);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertEquals(118, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test260281,"public void test260281() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""com.google.javascript.jscomp.NodeUtil$MatchDeclaration"", (Node) null);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test261282,"public void test261282() throws Throwable {
    Node node0 = Node.newString(""mtFtx8\""S1!s2]cJ,ME"");
    node0.setType(119);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test262283,"public void test262283() throws Throwable {
    Node node0 = new Node(154, 154, 154);
    Node node1 = new Node(123, node0, 1, 2);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test263284,"public void test263284() throws Throwable {
    Node node0 = new Node(124);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test264285,"public void test264285() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""@S[wSgH"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test265286,"public void test265286() throws Throwable {
    Node node0 = new Node(126);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test266287,"public void test266287() throws Throwable {
    Node node0 = Node.newString(127, ""<<="", 127, 127);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test267288,"public void test267288() throws Throwable {
    Node node0 = new Node(128);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test268289,"public void test268289() throws Throwable {
    Node node0 = Node.newString(129, ""`=(kWsmx.ih>"", 129, 110);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test269290,"public void test269290() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test270291,"public void test270291() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    node0.addChildrenToFront(node0);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
    }
}",0,
project,0,test271292,"public void test271292() throws Throwable {
    Node node0 = Node.newString(""0IM#-?C 4"");
    node0.setType(105);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test272293,"public void test272293() throws Throwable {
    Node node0 = Node.newString(1861, ""printNameReferenceGraph"", 3, 1861);
    node0.setType(105);
    Node node1 = new Node(2, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test273294,"public void test273294() throws Throwable {
    Node node0 = new Node(30, 30, 119);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test274295,"public void test274295() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    Node node1 = NodeUtil.newVarNode(""]ApjrARq!.N*!V06reO"", node0);
    assertEquals(118, node1.getType());
}",0,
project,0,test274296,"public void test274296() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    Node node1 = NodeUtil.newVarNode(""]ApjrARq!.N*!V06reO"", node0);
    node1.setType(30);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test275297,"public void test275297() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    JSType[] jSTypeArray0 = new JSType[4];
    Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
    node0.setType(94);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,
project,0,test276298,"public void test276298() throws Throwable {
    Node node0 = Node.newString((-1003), ""\"">$n-"", (-1003), (-1003));
    Node node1 = new Node(96, node0, node0, 84, 47);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test277299,"public void test277299() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""<"");
    Compiler compiler0 = new Compiler((PrintStream) null);
    Node node0 = syntheticAst0.getAstRoot(compiler0);
    Node node1 = new Node(91, node0, node0, node0, node0);
    node0.setType(12);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test278300,"public void test278300() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    // Undeclared exception!
    try {
        NodeUtil.constructorCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected NEW node, got SWITCH
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test279301,"public void test279301() throws Throwable {
    Node node0 = Node.newString(30, "".prototype"", 30, 30);
    Compiler compiler0 = new Compiler();
    node0.addChildrenToFront(node0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test280302,"public void test280302() throws Throwable {
    Node node0 = new Node((-761), (-761), (-761));
    // Undeclared exception!
    try {
        NodeUtil.callHasLocalResult(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test281303,"public void test281303() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    Node node1 = new Node(37, node0, node0, 5, 34);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_NumbericResultPredicate0);
    assertFalse(boolean0);
}",0,
project,0,test282304,"public void test282304() throws Throwable {
    Node node0 = new Node(41);
    // Undeclared exception!
    try {
        NodeUtil.newHasLocalResult(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test283305,"public void test283305() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,
project,0,test284306,"public void test284306() throws Throwable {
    Node node0 = Node.newString((-1003), ""\"">$n-"", (-1003), (-1003));
    Node node1 = new Node(96, node0, node0, 84, 47);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test285307,"public void test285307() throws Throwable {
    Node node0 = new Node(37, 78, (-171));
    // Undeclared exception!
    try {
        NodeUtil.nodeTypeMayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test286308,"public void test286308() throws Throwable {
    Node node0 = Node.newString(38, ""`=(kWsmx.ih>"", 38, 38);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",1,
project,0,test287309,"public void test287309() throws Throwable {
    Node node0 = new Node(49, 49, 49);
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
    MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0);
    PrintStreamErrorManager printStreamErrorManager0 = new PrintStreamErrorManager(mockPrintStream0);
    Compiler compiler0 = new Compiler(printStreamErrorManager0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test288310,"public void test288310() throws Throwable {
    Node node0 = Node.newString(102, ""Shift amount out of bounds: {0}"", 102, 102);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test289311,"public void test289311() throws Throwable {
    Node node0 = new Node(103);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test290312,"public void test290312() throws Throwable {
    Node node0 = Node.newString(30, "".prototype"", 30, 30);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test291313,"public void test291313() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertEquals(24, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test291314,"public void test291314() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test291315,"public void test291315() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test291316,"public void test291316() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertEquals(30, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test291317,"public void test291317() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test292318,"public void test292318() throws Throwable {
    Node node0 = Node.newString(35, ""Xr$E"");
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test293319,"public void test293319() throws Throwable {
    Node node0 = Node.newString(37, ""(au"");
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test294320,"public void test294320() throws Throwable {
    Node node0 = Node.newString(1858, ""printNameReferenceGraph"", 11, 1858);
    node0.setType(105);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(20);
    // Undeclared exception!
    try {
        NodeUtil.canBeSideEffected(node0, linkedHashSet0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test295321,"public void test295321() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    linkedHashSet0.add(""_3Db2~s"");
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertEquals(55, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test295322,"public void test295322() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    linkedHashSet0.add(""_3Db2~s"");
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test295323,"public void test295323() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    linkedHashSet0.add(""_3Db2~s"");
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertEquals(55, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test296324,"public void test296324() throws Throwable {
    Node node0 = new Node(125);
    Node node1 = new Node((-1845939769), node0, node0);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test297325,"public void test297325() throws Throwable {
    int int0 = NodeUtil.precedence(9);
    assertEquals(5, int0);
}",0,
project,0,test298326,"public void test298326() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(77);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for try (type 77)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test299327,"public void test299327() throws Throwable {
    int int0 = NodeUtil.precedence(10);
    assertEquals(6, int0);
}",0,
project,0,test300328,"public void test300328() throws Throwable {
    int int0 = NodeUtil.precedence(11);
    assertEquals(7, int0);
}",0,
project,0,test301329,"public void test301329() throws Throwable {
    int int0 = NodeUtil.precedence(12);
    assertEquals(8, int0);
}",0,
project,0,test302330,"public void test302330() throws Throwable {
    int int0 = NodeUtil.precedence(13);
    assertEquals(8, int0);
}",0,
project,0,test303331,"public void test303331() throws Throwable {
    int int0 = NodeUtil.precedence(14);
    assertEquals(9, int0);
}",0,
project,0,test304332,"public void test304332() throws Throwable {
    int int0 = NodeUtil.precedence(15);
    assertEquals(9, int0);
}",0,
project,0,test305333,"public void test305333() throws Throwable {
    int int0 = NodeUtil.precedence(16);
    assertEquals(9, int0);
}",0,
project,0,test306334,"public void test306334() throws Throwable {
    int int0 = NodeUtil.precedence(17);
    assertEquals(9, int0);
}",0,
project,0,test307335,"public void test307335() throws Throwable {
    int int0 = NodeUtil.precedence(18);
    assertEquals(10, int0);
}",0,
project,0,test308336,"public void test308336() throws Throwable {
    int int0 = NodeUtil.precedence(19);
    assertEquals(10, int0);
}",0,
project,0,test309337,"public void test309337() throws Throwable {
    int int0 = NodeUtil.precedence(20);
    assertEquals(10, int0);
}",0,
project,0,test310338,"public void test310338() throws Throwable {
    int int0 = NodeUtil.precedence(21);
    assertEquals(11, int0);
}",0,
project,0,test311339,"public void test311339() throws Throwable {
    int int0 = NodeUtil.precedence(22);
    assertEquals(11, int0);
}",0,
project,0,test312340,"public void test312340() throws Throwable {
    int int0 = NodeUtil.precedence(23);
    assertEquals(12, int0);
}",0,
project,0,test313341,"public void test313341() throws Throwable {
    int int0 = NodeUtil.precedence(24);
    assertEquals(12, int0);
}",0,
project,0,test314342,"public void test314342() throws Throwable {
    int int0 = NodeUtil.precedence(25);
    assertEquals(12, int0);
}",0,
project,0,test315343,"public void test315343() throws Throwable {
    int int0 = NodeUtil.precedence(26);
    assertEquals(13, int0);
}",0,
project,0,test316344,"public void test316344() throws Throwable {
    int int0 = NodeUtil.precedence(27);
    assertEquals(13, int0);
}",0,
project,0,test317345,"public void test317345() throws Throwable {
    int int0 = NodeUtil.precedence(28);
    assertEquals(13, int0);
}",0,
project,0,test318346,"public void test318346() throws Throwable {
    int int0 = NodeUtil.precedence(29);
    assertEquals(13, int0);
}",0,
project,0,test319347,"public void test319347() throws Throwable {
    int int0 = NodeUtil.precedence(30);
    assertEquals(13, int0);
}",0,
project,0,test320348,"public void test320348() throws Throwable {
    int int0 = NodeUtil.precedence(31);
    assertEquals(13, int0);
}",0,
project,0,test321349,"public void test321349() throws Throwable {
    int int0 = NodeUtil.precedence(32);
    assertEquals(13, int0);
}",0,
project,0,test322350,"public void test322350() throws Throwable {
    int int0 = NodeUtil.precedence(33);
    assertEquals(15, int0);
}",0,
project,0,test323351,"public void test323351() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(34);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setprop (type 34)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test324352,"public void test324352() throws Throwable {
    int int0 = NodeUtil.precedence(35);
    assertEquals(15, int0);
}",0,
project,0,test325353,"public void test325353() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(36);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setelem (type 36)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test326354,"public void test326354() throws Throwable {
    int int0 = NodeUtil.precedence(37);
    assertEquals(15, int0);
}",0,
project,0,test327355,"public void test327355() throws Throwable {
    int int0 = NodeUtil.precedence(38);
    assertEquals(15, int0);
}",0,
project,0,test328356,"public void test328356() throws Throwable {
    int int0 = NodeUtil.precedence(39);
    assertEquals(15, int0);
}",0,
project,0,test329357,"public void test329357() throws Throwable {
    int int0 = NodeUtil.precedence(40);
    assertEquals(15, int0);
}",0,
project,0,test330358,"public void test330358() throws Throwable {
    int int0 = NodeUtil.precedence(41);
    assertEquals(15, int0);
}",0,
project,0,test331359,"public void test331359() throws Throwable {
    int int0 = NodeUtil.precedence(42);
    assertEquals(15, int0);
}",0,
project,0,test332360,"public void test332360() throws Throwable {
    int int0 = NodeUtil.precedence(43);
    assertEquals(15, int0);
}",0,
project,0,test333361,"public void test333361() throws Throwable {
    int int0 = NodeUtil.precedence(44);
    assertEquals(15, int0);
}",0,
project,0,test334362,"public void test334362() throws Throwable {
    int int0 = NodeUtil.precedence(45);
    assertEquals(8, int0);
}",0,
project,0,test335363,"public void test335363() throws Throwable {
    int int0 = NodeUtil.precedence(46);
    assertEquals(8, int0);
}",0,
project,0,test336364,"public void test336364() throws Throwable {
    int int0 = NodeUtil.precedence(47);
    assertEquals(15, int0);
}",0,
project,0,test337365,"public void test337365() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(48);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for bindname (type 48)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test338366,"public void test338366() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(49);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for throw (type 49)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test339367,"public void test339367() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(50);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=50> (type 50)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test340368,"public void test340368() throws Throwable {
    int int0 = NodeUtil.precedence(51);
    assertEquals(9, int0);
}",0,
project,0,test341369,"public void test341369() throws Throwable {
    int int0 = NodeUtil.precedence(52);
    assertEquals(9, int0);
}",0,
project,0,test342370,"public void test342370() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(53);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=53> (type 53)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test343371,"public void test343371() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(55);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setvar (type 55)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test344372,"public void test344372() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(56);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=56> (type 56)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test345373,"public void test345373() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(57);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=57> (type 57)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test346374,"public void test346374() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(58);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=58> (type 58)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test347375,"public void test347375() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(59);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=59> (type 59)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test348376,"public void test348376() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(60);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=60> (type 60)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test349377,"public void test349377() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(61);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for thisfn (type 61)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test350378,"public void test350378() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(62);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=62> (type 62)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test351379,"public void test351379() throws Throwable {
    int int0 = NodeUtil.precedence(63);
    assertEquals(15, int0);
}",0,
project,0,test352380,"public void test352380() throws Throwable {
    int int0 = NodeUtil.precedence(64);
    assertEquals(15, int0);
}",0,
project,0,test353381,"public void test353381() throws Throwable {
    int int0 = NodeUtil.precedence(65);
    assertEquals(15, int0);
}",0,
project,0,test354382,"public void test354382() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(66);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=66> (type 66)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test355383,"public void test355383() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(67);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=67> (type 67)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test356384,"public void test356384() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(68);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=68> (type 68)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test357385,"public void test357385() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(69);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for ref_special (type 69)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test358386,"public void test358386() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(70);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=70> (type 70)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test359387,"public void test359387() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(72);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=72> (type 72)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test360388,"public void test360388() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(73);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=73> (type 73)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test361389,"public void test361389() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(74);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=74> (type 74)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test362390,"public void test362390() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(75);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=75> (type 75)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test363391,"public void test363391() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(76);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=76> (type 76)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test364392,"public void test364392() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(78);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for semi (type 78)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test365393,"public void test365393() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(79);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lb (type 79)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test366394,"public void test366394() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(80);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rb (type 80)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test367395,"public void test367395() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(81);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lc (type 81)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test368396,"public void test368396() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(82);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rc (type 82)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test369397,"public void test369397() throws Throwable {
    int int0 = NodeUtil.precedence(83);
    assertEquals(15, int0);
}",0,
project,0,test370398,"public void test370398() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(84);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rp (type 84)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test371399,"public void test371399() throws Throwable {
    int int0 = NodeUtil.precedence(85);
    assertEquals(0, int0);
}",0,
project,0,test372400,"public void test372400() throws Throwable {
    int int0 = NodeUtil.precedence(86);
    assertEquals(1, int0);
}",0,
project,0,test373401,"public void test373401() throws Throwable {
    int int0 = NodeUtil.precedence(87);
    assertEquals(1, int0);
}",0,
project,0,test374402,"public void test374402() throws Throwable {
    int int0 = NodeUtil.precedence(88);
    assertEquals(1, int0);
}",0,
project,0,test375403,"public void test375403() throws Throwable {
    int int0 = NodeUtil.precedence(89);
    assertEquals(1, int0);
}",0,
project,0,test376404,"public void test376404() throws Throwable {
    int int0 = NodeUtil.precedence(90);
    assertEquals(1, int0);
}",0,
project,0,test377405,"public void test377405() throws Throwable {
    int int0 = NodeUtil.precedence(91);
    assertEquals(1, int0);
}",0,
project,0,test378406,"public void test378406() throws Throwable {
    int int0 = NodeUtil.precedence(92);
    assertEquals(1, int0);
}",0,
project,0,test379407,"public void test379407() throws Throwable {
    int int0 = NodeUtil.precedence(93);
    assertEquals(1, int0);
}",0,
project,0,test380408,"public void test380408() throws Throwable {
    int int0 = NodeUtil.precedence(94);
    assertEquals(1, int0);
}",0,
project,0,test381409,"public void test381409() throws Throwable {
    int int0 = NodeUtil.precedence(95);
    assertEquals(1, int0);
}",0,
project,0,test382410,"public void test382410() throws Throwable {
    int int0 = NodeUtil.precedence(96);
    assertEquals(1, int0);
}",0,
project,0,test383411,"public void test383411() throws Throwable {
    int int0 = NodeUtil.precedence(97);
    assertEquals(1, int0);
}",0,
project,0,test384412,"public void test384412() throws Throwable {
    int int0 = NodeUtil.precedence(98);
    assertEquals(2, int0);
}",0,
project,0,test385413,"public void test385413() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(99);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for colon (type 99)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test386414,"public void test386414() throws Throwable {
    int int0 = NodeUtil.precedence(100);
    assertEquals(3, int0);
}",0,
project,0,test387415,"public void test387415() throws Throwable {
    int int0 = NodeUtil.precedence(101);
    assertEquals(4, int0);
}",0,
project,0,test388416,"public void test388416() throws Throwable {
    int int0 = NodeUtil.precedence(102);
    assertEquals(13, int0);
}",0,
project,0,test389417,"public void test389417() throws Throwable {
    int int0 = NodeUtil.precedence(103);
    assertEquals(13, int0);
}",0,
project,0,test390418,"public void test390418() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(104);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for dot (type 104)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test391419,"public void test391419() throws Throwable {
    int int0 = NodeUtil.precedence(105);
    assertEquals(15, int0);
}",0,
project,0,test392420,"public void test392420() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(106);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for export (type 106)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test393421,"public void test393421() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(107);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for import (type 107)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test394422,"public void test394422() throws Throwable {
    int int0 = NodeUtil.precedence(108);
    assertEquals(15, int0);
}",0,
project,0,test395423,"public void test395423() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(109);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for else (type 109)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test396424,"public void test396424() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(110);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for switch (type 110)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test397425,"public void test397425() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for case (type 111)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test398426,"public void test398426() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(112);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for default (type 112)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test399427,"public void test399427() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(113);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for while (type 113)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test400428,"public void test400428() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for do (type 114)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test401429,"public void test401429() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for for (type 115)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test402430,"public void test402430() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for break (type 116)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test403431,"public void test403431() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(117);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for continue (type 117)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test404432,"public void test404432() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for var (type 118)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test405433,"public void test405433() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for with (type 119)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test406434,"public void test406434() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(120);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for catch (type 120)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test407435,"public void test407435() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(121);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for finally (type 121)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test408436,"public void test408436() throws Throwable {
    int int0 = NodeUtil.precedence(122);
    assertEquals(13, int0);
}",0,
project,0,test409437,"public void test409437() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(123);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for reserved (type 123)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test410438,"public void test410438() throws Throwable {
    int int0 = NodeUtil.precedence(124);
    assertEquals(15, int0);
}",0,
project,0,test411439,"public void test411439() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(2);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for enterwith (type 2)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test412440,"public void test412440() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test412441,"public void test412441() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test412442,"public void test412442() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertEquals(82, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test412443,"public void test412443() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertEquals(1905, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test413444,"public void test413444() throws Throwable {
    Node node0 = Node.newString(86, ""Expected NEW node, got "", 86, 86);
    // Undeclared exception!
    try {
        NodeUtil.mayBeStringHelper(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test414445,"public void test414445() throws Throwable {
    Node node0 = new Node(98, 98, 98);
    // Undeclared exception!
    try {
        NodeUtil.mayBeStringHelper(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test415446,"public void test415446() throws Throwable {
    Node node0 = new Node(101);
    // Undeclared exception!
    try {
        NodeUtil.mayBeStringHelper(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test416447,"public void test416447() throws Throwable {
    Node node0 = new Node(40, 40, 40);
    Node node1 = new Node(40, node0, node0, node0, 5, 20);
    node1.setType(100);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test417448,"public void test417448() throws Throwable {
    Node node0 = Node.newNumber(2266.3499624084);
    Node node1 = new Node(40, node0, node0, node0, 5, 20);
    node1.setType(100);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test418449,"public void test418449() throws Throwable {
    Node node0 = Node.newString(9, ""7lsI-p5P"");
    boolean boolean0 = NodeUtil.isNumericResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test419450,"public void test419450() throws Throwable {
    Node node0 = new Node(10);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test420451,"public void test420451() throws Throwable {
    Node node0 = new Node(11);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test421452,"public void test421452() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertEquals(119, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test421453,"public void test421453() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertEquals(119, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test421454,"public void test421454() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test421455,"public void test421455() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test422456,"public void test422456() throws Throwable {
    Node node0 = new Node(110);
    Node node1 = new Node(20, node0, 17, 32);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test423457,"public void test423457() throws Throwable {
    Node node0 = Node.newString(22, "".prototype"", 22, 2364);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test424458,"public void test424458() throws Throwable {
    Node node0 = new Node(23);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test425459,"public void test425459() throws Throwable {
    Node node0 = Node.newString(24, "".prototype"", 24, (-22));
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    int int0 = NodeUtil.getCount(node0, nodeUtil_NumbericResultPredicate0, nodeUtil_NumbericResultPredicate0);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test426460,"public void test426460() throws Throwable {
    Node node0 = Node.newString(""JSR"");
    Node node1 = new Node(25, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayBeString(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test427461,"public void test427461() throws Throwable {
    Node node0 = Node.newString(""o/RYYa}^W\""T;iVBo"");
    node0.setType(27);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test428462,"public void test428462() throws Throwable {
    Node node0 = new Node(28);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test429463,"public void test429463() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    boolean boolean0 = NodeUtil.isNumericResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test430464,"public void test430464() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test432466,"public void test432466() throws Throwable {
    Node node0 = new Node(12);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test433467,"public void test433467() throws Throwable {
    Node node0 = Node.newString(13, ""mMxI/6~"", 44, 14);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test434468,"public void test434468() throws Throwable {
    Node node0 = Node.newString(14, ""`=(kWsmx.ih>"");
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test435469,"public void test435469() throws Throwable {
    Node node0 = Node.newString(""}"");
    Node node1 = new Node(15, node0, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test436470,"public void test436470() throws Throwable {
    Node node0 = new Node(16);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test437471,"public void test437471() throws Throwable {
    Node node0 = Node.newString(17, "".prototype"", 17, (-22));
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test438472,"public void test438472() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    Node node1 = new Node(18, node0, node0, 14, 11);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test439473,"public void test439473() throws Throwable {
    Node node0 = new Node(19);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test440474,"public void test440474() throws Throwable {
    Node node0 = Node.newString(21, ""mMxI/6~"", 21, 21);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test441475,"public void test441475() throws Throwable {
    Node node0 = Node.newString(22, "".prototype"", 22, (-22));
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test442476,"public void test442476() throws Throwable {
    Node node0 = Node.newString(24, ""Cg&Q)|$osE"", 6, 41);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test443477,"public void test443477() throws Throwable {
    Node node0 = new Node(60, 60, 60);
    Node node1 = new Node(26, node0, 5, 18);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test444478,"public void test444478() throws Throwable {
    Node node0 = Node.newString(""o/RYYa}^W\""T;iVBo"");
    node0.setType(27);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test445479,"public void test445479() throws Throwable {
    Node node0 = Node.newString("""");
    node0.setType(28);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test446480,"public void test446480() throws Throwable {
    Node node0 = new Node(30);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test447481,"public void test447481() throws Throwable {
    Node node0 = new Node(31);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test448482,"public void test448482() throws Throwable {
    Node node0 = Node.newString(32, ""`(kWsmx.ih>"");
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test449483,"public void test449483() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.CombinedCompilerPass"", (-2739), 3283);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertEquals((-1), node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test449484,"public void test449484() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.CombinedCompilerPass"", (-2739), 3283);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test449485,"public void test449485() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.CombinedCompilerPass"", (-2739), 3283);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test450486,"public void test450486() throws Throwable {
    Node node0 = new Node(34);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test451487,"public void test451487() throws Throwable {
    Node node0 = new Node(35);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test452488,"public void test452488() throws Throwable {
    Node node0 = Node.newString(""MQj1T|O4U${BD"");
    node0.setType(36);
    boolean boolean0 = NodeUtil.mayBeString(node0, true);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test453489,"public void test453489() throws Throwable {
    Node node0 = Node.newString(37, ""={9P>"", 2752, 37);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test454490,"public void test454490() throws Throwable {
    Node node0 = Node.newNumber((double) 3);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,
project,0,test455491,"public void test455491() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test456492,"public void test456492() throws Throwable {
    Node node0 = Node.newString(124, ""SETNAME"", 124, 124);
    node0.setType(42);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test457493,"public void test457493() throws Throwable {
    Node node0 = new Node(43);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test458494,"public void test458494() throws Throwable {
    Node node0 = Node.newString(44, ""n"");
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test459495,"public void test459495() throws Throwable {
    Node node0 = Node.newString(45, ""||"");
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test460496,"public void test460496() throws Throwable {
    Node node0 = Node.newString((-5), ""`(kWsmx.ih>"", (-5), (-5));
    node0.setType(46);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    int int0 = NodeUtil.getNodeTypeReferenceCount(node0, 1, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test461497,"public void test461497() throws Throwable {
    Node node0 = new Node(47, (-4203), 122);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test462498,"public void test462498() throws Throwable {
    Node node0 = new Node(48);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test463499,"public void test463499() throws Throwable {
    Node node0 = Node.newString(""arg:ments"");
    Node node1 = new Node(49, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test464500,"public void test464500() throws Throwable {
    Node node0 = Node.newString(50, "".prhototype"", 50, (-1));
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test465501,"public void test465501() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test466502,"public void test466502() throws Throwable {
    Node node0 = Node.newString(116, "".protoype"", 116, 116);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test467503,"public void test467503() throws Throwable {
    Node node0 = new Node(4117);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test468504,"public void test468504() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test469505,"public void test469505() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test470506,"public void test470506() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test471507,"public void test471507() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test472508,"public void test472508() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test473509,"public void test473509() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(100);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test474510,"public void test474510() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(101);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test475511,"public void test475511() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test476512,"public void test476512() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(99);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test477513,"public void test477513() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test478514,"public void test478514() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test479515,"public void test479515() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test480516,"public void test480516() throws Throwable {
    Node node0 = Node.newString(87, ""*BXZ$_P~B"", 87, 103);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(9, int0);
}",0,"assertEquals(1, int0)"
project,0,test481517,"public void test481517() throws Throwable {
    Node node0 = Node.newString(92, ""r"", 129, (-1768));
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(20, int0);
}",0,"assertEquals(1, int0)"
project,0,test482518,"public void test482518() throws Throwable {
    Node node0 = new Node(88);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(10, int0);
}",0,"assertEquals(1, int0)"
project,0,test483519,"public void test483519() throws Throwable {
    Node node0 = Node.newString(91, "">>="", 91, 91);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(19, int0);
}",0,"assertEquals(1, int0)"
project,0,test484520,"public void test484520() throws Throwable {
    Node node0 = Node.newString(95, ""ZE1($cb"", 95, 95);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(23, int0);
}",0,"assertEquals(1, int0)"
project,0,test485521,"public void test485521() throws Throwable {
    Node node0 = new Node(96);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(24, int0);
}",0,"assertEquals(1, int0)"
project,0,test486522,"public void test486522() throws Throwable {
    Node node0 = Node.newString(97, ""tr m uX)a"", 81, 81);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(25, int0);
}",0,"assertEquals(1, int0)"
project,0,test487523,"public void test487523() throws Throwable {
    Node node0 = new Node(33, 114, 114);
    // Undeclared exception!
    try {
        NodeUtil.getOpFromAssignmentOp(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Not an assiment op
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test488524,"public void test488524() throws Throwable {
    Node node0 = new Node(96);
    boolean boolean0 = NodeUtil.isExpressionNode(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test489525,"public void test489525() throws Throwable {
    Node node0 = Node.newNumber(3325.28302, 79, 79);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExpressionNode(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test490526,"public void test490526() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.protobuf.DescriptorProtos$EnumOptions$Builder"", (-798), (-798));
    boolean boolean0 = NodeUtil.isGet(node0);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test490527,"public void test490527() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.protobuf.DescriptorProtos$EnumOptions$Builder"", (-798), (-798));
    boolean boolean0 = NodeUtil.isGet(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test491528,"public void test491528() throws Throwable {
    Node node0 = Node.newString(35, ""`=(kWsmx.ih>"", 35, 35);
    boolean boolean0 = NodeUtil.isGet(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test492529,"public void test492529() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "".prototype"", 49, 49);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(49, node0.getCharno());
}",0,
project,0,test492530,"public void test492530() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "".prototype"", 49, 49);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertNotNull(node1);
}",0,
project,0,test492531,"public void test492531() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "".prototype"", 49, 49);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(49, node1.getCharno());
}",0,
project,0,test492532,"public void test492532() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "".prototype"", 49, 49);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(49, node0.getLineno());
}",0,
project,0,test492533,"public void test492533() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "".prototype"", 49, 49);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertTrue(node1.isUnscopedQualifiedName());
}",0,
project,0,test493534,"public void test493534() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""arguments"", 126, 126);
    Node node1 = new Node(10, node0, 15, 49);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test493535,"public void test493535() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""arguments"", 126, 126);
    Node node1 = new Node(10, node0, 15, 49);
    NodeUtil.getAssignedValue(node0);
    assertEquals(126, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test493536,"public void test493536() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""arguments"", 126, 126);
    Node node1 = new Node(10, node0, 15, 49);
    NodeUtil.getAssignedValue(node0);
    assertEquals(126, node0.getLineno());
}",0,
project,0,test494537,"public void test494537() throws Throwable {
    Node node0 = Node.newString(107, ""-infinity"");
    Node node1 = NodeUtil.newVarNode(""-infinity"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test494538,"public void test494538() throws Throwable {
    Node node0 = Node.newString(107, ""-infinity"");
    Node node1 = NodeUtil.newVarNode(""-infinity"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertFalse(node0.hasOneChild());
}",0,
project,0,test495539,"public void test495539() throws Throwable {
    Node node0 = new Node(125);
    boolean boolean0 = NodeUtil.isString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test496540,"public void test496540() throws Throwable {
    Node node0 = Node.newString(""LuLFEhR6BsM\""?Xp_["", 120, 120);
    boolean boolean0 = NodeUtil.isString(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test497541,"public void test497541() throws Throwable {
    Node node0 = Node.newString(1861, ""printNameReferenceGraph"", 3, 1861);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test498542,"public void test498542() throws Throwable {
    Node node0 = Node.newString(""GbXvf]Ri"");
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node1);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test498543,"public void test498543() throws Throwable {
    Node node0 = Node.newString(""GbXvf]Ri"");
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test499544,"public void test499544() throws Throwable {
    Node node0 = Node.newNumber(Double.NaN);
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test500545,"public void test500545() throws Throwable {
    Node node0 = new Node(63);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprCall(node1);
    assertEquals(130, node1.getType());
}",0,
project,0,test500546,"public void test500546() throws Throwable {
    Node node0 = new Node(63);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprCall(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test501547,"public void test501547() throws Throwable {
    Node node0 = new Node(103);
    boolean boolean0 = NodeUtil.isForIn(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test502548,"public void test502548() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    boolean boolean0 = NodeUtil.isForIn(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test503549,"public void test503549() throws Throwable {
    Node node0 = new Node(116, 116, 116);
    node0.setType(113);
    boolean boolean0 = NodeUtil.isLoopStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test504550,"public void test504550() throws Throwable {
    Node node0 = Node.newString(9, "" does not have a condition."", 2421, 2421);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test505551,"public void test505551() throws Throwable {
    Node node0 = Node.newString(114, ""arguments"", 114, 114);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test506552,"public void test506552() throws Throwable {
    Node node0 = Node.newString(""&"");
    Node node1 = new Node(35, node0);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test507553,"public void test507553() throws Throwable {
    Node node0 = new Node(77);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test508554,"public void test508554() throws Throwable {
    Node node0 = new Node(101);
    // Undeclared exception!
    try {
        NodeUtil.isControlStructureCodeBlock(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test509555,"public void test509555() throws Throwable {
    Node node0 = new Node(108);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test510556,"public void test510556() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test511557,"public void test511557() throws Throwable {
    Node node0 = Node.newString(""4g8V*pqCRo#lVA2L"");
    Node node1 = new Node(112, node0);
    boolean boolean0 = NodeUtil.isControlStructure(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test512558,"public void test512558() throws Throwable {
    Node node0 = new Node(113);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test513559,"public void test513559() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    node0.setType(114);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test514560,"public void test514560() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test515561,"public void test515561() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test516562,"public void test516562() throws Throwable {
    Node node0 = new Node(120);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test517563,"public void test517563() throws Throwable {
    Node node0 = new Node(126, 126, 126);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test518564,"public void test518564() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test519565,"public void test519565() throws Throwable {
    Node node0 = new Node(110);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test520566,"public void test520566() throws Throwable {
    Node node0 = new Node(111, 111, 111);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test521567,"public void test521567() throws Throwable {
    Node node0 = new Node(113);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test522568,"public void test522568() throws Throwable {
    Node node0 = new Node(114, 114, 114);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test523569,"public void test523569() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test524570,"public void test524570() throws Throwable {
    Node node0 = new Node(119, 1715, 1715);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test525571,"public void test525571() throws Throwable {
    Node node0 = new Node(120, 120, 120);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test526572,"public void test526572() throws Throwable {
    Node node0 = Node.newString(126, ""s->k"", 126, 126);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test527573,"public void test527573() throws Throwable {
    Node node0 = new Node(108);
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test528574,"public void test528574() throws Throwable {
    Node node0 = new Node(113);
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test529575,"public void test529575() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // SWITCH 110 does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test530576,"public void test530576() throws Throwable {
    Node node0 = new Node(111);
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,
project,0,test531577,"public void test531577() throws Throwable {
    Node node0 = Node.newString(112, ""Infinity"", 1304, 2638);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // DEFAULT Infinity 1304 does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test532578,"public void test532578() throws Throwable {
    Node node0 = new Node(114);
    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
    // Undeclared exception!
    try {
        peepholeRemoveDeadCode0.tryFoldDo(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test533579,"public void test533579() throws Throwable {
    Node node0 = new Node(92);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // ASSIGN_URSH does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test534580,"public void test534580() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""SrRQ#WK,l"", ""SrRQ#WK,l"");
    boolean boolean0 = NodeUtil.isStatementParent(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test535581,"public void test535581() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""AoY6}G/.6agZAuepOd"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    SyntheticAst syntheticAst0 = new SyntheticAst(""AoY6}G/.6agZAuepOd"");
    Node node0 = syntheticAst0.getAstRoot(compiler0);
    Node node1 = new Node(126, node0, node0, node0, node0, 676, 9);
    boolean boolean0 = NodeUtil.isStatementParent(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test536582,"public void test536582() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""|"");
    Compiler compiler0 = new Compiler();
    Node node0 = syntheticAst0.getAstRoot(compiler0);
    boolean boolean0 = NodeUtil.isStatementParent(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test537583,"public void test537583() throws Throwable {
    Node node0 = new Node(111);
    NodeUtil.newVarNode(""E fy|<WA"", node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test538584,"public void test538584() throws Throwable {
    Node node0 = Node.newString(""4g8V*pqCRo#lVA2L"");
    Node node1 = new Node(112, node0);
    boolean boolean0 = NodeUtil.isSwitchCase(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test539585,"public void test539585() throws Throwable {
    Node[] nodeArray0 = new Node[0];
    Node node0 = new Node(41, nodeArray0);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test540586,"public void test540586() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_f73jDb2~s"", 37, 37);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals(37, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test540587,"public void test540587() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_f73jDb2~s"", 37, 37);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test540588,"public void test540588() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_f73jDb2~s"", 37, 37);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals(37, node0.getCharno());
}",0,
project,0,test541589,"public void test541589() throws Throwable {
    boolean boolean0 = NodeUtil.isLabelName((Node) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test542590,"public void test542590() throws Throwable {
    Node node0 = Node.newString(61, ""typeof"", 61, 61);
    boolean boolean0 = NodeUtil.isLabelName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test543591,"public void test543591() throws Throwable {
    Node node0 = new Node(120, 120, 120);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test544592,"public void test544592() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""(au"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "">]Nb"", ""JSC_EXPORTED_FUNCTION_UNKNOWN_PARAMETER TYPE"");
    Node node1 = new Node(37, node0, 19, 2);
    NodeUtil.removeChild(node1, node0);
    assertEquals(1, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test544593,"public void test544593() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""(au"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "">]Nb"", ""JSC_EXPORTED_FUNCTION_UNKNOWN_PARAMETER TYPE"");
    Node node1 = new Node(37, node0, 19, 2);
    NodeUtil.removeChild(node1, node0);
    assertTrue(node1.hasChildren());
}",0,assertFalse(node1.hasChildren())
project,0,test545594,"public void test545594() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""cW$"", ""cW$"");
    NodeUtil.newVarNode(""Cq!(l$VY\u0001{"", node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // node is not a child
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test546595,"public void test546595() throws Throwable {
    Node node0 = new Node(154, 154, 154);
    Node node1 = NodeUtil.newVarNode(""com.google.javascript.jscomp.AmbiguateProperties$ProcessProperties"", node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node1, node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // node is not a child
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test547596,"public void test547596() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    Node node1 = new Node(37, node0, node0, 5, 34);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: TRY 77 of TRY 77
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test548597,"public void test548597() throws Throwable {
    Node node0 = new Node(126);
    NodeUtil.newVarNode("", totalGets="", node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: LABEL of LABEL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test549598,"public void test549598() throws Throwable {
    Node node0 = Node.newString(""~"");
    // Undeclared exception!
    try {
        NodeUtil.maybeAddFinally(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test550599,"public void test550599() throws Throwable {
    Node node0 = new Node(116, 116, 116);
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test551600,"public void test551600() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""$F/)3x.Q&HRB.Pj\"""");
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test552601,"public void test552601() throws Throwable {
    Node node0 = new Node(37);
    boolean boolean0 = NodeUtil.isCallOrNew(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test553602,"public void test553602() throws Throwable {
    Node node0 = Node.newString(30, "".prototype"", 30, (-22));
    boolean boolean0 = NodeUtil.isCallOrNew(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test554603,"public void test554603() throws Throwable {
    Node node0 = Node.newString(1861, ""printNameReferenceGraph"", 3, 1861);
    node0.setType(105);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(4, Node.DESCENDANTS_FLAG);
}",0,
project,0,test555604,"public void test555604() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    boolean boolean0 = NodeUtil.isThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test556605,"public void test556605() throws Throwable {
    Node node0 = Node.newString("".prototype"");
    boolean boolean0 = NodeUtil.isArrayLiteral(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test557606,"public void test557606() throws Throwable {
    Node node0 = Node.newString(63, ""-Sh"");
    boolean boolean0 = NodeUtil.isArrayLiteral(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test558607,"public void test558607() throws Throwable {
    Node[] nodeArray0 = new Node[0];
    Node node0 = new Node(41, nodeArray0);
    boolean boolean0 = NodeUtil.isHoistedFunctionDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test559608,"public void test559608() throws Throwable {
    Node node0 = new Node(101);
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test560609,"public void test560609() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""(au"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "">]Nb"", "">]Nb"");
    Node node1 = new Node(37, node0, 19, 2);
    boolean boolean0 = NodeUtil.isObjectCallMethod(node1, "">]Nb"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test561610,"public void test561610() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Undefined"", (-570), (-570));
    boolean boolean0 = NodeUtil.isFunctionObjectCallOrApply(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test562611,"public void test562611() throws Throwable {
    Node node0 = Node.newString(86, ""Expected NEW node, got "", 86, 86);
    boolean boolean0 = NodeUtil.isLhs(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test563612,"public void test563612() throws Throwable {
    Node node0 = Node.newString(110, ""-infinity"");
    Node node1 = NodeUtil.newVarNode(""-infinity"", node0);
    boolean boolean0 = NodeUtil.isLhs(node1, node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test563613,"public void test563613() throws Throwable {
    Node node0 = Node.newString(110, ""-infinity"");
    Node node1 = NodeUtil.newVarNode(""-infinity"", node0);
    boolean boolean0 = NodeUtil.isLhs(node1, node1);
    assertFalse(node0.hasChildren());
}",0,assertFalse(node0.hasChildren())
project,0,test564614,"public void test564614() throws Throwable {
    Node node0 = Node.newNumber(Double.NaN);
    boolean boolean0 = NodeUtil.isObjectLitKey(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test565615,"public void test565615() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""cW.$"", ""cW.$"");
    assertEquals(46, Node.IS_DISPATCHER);
}",0,
project,0,test566616,"public void test566616() throws Throwable {
    Node node0 = Node.newString(147, "".prototype"");
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    boolean boolean0 = NodeUtil.isConstantByConvention(closureCodingConvention0, node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test567617,"public void test567617() throws Throwable {
    Node node0 = Node.newString(148, ""vL.rxg5N"");
    String string0 = NodeUtil.getObjectLitKeyName(node0);
    assertEquals(""vL.rxg5N"", string0);
}",0,
project,0,test568618,"public void test568618() throws Throwable {
    Node node0 = Node.newString(""yIqGgn+u-yP{)=6vt(:"");
    String string0 = NodeUtil.getObjectLitKeyName(node0);
    assertEquals(""yIqGgn+u-yP{)=6vt(:"", string0);
}",0,
project,0,test569619,"public void test569619() throws Throwable {
    Node node0 = Node.newString(147, ""vL.rxg5N"");
    String string0 = NodeUtil.getObjectLitKeyName(node0);
    assertEquals(""vL.rxg5N"", string0);
}",0,
project,0,test570620,"public void test570620() throws Throwable {
    Node node0 = new Node((-3931), (-3931), (-3931));
    // Undeclared exception!
    try {
        NodeUtil.getObjectLitKeyName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // -3931
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test571621,"public void test571621() throws Throwable {
    Node node0 = Node.newString(""aJZF8Enuf"");
    JSType jSType0 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, (JSType) null);
    assertNull(jSType0);
}",0,assertNotNull(jSType0)
project,0,test572622,"public void test572622() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_PROTOTYPE;
    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
    JSType jSType1 = jSTypeRegistry0.createNullableType(jSType0);
    JSType jSType2 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, jSType1);
    assertFalse(jSType2.isOrdinaryFunction());
}",0,assertTrue(jSType2.isOrdinaryFunction())
project,0,test573623,"public void test573623() throws Throwable {
    Node node0 = Node.newString(147, ""vL.rxg5N"");
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test574624,"public void test574624() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test575625,"public void test575625() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(9);
    assertEquals(""|"", string0);
}",1,
project,0,test576626,"public void test576626() throws Throwable {
    String string0 = NodeUtil.opToStr(33);
    assertNull(string0);
}",0,
project,0,test577627,"public void test577627() throws Throwable {
    String string0 = NodeUtil.opToStr(10);
    assertEquals(""^"", string0);
}",0,
project,0,test578628,"public void test578628() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(11);
    assertEquals(""&"", string0);
}",1,
project,0,test579629,"public void test579629() throws Throwable {
    String string0 = NodeUtil.opToStr(12);
    assertEquals(""=="", string0);
}",0,
project,0,test580630,"public void test580630() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(13);
    assertEquals(""!="", string0);
}",1,
project,0,test581631,"public void test581631() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(14);
    assertEquals(""<"", string0);
}",1,
project,0,test582632,"public void test582632() throws Throwable {
    String string0 = NodeUtil.opToStr(15);
    assertEquals(""<="", string0);
}",0,
project,0,test583633,"public void test583633() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(16);
    assertEquals("">"", string0);
}",1,
project,0,test584634,"public void test584634() throws Throwable {
    String string0 = NodeUtil.opToStr(17);
    assertEquals("">="", string0);
}",0,
project,0,test585635,"public void test585635() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(18);
    assertEquals(""<<"", string0);
}",1,
project,0,test586636,"public void test586636() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(19);
    assertEquals("">>"", string0);
}",1,
project,0,test587637,"public void test587637() throws Throwable {
    String string0 = NodeUtil.opToStr(20);
    assertEquals("">>>"", string0);
}",0,
project,0,test588638,"public void test588638() throws Throwable {
    String string0 = NodeUtil.opToStr(21);
    assertEquals(""+"", string0);
}",0,
project,0,test589639,"public void test589639() throws Throwable {
    String string0 = NodeUtil.opToStr(22);
    assertEquals(""-"", string0);
}",0,
project,0,test590640,"public void test590640() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(23);
    assertEquals(""*"", string0);
}",1,
project,0,test591641,"public void test591641() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(24);
    assertEquals(""/"", string0);
}",1,
project,0,test592642,"public void test592642() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(25);
    assertEquals(""%"", string0);
}",1,
project,0,test593643,"public void test593643() throws Throwable {
    String string0 = NodeUtil.opToStr(26);
    assertEquals(""!"", string0);
}",0,
project,0,test594644,"public void test594644() throws Throwable {
    String string0 = NodeUtil.opToStr(27);
    assertEquals(""~"", string0);
}",0,
project,0,test595645,"public void test595645() throws Throwable {
    String string0 = NodeUtil.opToStr(28);
    assertEquals(""+"", string0);
}",0,
project,0,test596646,"public void test596646() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(29);
    assertEquals(""-"", string0);
}",1,
project,0,test597647,"public void test597647() throws Throwable {
    String string0 = NodeUtil.opToStr(30);
    assertNull(string0);
}",0,
project,0,test598648,"public void test598648() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(31);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 31: DELPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test599649,"public void test599649() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(32);
    assertEquals(""typeof"", string0);
}",1,
project,0,test600650,"public void test600650() throws Throwable {
    String string0 = NodeUtil.opToStr(34);
    assertNull(string0);
}",0,
project,0,test601651,"public void test601651() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(35);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 35: GETELEM
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test602652,"public void test602652() throws Throwable {
    String string0 = NodeUtil.opToStr(36);
    assertNull(string0);
}",0,
project,0,test603653,"public void test603653() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(37);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 37: CALL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test604654,"public void test604654() throws Throwable {
    String string0 = NodeUtil.opToStr(38);
    assertNull(string0);
}",0,
project,0,test605655,"public void test605655() throws Throwable {
    String string0 = NodeUtil.opToStr(39);
    assertNull(string0);
}",0,
project,0,test606656,"public void test606656() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(40);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 40: STRING
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test607657,"public void test607657() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(41);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 41: NULL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test608658,"public void test608658() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(42);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 42: THIS
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test609659,"public void test609659() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(43);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 43: FALSE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test610660,"public void test610660() throws Throwable {
    String string0 = NodeUtil.opToStr(44);
    assertNull(string0);
}",0,
project,0,test611661,"public void test611661() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(45);
    assertEquals(""==="", string0);
}",1,
project,0,test612662,"public void test612662() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(46);
    assertEquals(""!=="", string0);
}",1,
project,0,test613663,"public void test613663() throws Throwable {
    String string0 = NodeUtil.opToStr(47);
    assertNull(string0);
}",0,
project,0,test614664,"public void test614664() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(48);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 48: BINDNAME
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test615665,"public void test615665() throws Throwable {
    String string0 = NodeUtil.opToStr(49);
    assertNull(string0);
}",0,
project,0,test616666,"public void test616666() throws Throwable {
    String string0 = NodeUtil.opToStr(50);
    assertNull(string0);
}",0,
project,0,test617667,"public void test617667() throws Throwable {
    String string0 = NodeUtil.opToStr(51);
    assertEquals(""in"", string0);
}",0,
project,0,test618668,"public void test618668() throws Throwable {
    String string0 = NodeUtil.opToStr(52);
    assertEquals(""instanceof"", string0);
}",0,
project,0,test619669,"public void test619669() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(53);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 53: LOCAL_LOAD
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test620670,"public void test620670() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(55);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 55: SETVAR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test621671,"public void test621671() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(56);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 56: CATCH_SCOPE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test622672,"public void test622672() throws Throwable {
    String string0 = NodeUtil.opToStr(58);
    assertNull(string0);
}",0,
project,0,test623673,"public void test623673() throws Throwable {
    String string0 = NodeUtil.opToStr(59);
    assertNull(string0);
}",0,
project,0,test624674,"public void test624674() throws Throwable {
    String string0 = NodeUtil.opToStr(60);
    assertNull(string0);
}",0,
project,0,test625675,"public void test625675() throws Throwable {
    String string0 = NodeUtil.opToStr(61);
    assertNull(string0);
}",0,
project,0,test626676,"public void test626676() throws Throwable {
    String string0 = NodeUtil.opToStr(62);
    assertNull(string0);
}",0,
project,0,test627677,"public void test627677() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(63);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 63: ARRAYLIT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test628678,"public void test628678() throws Throwable {
    String string0 = NodeUtil.opToStr(64);
    assertNull(string0);
}",0,
project,0,test629679,"public void test629679() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(65);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 65: GET_REF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test630680,"public void test630680() throws Throwable {
    String string0 = NodeUtil.opToStr(66);
    assertNull(string0);
}",0,
project,0,test631681,"public void test631681() throws Throwable {
    String string0 = NodeUtil.opToStr(67);
    assertNull(string0);
}",0,
project,0,test632682,"public void test632682() throws Throwable {
    String string0 = NodeUtil.opToStr(68);
    assertNull(string0);
}",0,
project,0,test633683,"public void test633683() throws Throwable {
    String string0 = NodeUtil.opToStr(69);
    assertNull(string0);
}",0,
project,0,test634684,"public void test634684() throws Throwable {
    String string0 = NodeUtil.opToStr(70);
    assertNull(string0);
}",0,
project,0,test635685,"public void test635685() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(71);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 71: ESCXMLATTR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test636686,"public void test636686() throws Throwable {
    String string0 = NodeUtil.opToStr(72);
    assertNull(string0);
}",0,
project,0,test637687,"public void test637687() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(73);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 73: REF_MEMBER
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test638688,"public void test638688() throws Throwable {
    String string0 = NodeUtil.opToStr(74);
    assertNull(string0);
}",0,
project,0,test639689,"public void test639689() throws Throwable {
    String string0 = NodeUtil.opToStr(75);
    assertNull(string0);
}",0,
project,0,test640690,"public void test640690() throws Throwable {
    String string0 = NodeUtil.opToStr(76);
    assertNull(string0);
}",0,
project,0,test641691,"public void test641691() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(77);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 77: TRY
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test642692,"public void test642692() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(78);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 78: SEMI
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test643693,"public void test643693() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(79);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 79: LB
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test644694,"public void test644694() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(80);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 80: RB
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test645695,"public void test645695() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(81);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 81: LC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test646696,"public void test646696() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(82);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 82: RC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test647697,"public void test647697() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(83);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 83: LP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test648698,"public void test648698() throws Throwable {
    String string0 = NodeUtil.opToStr(84);
    assertNull(string0);
}",0,
project,0,test649699,"public void test649699() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(85);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 85: COMMA
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test650700,"public void test650700() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(86);
    assertEquals(""="", string0);
}",1,
project,0,test651701,"public void test651701() throws Throwable {
    String string0 = NodeUtil.opToStr(87);
    assertEquals(""|="", string0);
}",0,
project,0,test652702,"public void test652702() throws Throwable {
    String string0 = NodeUtil.opToStr(88);
    assertEquals(""^="", string0);
}",0,
project,0,test653703,"public void test653703() throws Throwable {
    String string0 = NodeUtil.opToStr(89);
    assertEquals(""&="", string0);
}",0,
project,0,test654704,"public void test654704() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(90);
    assertEquals(""<<="", string0);
}",1,
project,0,test655705,"public void test655705() throws Throwable {
    String string0 = NodeUtil.opToStr(91);
    assertEquals("">>="", string0);
}",0,
project,0,test656706,"public void test656706() throws Throwable {
    String string0 = NodeUtil.opToStr(92);
    assertEquals("">>>="", string0);
}",0,
project,0,test657707,"public void test657707() throws Throwable {
    String string0 = NodeUtil.opToStr(93);
    assertEquals(""+="", string0);
}",0,
project,0,test658708,"public void test658708() throws Throwable {
    String string0 = NodeUtil.opToStr(94);
    assertEquals(""-="", string0);
}",0,
project,0,test659709,"public void test659709() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(95);
    assertEquals(""*="", string0);
}",1,
project,0,test660710,"public void test660710() throws Throwable {
    String string0 = NodeUtil.opToStr(96);
    assertEquals(""/="", string0);
}",0,
project,0,test661711,"public void test661711() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(97);
    assertEquals(""%="", string0);
}",1,
project,0,test662712,"public void test662712() throws Throwable {
    String string0 = NodeUtil.opToStr(98);
    assertNull(string0);
}",0,
project,0,test663713,"public void test663713() throws Throwable {
    String string0 = NodeUtil.opToStr(99);
    assertNull(string0);
}",0,
project,0,test664714,"public void test664714() throws Throwable {
    String string0 = NodeUtil.opToStr(100);
    assertEquals(""||"", string0);
}",0,
project,0,test665715,"public void test665715() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(101);
    assertEquals(""&&"", string0);
}",1,
project,0,test666716,"public void test666716() throws Throwable {
    String string0 = NodeUtil.opToStr(102);
    assertNull(string0);
}",0,
project,0,test667717,"public void test667717() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(103);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 103: DEC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test668718,"public void test668718() throws Throwable {
    String string0 = NodeUtil.opToStr(104);
    assertNull(string0);
}",0,
project,0,test669719,"public void test669719() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(105);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 105: FUNCTION
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test670720,"public void test670720() throws Throwable {
    String string0 = NodeUtil.opToStr(106);
    assertNull(string0);
}",0,
project,0,test671721,"public void test671721() throws Throwable {
    String string0 = NodeUtil.opToStr(107);
    assertNull(string0);
}",0,
project,0,test672722,"public void test672722() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(108);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 108: IF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test673723,"public void test673723() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(109);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 109: ELSE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test674724,"public void test674724() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(110);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 110: SWITCH
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test675725,"public void test675725() throws Throwable {
    String string0 = NodeUtil.opToStr(111);
    assertNull(string0);
}",0,
project,0,test676726,"public void test676726() throws Throwable {
    String string0 = NodeUtil.opToStr(112);
    assertNull(string0);
}",0,
project,0,test677727,"public void test677727() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(113);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 113: WHILE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test678728,"public void test678728() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 114: DO
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test679729,"public void test679729() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 115: FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test680730,"public void test680730() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 116: BREAK
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test681731,"public void test681731() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(117);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 117: CONTINUE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test682732,"public void test682732() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 118: VAR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test683733,"public void test683733() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 119: WITH
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test684734,"public void test684734() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(120);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 120: CATCH
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test685735,"public void test685735() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(121);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 121: FINALLY
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test686736,"public void test686736() throws Throwable {
    String string0 = NodeUtil.opToStr(122);
    assertEquals(""void"", string0);
}",0,
project,0,test687737,"public void test687737() throws Throwable {
    String string0 = NodeUtil.opToStr(186);
    assertNull(string0);
}",0,
project,0,test688738,"public void test688738() throws Throwable {
    Node node0 = new Node(50);
    Node node1 = NodeUtil.newVarNode(""9"", node0);
    // Undeclared exception!
    try {
        NodeUtil.redeclareVarsInsideBranch(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test689739,"public void test689739() throws Throwable {
    Node node0 = Node.newString(""mtFtx8\""S1!s2]cJ,ME"");
    NodeUtil.copyNameAnnotations(node0, node0);
    assertEquals(4095, Node.COLUMN_MASK);
}",0,
project,0,test690740,"public void test690740() throws Throwable {
    Node node0 = Node.newString(123, ""cL]"", 1837, 1837);
    node0.putIntProp(42, 116);
    NodeUtil.copyNameAnnotations(node0, node0);
    assertEquals(0, node0.getSideEffectFlags());
}",0,"assertEquals(0, node0.getSideEffectFlags())"
project,0,test691741,"public void test691741() throws Throwable {
    Node node0 = Node.newString(117, ""-"");
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    Node node1 = NodeUtil.newFunctionNode(""LZg&dA'e J_@J"", linkedList0, node0, 0, 47);
    assertEquals(0, node1.getLineno());
}",0,
project,0,test691742,"public void test691742() throws Throwable {
    Node node0 = Node.newString(117, ""-"");
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    Node node1 = NodeUtil.newFunctionNode(""LZg&dA'e J_@J"", linkedList0, node0, 0, 47);
    assertEquals(47, node1.getCharno());
}",0,"assertEquals(0, node1.getCharno())"
project,0,test691743,"public void test691743() throws Throwable {
    Node node0 = Node.newString(117, ""-"");
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    Node node1 = NodeUtil.newFunctionNode(""LZg&dA'e J_@J"", linkedList0, node0, 0, 47);
    assertEquals(105, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test691744,"public void test691744() throws Throwable {
    Node node0 = Node.newString(117, ""-"");
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    Node node1 = NodeUtil.newFunctionNode(""LZg&dA'e J_@J"", linkedList0, node0, 0, 47);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(1, node1.getChildCount())"
project,0,test692745,"public void test692745() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""arguments"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    linkedList0.add((Node) null);
    Node node0 = compiler0.parseTestCode(""arguments"");
    // Undeclared exception!
    try {
        NodeUtil.newFunctionNode(""iwnfinity"", linkedList0, node0, 48, 15);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test693746,"public void test693746() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""$F/)3x.Q&HRB.Pj\"""", 113, 113);
    assertEquals(113, node0.getCharno());
}",1,
project,0,test693747,"public void test693747() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""$F/)3x.Q&HRB.Pj\"""", 113, 113);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test693748,"public void test693748() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""$F/)3x.Q&HRB.Pj\"""", 113, 113);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test693749,"public void test693749() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""$F/)3x.Q&HRB.Pj\"""", 113, 113);
    assertEquals(113, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test694750,"public void test694750() throws Throwable {
    Node node0 = Node.newString(""4g8V*pqCRo#lVA2L"");
    // Undeclared exception!
    try {
        NodeUtil.getRootOfQualifiedName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test695751,"public void test695751() throws Throwable {
    Node node0 = Node.newString(""4g8V*pqCRo#lVA2L"");
    node0.setType(42);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(10, Node.VARS_PROP);
}",0,
project,0,test696752,"public void test696752() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.mozilla.rhino.ScriptableObject$Slot"", (-1300), (-1300));
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test696753,"public void test696753() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.mozilla.rhino.ScriptableObject$Slot"", (-1300), (-1300));
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertFalse(node1.hasChildren());
}",0,assertFalse(node1.hasChildren())
project,0,test697754,"public void test697754() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""RANGE_ERROR_FUNCTION_TYPE"", node0);
    assertEquals(0, node1.getSideEffectFlags());
}",0,"assertEquals(0, node1.getSideEffectFlags())"
project,0,test697755,"public void test697755() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""RANGE_ERROR_FUNCTION_TYPE"", node0);
    assertEquals(38, node1.getType());
}",0,
project,0,test698756,"public void test698756() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""`=(kWsmx.ih>"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test699757,"public void test699757() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""search"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test700758,"public void test700758() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""false"");
    assertFalse(boolean0);
}",0,assertFalse(boolean0)
project,0,test701759,"public void test701759() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    NodeUtil.redeclareVarsInsideBranch(node1);
    assertEquals(1905, node0.getLineno());
}",0,
project,0,test701760,"public void test701760() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    NodeUtil.redeclareVarsInsideBranch(node1);
    assertEquals(38, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test701761,"public void test701761() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    NodeUtil.redeclareVarsInsideBranch(node1);
    assertEquals(82, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test702762,"public void test702762() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_f73jDb2~s"", 37, 37);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test702763,"public void test702763() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_f73jDb2~s"", 37, 37);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertEquals(37, node0.getCharno());
}",1,
project,0,test702764,"public void test702764() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_f73jDb2~s"", 37, 37);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertEquals(37, node0.getLineno());
}",1,
project,0,test703765,"public void test703765() throws Throwable {
    Node node0 = Node.newString(95, ""Kz+$"", 136, 136);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test704766,"public void test704766() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$52"", 119, 21);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertNull(node1);
}",0,
project,0,test704767,"public void test704767() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$52"", 119, 21);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(119, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test704768,"public void test704768() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$52"", 119, 21);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test704769,"public void test704769() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$52"", 119, 21);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(21, node0.getCharno());
}",1,
project,0,test704770,"public void test704770() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$52"", 119, 21);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test705771,"public void test705771() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    assertEquals(122, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test705772,"public void test705772() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    assertNotNull(node0);
}",0,
project,0,test706773,"public void test706773() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Undefined"", (-570), (-570));
    boolean boolean0 = NodeUtil.isNameReferenced(node0, "": "");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test707774,"public void test707774() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    Node node1 = NodeUtil.newVarNode("""", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, """");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test707775,"public void test707775() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    Node node1 = NodeUtil.newVarNode("""", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, """");
    assertFalse(node0.hasOneChild());
}",0,assertFalse(node0.hasOneChild())
project,0,test707776,"public void test707776() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    Node node1 = NodeUtil.newVarNode("""", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, """");
    assertEquals(118, node1.getType());
}",0,
project,0,test708777,"public void test708777() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""q"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "">]Nb"", "">]Nb"");
    Node node1 = new Node(37, node0, 19, 2);
    boolean boolean0 = NodeUtil.containsCall(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test710780,"public void test710780() throws Throwable {
    Node node0 = new Node(2375);
    Node node1 = NodeUtil.newVarNode(""[object Object]"", node0);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    boolean boolean0 = nodeUtil_MatchDeclaration0.apply(node1);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test711781,"public void test711781() throws Throwable {
    Node[] nodeArray0 = new Node[0];
    Node node0 = new Node(41, nodeArray0);
    node0.addChildAfter(node0, node0);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.valueCheck(node0, nodeUtil_MatchShallowStatement0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test712782,"public void test712782() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""$F/)3x.Q&HRB.Pj\"""", 21, 21);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertEquals(21, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test712783,"public void test712783() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""$F/)3x.Q&HRB.Pj\"""", 21, 21);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertEquals(21, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test712784,"public void test712784() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""$F/)3x.Q&HRB.Pj\"""", 21, 21);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test712785,"public void test712785() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""$F/)3x.Q&HRB.Pj\"""", 21, 21);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test713786,"public void test713786() throws Throwable {
    Node node0 = new Node(63);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    Node node1 = new Node(1, node0, node0, node0, node0);
    int int0 = NodeUtil.getNodeTypeReferenceCount(node1, 99, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test714787,"public void test714787() throws Throwable {
    Node node0 = Node.newString(19, ""=-FOs3%y"");
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test715788,"public void test715788() throws Throwable {
    Node node0 = Node.newString(110, ""\""WY4)j5430RgaVE"");
    Node node1 = new Node(35, node0, 38, 40);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node1, (NodeUtil.Visitor) null, predicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test716789,"public void test716789() throws Throwable {
    Node node0 = Node.newString(124, ""+infinity"", 255, 46);
    // Undeclared exception!
    try {
        NodeUtil.hasFinally(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test717790,"public void test717790() throws Throwable {
    Node node0 = new Node(77);
    boolean boolean0 = NodeUtil.hasFinally(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test718791,"public void test718791() throws Throwable {
    Node node0 = new Node(19);
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test719792,"public void test719792() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test720793,"public void test720793() throws Throwable {
    Node node0 = new Node(69, 69, 69);
    // Undeclared exception!
    try {
        NodeUtil.hasCatchHandler(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test721794,"public void test721794() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""o/RYYv}^W\""T;iVBo"");
    boolean boolean0 = NodeUtil.hasCatchHandler(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test722795,"public void test722795() throws Throwable {
    Node node0 = Node.newString(9, ""7lsI-p5P"");
    // Undeclared exception!
    try {
        NodeUtil.getFnParameters(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test723796,"public void test723796() throws Throwable {
    Node node0 = Node.newString(0, "".prototype"", 0, 1858);
    node0.setType(105);
    // Undeclared exception!
    try {
        NodeUtil.getFnParameters(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test724797,"public void test724797() throws Throwable {
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode((Node) null);
    assertNull(jSDocInfo0);
}",0,
project,0,test725798,"public void test725798() throws Throwable {
    Node node0 = new Node(154, 154, 154);
    JSDocInfo jSDocInfo0 = new JSDocInfo();
    node0.setJSDocInfo(jSDocInfo0);
    JSDocInfo jSDocInfo1 = NodeUtil.getInfoForNameNode(node0);
    assertFalse(jSDocInfo1.isHidden());
}",0,assertTrue(jSDocInfo1.isHidden())
project,0,test726799,"public void test726799() throws Throwable {
    Node node0 = Node.newString(100, ""-"");
    Node node1 = new Node(103, node0, 7, 42);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test727800,"public void test727800() throws Throwable {
    Node node0 = new Node(154, 154, 154);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test728801,"public void test728801() throws Throwable {
    Node node0 = new Node(43);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test729802,"public void test729802() throws Throwable {
    Node node0 = Node.newString(1861, ""printNameReferenceGraph"", 3, 1861);
    node0.setType(105);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test730803,"public void test730803() throws Throwable {
    Node node0 = new Node(116);
    node0.setType(105);
    node0.addSuppression(""v<f6X59E"");
    JSDocInfo jSDocInfo0 = NodeUtil.getFunctionInfo(node0);
    assertFalse(jSDocInfo0.isNoCompile());
}",0,assertTrue(jSDocInfo0.isNoCompile())
project,0,test731804,"public void test731804() throws Throwable {
    Node node0 = Node.newString(1861, ""printNameReferenceGraph"", 3, 1861);
    node0.setType(105);
    Node node1 = new Node(2, node0);
    JSDocInfo jSDocInfo0 = NodeUtil.getFunctionInfo(node0);
    assertNull(jSDocInfo0);
}",0,assertNotNull(jSDocInfo0)
project,0,test732805,"public void test732805() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSSourceFile jSSourceFile0 = JSSourceFile.fromCode(""com.google.common.collect.Collections2"", ""arguments"");
    Node node0 = compiler0.parse(jSSourceFile0);
    String string0 = NodeUtil.getSourceName(node0);
    assertNotNull(string0);
}",0,
project,0,test732806,"public void test732806() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSSourceFile jSSourceFile0 = JSSourceFile.fromCode(""com.google.common.collect.Collections2"", ""arguments"");
    Node node0 = compiler0.parse(jSSourceFile0);
    String string0 = NodeUtil.getSourceName(node0);
    assertEquals(""com.google.common.collect.Collections2"", string0);
}",0,
project,0,test733807,"public void test733807() throws Throwable {
    Node node0 = new Node(74);
    String string0 = NodeUtil.getSourceName(node0);
    assertNull(string0);
}",0,
project,0,test734808,"public void test734808() throws Throwable {
    Node node0 = new Node(56, (-1655), (-1655));
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    assertEquals(37, node1.getType());
}",0,"assertEquals(1, node1.getType())"
project,0,test735809,"public void test735809() throws Throwable {
    LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
    Logger logger0 = Logger.getLogger(""undefined"");
    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(lightweightMessageFormatter0, logger0);
    Compiler compiler0 = new Compiler(loggerErrorManager0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""undefined"", 8233, 8233);
    Node[] nodeArray0 = new Node[2];
    // Undeclared exception!
    try {
        NodeUtil.newCallNode(node0, nodeArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test736810,"public void test736810() throws Throwable {
    Node node0 = new Node(31, 15, 38);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test737811,"public void test737811() throws Throwable {
    Node node0 = Node.newString(32, ""E fy|<WA"", 26, 4);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test738812,"public void test738812() throws Throwable {
    Node node0 = new Node(33, 114, 114);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test739813,"public void test739813() throws Throwable {
    Node node0 = Node.newString(34, "".prototype"");
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETPROP .prototype
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test740814,"public void test740814() throws Throwable {
    Node node0 = Node.newString(""&"");
    Node node1 = new Node(35, node0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertFalse(boolean0);
}",0,
project,0,test741815,"public void test741815() throws Throwable {
    Node node0 = Node.newString(124, ""SETNAME"", 124, 124);
    node0.setType(42);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test742816,"public void test742816() throws Throwable {
    Node node0 = Node.newString(45, ""0tIM\""-?Cg4"", 3, 24);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test743817,"public void test743817() throws Throwable {
    Node node0 = new Node(47);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test744818,"public void test744818() throws Throwable {
    Node node0 = Node.newString(48, ""valueOf"");
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeBINDNAME valueOf
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test745819,"public void test745819() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test746820,"public void test746820() throws Throwable {
    Node node0 = Node.newString(61, "" d\""f`}jTA4"", 61, 10);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHISFN  d\""f`}jTA4 61
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test747821,"public void test747821() throws Throwable {
    Node node0 = Node.newString(63, ""NJwr,kkMNH':e"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test748822,"public void test748822() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test749823,"public void test749823() throws Throwable {
    Node node0 = new Node(74, 135, (-2699));
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_MEMBER
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test750824,"public void test750824() throws Throwable {
    Node node0 = new Node(75, 75, 75);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NAME 75
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test751825,"public void test751825() throws Throwable {
    Node node0 = new Node(76);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_NAME
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test752826,"public void test752826() throws Throwable {
    Node node0 = new Node(79, 100, 79);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLB 100
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test753827,"public void test753827() throws Throwable {
    Node node0 = new Node(80);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRB
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test754828,"public void test754828() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MayBeStringResultPredicate0);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test754829,"public void test754829() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(82, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test754830,"public void test754830() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test754831,"public void test754831() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(1905, node0.getLineno());
}",0,
project,0,test755832,"public void test755832() throws Throwable {
    Node node0 = Node.newString(86, ""// In7ut %num%"", 86, 86);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test756833,"public void test756833() throws Throwable {
    Node node0 = new Node(88);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test757834,"public void test757834() throws Throwable {
    Node node0 = Node.newString(89, "" of "");
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test758835,"public void test758835() throws Throwable {
    Node node0 = new Node(90, 121, 107);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test759836,"public void test759836() throws Throwable {
    Node node0 = Node.newString(91, "">>="", 91, 91);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test760837,"public void test760837() throws Throwable {
    Node node0 = new Node(92);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test761838,"public void test761838() throws Throwable {
    Node node0 = new Node(93);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test762839,"public void test762839() throws Throwable {
    Node node0 = new Node(94, 114, (-1655));
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,
project,0,test763840,"public void test763840() throws Throwable {
    Node node0 = Node.newString(95, ""Kz+$"", 136, 136);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test764841,"public void test764841() throws Throwable {
    Node node0 = new Node(96, 96, 96);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test765842,"public void test765842() throws Throwable {
    Node node0 = Node.newString(97, ""tr m uX)a"", 81, 81);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test766843,"public void test766843() throws Throwable {
    Node node0 = new Node(98, 98, 98);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test767844,"public void test767844() throws Throwable {
    Node node0 = new Node(99, 99, 99);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCOLON 99
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test768845,"public void test768845() throws Throwable {
    Node node0 = new Node(100, 100, 100);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test769846,"public void test769846() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""d_z#t:)("", 126, 119);
    Node node1 = new Node(101, node0, 16, 29);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertEquals(119, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test769847,"public void test769847() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""d_z#t:)("", 126, 119);
    Node node1 = new Node(101, node0, 16, 29);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertEquals(126, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test769848,"public void test769848() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""d_z#t:)("", 126, 119);
    Node node1 = new Node(101, node0, 16, 29);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test770849,"public void test770849() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test771850,"public void test771850() throws Throwable {
    Node node0 = new Node(103);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test772851,"public void test772851() throws Throwable {
    Node node0 = Node.newString(1861, ""printNameReferenceGraph"", 1861, 1861);
    node0.setType(105);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test773852,"public void test773852() throws Throwable {
    Node node0 = Node.newString(147, ""vL.rxg5N"");
    Node node1 = new Node(37, node0, node0);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,
project,0,test774853,"public void test774853() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
