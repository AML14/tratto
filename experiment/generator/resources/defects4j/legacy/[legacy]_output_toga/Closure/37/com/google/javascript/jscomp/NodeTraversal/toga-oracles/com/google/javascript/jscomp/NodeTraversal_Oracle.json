[ {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public String getSourceName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(nodeTraversal0.getSourceName())",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "InputId getInputId()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(inputId0)",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, jSError0.getCharno())",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public Node getCurrentNode()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(node0)",
  "exception" : "",
  "testName" : "test044"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public int getLineNumber()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test055"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public double getProgress()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test066"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public JSError makeError(Node n, CheckLevel level, DiagnosticType type, String... arguments)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test077"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "Scope createInitialScope(Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test088"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public Scope createScope(Node root, Scope parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test099"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public void traverse(Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1313"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1515"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public static void traverseRoots(AbstractCompiler compiler, Callback cb, Node... roots)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1616"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public String getSourceName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(nodeTraversal0.getSourceName())",
  "exception" : "",
  "testName" : "test1717"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public String getSourceName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(nodeTraversal0.getSourceName())",
  "exception" : "",
  "testName" : "test1818"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public int getLineNumber()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test1919"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public int getLineNumber()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test2020"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public int getLineNumber()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, nodeTraversal0.getLineNumber())",
  "exception" : "",
  "testName" : "test2121"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public JSModule getModule()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(jSModule0)",
  "exception" : "",
  "testName" : "test2222"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2424"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node0.getCharno())",
  "exception" : "",
  "testName" : "test2525"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public Node getEnclosingFunction()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(node0)",
  "exception" : "",
  "testName" : "test2626"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "void process(CompilerPass p)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2727"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "protected void traverseInnerNode(Node node, Node parent, Scope refinedScope)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2828"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public boolean hasScope()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2929"
}, {
  "className" : "com.google.javascript.jscomp.NodeTraversal",
  "methodSignature" : "public void traverse(Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3030"
} ]