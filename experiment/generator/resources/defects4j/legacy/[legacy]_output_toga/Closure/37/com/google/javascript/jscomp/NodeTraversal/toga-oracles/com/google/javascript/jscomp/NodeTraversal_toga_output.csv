project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""(function(t){})(y.prototype);"");
    FlowSensitiveInlineVariables flowSensitiveInlineVariables0 = new FlowSensitiveInlineVariables(compiler0);
    // Undeclared exception!
    try {
        flowSensitiveInlineVariables0.process(node0, node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test011,"public void test011() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""[source unknown]"", ""[source unknown]"");
    Denormalize.StripConstantAnnotations denormalize_StripConstantAnnotations0 = new Denormalize.StripConstantAnnotations(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, denormalize_StripConstantAnnotations0);
    Scope scope0 = new Scope(node0, compiler0);
    nodeTraversal0.traverseAtScope(scope0);
    assertEquals(""[source unknown]"", nodeTraversal0.getSourceName());
}",0,assertNotNull(nodeTraversal0.getSourceName())
project,0,test022,"public void test022() throws Throwable {
    Compiler compiler0 = new Compiler();
    GatherRawExports gatherRawExports0 = new GatherRawExports(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, gatherRawExports0);
    InputId inputId0 = nodeTraversal0.getInputId();
    assertNull(inputId0);
}",0,assertNotNull(inputId0)
project,0,test033,"public void test033() throws Throwable {
    Compiler compiler0 = new Compiler();
    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);
    Node node0 = Node.newString(""iu[a\""+.Z<v)"");
    JSError jSError0 = nodeTraversal0.makeError(node0, compiler0.OPTIMIZE_LOOP_ERROR, (String[]) null);
    assertEquals((-1), jSError0.getCharno());
}",0,"assertEquals(0, jSError0.getCharno())"
project,0,test044,"public void test044() throws Throwable {
    Compiler compiler0 = new Compiler();
    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);
    Node node0 = nodeTraversal0.getCurrentNode();
    assertNull(node0);
}",0,assertNotNull(node0)
project,0,test055,"public void test055() throws Throwable {
    Compiler compiler0 = new Compiler();
    StrictModeCheck strictModeCheck0 = new StrictModeCheck(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, strictModeCheck0);
    Node node0 = compiler0.parseTestCode(""com.google.javascript.jscomp.NodeTraversal$AbstractPostOrderCallback"");
    nodeTraversal0.traverse(node0);
    assertEquals(1, nodeTraversal0.getLineNumber());
}",0,
project,0,test066,"public void test066() throws Throwable {
    Compiler compiler0 = new Compiler();
    CheckDebuggerStatement checkDebuggerStatement0 = new CheckDebuggerStatement(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkDebuggerStatement0);
    Compiler compiler1 = nodeTraversal0.getCompiler();
    assertEquals(0.0, compiler1.getProgress(), 0.01);
}",0,
project,0,test077,"public void test077() throws Throwable {
    Compiler compiler0 = new Compiler();
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    // Undeclared exception!
    try {
        nodeTraversal0.makeError((Node) null, checkLevel0, compiler0.OPTIMIZE_LOOP_ERROR, (String[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.JSError"", e);
    }
}",0,
project,0,test088,"public void test088() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""u:Kc"", ""u:Kc"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    // Undeclared exception!
    try {
        typedScopeCreator0.createInitialScope(node0);
        fail(""Expecting exception: NoSuchElementException"");
    } catch (NoSuchElementException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.LinkedList"", e);
    }
}",0,
project,0,test099,"public void test099() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""t"");
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
    // Undeclared exception!
    try {
        typedScopeCreator0.createScope(node0, (Scope) null);
        fail(""Expecting exception: NoSuchElementException"");
    } catch (NoSuchElementException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.LinkedList"", e);
    }
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("""");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    // Undeclared exception!
    try {
        nodeTraversal0.traverse(node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""GPC(bbmyFZ:]-G"", ""GPC(bbmyFZ:]-G"");
    StrictModeCheck strictModeCheck0 = new StrictModeCheck(compiler0);
    // Undeclared exception!
    try {
        strictModeCheck0.process(node0, node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // INTERNAL COMPILER ERROR.
        // Please report this problem.
        // null
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test1616,"public void test1616() throws Throwable {
    Compiler compiler0 = new Compiler();
    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);
    Node node0 = compiler0.parseTestCode(""t"");
    Node[] nodeArray0 = new Node[6];
    nodeArray0[0] = node0;
    Node node1 = new Node(45, node0);
    nodeArray0[1] = node1;
    // Undeclared exception!
    try {
        NodeTraversal.traverseRoots((AbstractCompiler) compiler0, (NodeTraversal.Callback) moveFunctionDeclarations0, nodeArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // INTERNAL COMPILER ERROR.
        // Please report this problem.
        // null
        //   Node(SCRIPT):  [testcode] :1:0
        // t
        //   Parent(SHEQ):  [testcode] :-1:-1
        // [source unknown]
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    Compiler compiler0 = new Compiler();
    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);
    Node node0 = compiler0.parseSyntheticCode(""t"", ""t"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);
    nodeTraversal0.traverseInnerNode(node0, node0, (Scope) null);
    assertEquals(""t"", nodeTraversal0.getSourceName());
}",0,assertNotNull(nodeTraversal0.getSourceName())
project,0,test1818,"public void test1818() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""7tq!!x`d*%KCgqtY"", ""7tq!!x`d*%KCgqtY"");
    Scope scope0 = new Scope(node0, compiler0);
    MakeDeclaredNamesUnique makeDeclaredNamesUnique0 = new MakeDeclaredNamesUnique();
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, makeDeclaredNamesUnique0);
    nodeTraversal0.traverseInnerNode(node0, node0, scope0);
    assertEquals(""7tq!!x`d*%KCgqtY"", nodeTraversal0.getSourceName());
}",0,assertNotNull(nodeTraversal0.getSourceName())
project,0,test1919,"public void test1919() throws Throwable {
    Compiler compiler0 = new Compiler();
    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);
    Node node0 = Node.newString(12, ""Z"", 12, 12);
    Scope scope0 = new Scope(node0, (ObjectType) null);
    nodeTraversal0.traverseInnerNode(node0, node0, scope0);
    int int0 = nodeTraversal0.getLineNumber();
    assertEquals(12, int0);
}",0,"assertEquals(1, int0)"
project,0,test2020,"public void test2020() throws Throwable {
    Compiler compiler0 = new Compiler();
    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);
    Node node0 = Node.newString(2, """");
    Scope scope0 = new Scope(node0, (ObjectType) null);
    nodeTraversal0.traverseInnerNode(node0, node0, scope0);
    int int0 = nodeTraversal0.getLineNumber();
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test2121,"public void test2121() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""t"");
    MakeDeclaredNamesUnique makeDeclaredNamesUnique0 = new MakeDeclaredNamesUnique();
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, makeDeclaredNamesUnique0);
    nodeTraversal0.traverse(node0);
    nodeTraversal0.getModule();
    assertEquals(1, nodeTraversal0.getLineNumber());
}",0,"assertEquals(0, nodeTraversal0.getLineNumber())"
project,0,test2222,"public void test2222() throws Throwable {
    Compiler compiler0 = new Compiler();
    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);
    compiler0.parseTestCode(""could not determine the type of this expression"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);
    JSModule jSModule0 = nodeTraversal0.getModule();
    assertNull(jSModule0);
}",0,assertNotNull(jSModule0)
project,0,test2424,"public void test2424() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""(function(){})(y.protCtype);"");
    CoalesceVariableNames coalesceVariableNames0 = new CoalesceVariableNames(compiler0, false);
    // Undeclared exception!
    try {
        coalesceVariableNames0.process(node0, node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test2525,"public void test2525() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""@TV(q`[Qqq4'uz)<"", ""var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  };}function JSCompiler_unstubMethod(    JSCompiler_unstubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiler_stubMap[JSCompiler_unstubMethod_id] =       JSCompiler_unstubMethod_body;}"");
    assertEquals(0, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test2626,"public void test2626() throws Throwable {
    Compiler compiler0 = new Compiler();
    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);
    Node node0 = nodeTraversal0.getEnclosingFunction();
    assertNull(node0);
}",0,assertNotNull(node0)
project,0,test2727,"public void test2727() throws Throwable {
    Compiler compiler0 = new Compiler();
    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);
    // Undeclared exception!
    try {
        compiler0.process(moveFunctionDeclarations0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // INTERNAL COMPILER ERROR.
        // Please report this problem.
        // null
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test2828,"public void test2828() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""[source unknown]"", ""[source unknown]"");
    Scope scope0 = new Scope(node0, compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    // Undeclared exception!
    try {
        nodeTraversal0.traverseInnerNode((Node) null, node0, scope0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test2929,"public void test2929() throws Throwable {
    Compiler compiler0 = new Compiler();
    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);
    boolean boolean0 = nodeTraversal0.hasScope();
    assertFalse(boolean0);
}",0,
project,0,test3030,"public void test3030() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = new Node(132);
    Denormalize.StripConstantAnnotations denormalize_StripConstantAnnotations0 = new Denormalize.StripConstantAnnotations(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, denormalize_StripConstantAnnotations0);
    nodeTraversal0.traverse(node0);
    assertEquals(44, Node.IS_OPTIONAL_PARAM);
}",0,
