project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0011,"public void test0011() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""IXV"", (-1), (-1));
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(0, node0.getSideEffectFlags());
}",0,"assertEquals(0, node0.getSideEffectFlags())"
project,0,test0012,"public void test0012() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""IXV"", (-1), (-1));
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test0013,"public void test0013() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""IXV"", (-1), (-1));
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertTrue(node0.isQualifiedName());
}",0,
project,0,test0024,"public void test0024() throws Throwable {
    Node node0 = new Node((-1701), (-1701), (-1701));
    boolean boolean0 = NodeUtil.isNameReferenced(node0, ""m+DEB*@?n"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0035,"public void test0035() throws Throwable {
    Node node0 = new Node(108);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForCallOrNew(node0, (-1784));
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test0046,"public void test0046() throws Throwable {
    Node node0 = Node.newNumber(1241.5603038030308);
    boolean boolean0 = NodeUtil.isFunctionObjectCallOrApply(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0057,"public void test0057() throws Throwable {
    Node node0 = new Node(107);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test0068,"public void test0068() throws Throwable {
    Node node0 = new Node(11);
    // Undeclared exception!
    try {
        NodeUtil.getPrototypePropertyName(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test0079,"public void test0079() throws Throwable {
    Node node0 = new Node(104, 104, 104);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDOT 104
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test00810,"public void test00810() throws Throwable {
    Node node0 = new Node(104, 104, 104);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test00911,"public void test00911() throws Throwable {
    Node node0 = Node.newNumber(Double.NaN);
    // Undeclared exception!
    try {
        NodeUtil.functionCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected CALL node, got NUMBER
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01012,"public void test01012() throws Throwable {
    Node node0 = Node.newString(2746, ""[Tq+(}`&.m1wg,5[y"");
    boolean boolean0 = NodeUtil.containsCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01113,"public void test01113() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    // Undeclared exception!
    try {
        NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, ""Invalid attempt to remove node: "", (Node) null, ""Invalid attempt to remove node: "");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test01214,"public void test01214() throws Throwable {
    Node node0 = new Node(69, 69, 69);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForFunction(node0, 4);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test01315,"public void test01315() throws Throwable {
    Node node0 = new Node(66, 66, 66);
    // Undeclared exception!
    try {
        NodeUtil.isVarArgsFunction(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test01416,"public void test01416() throws Throwable {
    Node node0 = Node.newString(30, ""arguments"");
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01517,"public void test01517() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    Node node1 = NodeUtil.getFunctionBody(node0);
    assertNull(node1);
}",0,
project,0,test01618,"public void test01618() throws Throwable {
    Node node0 = Node.newNumber(1732.47788);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test01619,"public void test01619() throws Throwable {
    Node node0 = Node.newNumber(1732.47788);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01720,"public void test01720() throws Throwable {
    Node node0 = new Node(105);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01821,"public void test01821() throws Throwable {
    Node node0 = new Node(26, 26, (-6));
    // Undeclared exception!
    try {
        NodeUtil.getExpressionBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02022,"public void test02022() throws Throwable {
    Node node0 = new Node(86);
    // Undeclared exception!
    try {
        NodeUtil.getExpressionBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02123,"public void test02123() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.getExpressionBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test02224,"public void test02224() throws Throwable {
    Node node0 = new Node(100);
    // Undeclared exception!
    try {
        NodeUtil.getExpressionBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02325,"public void test02325() throws Throwable {
    Node node0 = new Node(101);
    // Undeclared exception!
    try {
        NodeUtil.getExpressionBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02426,"public void test02426() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    NodeUtil.getExpressionBooleanValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test02427,"public void test02427() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    NodeUtil.getExpressionBooleanValue(node0);
    assertEquals(77, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test02428,"public void test02428() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    NodeUtil.getExpressionBooleanValue(node0);
    assertEquals(91, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test03329,"public void test03329() throws Throwable {
    Node node0 = new Node(89);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    NodeUtil.getBooleanValue(node1);
    assertEquals(122, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test03630,"public void test03630() throws Throwable {
    Node node0 = Node.newString(67, ""%="");
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""NaN"", node0);
    NodeUtil.getExpressionBooleanValue(node1);
    assertEquals(38, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test03631,"public void test03631() throws Throwable {
    Node node0 = Node.newString(67, ""%="");
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""NaN"", node0);
    NodeUtil.getExpressionBooleanValue(node1);
    assertNotSame(node0, node1);
}",0,
project,0,test03732,"public void test03732() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""undefined"", 8, (-2187));
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""undefined"", string0);
}",1,
project,0,test03733,"public void test03733() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""undefined"", 8, (-2187));
    String string0 = NodeUtil.getStringValue(node0);
    assertNotNull(string0);
}",1,
project,0,test03734,"public void test03734() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""undefined"", 8, (-2187));
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals((-1), node0.getLineno());
}",0,
project,0,test03835,"public void test03835() throws Throwable {
    Node node0 = Node.newString(""1l"");
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""1l"", string0);
}",1,
project,0,test03936,"public void test03936() throws Throwable {
    Node node0 = Node.newNumber(1241.5603038030308);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""1241.5603038030308"", string0);
}",1,
project,0,test04037,"public void test04037() throws Throwable {
    Node node0 = Node.newString(41, ""k"");
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""null"", string0);
}",1,
project,0,test04138,"public void test04138() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""false"", string0);
}",1,
project,0,test04239,"public void test04239() throws Throwable {
    Node node0 = Node.newString("""");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(""undefined"", string0);
}",1,
project,0,test04240,"public void test04240() throws Throwable {
    Node node0 = Node.newString("""");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(122, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test04341,"public void test04341() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    String string0 = NodeUtil.getStringValue(node0);
    assertNull(string0);
}",1,
project,0,test04442,"public void test04442() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""iD_gCF"", 106, 106);
    String string0 = NodeUtil.getStringValue(node0);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test04443,"public void test04443() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""iD_gCF"", 106, 106);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(106, node0.getLineno());
}",1,
project,0,test04444,"public void test04444() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""iD_gCF"", 106, 106);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04445,"public void test04445() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""iD_gCF"", 106, 106);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(106, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test04546,"public void test04546() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 94, 94);
    String string0 = NodeUtil.getStringValue(node0);
    assertNotNull(string0);
}",1,
project,0,test04547,"public void test04547() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 94, 94);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(94, node0.getLineno());
}",0,
project,0,test04548,"public void test04548() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 94, 94);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(94, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test04549,"public void test04549() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 94, 94);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""Infinity"", string0);
}",1,
project,0,test04650,"public void test04650() throws Throwable {
    Node node0 = Node.newNumber((double) 17);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""17"", string0);
}",0,assertNotNull(string0)
project,0,test04751,"public void test04751() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""PRIVATE"", 3292, 3292);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(3292, node0.getCharno());
}",0,
project,0,test04752,"public void test04752() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""PRIVATE"", 3292, 3292);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(3292, node0.getLineno());
}",0,
project,0,test04753,"public void test04753() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""PRIVATE"", 3292, 3292);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",1,
project,0,test04754,"public void test04754() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""PRIVATE"", 3292, 3292);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test04855,"public void test04855() throws Throwable {
    Node node0 = Node.newString(114, ""rI"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,assertNotNull(double0)
project,0,test04956,"public void test04956() throws Throwable {
    Node node0 = Node.newNumber((double) 57, 57, (-48));
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(57.0, (double) double0, 0.01);
}",0,
project,0,test05057,"public void test05057() throws Throwable {
    Node node0 = new Node(41);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test05158,"public void test05158() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test05259,"public void test05259() throws Throwable {
    Node node0 = Node.newString(44, ""^="");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(1.0, (double) double0, 0.01);
}",0,
project,0,test05360,"public void test05360() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    assertNotNull(node0);
}",0,
project,0,test05361,"public void test05361() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test05362,"public void test05362() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",0,assertNotNull(double0)
project,0,test05463,"public void test05463() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 16, (-3788));
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",1,
project,0,test05464,"public void test05464() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 16, (-3788));
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",1,
project,0,test05465,"public void test05465() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 16, (-3788));
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test05566,"public void test05566() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""try "", (-46), 117);
    node0.addChildrenToBack(node0);
    String string0 = NodeUtil.getFunctionName(node0);
    assertEquals(1, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test05567,"public void test05567() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""try "", (-46), 117);
    node0.addChildrenToBack(node0);
    String string0 = NodeUtil.getFunctionName(node0);
    assertEquals(""try "", string0);
}",0,assertNotNull(string0)
project,0,test05668,"public void test05668() throws Throwable {
    Node node0 = Node.newString(77, ""<,R3,Np^"", 39, 39);
    Node node1 = new Node(105, node0, node0, node0, node0, (-2094), (-3));
    Node node2 = new Node((-37), node1);
    String string0 = NodeUtil.getNearestFunctionName(node1);
    assertEquals(""<,R3,Np^"", string0);
}",0,
project,0,test05669,"public void test05669() throws Throwable {
    Node node0 = Node.newString(77, ""<,R3,Np^"", 39, 39);
    Node node1 = new Node(105, node0, node0, node0, node0, (-2094), (-3));
    Node node2 = new Node((-37), node1);
    String string0 = NodeUtil.getNearestFunctionName(node1);
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test05770,"public void test05770() throws Throwable {
    Node node0 = Node.newNumber(1241.5603038030308);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test05871,"public void test05871() throws Throwable {
    Node node0 = Node.newString(""1l"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test05972,"public void test05972() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test06073,"public void test06073() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test06174,"public void test06174() throws Throwable {
    Node node0 = new Node(44, 44, 44);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test06275,"public void test06275() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test06376,"public void test06376() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""p('e]9@Gp7Gpu"", node0, """");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertEquals(43, node1.getCharno());
}",0,
project,0,test06377,"public void test06377() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""p('e]9@Gp7Gpu"", node0, """");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test06378,"public void test06378() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""p('e]9@Gp7Gpu"", node0, """");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertTrue(node1.isUnscopedQualifiedName());
}",0,assertFalse(node1.isUnscopedQualifiedName())
project,0,test06479,"public void test06479() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 94, 94);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test06480,"public void test06480() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 94, 94);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertEquals(94, node0.getLineno());
}",0,
project,0,test06481,"public void test06481() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 94, 94);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test06482,"public void test06482() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 94, 94);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertEquals(94, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test06583,"public void test06583() throws Throwable {
    Node node0 = new Node(47);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test06684,"public void test06684() throws Throwable {
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test06785,"public void test06785() throws Throwable {
    Node node0 = new Node(64);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
    assertTrue(boolean0);
}",0,
project,0,test06886,"public void test06886() throws Throwable {
    Node node0 = new Node(105);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test06987,"public void test06987() throws Throwable {
    Node node0 = new Node(105);
    Node node1 = new Node(85, node0, node0, node0, node0, 48, 8);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test07088,"public void test07088() throws Throwable {
    Node node0 = Node.newString(11, ""Uw*{eDIZ&"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test07189,"public void test07189() throws Throwable {
    Node node0 = new Node(12, 12, 12);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test07290,"public void test07290() throws Throwable {
    Node node0 = new Node(14, 14, 14);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test07391,"public void test07391() throws Throwable {
    Node node0 = new Node(17, (-1953), 37);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test07492,"public void test07492() throws Throwable {
    Node node0 = new Node(18, 153, 18);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test07593,"public void test07593() throws Throwable {
    Node node0 = new Node(25);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test07694,"public void test07694() throws Throwable {
    Node node0 = Node.newString(19, ""c!7klT78fg"");
    Vector<String> vector0 = new Vector<String>();
    ImmutableSortedSet<String> immutableSortedSet0 = ImmutableSortedSet.withExplicitOrder((List<String>) vector0);
    Node node1 = new Node(27, node0, node0, node0, 32, 32);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node1, immutableSortedSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test07795,"public void test07795() throws Throwable {
    Node node0 = new Node(28, 2, 42);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test07896,"public void test07896() throws Throwable {
    Node node0 = new Node(2770);
    Node node1 = new Node(29, node0, node0, node0, node0, 1856, 2);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test07997,"public void test07997() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test08098,"public void test08098() throws Throwable {
    Node node0 = new Node(31);
    Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(iterator0).hasNext();
    ImmutableSortedSet<String> immutableSortedSet0 = ImmutableSortedSet.copyOf((Iterator<? extends String>) iterator0);
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, immutableSortedSet0);
    assertFalse(boolean0);
}",0,
project,0,test08199,"public void test08199() throws Throwable {
    Node node0 = Node.newString(32, ""OR ryX] \n"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test082100,"public void test082100() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$10"", 76, 76);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertEquals(76, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test082101,"public void test082101() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$10"", 76, 76);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test082102,"public void test082102() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$10"", 76, 76);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test082103,"public void test082103() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$10"", 76, 76);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertEquals(76, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test082104,"public void test082104() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$10"", 76, 76);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test083105,"public void test083105() throws Throwable {
    Node node0 = Node.newString(35, ""Uw*{eDIZ&"");
    ImmutableSet<String> immutableSet0 = ImmutableSet.of(""GETELEM Uw*{eDIZ&\n"", ""AK{"", "">>"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, immutableSet0);
    assertFalse(boolean0);
}",0,
project,0,test084106,"public void test084106() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""IXV"", (-1), (-1));
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test084107,"public void test084107() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""IXV"", (-1), (-1));
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertEquals(0, node0.getSideEffectFlags());
}",0,"assertEquals(1, node0.getSideEffectFlags())"
project,0,test084108,"public void test084108() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""IXV"", (-1), (-1));
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertFalse(node0.hasChildren());
}",0,
project,0,test085109,"public void test085109() throws Throwable {
    Node node0 = Node.newNumber((double) 14);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertTrue(boolean0);
}",0,
project,0,test086110,"public void test086110() throws Throwable {
    Node node0 = Node.newString("""");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertTrue(boolean0);
}",0,
project,0,test087111,"public void test087111() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test088112,"public void test088112() throws Throwable {
    Node node0 = new Node(100);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Node node1 = new Node(42, node0);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test089113,"public void test089113() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertTrue(boolean0);
}",0,
project,0,test090114,"public void test090114() throws Throwable {
    Node node0 = Node.newString(44, ""toStr[jig"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertTrue(boolean0);
}",0,
project,0,test091115,"public void test091115() throws Throwable {
    Node node0 = new Node(45, 45, (-6));
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test092116,"public void test092116() throws Throwable {
    Node node0 = new Node(46);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test093117,"public void test093117() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""rNyecV2~b"", 49, (-9));
    ImmutableSet<String> immutableSet0 = ImmutableSet.of(""IXV"", ""rNyecV2~b"", ""IXV"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, immutableSet0);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test093118,"public void test093118() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""rNyecV2~b"", 49, (-9));
    ImmutableSet<String> immutableSet0 = ImmutableSet.of(""IXV"", ""rNyecV2~b"", ""IXV"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, immutableSet0);
    assertTrue(boolean0);
}",0,
project,0,test094119,"public void test094119() throws Throwable {
    Compiler compiler0 = new Compiler((PrintStream) null);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""zXGQ6R[X!B *I&lY*Mh"", ""H(qb585z`v+&gM9|+"");
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test095120,"public void test095120() throws Throwable {
    Node node0 = new Node(61);
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test096121,"public void test096121() throws Throwable {
    Compiler compiler0 = new Compiler((PrintStream) null);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""zXGQ6R[X!B *I&lY*Mh"", ""H(qb585z`v+&gM9|+"");
    node0.addChildToFront(node0);
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test097122,"public void test097122() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test098123,"public void test098123() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test099124,"public void test099124() throws Throwable {
    Node node0 = new Node(11);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test100125,"public void test100125() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(12);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test101126,"public void test101126() throws Throwable {
    Node node0 = Node.newString(13, ""Inciniey"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test102127,"public void test102127() throws Throwable {
    Node node0 = new Node(14);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test103128,"public void test103128() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(15);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test104129,"public void test104129() throws Throwable {
    Node node0 = new Node(16);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test105130,"public void test105130() throws Throwable {
    Node node0 = Node.newString(126, """");
    Node node1 = new Node(17, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test106131,"public void test106131() throws Throwable {
    Node node0 = new Node(18, 18, 18);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test107132,"public void test107132() throws Throwable {
    Node node0 = Node.newString(19, ""FNHS[WTZWSDlN|"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test108133,"public void test108133() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(20);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test109134,"public void test109134() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(21);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test110135,"public void test110135() throws Throwable {
    Node node0 = new Node(23, 23, 23);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test111136,"public void test111136() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(24);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test112137,"public void test112137() throws Throwable {
    Node node0 = new Node(25);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test113138,"public void test113138() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(26);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test114139,"public void test114139() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(27);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test115140,"public void test115140() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(28);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test116141,"public void test116141() throws Throwable {
    Node node0 = new Node(2770);
    Node node1 = new Node(29, node0, node0, node0, node0, 1856, 2);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test117142,"public void test117142() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(30);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test118143,"public void test118143() throws Throwable {
    Node node0 = new Node(31);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDELPROP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test119144,"public void test119144() throws Throwable {
    Node node0 = new Node(32, 51, (-3100));
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test120145,"public void test120145() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertEquals(80, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test120146,"public void test120146() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertEquals(80, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test120147,"public void test120147() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test120148,"public void test120148() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test121149,"public void test121149() throws Throwable {
    Node node0 = Node.newString(104, "")"");
    Node node1 = new Node(34, node0, node0, node0, (-2010), 29);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1, predicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETPROP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test122150,"public void test122150() throws Throwable {
    Node node0 = new Node(81);
    Node node1 = new Node(36, node0, node0, node0, node0);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETELEM
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test123151,"public void test123151() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(37);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test124152,"public void test124152() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(38);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test125153,"public void test125153() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(42);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test126154,"public void test126154() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test127155,"public void test127155() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(47);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test128156,"public void test128156() throws Throwable {
    Node node0 = Node.newString(48, ""y7cX^k9JL\u0003-MT[V/"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test129157,"public void test129157() throws Throwable {
    Node node0 = new Node(112);
    Node node1 = new Node(49, node0, node0, node0, node0, 256, 28);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHROW 256
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test130158,"public void test130158() throws Throwable {
    Node node0 = Node.newString(50, ""catch("");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test131159,"public void test131159() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(51);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test132160,"public void test132160() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(53);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test133161,"public void test133161() throws Throwable {
    Node node0 = new Node(54, 54, 54);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeGETVAR 54
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test134162,"public void test134162() throws Throwable {
    Node node0 = new Node(55);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETVAR
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test135163,"public void test135163() throws Throwable {
    Node node0 = Node.newString(56, ""+=XL"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test136164,"public void test136164() throws Throwable {
    Node node0 = Node.newString(57, ""exe"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test137165,"public void test137165() throws Throwable {
    Node node0 = new Node(58, 43, 43);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_INIT_VALUES 43
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test138166,"public void test138166() throws Throwable {
    Node node0 = new Node(59);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_NEXT
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test139167,"public void test139167() throws Throwable {
    Node node0 = Node.newString(60, ""NodeUtil$VarCollector"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,
project,0,test140168,"public void test140168() throws Throwable {
    Node node0 = new Node(61, (-61), 61);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test141169,"public void test141169() throws Throwable {
    Node node0 = new Node(62, 62, 62);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRETURN_RESULT 62
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test142170,"public void test142170() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(63);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test143171,"public void test143171() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(64);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test144172,"public void test144172() throws Throwable {
    Node node0 = Node.newString(65, ""FNHS[WTZWSDlNj"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test145173,"public void test145173() throws Throwable {
    Node node0 = new Node(66, 66, 66);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test146174,"public void test146174() throws Throwable {
    Node node0 = new Node(67);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEL_REF
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test147175,"public void test147175() throws Throwable {
    Node node0 = Node.newString(68, ""nL"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test148176,"public void test148176() throws Throwable {
    Node node0 = Node.newString(69, ""EXTn8RS"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test149177,"public void test149177() throws Throwable {
    Node node0 = Node.newString(71, ""NodeUtil$VarCollector"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test150178,"public void test150178() throws Throwable {
    Node node0 = new Node(72, 72, 72);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLTEXT 72
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test151179,"public void test151179() throws Throwable {
    Node node0 = new Node(73, 73, 73);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_MEMBER 73
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test152180,"public void test152180() throws Throwable {
    Node node0 = new Node(74, 74, 74);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_MEMBER 74
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test153181,"public void test153181() throws Throwable {
    Node node0 = new Node(75, 75, (-1763));
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NAME
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test154182,"public void test154182() throws Throwable {
    Node node0 = Node.newString(76, ""FNHS[WTZWSDlN|"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test155183,"public void test155183() throws Throwable {
    Node node0 = new Node(77);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTRY
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test156184,"public void test156184() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test157185,"public void test157185() throws Throwable {
    Node node0 = Node.newString(79, ""e6exoHo?]7$mVo9rE"", 79, 51);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLB e6exoHo?]7$mVo9rE 79
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test158186,"public void test158186() throws Throwable {
    Node node0 = new Node(80);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRB
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test159187,"public void test159187() throws Throwable {
    Node node0 = new Node(81);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLC
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test160188,"public void test160188() throws Throwable {
    Node node0 = new Node(41);
    Node node1 = new Node(82, node0, node0, node0, node0, (-1), 1946);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRC
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test161189,"public void test161189() throws Throwable {
    Node node0 = new Node(83, 83, 83);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLP 83
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test162190,"public void test162190() throws Throwable {
    Node node0 = new Node(84, 84, 84);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test163191,"public void test163191() throws Throwable {
    Node node0 = new Node(85);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test164192,"public void test164192() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test165193,"public void test165193() throws Throwable {
    Node node0 = new Node(87, 87, 87);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test166194,"public void test166194() throws Throwable {
    Node node0 = Node.newString(88, "")"");
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test167195,"public void test167195() throws Throwable {
    Node node0 = new Node(89);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test168196,"public void test168196() throws Throwable {
    Node node0 = new Node(91, 91, 91);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test169197,"public void test169197() throws Throwable {
    Node node0 = Node.newString(92, ""S`h+{H}S"");
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test170198,"public void test170198() throws Throwable {
    Node node0 = new Node(94, 94, 94);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test171199,"public void test171199() throws Throwable {
    Node node0 = Node.newString(95, ""try "");
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test172200,"public void test172200() throws Throwable {
    Node node0 = Node.newString(96, ""Ndp3@$E1kCNI}GBT"");
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test173201,"public void test173201() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(98);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test174202,"public void test174202() throws Throwable {
    Node node0 = new Node(99, 99, 99);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCOLON 99
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test175203,"public void test175203() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(100);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test176204,"public void test176204() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(101);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test177205,"public void test177205() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test178206,"public void test178206() throws Throwable {
    Node node0 = Node.newString(103, ""F`oD0{gLd/|t'[b/D"", 1887, 1887);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test179207,"public void test179207() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(105);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test180208,"public void test180208() throws Throwable {
    Node node0 = new Node(106, 106, 65136);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test181209,"public void test181209() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(108);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test182210,"public void test182210() throws Throwable {
    Node node0 = new Node(109);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test183211,"public void test183211() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(110);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test184212,"public void test184212() throws Throwable {
    Node node0 = new Node(111);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test185213,"public void test185213() throws Throwable {
    Node node0 = new Node(112);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test186214,"public void test186214() throws Throwable {
    Node node0 = new Node(113, 113, 113);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test187215,"public void test187215() throws Throwable {
    Node node0 = Node.newString(114, ""rI"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test188216,"public void test188216() throws Throwable {
    Node node0 = Node.newString(""$R~"");
    Node node1 = new Node(116, node0, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test189217,"public void test189217() throws Throwable {
    Node node0 = Node.newString(117, ""com.google.common.collect.ExplicitOrdering"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test190218,"public void test190218() throws Throwable {
    Node node0 = Node.newString(68, ""nL"");
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    Node node1 = NodeUtil.newVarNode(""0h4ahDRK)"", node0);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeVAR
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test191219,"public void test191219() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test192220,"public void test192220() throws Throwable {
    Node node0 = Node.newString(120, ""Dae"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test193221,"public void test193221() throws Throwable {
    Node node0 = Node.newString(121, ""Dae"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test194222,"public void test194222() throws Throwable {
    Node node0 = new Node(664);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test195223,"public void test195223() throws Throwable {
    Node node0 = Node.newString(31, "")"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test196224,"public void test196224() throws Throwable {
    Node node0 = new Node(32);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test197225,"public void test197225() throws Throwable {
    Node node0 = Node.newString(34, ""s+gw,~GRk9t#ac}Gd"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test198226,"public void test198226() throws Throwable {
    Node node0 = Node.newString(35, ""UI*{eDOJ&"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,
project,0,test199227,"public void test199227() throws Throwable {
    Node node0 = Node.newString(37, "")"");
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test200228,"public void test200228() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test201229,"public void test201229() throws Throwable {
    Node node0 = Node.newString(42, ""iE\""nD?]I&5s^c[Pt#NZ"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test202230,"public void test202230() throws Throwable {
    Node node0 = new Node(43);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test203231,"public void test203231() throws Throwable {
    Node node0 = Node.newString(44, ""1nfinity"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test204232,"public void test204232() throws Throwable {
    Node node0 = new Node(45);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test205233,"public void test205233() throws Throwable {
    Node node0 = Node.newString(46, ""Dv*;f;1\"""");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test206234,"public void test206234() throws Throwable {
    Node node0 = Node.newString(49, ""=DYN1"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test207235,"public void test207235() throws Throwable {
    Node node0 = new Node(51);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test208236,"public void test208236() throws Throwable {
    Node node0 = Node.newString(54, ""FNHS[WTZWSDlNj"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test209237,"public void test209237() throws Throwable {
    Node node0 = new Node(58);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test210238,"public void test210238() throws Throwable {
    Node node0 = Node.newString(59, ""D{"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test211239,"public void test211239() throws Throwable {
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test212240,"public void test212240() throws Throwable {
    Node node0 = new Node(64);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test213241,"public void test213241() throws Throwable {
    Node node0 = Node.newString(67, ""catch("");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test214242,"public void test214242() throws Throwable {
    Node node0 = Node.newString(70, ""Mvj`FMfK3y`6J jQ5"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test215243,"public void test215243() throws Throwable {
    Node node0 = Node.newString(72, ""FNHS[WTZWSDlN|"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test216244,"public void test216244() throws Throwable {
    Node node0 = new Node(73, 73, 73);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test217245,"public void test217245() throws Throwable {
    Node node0 = new Node(74);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test218246,"public void test218246() throws Throwable {
    Node node0 = new Node(75, 75, 65136);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test219247,"public void test219247() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test220248,"public void test220248() throws Throwable {
    Node node0 = Node.newString(80, ""+ 6S%O.PGCiL}Y"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test221249,"public void test221249() throws Throwable {
    Node node0 = new Node(81);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test222250,"public void test222250() throws Throwable {
    Node node0 = Node.newString(83, ""FNS[WTWSDlN|"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test223251,"public void test223251() throws Throwable {
    Node node0 = new Node(98);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test224252,"public void test224252() throws Throwable {
    Node node0 = Node.newString(99, ""N'ZK`[Na!DfssM"", 99, 64336);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test225253,"public void test225253() throws Throwable {
    Node node0 = new Node(100);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test226254,"public void test226254() throws Throwable {
    Node node0 = Node.newString(101, ""exec"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test227255,"public void test227255() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test228256,"public void test228256() throws Throwable {
    Node node0 = Node.newString(110, ""FNHS[WTZWSDlNj"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test229257,"public void test229257() throws Throwable {
    Node node0 = Node.newString(115, ""~e"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test230258,"public void test230258() throws Throwable {
    Node node0 = Node.newString(""ENUM_INIT_ARRAY"");
    Node node1 = new Node(118, node0, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test231259,"public void test231259() throws Throwable {
    Node node0 = Node.newString(123, ""\""h'B5gAgku7$FP*/`@"", 123, 123);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test232260,"public void test232260() throws Throwable {
    Node node0 = new Node(124);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test233261,"public void test233261() throws Throwable {
    Node node0 = new Node(125);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test234262,"public void test234262() throws Throwable {
    Node node0 = new Node(127, 127, 127);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test235263,"public void test235263() throws Throwable {
    Node node0 = new Node(128);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test236264,"public void test236264() throws Throwable {
    Node node0 = new Node(129);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test237265,"public void test237265() throws Throwable {
    Node node0 = Node.newString(64, ""=XnL"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test238266,"public void test238266() throws Throwable {
    Node node0 = new Node(47, 47, 47);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test239267,"public void test239267() throws Throwable {
    Node node0 = new Node(105);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test240268,"public void test240268() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    Node node1 = new Node(22, node0, node0, node0, node0, 48, 8);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test241269,"public void test241269() throws Throwable {
    Node node0 = Node.newString(30, ""catch("");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test242270,"public void test242270() throws Throwable {
    Node node0 = Node.newString(97, ""catch("", 97, 97);
    Node node1 = new Node(97, node0, 46, (-2));
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test243271,"public void test243271() throws Throwable {
    Node node0 = Node.newString(93, ""9 F9s%|Z1!'i"");
    Node node1 = new Node(38, node0, node0, node0, node0);
    node0.addChildToFront(node1);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test244272,"public void test244272() throws Throwable {
    Node node0 = new Node(100);
    // Undeclared exception!
    try {
        NodeUtil.constructorCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected NEW node, got OR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test245273,"public void test245273() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    // Undeclared exception!
    try {
        NodeUtil.callHasLocalResult(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test246274,"public void test246274() throws Throwable {
    Node node0 = new Node(37, 37, 37);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test247275,"public void test247275() throws Throwable {
    Node node0 = new Node(89);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test248276,"public void test248276() throws Throwable {
    Node node0 = new Node(30, 30, 3719);
    // Undeclared exception!
    try {
        NodeUtil.nodeTypeMayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test249277,"public void test249277() throws Throwable {
    Node node0 = Node.newString(31, "")"");
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test250278,"public void test250278() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertEquals(91, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test250279,"public void test250279() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test250280,"public void test250280() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertEquals(77, node0.getCharno());
}",0,
project,0,test250281,"public void test250281() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test251282,"public void test251282() throws Throwable {
    Node node0 = Node.newString(49, ""=DYN1"");
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test252283,"public void test252283() throws Throwable {
    Node node0 = Node.newString(113, ""p-%"", (-1386), 92);
    Node node1 = new Node(102, node0);
    Compiler compiler0 = new Compiler();
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test253284,"public void test253284() throws Throwable {
    Node node0 = Node.newString(103, ""nL"", 165, 1042);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test254285,"public void test254285() throws Throwable {
    Node node0 = new Node(37, 37, (-751));
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test255286,"public void test255286() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test255287,"public void test255287() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertEquals(91, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test255288,"public void test255288() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertEquals(77, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test255289,"public void test255289() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test256290,"public void test256290() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+GsUyeJhn!.+Aq4"", (-3), 118);
    Node node1 = NodeUtil.newExpr(node0);
    Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, set0);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test256291,"public void test256291() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+GsUyeJhn!.+Aq4"", (-3), 118);
    Node node1 = NodeUtil.newExpr(node0);
    Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, set0);
    assertTrue(boolean0);
}",0,
project,0,test256292,"public void test256292() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+GsUyeJhn!.+Aq4"", (-3), 118);
    Node node1 = NodeUtil.newExpr(node0);
    Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, set0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test256293,"public void test256293() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+GsUyeJhn!.+Aq4"", (-3), 118);
    Node node1 = NodeUtil.newExpr(node0);
    Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, set0);
    assertEquals((-1), node1.getLineno());
}",0,
project,0,test256294,"public void test256294() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+GsUyeJhn!.+Aq4"", (-3), 118);
    Node node1 = NodeUtil.newExpr(node0);
    Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, set0);
    assertTrue(node0.isQualifiedName());
}",0,assertTrue(node0.isQualifiedName())
project,0,test257295,"public void test257295() throws Throwable {
    Node node0 = new Node(105);
    Node node1 = new Node(85, node0, node0, node0, node0, 48, 8);
    boolean boolean0 = NodeUtil.canBeSideEffected(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test258296,"public void test258296() throws Throwable {
    int int0 = NodeUtil.precedence(4);
    assertEquals(15, int0);
}",1,
project,0,test259297,"public void test259297() throws Throwable {
    int int0 = NodeUtil.precedence(39);
    assertEquals(15, int0);
}",0,
project,0,test260298,"public void test260298() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(5);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for goto (type 5)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test261299,"public void test261299() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(6);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for ifeq (type 6)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test262300,"public void test262300() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(7);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for ifne (type 7)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test263301,"public void test263301() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(8);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setname (type 8)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test264302,"public void test264302() throws Throwable {
    int int0 = NodeUtil.precedence(9);
    assertEquals(5, int0);
}",0,
project,0,test265303,"public void test265303() throws Throwable {
    int int0 = NodeUtil.precedence(10);
    assertEquals(6, int0);
}",0,
project,0,test266304,"public void test266304() throws Throwable {
    int int0 = NodeUtil.precedence(11);
    assertEquals(7, int0);
}",0,
project,0,test267305,"public void test267305() throws Throwable {
    int int0 = NodeUtil.precedence(12);
    assertEquals(8, int0);
}",0,
project,0,test268306,"public void test268306() throws Throwable {
    int int0 = NodeUtil.precedence(13);
    assertEquals(8, int0);
}",0,
project,0,test269307,"public void test269307() throws Throwable {
    int int0 = NodeUtil.precedence(14);
    assertEquals(9, int0);
}",0,
project,0,test270308,"public void test270308() throws Throwable {
    int int0 = NodeUtil.precedence(15);
    assertEquals(9, int0);
}",0,
project,0,test271309,"public void test271309() throws Throwable {
    int int0 = NodeUtil.precedence(16);
    assertEquals(9, int0);
}",0,
project,0,test272310,"public void test272310() throws Throwable {
    int int0 = NodeUtil.precedence(17);
    assertEquals(9, int0);
}",0,
project,0,test273311,"public void test273311() throws Throwable {
    int int0 = NodeUtil.precedence(18);
    assertEquals(10, int0);
}",0,
project,0,test274312,"public void test274312() throws Throwable {
    int int0 = NodeUtil.precedence(19);
    assertEquals(10, int0);
}",0,
project,0,test275313,"public void test275313() throws Throwable {
    int int0 = NodeUtil.precedence(20);
    assertEquals(10, int0);
}",0,
project,0,test276314,"public void test276314() throws Throwable {
    int int0 = NodeUtil.precedence(21);
    assertEquals(11, int0);
}",0,
project,0,test277315,"public void test277315() throws Throwable {
    int int0 = NodeUtil.precedence(22);
    assertEquals(11, int0);
}",0,
project,0,test278316,"public void test278316() throws Throwable {
    int int0 = NodeUtil.precedence(23);
    assertEquals(12, int0);
}",0,
project,0,test279317,"public void test279317() throws Throwable {
    int int0 = NodeUtil.precedence(24);
    assertEquals(12, int0);
}",0,
project,0,test280318,"public void test280318() throws Throwable {
    int int0 = NodeUtil.precedence(25);
    assertEquals(12, int0);
}",0,
project,0,test281319,"public void test281319() throws Throwable {
    int int0 = NodeUtil.precedence(26);
    assertEquals(13, int0);
}",0,
project,0,test282320,"public void test282320() throws Throwable {
    int int0 = NodeUtil.precedence(27);
    assertEquals(13, int0);
}",0,
project,0,test283321,"public void test283321() throws Throwable {
    int int0 = NodeUtil.precedence(28);
    assertEquals(13, int0);
}",0,
project,0,test284322,"public void test284322() throws Throwable {
    int int0 = NodeUtil.precedence(29);
    assertEquals(13, int0);
}",0,
project,0,test285323,"public void test285323() throws Throwable {
    int int0 = NodeUtil.precedence(30);
    assertEquals(13, int0);
}",0,
project,0,test286324,"public void test286324() throws Throwable {
    int int0 = NodeUtil.precedence(31);
    assertEquals(13, int0);
}",0,
project,0,test287325,"public void test287325() throws Throwable {
    int int0 = NodeUtil.precedence(32);
    assertEquals(13, int0);
}",0,
project,0,test288326,"public void test288326() throws Throwable {
    int int0 = NodeUtil.precedence(33);
    assertEquals(15, int0);
}",0,
project,0,test289327,"public void test289327() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(34);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setprop (type 34)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test290328,"public void test290328() throws Throwable {
    int int0 = NodeUtil.precedence(35);
    assertEquals(15, int0);
}",0,
project,0,test291329,"public void test291329() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(36);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setelem (type 36)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test292330,"public void test292330() throws Throwable {
    int int0 = NodeUtil.precedence(37);
    assertEquals(15, int0);
}",0,
project,0,test293331,"public void test293331() throws Throwable {
    int int0 = NodeUtil.precedence(38);
    assertEquals(15, int0);
}",0,
project,0,test294332,"public void test294332() throws Throwable {
    int int0 = NodeUtil.precedence(40);
    assertEquals(15, int0);
}",0,
project,0,test295333,"public void test295333() throws Throwable {
    int int0 = NodeUtil.precedence(41);
    assertEquals(15, int0);
}",0,
project,0,test296334,"public void test296334() throws Throwable {
    int int0 = NodeUtil.precedence(42);
    assertEquals(15, int0);
}",0,
project,0,test297335,"public void test297335() throws Throwable {
    int int0 = NodeUtil.precedence(43);
    assertEquals(15, int0);
}",0,
project,0,test298336,"public void test298336() throws Throwable {
    int int0 = NodeUtil.precedence(44);
    assertEquals(15, int0);
}",0,
project,0,test299337,"public void test299337() throws Throwable {
    int int0 = NodeUtil.precedence(45);
    assertEquals(8, int0);
}",0,
project,0,test300338,"public void test300338() throws Throwable {
    int int0 = NodeUtil.precedence(46);
    assertEquals(8, int0);
}",0,
project,0,test301339,"public void test301339() throws Throwable {
    int int0 = NodeUtil.precedence(47);
    assertEquals(15, int0);
}",0,
project,0,test302340,"public void test302340() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(48);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for bindname (type 48)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test303341,"public void test303341() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(49);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for throw (type 49)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test304342,"public void test304342() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(50);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=50> (type 50)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test305343,"public void test305343() throws Throwable {
    int int0 = NodeUtil.precedence(51);
    assertEquals(9, int0);
}",0,
project,0,test306344,"public void test306344() throws Throwable {
    int int0 = NodeUtil.precedence(52);
    assertEquals(9, int0);
}",0,
project,0,test307345,"public void test307345() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(53);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=53> (type 53)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test308346,"public void test308346() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(54);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for getvar (type 54)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test309347,"public void test309347() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(55);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setvar (type 55)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test310348,"public void test310348() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(56);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=56> (type 56)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test311349,"public void test311349() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(57);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=57> (type 57)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test312350,"public void test312350() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(58);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=58> (type 58)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test313351,"public void test313351() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(59);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=59> (type 59)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test314352,"public void test314352() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(60);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=60> (type 60)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test315353,"public void test315353() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(61);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for thisfn (type 61)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test316354,"public void test316354() throws Throwable {
    int int0 = NodeUtil.precedence(63);
    assertEquals(15, int0);
}",0,
project,0,test317355,"public void test317355() throws Throwable {
    int int0 = NodeUtil.precedence(64);
    assertEquals(15, int0);
}",0,
project,0,test318356,"public void test318356() throws Throwable {
    int int0 = NodeUtil.precedence(65);
    assertEquals(15, int0);
}",0,
project,0,test319357,"public void test319357() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(66);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=66> (type 66)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test320358,"public void test320358() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(67);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=67> (type 67)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test321359,"public void test321359() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(68);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=68> (type 68)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test322360,"public void test322360() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(69);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for ref_special (type 69)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test323361,"public void test323361() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(70);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=70> (type 70)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test324362,"public void test324362() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(71);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=71> (type 71)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test325363,"public void test325363() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(72);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=72> (type 72)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test326364,"public void test326364() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(73);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=73> (type 73)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test327365,"public void test327365() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(74);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=74> (type 74)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test328366,"public void test328366() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(75);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=75> (type 75)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test329367,"public void test329367() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(76);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=76> (type 76)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test330368,"public void test330368() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(77);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for try (type 77)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test331369,"public void test331369() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(78);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for semi (type 78)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test332370,"public void test332370() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(79);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lb (type 79)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test333371,"public void test333371() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(80);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rb (type 80)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test334372,"public void test334372() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(81);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lc (type 81)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test335373,"public void test335373() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(82);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rc (type 82)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test336374,"public void test336374() throws Throwable {
    int int0 = NodeUtil.precedence(83);
    assertEquals(15, int0);
}",0,
project,0,test337375,"public void test337375() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(84);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rp (type 84)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test338376,"public void test338376() throws Throwable {
    int int0 = NodeUtil.precedence(85);
    assertEquals(0, int0);
}",0,
project,0,test339377,"public void test339377() throws Throwable {
    int int0 = NodeUtil.precedence(86);
    assertEquals(1, int0);
}",0,
project,0,test340378,"public void test340378() throws Throwable {
    int int0 = NodeUtil.precedence(87);
    assertEquals(1, int0);
}",0,
project,0,test341379,"public void test341379() throws Throwable {
    int int0 = NodeUtil.precedence(88);
    assertEquals(1, int0);
}",0,
project,0,test342380,"public void test342380() throws Throwable {
    int int0 = NodeUtil.precedence(89);
    assertEquals(1, int0);
}",0,
project,0,test343381,"public void test343381() throws Throwable {
    int int0 = NodeUtil.precedence(90);
    assertEquals(1, int0);
}",0,
project,0,test344382,"public void test344382() throws Throwable {
    int int0 = NodeUtil.precedence(91);
    assertEquals(1, int0);
}",0,
project,0,test345383,"public void test345383() throws Throwable {
    int int0 = NodeUtil.precedence(92);
    assertEquals(1, int0);
}",0,
project,0,test346384,"public void test346384() throws Throwable {
    int int0 = NodeUtil.precedence(93);
    assertEquals(1, int0);
}",0,
project,0,test347385,"public void test347385() throws Throwable {
    int int0 = NodeUtil.precedence(94);
    assertEquals(1, int0);
}",0,
project,0,test348386,"public void test348386() throws Throwable {
    int int0 = NodeUtil.precedence(95);
    assertEquals(1, int0);
}",0,
project,0,test349387,"public void test349387() throws Throwable {
    int int0 = NodeUtil.precedence(96);
    assertEquals(1, int0);
}",0,
project,0,test350388,"public void test350388() throws Throwable {
    int int0 = NodeUtil.precedence(97);
    assertEquals(1, int0);
}",0,
project,0,test351389,"public void test351389() throws Throwable {
    int int0 = NodeUtil.precedence(98);
    assertEquals(2, int0);
}",0,
project,0,test352390,"public void test352390() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(99);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for colon (type 99)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test353391,"public void test353391() throws Throwable {
    int int0 = NodeUtil.precedence(100);
    assertEquals(3, int0);
}",0,
project,0,test354392,"public void test354392() throws Throwable {
    int int0 = NodeUtil.precedence(101);
    assertEquals(4, int0);
}",0,
project,0,test355393,"public void test355393() throws Throwable {
    int int0 = NodeUtil.precedence(102);
    assertEquals(13, int0);
}",0,
project,0,test356394,"public void test356394() throws Throwable {
    int int0 = NodeUtil.precedence(103);
    assertEquals(13, int0);
}",0,
project,0,test357395,"public void test357395() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(104);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for dot (type 104)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test358396,"public void test358396() throws Throwable {
    int int0 = NodeUtil.precedence(105);
    assertEquals(15, int0);
}",0,
project,0,test359397,"public void test359397() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(106);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for export (type 106)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test360398,"public void test360398() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(107);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for import (type 107)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test361399,"public void test361399() throws Throwable {
    int int0 = NodeUtil.precedence(108);
    assertEquals(15, int0);
}",0,
project,0,test362400,"public void test362400() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(109);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for else (type 109)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test363401,"public void test363401() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(110);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for switch (type 110)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test364402,"public void test364402() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for case (type 111)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test365403,"public void test365403() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(112);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for default (type 112)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test366404,"public void test366404() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(113);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for while (type 113)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test367405,"public void test367405() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for do (type 114)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test368406,"public void test368406() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for for (type 115)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test369407,"public void test369407() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for break (type 116)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test370408,"public void test370408() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(117);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for continue (type 117)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test371409,"public void test371409() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for var (type 118)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test372410,"public void test372410() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for with (type 119)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test373411,"public void test373411() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(120);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for catch (type 120)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test374412,"public void test374412() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(121);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for finally (type 121)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test375413,"public void test375413() throws Throwable {
    int int0 = NodeUtil.precedence(122);
    assertEquals(13, int0);
}",0,
project,0,test376414,"public void test376414() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(123);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for reserved (type 123)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test377415,"public void test377415() throws Throwable {
    int int0 = NodeUtil.precedence(124);
    assertEquals(15, int0);
}",0,
project,0,test378416,"public void test378416() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(2);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for enterwith (type 2)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test379417,"public void test379417() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test380418,"public void test380418() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(39);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test381419,"public void test381419() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test382420,"public void test382420() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test383421,"public void test383421() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(100);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test384422,"public void test384422() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(101);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test385423,"public void test385423() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test386424,"public void test386424() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test387425,"public void test387425() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test388426,"public void test388426() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(118);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test389427,"public void test389427() throws Throwable {
    Node node0 = new Node(90);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test390428,"public void test390428() throws Throwable {
    Node node0 = new Node(89);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(11, int0);
}",0,"assertEquals(1, int0)"
project,0,test391429,"public void test391429() throws Throwable {
    Node node0 = Node.newString(97, ""catch("", 97, 97);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(25, int0);
}",0,"assertEquals(1, int0)"
project,0,test392430,"public void test392430() throws Throwable {
    Node node0 = Node.newString(93, ""com.google.javascript.jscomp.DefaultPassConfig$10"");
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(21, int0);
}",0,"assertEquals(0, int0)"
project,0,test393431,"public void test393431() throws Throwable {
    Node node0 = Node.newString(95, ""Zy "");
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(23, int0);
}",0,"assertEquals(1, int0)"
project,0,test394432,"public void test394432() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.getOpFromAssignmentOp(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Not an assiment op
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test395433,"public void test395433() throws Throwable {
    Node node0 = new Node(127, 127, 64);
    boolean boolean0 = NodeUtil.isExpressionNode(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test396434,"public void test396434() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExpressionNode(node1);
    assertEquals(80, node1.getLineno());
}",0,
project,0,test396435,"public void test396435() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExpressionNode(node1);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test396436,"public void test396436() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExpressionNode(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test396437,"public void test396437() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExpressionNode(node1);
    assertEquals(80, node1.getCharno());
}",1,
project,0,test397438,"public void test397438() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.common.collect.StandardRowSortedTable"", 110, 110);
    boolean boolean0 = NodeUtil.isGet(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test397439,"public void test397439() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.common.collect.StandardRowSortedTable"", 110, 110);
    boolean boolean0 = NodeUtil.isGet(node0);
    assertEquals(110, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test397440,"public void test397440() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.common.collect.StandardRowSortedTable"", 110, 110);
    boolean boolean0 = NodeUtil.isGet(node0);
    assertEquals(110, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test397441,"public void test397441() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.common.collect.StandardRowSortedTable"", 110, 110);
    boolean boolean0 = NodeUtil.isGet(node0);
    assertTrue(node0.isQualifiedName());
}",0,assertTrue(node0.isQualifiedName())
project,0,test398442,"public void test398442() throws Throwable {
    Node node0 = Node.newString(35, ""a5!;a N2(7Lywh%"", 84, 89);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test399443,"public void test399443() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""Dv*;f;1\"""", (-46), 88);
    Node node1 = new Node(8, node0, node0, node0, node0, 5, 2264);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    int int0 = NodeUtil.getNodeTypeReferenceCount(node1, 7, compilerOptions0.sourceMapDetailLevel);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test399444,"public void test399444() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""Dv*;f;1\"""", (-46), 88);
    Node node1 = new Node(8, node0, node0, node0, node0, 5, 2264);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    int int0 = NodeUtil.getNodeTypeReferenceCount(node1, 7, compilerOptions0.sourceMapDetailLevel);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test399445,"public void test399445() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""Dv*;f;1\"""", (-46), 88);
    Node node1 = new Node(8, node0, node0, node0, node0, 5, 2264);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    int int0 = NodeUtil.getNodeTypeReferenceCount(node1, 7, compilerOptions0.sourceMapDetailLevel);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test400446,"public void test400446() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google*javascript.jscomp._odeUtil$VarCollector"", 88, 2894);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(88, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test400447,"public void test400447() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google*javascript.jscomp._odeUtil$VarCollector"", 88, 2894);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test400448,"public void test400448() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google*javascript.jscomp._odeUtil$VarCollector"", 88, 2894);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(2894, node0.getCharno());
}",1,
project,0,test400449,"public void test400449() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google*javascript.jscomp._odeUtil$VarCollector"", 88, 2894);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertNull(node1);
}",0,
project,0,test400450,"public void test400450() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google*javascript.jscomp._odeUtil$VarCollector"", 88, 2894);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertTrue(node0.hasMoreThanOneChild());
}",0,assertFalse(node0.hasMoreThanOneChild())
project,0,test401451,"public void test401451() throws Throwable {
    Node node0 = Node.newString(940, "")"");
    boolean boolean0 = NodeUtil.isVar(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test402452,"public void test402452() throws Throwable {
    Node node0 = new Node(118, 118, 118);
    boolean boolean0 = NodeUtil.isVar(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test403453,"public void test403453() throws Throwable {
    Compiler compiler0 = new Compiler((PrintStream) null);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""rk"", (String) null);
    assertFalse(node0.isLocalResultCall());
}",0,assertFalse(node0.isLocalResultCall())
project,0,test404454,"public void test404454() throws Throwable {
    Node node0 = Node.newString(""rI"");
    boolean boolean0 = NodeUtil.isString(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test405455,"public void test405455() throws Throwable {
    Node node0 = new Node(100);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test406456,"public void test406456() throws Throwable {
    Node node0 = new Node(80, 80, 80);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprAssign(node1);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test406457,"public void test406457() throws Throwable {
    Node node0 = new Node(80, 80, 80);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprAssign(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test407458,"public void test407458() throws Throwable {
    Node node0 = new Node(124);
    boolean boolean0 = NodeUtil.isAssign(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test408459,"public void test408459() throws Throwable {
    Node node0 = new Node(86);
    boolean boolean0 = NodeUtil.isAssign(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test409460,"public void test409460() throws Throwable {
    Node node0 = new Node(42, 42, 42);
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertFalse(boolean0);
}",0,
project,0,test410461,"public void test410461() throws Throwable {
    Node node0 = new Node(102, 102, 102);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprCall(node1);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test410462,"public void test410462() throws Throwable {
    Node node0 = new Node(102, 102, 102);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprCall(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test411463,"public void test411463() throws Throwable {
    Node node0 = Node.newString(77, ""<,R3,Np^"", 39, 39);
    boolean boolean0 = NodeUtil.isForIn(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test412464,"public void test412464() throws Throwable {
    Node node0 = new Node(115);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // malformed 'for' statement FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test413465,"public void test413465() throws Throwable {
    Node node0 = Node.newString(114, ""rI"");
    boolean boolean0 = NodeUtil.isLoopStructure(node0);
    assertTrue(boolean0);
}",0,
project,0,test414466,"public void test414466() throws Throwable {
    Node node0 = Node.newString(115, "")"");
    boolean boolean0 = NodeUtil.isLoopStructure(node0);
    assertTrue(boolean0);
}",0,
project,0,test415467,"public void test415467() throws Throwable {
    Node node0 = Node.newString(113, ""RegExP"");
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test416468,"public void test416468() throws Throwable {
    Node node0 = Node.newString(115, "")"");
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test417469,"public void test417469() throws Throwable {
    Node node0 = Node.newString(114, ""RegExP"");
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test418470,"public void test418470() throws Throwable {
    Node node0 = new Node((-4096));
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test419471,"public void test419471() throws Throwable {
    Node node0 = new Node(105);
    Node node1 = new Node(85, node0, node0, node0, node0, 48, 8);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test420472,"public void test420472() throws Throwable {
    Node node0 = new Node(105);
    node0.addChildAfter(node0, node0);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test421473,"public void test421473() throws Throwable {
    Node node0 = new Node(126, 126, 126);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,
project,0,test422474,"public void test422474() throws Throwable {
    Node node0 = new Node(108);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test423475,"public void test423475() throws Throwable {
    Node node0 = new Node(111);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test424476,"public void test424476() throws Throwable {
    Node node0 = Node.newString(112, "" Sw<=jv=s|arM^Vq"", 112, 112);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test425477,"public void test425477() throws Throwable {
    Node node0 = Node.newString(113, ""RegExp"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test426478,"public void test426478() throws Throwable {
    Node node0 = Node.newString(114, ""XTV85#7JMtIu_<{S[CE"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test427479,"public void test427479() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test428480,"public void test428480() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test429481,"public void test429481() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test430482,"public void test430482() throws Throwable {
    Node node0 = new Node(111);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test431483,"public void test431483() throws Throwable {
    Node node0 = Node.newString(112, ""ux.Lj2"");
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test432484,"public void test432484() throws Throwable {
    Node node0 = new Node(113, 113, 113);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test433485,"public void test433485() throws Throwable {
    Node node0 = new Node(114);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test434486,"public void test434486() throws Throwable {
    Node node0 = new Node(119);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test435487,"public void test435487() throws Throwable {
    Node node0 = new Node(126, 126, 126);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test436488,"public void test436488() throws Throwable {
    Node node0 = new Node((-4096));
    // Undeclared exception!
    try {
        NodeUtil.isControlStructureCodeBlock(node0, (Node) null);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test437489,"public void test437489() throws Throwable {
    Node node0 = Node.newString(97, ""catch("", 97, 97);
    Node node1 = new Node(115, node0);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node1, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test438490,"public void test438490() throws Throwable {
    Node node0 = new Node(111);
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test439491,"public void test439491() throws Throwable {
    Node node0 = new Node(112, (-2326), 112);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // DEFAULT does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test440492,"public void test440492() throws Throwable {
    Node node0 = Node.newString(113, ""RegExp"");
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test441493,"public void test441493() throws Throwable {
    Node node0 = new Node(74);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // REF_NS_MEMBER does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test442494,"public void test442494() throws Throwable {
    Compiler compiler0 = new Compiler((PrintStream) null);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""zXGQ6R[X!B *I&lY*Mh"", ""H(qb585z`v+&gM9|+"");
    node0.addChildToFront(node0);
    boolean boolean0 = NodeUtil.isStatement(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test443495,"public void test443495() throws Throwable {
    Node node0 = Node.newString(111, ""~e"");
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test444496,"public void test444496() throws Throwable {
    Node node0 = new Node(112);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",1,
project,0,test445497,"public void test445497() throws Throwable {
    Node node0 = new Node(81);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test446498,"public void test446498() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", (-473), 35);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test446499,"public void test446499() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", (-473), 35);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test447500,"public void test447500() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""hkN^+v"", 483, 23);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals(483, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test447501,"public void test447501() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""hkN^+v"", 483, 23);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals(23, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test447502,"public void test447502() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""hkN^+v"", 483, 23);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test448503,"public void test448503() throws Throwable {
    boolean boolean0 = NodeUtil.isLabelName((Node) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test449504,"public void test449504() throws Throwable {
    Node node0 = new Node(102, 102, 102);
    boolean boolean0 = NodeUtil.isLabelName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test450505,"public void test450505() throws Throwable {
    Node node0 = Node.newString(153, ""XTV85#7JMtIu_<{S[CE"");
    boolean boolean0 = NodeUtil.isLabelName(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test451506,"public void test451506() throws Throwable {
    Node node0 = new Node(100);
    Node node1 = new Node(77, (-68), 4095);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node1, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: OR of TRY
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test452507,"public void test452507() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""XJQ6R[X!B **&lY&Mh"", ""XJQ6R[X!B **&lY&Mh"");
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test453508,"public void test453508() throws Throwable {
    Node node0 = new Node(118);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",1,
project,0,test454509,"public void test454509() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""XJQ6R[X!B **&lY&Mh"", ""Infinity"");
    Node node1 = new Node(16, node0, node0);
    NodeUtil.removeChild(node1, node0);
    assertTrue(node1.hasChildren());
}",0,
project,0,test454510,"public void test454510() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""XJQ6R[X!B **&lY&Mh"", ""Infinity"");
    Node node1 = new Node(16, node0, node0);
    NodeUtil.removeChild(node1, node0);
    assertTrue(node1.hasOneChild());
}",0,assertFalse(node1.hasOneChild())
project,0,test455511,"public void test455511() throws Throwable {
    Node node0 = Node.newString(115, ""~e"");
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: FOR ~e of FOR ~e
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test456512,"public void test456512() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test457513,"public void test457513() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""XJQ6R[X!B **&lY&Mh"", ""Infinity"");
    Node node1 = new Node(41, node0, node0);
    boolean boolean0 = NodeUtil.tryMergeBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test458514,"public void test458514() throws Throwable {
    Compiler compiler0 = new Compiler((PrintStream) null);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""zXGQ6R[X!B *I&lY*Mh"", ""H(qb585z`v+&gM9|+"");
    node0.addChildToFront(node0);
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test459515,"public void test459515() throws Throwable {
    Node node0 = new Node(37);
    boolean boolean0 = NodeUtil.isCallOrNew(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test460516,"public void test460516() throws Throwable {
    Node node0 = new Node(30);
    boolean boolean0 = NodeUtil.isCallOrNew(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test461517,"public void test461517() throws Throwable {
    Node node0 = new Node(45, 45, (-6));
    boolean boolean0 = NodeUtil.isThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test462518,"public void test462518() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    Node node1 = new Node(22, node0, node0, node0, node0, 48, 8);
    boolean boolean0 = NodeUtil.isHoistedFunctionDeclaration(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test463519,"public void test463519() throws Throwable {
    Node node0 = Node.newString(65, ""FNHS[WTZWSDlNj"");
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test464520,"public void test464520() throws Throwable {
    Node node0 = Node.newString(37, ""5+[=8'\""tERm(<T%X"");
    // Undeclared exception!
    try {
        NodeUtil.isSimpleFunctionObjectCall(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test465521,"public void test465521() throws Throwable {
    Node node0 = Node.newNumber(1241.5603038030308);
    boolean boolean0 = NodeUtil.isSimpleFunctionObjectCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test466522,"public void test466522() throws Throwable {
    Node node0 = new Node(47);
    boolean boolean0 = NodeUtil.isLhs(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test467523,"public void test467523() throws Throwable {
    Node node0 = Node.newNumber(1241.560303803);
    boolean boolean0 = NodeUtil.isObjectLitKey(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test468524,"public void test468524() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""goog.asserts.assertInstanceof"", ""var xx=;"");
    // Undeclared exception!
    try {
        NodeUtil.getFnParameters(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test469525,"public void test469525() throws Throwable {
    Node node0 = new Node(60, 60, 60);
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test470526,"public void test470526() throws Throwable {
    String string0 = NodeUtil.opToStr(9);
    assertNotNull(string0);
}",0,
project,0,test470527,"public void test470527() throws Throwable {
    String string0 = NodeUtil.opToStr(9);
    assertEquals(""|"", string0);
}",0,
project,0,test471528,"public void test471528() throws Throwable {
    String string0 = NodeUtil.opToStr(12);
    assertNotNull(string0);
}",0,
project,0,test471529,"public void test471529() throws Throwable {
    String string0 = NodeUtil.opToStr(12);
    assertEquals(""=="", string0);
}",0,
project,0,test472530,"public void test472530() throws Throwable {
    String string0 = NodeUtil.opToStr(10);
    assertEquals(""^"", string0);
}",0,
project,0,test472531,"public void test472531() throws Throwable {
    String string0 = NodeUtil.opToStr(10);
    assertNotNull(string0);
}",0,
project,0,test473532,"public void test473532() throws Throwable {
    String string0 = NodeUtil.opToStr(11);
    assertEquals(""&"", string0);
}",0,
project,0,test473533,"public void test473533() throws Throwable {
    String string0 = NodeUtil.opToStr(11);
    assertNotNull(string0);
}",0,
project,0,test474534,"public void test474534() throws Throwable {
    String string0 = NodeUtil.opToStr(13);
    assertNotNull(string0);
}",0,
project,0,test474535,"public void test474535() throws Throwable {
    String string0 = NodeUtil.opToStr(13);
    assertEquals(""!="", string0);
}",0,
project,0,test475536,"public void test475536() throws Throwable {
    String string0 = NodeUtil.opToStr(14);
    assertNotNull(string0);
}",0,
project,0,test475537,"public void test475537() throws Throwable {
    String string0 = NodeUtil.opToStr(14);
    assertEquals(""<"", string0);
}",0,
project,0,test476538,"public void test476538() throws Throwable {
    String string0 = NodeUtil.opToStr(15);
    assertNotNull(string0);
}",0,
project,0,test476539,"public void test476539() throws Throwable {
    String string0 = NodeUtil.opToStr(15);
    assertEquals(""<="", string0);
}",0,
project,0,test477540,"public void test477540() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(16);
    assertEquals("">"", string0);
}",1,
project,0,test478541,"public void test478541() throws Throwable {
    String string0 = NodeUtil.opToStr(17);
    assertEquals("">="", string0);
}",0,
project,0,test479542,"public void test479542() throws Throwable {
    String string0 = NodeUtil.opToStr(18);
    assertEquals(""<<"", string0);
}",0,
project,0,test480543,"public void test480543() throws Throwable {
    String string0 = NodeUtil.opToStr(19);
    assertEquals("">>"", string0);
}",0,
project,0,test481544,"public void test481544() throws Throwable {
    String string0 = NodeUtil.opToStr(20);
    assertEquals("">>>"", string0);
}",0,
project,0,test482545,"public void test482545() throws Throwable {
    String string0 = NodeUtil.opToStr(21);
    assertEquals(""+"", string0);
}",0,
project,0,test483546,"public void test483546() throws Throwable {
    String string0 = NodeUtil.opToStr(22);
    assertEquals(""-"", string0);
}",0,
project,0,test484547,"public void test484547() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(23);
    assertEquals(""*"", string0);
}",1,
project,0,test485548,"public void test485548() throws Throwable {
    String string0 = NodeUtil.opToStr(24);
    assertEquals(""/"", string0);
}",0,
project,0,test486549,"public void test486549() throws Throwable {
    String string0 = NodeUtil.opToStr(25);
    assertEquals(""%"", string0);
}",0,
project,0,test487550,"public void test487550() throws Throwable {
    String string0 = NodeUtil.opToStr(26);
    assertEquals(""!"", string0);
}",0,
project,0,test488551,"public void test488551() throws Throwable {
    String string0 = NodeUtil.opToStr(27);
    assertEquals(""~"", string0);
}",0,
project,0,test489552,"public void test489552() throws Throwable {
    String string0 = NodeUtil.opToStr(28);
    assertEquals(""+"", string0);
}",0,
project,0,test490553,"public void test490553() throws Throwable {
    String string0 = NodeUtil.opToStr(29);
    assertNotNull(string0);
}",0,
project,0,test490554,"public void test490554() throws Throwable {
    String string0 = NodeUtil.opToStr(29);
    assertEquals(""-"", string0);
}",0,
project,0,test491555,"public void test491555() throws Throwable {
    String string0 = NodeUtil.opToStr(30);
    assertNull(string0);
}",0,
project,0,test492556,"public void test492556() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(31);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 31: DELPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test493557,"public void test493557() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(32);
    assertEquals(""typeof"", string0);
}",1,
project,0,test494558,"public void test494558() throws Throwable {
    String string0 = NodeUtil.opToStr(33);
    assertNull(string0);
}",0,
project,0,test495559,"public void test495559() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(34);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 34: SETPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test496560,"public void test496560() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(35);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 35: GETELEM
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test497561,"public void test497561() throws Throwable {
    String string0 = NodeUtil.opToStr(36);
    assertNull(string0);
}",0,
project,0,test498562,"public void test498562() throws Throwable {
    String string0 = NodeUtil.opToStr(37);
    assertNull(string0);
}",0,
project,0,test499563,"public void test499563() throws Throwable {
    String string0 = NodeUtil.opToStr(38);
    assertNull(string0);
}",0,
project,0,test500564,"public void test500564() throws Throwable {
    String string0 = NodeUtil.opToStr(39);
    assertNull(string0);
}",0,
project,0,test501565,"public void test501565() throws Throwable {
    String string0 = NodeUtil.opToStr(40);
    assertNull(string0);
}",0,
project,0,test502566,"public void test502566() throws Throwable {
    String string0 = NodeUtil.opToStr(41);
    assertNull(string0);
}",0,
project,0,test503567,"public void test503567() throws Throwable {
    String string0 = NodeUtil.opToStr(42);
    assertNull(string0);
}",0,
project,0,test504568,"public void test504568() throws Throwable {
    String string0 = NodeUtil.opToStr(43);
    assertNull(string0);
}",0,
project,0,test505569,"public void test505569() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(44);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 44: TRUE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test506570,"public void test506570() throws Throwable {
    String string0 = NodeUtil.opToStr(45);
    assertEquals(""==="", string0);
}",0,
project,0,test507571,"public void test507571() throws Throwable {
    String string0 = NodeUtil.opToStr(46);
    assertEquals(""!=="", string0);
}",0,
project,0,test508572,"public void test508572() throws Throwable {
    String string0 = NodeUtil.opToStr(47);
    assertNull(string0);
}",0,
project,0,test509573,"public void test509573() throws Throwable {
    String string0 = NodeUtil.opToStr(48);
    assertNull(string0);
}",0,
project,0,test510574,"public void test510574() throws Throwable {
    String string0 = NodeUtil.opToStr(49);
    assertNull(string0);
}",0,
project,0,test511575,"public void test511575() throws Throwable {
    String string0 = NodeUtil.opToStr(50);
    assertNull(string0);
}",0,
project,0,test512576,"public void test512576() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(51);
    assertEquals(""in"", string0);
}",1,
project,0,test513577,"public void test513577() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(52);
    assertEquals(""instanceof"", string0);
}",1,
project,0,test514578,"public void test514578() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(53);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 53: LOCAL_LOAD
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test515579,"public void test515579() throws Throwable {
    String string0 = NodeUtil.opToStr(54);
    assertNull(string0);
}",0,
project,0,test516580,"public void test516580() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(55);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 55: SETVAR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test517581,"public void test517581() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(56);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 56: CATCH_SCOPE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test518582,"public void test518582() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(57);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 57: ENUM_INIT_KEYS
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test519583,"public void test519583() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(58);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 58: ENUM_INIT_VALUES
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test520584,"public void test520584() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(59);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 59: ENUM_NEXT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test521585,"public void test521585() throws Throwable {
    String string0 = NodeUtil.opToStr(60);
    assertNull(string0);
}",0,
project,0,test522586,"public void test522586() throws Throwable {
    String string0 = NodeUtil.opToStr(61);
    assertNull(string0);
}",0,
project,0,test523587,"public void test523587() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(62);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 62: RETURN_RESULT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test524588,"public void test524588() throws Throwable {
    String string0 = NodeUtil.opToStr(63);
    assertNull(string0);
}",0,
project,0,test525589,"public void test525589() throws Throwable {
    String string0 = NodeUtil.opToStr(64);
    assertNull(string0);
}",0,
project,0,test526590,"public void test526590() throws Throwable {
    String string0 = NodeUtil.opToStr(65);
    assertNull(string0);
}",0,
project,0,test527591,"public void test527591() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(66);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 66: SET_REF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test528592,"public void test528592() throws Throwable {
    String string0 = NodeUtil.opToStr(67);
    assertNull(string0);
}",0,
project,0,test529593,"public void test529593() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(68);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 68: REF_CALL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test530594,"public void test530594() throws Throwable {
    String string0 = NodeUtil.opToStr(69);
    assertNull(string0);
}",0,
project,0,test531595,"public void test531595() throws Throwable {
    String string0 = NodeUtil.opToStr(71);
    assertNull(string0);
}",0,
project,0,test532596,"public void test532596() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(72);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 72: ESCXMLTEXT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test533597,"public void test533597() throws Throwable {
    String string0 = NodeUtil.opToStr(73);
    assertNull(string0);
}",0,
project,0,test534598,"public void test534598() throws Throwable {
    String string0 = NodeUtil.opToStr(75);
    assertNull(string0);
}",0,
project,0,test535599,"public void test535599() throws Throwable {
    String string0 = NodeUtil.opToStr(76);
    assertNull(string0);
}",0,
project,0,test536600,"public void test536600() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(77);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 77: TRY
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test537601,"public void test537601() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(78);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 78: SEMI
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test538602,"public void test538602() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(79);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 79: LB
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test539603,"public void test539603() throws Throwable {
    String string0 = NodeUtil.opToStr(80);
    assertNull(string0);
}",0,
project,0,test540604,"public void test540604() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(81);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 81: LC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test541605,"public void test541605() throws Throwable {
    String string0 = NodeUtil.opToStr(82);
    assertNull(string0);
}",0,
project,0,test542606,"public void test542606() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(83);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 83: LP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test543607,"public void test543607() throws Throwable {
    String string0 = NodeUtil.opToStr(84);
    assertNull(string0);
}",0,
project,0,test544608,"public void test544608() throws Throwable {
    String string0 = NodeUtil.opToStr(85);
    assertNull(string0);
}",0,
project,0,test545609,"public void test545609() throws Throwable {
    String string0 = NodeUtil.opToStr(86);
    assertEquals(""="", string0);
}",0,
project,0,test546610,"public void test546610() throws Throwable {
    String string0 = NodeUtil.opToStr(87);
    assertEquals(""|="", string0);
}",0,
project,0,test547611,"public void test547611() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(88);
    assertEquals(""^="", string0);
}",1,
project,0,test548612,"public void test548612() throws Throwable {
    String string0 = NodeUtil.opToStr(89);
    assertEquals(""&="", string0);
}",0,
project,0,test549613,"public void test549613() throws Throwable {
    String string0 = NodeUtil.opToStr(90);
    assertEquals(""<<="", string0);
}",0,
project,0,test550614,"public void test550614() throws Throwable {
    String string0 = NodeUtil.opToStr(91);
    assertEquals("">>="", string0);
}",0,
project,0,test551615,"public void test551615() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(92);
    assertEquals("">>>="", string0);
}",1,
project,0,test552616,"public void test552616() throws Throwable {
    String string0 = NodeUtil.opToStr(93);
    assertEquals(""+="", string0);
}",0,
project,0,test553617,"public void test553617() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(94);
    assertEquals(""-="", string0);
}",1,
project,0,test554618,"public void test554618() throws Throwable {
    String string0 = NodeUtil.opToStr(95);
    assertEquals(""*="", string0);
}",0,
project,0,test555619,"public void test555619() throws Throwable {
    String string0 = NodeUtil.opToStr(96);
    assertEquals(""/="", string0);
}",0,
project,0,test556620,"public void test556620() throws Throwable {
    String string0 = NodeUtil.opToStr(97);
    assertEquals(""%="", string0);
}",0,
project,0,test557621,"public void test557621() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(98);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 98: HOOK
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test558622,"public void test558622() throws Throwable {
    String string0 = NodeUtil.opToStr(99);
    assertNull(string0);
}",0,
project,0,test559623,"public void test559623() throws Throwable {
    String string0 = NodeUtil.opToStr(100);
    assertEquals(""||"", string0);
}",0,
project,0,test560624,"public void test560624() throws Throwable {
    String string0 = NodeUtil.opToStr(101);
    assertEquals(""&&"", string0);
}",0,
project,0,test561625,"public void test561625() throws Throwable {
    String string0 = NodeUtil.opToStr(102);
    assertNull(string0);
}",0,
project,0,test562626,"public void test562626() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(103);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 103: DEC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test563627,"public void test563627() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(104);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 104: DOT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test564628,"public void test564628() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(105);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 105: FUNCTION
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test565629,"public void test565629() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(106);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 106: EXPORT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test566630,"public void test566630() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(107);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 107: IMPORT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test567631,"public void test567631() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(108);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 108: IF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test568632,"public void test568632() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(109);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 109: ELSE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test569633,"public void test569633() throws Throwable {
    String string0 = NodeUtil.opToStr(110);
    assertNull(string0);
}",0,
project,0,test570634,"public void test570634() throws Throwable {
    String string0 = NodeUtil.opToStr(111);
    assertNull(string0);
}",0,
project,0,test571635,"public void test571635() throws Throwable {
    String string0 = NodeUtil.opToStr(112);
    assertNull(string0);
}",0,
project,0,test572636,"public void test572636() throws Throwable {
    String string0 = NodeUtil.opToStr(113);
    assertNull(string0);
}",0,
project,0,test573637,"public void test573637() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 114: DO
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test574638,"public void test574638() throws Throwable {
    String string0 = NodeUtil.opToStr(115);
    assertNull(string0);
}",0,
project,0,test575639,"public void test575639() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 116: BREAK
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test576640,"public void test576640() throws Throwable {
    String string0 = NodeUtil.opToStr(117);
    assertNull(string0);
}",0,
project,0,test577641,"public void test577641() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 118: VAR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test578642,"public void test578642() throws Throwable {
    String string0 = NodeUtil.opToStr(119);
    assertNull(string0);
}",0,
project,0,test579643,"public void test579643() throws Throwable {
    String string0 = NodeUtil.opToStr(120);
    assertNull(string0);
}",0,
project,0,test580644,"public void test580644() throws Throwable {
    String string0 = NodeUtil.opToStr(121);
    assertNull(string0);
}",0,
project,0,test581645,"public void test581645() throws Throwable {
    String string0 = NodeUtil.opToStr(122);
    assertEquals(""void"", string0);
}",0,
project,0,test582646,"public void test582646() throws Throwable {
    String string0 = NodeUtil.opToStr((-2367));
    assertNull(string0);
}",0,
project,0,test583647,"public void test583647() throws Throwable {
    Node node0 = Node.newString(""Fz9"");
    Node node1 = NodeUtil.newVarNode(""Fz9"", node0);
    // Undeclared exception!
    try {
        NodeUtil.redeclareVarsInsideBranch(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test584648,"public void test584648() throws Throwable {
    Node node0 = new Node(100);
    NodeUtil.copyNameAnnotations(node0, node0);
    assertFalse(node0.isNoSideEffectsCall());
}",0,assertTrue(node0.isNoSideEffectsCall())
project,0,test585649,"public void test585649() throws Throwable {
    Node node0 = new Node((-4063), 101, 101);
    Vector<Node> vector0 = new Vector<Node>();
    vector0.add(node0);
    // Undeclared exception!
    try {
        NodeUtil.newFunctionNode(""com.google.common.collect.NullsFirstOrdering"", vector0, node0, 4, (-5057));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test586650,"public void test586650() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "" 5__0m3'P&7_12(.B5<"", 7, 0);
    assertEquals(0, node0.getCharno());
}",1,
project,0,test586651,"public void test586651() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "" 5__0m3'P&7_12(.B5<"", 7, 0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test586652,"public void test586652() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "" 5__0m3'P&7_12(.B5<"", 7, 0);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test586653,"public void test586653() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "" 5__0m3'P&7_12(.B5<"", 7, 0);
    assertEquals(7, node0.getLineno());
}",1,
project,0,test587654,"public void test587654() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = (GoogleCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""&T.=7oJ^^yY&>F3q"", 3, 8);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(8, node1.getCharno());
}",0,
project,0,test587655,"public void test587655() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = (GoogleCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""&T.=7oJ^^yY&>F3q"", 3, 8);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(3, node1.getLineno());
}",0,
project,0,test587656,"public void test587656() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = (GoogleCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""&T.=7oJ^^yY&>F3q"", 3, 8);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(3, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test587657,"public void test587657() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = (GoogleCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""&T.=7oJ^^yY&>F3q"", 3, 8);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(8, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test587658,"public void test587658() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = (GoogleCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""&T.=7oJ^^yY&>F3q"", 3, 8);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test587659,"public void test587659() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = (GoogleCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""&T.=7oJ^^yY&>F3q"", 3, 8);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(0, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test588660,"public void test588660() throws Throwable {
    Node node0 = new Node(113);
    // Undeclared exception!
    try {
        NodeUtil.getRootOfQualifiedName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test589661,"public void test589661() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    // Undeclared exception!
    try {
        NodeUtil.newName(googleCodingConvention0, ""IXV"", (Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test590662,"public void test590662() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""/="");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test591663,"public void test591663() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""void"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test592664,"public void test592664() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""NaN"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test593665,"public void test593665() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.common.collect.StandardRowSortedTable"", 110, 110);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(110, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test593666,"public void test593666() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.common.collect.StandardRowSortedTable"", 110, 110);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(110, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test593667,"public void test593667() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.common.collect.StandardRowSortedTable"", 110, 110);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test593668,"public void test593668() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.common.collect.StandardRowSortedTable"", 110, 110);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,
project,0,test594669,"public void test594669() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""!"", (-46), (-46));
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test595670,"public void test595670() throws Throwable {
    Node node0 = Node.newString((-8), ""7&)`r#!$G6q @n]"");
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test596671,"public void test596671() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""VsFoop"", (Node) null);
    assertEquals(118, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test596672,"public void test596672() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""VsFoop"", (Node) null);
    assertNotNull(node0);
}",0,
project,0,test597673,"public void test597673() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""!"", (-46), (-46));
    int int0 = NodeUtil.getNameReferenceCount(node0, ""!"");
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test598674,"public void test598674() throws Throwable {
    Node node0 = Node.newString("""", 3, 16);
    Node node1 = NodeUtil.newVarNode(""com.google.protobuf.DescriptorProtos$MethodOptions"", node0);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""JSR"", nodeUtil_MatchDeclaration0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test598675,"public void test598675() throws Throwable {
    Node node0 = Node.newString("""", 3, 16);
    Node node1 = NodeUtil.newVarNode(""com.google.protobuf.DescriptorProtos$MethodOptions"", node0);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""JSR"", nodeUtil_MatchDeclaration0);
    assertEquals(118, node1.getType());
}",0,"assertEquals(1, node1.getType())"
project,0,test598676,"public void test598676() throws Throwable {
    Node node0 = Node.newString("""", 3, 16);
    Node node1 = NodeUtil.newVarNode(""com.google.protobuf.DescriptorProtos$MethodOptions"", node0);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""JSR"", nodeUtil_MatchDeclaration0);
    assertEquals(3, node1.getLineno());
}",0,
project,0,test598677,"public void test598677() throws Throwable {
    Node node0 = Node.newString("""", 3, 16);
    Node node1 = NodeUtil.newVarNode(""com.google.protobuf.DescriptorProtos$MethodOptions"", node0);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""JSR"", nodeUtil_MatchDeclaration0);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test599678,"public void test599678() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    boolean boolean0 = NodeUtil.containsFunction(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test600679,"public void test600679() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test601681,"public void test601681() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+GsUyeJhn!.+Aq4"", (-3), 118);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = nodeUtil_MatchShallowStatement0.apply(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test601682,"public void test601682() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+GsUyeJhn!.+Aq4"", (-3), 118);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = nodeUtil_MatchShallowStatement0.apply(node0);
    assertEquals((-1), node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test605686,"public void test605686() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""XJQ6R[X!B **&lY&Mh"", ""XJQ6R[X!B **&lY&Mh"");
    Node node1 = new Node((-4063), node0, node0);
    int int0 = NodeUtil.getNameReferenceCount(node1, (String) null);
    assertEquals(0, int0);
}",0,
project,0,test606687,"public void test606687() throws Throwable {
    Node node0 = new Node(94);
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(1198);
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, nodeUtil_MatchNodeType0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test607688,"public void test607688() throws Throwable {
    Node node0 = Node.newNumber(1571.204828491857);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, sourceMap_DetailLevel0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test608689,"public void test608689() throws Throwable {
    Node node0 = Node.newString(""ENUM_INIT_ARRAY"");
    // Undeclared exception!
    try {
        NodeUtil.hasFinally(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test609690,"public void test609690() throws Throwable {
    Node node0 = new Node(89, 89, 89);
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test610691,"public void test610691() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    // Undeclared exception!
    try {
        NodeUtil.hasCatchHandler(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test611692,"public void test611692() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""XJQ6R[X!B **&lY&Mh"", ""XJQ6R[X!B **&lY&Mh"");
    boolean boolean0 = NodeUtil.hasCatchHandler(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test612693,"public void test612693() throws Throwable {
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode((Node) null);
    assertNull(jSDocInfo0);
}",0,
project,0,test613694,"public void test613694() throws Throwable {
    Node node0 = Node.newString(""ENUM_INIT_ARRAY"");
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test614695,"public void test614695() throws Throwable {
    Node node0 = Node.newString(""NaN"");
    node0.addSuppression(""NaN"");
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertFalse(jSDocInfo0.isNoCompile());
}",0,assertTrue(jSDocInfo0.isNoCompile())
project,0,test615696,"public void test615696() throws Throwable {
    Node node0 = Node.newString(""ENUM_INIT_ARRAY"");
    Node node1 = new Node(118, node0, node0);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test616697,"public void test616697() throws Throwable {
    Node node0 = Node.newString(""ENUM_INIT_ARRAY"");
    Node node1 = new Node((-1), node0, node0);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test617698,"public void test617698() throws Throwable {
    Node node0 = Node.newString(""NaN"");
    Node node1 = new Node(105, node0, node0);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test618699,"public void test618699() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test619700,"public void test619700() throws Throwable {
    Node node0 = new Node(105);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test620701,"public void test620701() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""XJQ6R[X!B **&lY&Mh"", ""XJQ6R[X!B **&lY&Mh"");
    String string0 = NodeUtil.getSourceName(node0);
    assertNotNull(string0);
}",0,
project,0,test620702,"public void test620702() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""XJQ6R[X!B **&lY&Mh"", ""XJQ6R[X!B **&lY&Mh"");
    String string0 = NodeUtil.getSourceName(node0);
    assertEquals("" [testcode] "", string0);
}",0,
project,0,test621703,"public void test621703() throws Throwable {
    Node node0 = Node.newString(113, ""RegExp"");
    String string0 = NodeUtil.getSourceName(node0);
    assertNull(string0);
}",0,
project,0,test622704,"public void test622704() throws Throwable {
    Node node0 = Node.newString(""Inciniey"");
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    assertEquals(37, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test623705,"public void test623705() throws Throwable {
    Node node0 = Node.newNumber((double) 1970);
    Node[] nodeArray0 = new Node[1];
    // Undeclared exception!
    try {
        NodeUtil.newCallNode(node0, nodeArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test624706,"public void test624706() throws Throwable {
    Node node0 = new Node(30);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test625707,"public void test625707() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    NodeUtil.evaluatesToLocalValue(node0);
    assertEquals(80, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test625708,"public void test625708() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(node0.hasOneChild());
}",0,
project,0,test625709,"public void test625709() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    NodeUtil.evaluatesToLocalValue(node0);
    assertEquals(80, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test625710,"public void test625710() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    NodeUtil.evaluatesToLocalValue(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test625711,"public void test625711() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test626712,"public void test626712() throws Throwable {
    Node node0 = new Node(100);
    Node node1 = new Node(42, node0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test627713,"public void test627713() throws Throwable {
    Node node0 = new Node(45, 45, (-6));
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test628714,"public void test628714() throws Throwable {
    Node node0 = new Node(47, 47, 47);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test629715,"public void test629715() throws Throwable {
    Node node0 = Node.newString(48, """");
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeBINDNAME
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test630716,"public void test630716() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test631717,"public void test631717() throws Throwable {
    Node node0 = new Node(57);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_INIT_KEYS
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test632718,"public void test632718() throws Throwable {
    Node node0 = new Node(60, 60, 60);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_ID 60
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test633719,"public void test633719() throws Throwable {
    Node node0 = new Node(61);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHISFN
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test634720,"public void test634720() throws Throwable {
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test635721,"public void test635721() throws Throwable {
    Node node0 = new Node(64, (-1697), 64);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test636722,"public void test636722() throws Throwable {
    Node node0 = new Node(65);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeGET_REF
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test637723,"public void test637723() throws Throwable {
    Node node0 = new Node(66, 66, 66);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSET_REF 66
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test638724,"public void test638724() throws Throwable {
    Node node0 = new Node(68);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_CALL
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test639725,"public void test639725() throws Throwable {
    Node node0 = new Node(69, 69, 69);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, (Predicate<Node>) null);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_SPECIAL 69
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test640726,"public void test640726() throws Throwable {
    Node node0 = new Node(70);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEFAULTNAMESPACE
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test641727,"public void test641727() throws Throwable {
    Node node0 = new Node(71, 118, 118);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLATTR 118
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test642728,"public void test642728() throws Throwable {
    Node node0 = new Node(76, 76, 76);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_NAME 76
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test643729,"public void test643729() throws Throwable {
    Node node0 = Node.newString(78, ""1nfinity"", 78, 78);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSEMI 1nfinity 78
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test644730,"public void test644730() throws Throwable {
    Node node0 = new Node(84, 84, 84);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRP 84
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test645731,"public void test645731() throws Throwable {
    Node node0 = new Node(85);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test646732,"public void test646732() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test647733,"public void test647733() throws Throwable {
    Node node0 = Node.newString(87, ""com/google/javiscript/jscomp/mozilla/rhino/Scriptable"", 87, 87);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test648734,"public void test648734() throws Throwable {
    Node node0 = new Node(88);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test649735,"public void test649735() throws Throwable {
    Node node0 = new Node(89, 89, 89);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,
project,0,test650736,"public void test650736() throws Throwable {
    Node node0 = new Node(91);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test651737,"public void test651737() throws Throwable {
    Node node0 = Node.newString(92, ""8I-n^C"", 742, 91);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test652738,"public void test652738() throws Throwable {
    Node node0 = new Node(93);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test653739,"public void test653739() throws Throwable {
    Node node0 = new Node(94);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test654740,"public void test654740() throws Throwable {
    Node node0 = Node.newString(95, ""com/google/javascript/jscomp/mozilla/rhino/Scriptable"", 95, 742);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test655741,"public void test655741() throws Throwable {
    Node node0 = Node.newString(97, ""catch("", 97, 97);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test656742,"public void test656742() throws Throwable {
    Node node0 = new Node(98, 98, 98);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test657743,"public void test657743() throws Throwable {
    Node node0 = new Node(100);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test658744,"public void test658744() throws Throwable {
    Node node0 = new Node(101, 101, 189);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test659745,"public void test659745() throws Throwable {
    Node node0 = new Node(102, 102, 102);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test660746,"public void test660746() throws Throwable {
    Node node0 = Node.newString(103, ""F`oD0{gLd/|t'[b/D"", 1887, 1887);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test661747,"public void test661747() throws Throwable {
    Node node0 = new Node(105);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,
project,0,test662748,"public void test662748() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""O3H`f/_"", 440, 440);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, predicate0);
    assertEquals(440, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test662749,"public void test662749() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""O3H`f/_"", 440, 440);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, predicate0);
    assertTrue(boolean0);
}",0,
project,0,test662750,"public void test662750() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""O3H`f/_"", 440, 440);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, predicate0);
    assertEquals(440, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test662751,"public void test662751() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""O3H`f/_"", 440, 440);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, predicate0);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
