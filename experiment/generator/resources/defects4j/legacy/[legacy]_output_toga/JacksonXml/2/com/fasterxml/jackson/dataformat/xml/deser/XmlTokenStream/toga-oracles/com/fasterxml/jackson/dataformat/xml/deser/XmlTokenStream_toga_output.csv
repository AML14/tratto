project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    String string0 = xmlTokenStream0.getNamespaceURI();
    assertNotNull(string0);
}",0,
project,0,test001,"public void test001() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    String string0 = xmlTokenStream0.getNamespaceURI();
    assertEquals(1, xmlTokenStream0.getCurrentToken());
}",0,"assertEquals(0, xmlTokenStream0.getCurrentToken())"
project,0,test012,"public void test012() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    xmlTokenStream0.closeCompletely();
    assertEquals(1, xmlTokenStream0.getCurrentToken());
}",0,"assertEquals(1, xmlTokenStream0.getCurrentToken())"
project,0,test023,"public void test023() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    xmlTokenStream0.close();
    assertEquals(1, xmlTokenStream0.getCurrentToken());
}",0,"assertEquals(1, xmlTokenStream0.getCurrentToken())"
project,0,test034,"public void test034() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, ""N;-FAu[DTG"");
    String string0 = xmlTokenStream0.toString();
    assertEquals(""(Token stream: state=1 attr#=0 nextAttr#=0 name= text=null repeat?=0 wrapper=[null] repeatElement=0 nextName=null)"", string0);
}",0,
project,0,test045,"public void test045() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, ""N;-FAu[DTG"");
    xmlTokenStream0.getXmlReader();
    assertEquals(1, xmlTokenStream0.getCurrentToken());
}",0,"assertEquals(1, xmlTokenStream0.getCurrentToken())"
project,0,test056,"public void test056() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, wstxDOMWrappingReader0);
    xmlTokenStream0.getCurrentLocation();
    assertEquals(1, xmlTokenStream0.getCurrentToken());
}",0,"assertEquals(0, xmlTokenStream0.getCurrentToken())"
project,0,test067,"public void test067() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    String string0 = xmlTokenStream0.getLocalName();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test068,"public void test068() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    String string0 = xmlTokenStream0.getLocalName();
    assertEquals(1, xmlTokenStream0.getCurrentToken());
}",0,"assertEquals(0, xmlTokenStream0.getCurrentToken())"
project,0,test079,"public void test079() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    String string0 = xmlTokenStream0.getText();
    assertNull(string0);
}",0,
project,0,test0710,"public void test0710() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    String string0 = xmlTokenStream0.getText();
    assertEquals(1, xmlTokenStream0.getCurrentToken());
}",0,"assertEquals(1, xmlTokenStream0.getCurrentToken())"
project,0,test0811,"public void test0811() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    int int0 = xmlTokenStream0.getCurrentToken();
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test0912,"public void test0912() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, ""N;-FAu[DTG"");
    xmlTokenStream0.getTokenLocation();
    assertEquals(1, xmlTokenStream0.getCurrentToken());
}",0,"assertEquals(1, xmlTokenStream0.getCurrentToken())"
project,0,test1013,"public void test1013() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    WstxInputFactory wstxInputFactory0 = new WstxInputFactory();
    XMLStreamReader xMLStreamReader0 = wstxInputFactory0.createXMLStreamReader((Source) dOMSource0);
    XmlTokenStream xmlTokenStream0 = null;
    try {
        xmlTokenStream0 = new XmlTokenStream(xMLStreamReader0, xMLStreamReader0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid XMLStreamReader passed: should be pointing to START_ELEMENT (1), instead got 7
        //
        verifyException(""com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream"", e);
    }
}",0,
project,0,test1115,"public void test1115() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    xmlTokenStream0.repeatStartElement();
    int int0 = xmlTokenStream0.next();
    assertEquals(1, int0);
}",0,
project,0,test1216,"public void test1216() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    xmlTokenStream0.skipEndElement();
    try {
        xmlTokenStream0.skipEndElement();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Expected END_ELEMENT, got event of type 6
        //
        verifyException(""com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream"", e);
    }
}",1,
project,0,test1419,"public void test1419() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    boolean boolean0 = xmlTokenStream0.hasAttributes();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1520,"public void test1520() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    xmlTokenStream0._currentState = 500;
    // Undeclared exception!
    try {
        xmlTokenStream0.repeatStartElement();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Current state not XML_START_ELEMENT (1) but 500
        //
        verifyException(""com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream"", e);
    }
}",0,
project,0,test1621,"public void test1621() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, ""N;-FAu[DTG"");
    xmlTokenStream0.repeatStartElement();
    xmlTokenStream0.repeatStartElement();
    assertEquals(3, XmlTokenStream.XML_ATTRIBUTE_NAME);
}",0,
project,0,test1722,"public void test1722() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, wstxDOMWrappingReader0);
    xmlTokenStream0.skipAttributes();
    assertNull(xmlTokenStream0.getText());
}",0,assertNotNull(xmlTokenStream0.getText())
project,0,test1823,"public void test1823() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    xmlTokenStream0.next();
    // Undeclared exception!
    try {
        xmlTokenStream0.skipAttributes();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME (1) but 2
        //
        verifyException(""com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream"", e);
    }
}",0,
project,0,test2026,"public void test2026() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    iIOMetadataNode0.setAttributeNS(""Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME (1) but "", ""Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME (1) but "", ""Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME (1) but "");
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    xmlTokenStream0.next();
    xmlTokenStream0.next();
    int int0 = xmlTokenStream0.next();
    assertFalse(xmlTokenStream0.hasAttributes());
}",0,assertTrue(xmlTokenStream0.hasAttributes())
project,0,test2027,"public void test2027() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    iIOMetadataNode0.setAttributeNS(""Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME (1) but "", ""Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME (1) but "", ""Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME (1) but "");
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    xmlTokenStream0.next();
    xmlTokenStream0.next();
    int int0 = xmlTokenStream0.next();
    assertEquals(2, int0);
}",0,
project,0,test2128,"public void test2128() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    xmlTokenStream0._currentState = 5;
    int int0 = xmlTokenStream0.next();
    assertEquals(2, xmlTokenStream0.getCurrentToken());
}",0,"assertEquals(0, xmlTokenStream0.getCurrentToken())"
project,0,test2129,"public void test2129() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    xmlTokenStream0._currentState = 5;
    int int0 = xmlTokenStream0.next();
    assertEquals(2, int0);
}",0,
project,0,test2230,"public void test2230() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
    xmlTokenStream0.next();
    xmlTokenStream0.next();
    int int0 = xmlTokenStream0.next();
    assertEquals(6, xmlTokenStream0.getCurrentToken());
}",0,"assertEquals(1, xmlTokenStream0.getCurrentToken())"
project,0,test2231,"public void test2231() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
    xmlTokenStream0.next();
    xmlTokenStream0.next();
    int int0 = xmlTokenStream0.next();
    assertEquals(6, int0);
}",0,
project,0,test2435,"public void test2435() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    iIOMetadataNode0.appendChild(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, wstxDOMWrappingReader0);
    int int0 = xmlTokenStream0.next();
    assertEquals(1, int0);
}",0,
project,0,test2536,"public void test2536() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    XmlTokenStream xmlTokenStream1 = new XmlTokenStream(wstxDOMWrappingReader0, wstxDOMWrappingReader0);
    xmlTokenStream0.next();
    xmlTokenStream1.next();
    // Undeclared exception!
    try {
        xmlTokenStream1.next();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected to find a tag, instead reached end of input
        //
        verifyException(""com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream"", e);
    }
}",0,
project,0,test2637,"public void test2637() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
    // Undeclared exception!
    try {
        xmlTokenStream0._handleRepeatElement();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unrecognized type to repeat: 0
        //
        verifyException(""com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream"", e);
    }
}",0,
project,0,test2739,"public void test2739() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
    ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
    WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
    wstxDOMWrappingReader0.next();
    XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, wstxDOMWrappingReader0);
    ElementWrapper elementWrapper0 = ElementWrapper.matchingWrapper((ElementWrapper) null, "":e]t"", "":e]t"");
    xmlTokenStream0._currentWrapper = elementWrapper0;
    xmlTokenStream0.next();
    int int0 = xmlTokenStream0._handleRepeatElement();
    assertEquals(2, int0);
}",0,
