project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    byte[] byteArray1 = new byte[21];
    byteArray1[0] = (byte) 78;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 35, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 52, 0, false);
    try {
        uTF8StreamJsonParser0.nextIntValue((-873));
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unrecognized token 'N\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000': was expecting 'null', 'true', 'false' or NaN
        //  at [Source: UNKNOWN; line: 1, column: -29]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    byte[] byteArray0 = new byte[6];
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0.CHAR_NAME_COPY_BUFFER, false);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (-544), false);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0.parseMediumName(0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 6
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",0,
project,0,test0022,"public void test0022() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[21];
    byteArray0[1] = (byte) 34;
    byteArray0[2] = (byte) (-124);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, 3, true);
    uTF8StreamJsonParser0.nextValue();
    try {
        uTF8StreamJsonParser0.nextIntValue((byte) (-124));
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 start byte 0x84
        //  at [Source: UNKNOWN; line: 1, column: 3]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test0033,"public void test0033() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 34;
    byteArray0[2] = (byte) (-32);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 928, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 53, 53, false);
    uTF8StreamJsonParser0.nextValue();
    try {
        uTF8StreamJsonParser0.getTextOffset();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 middle byte 0x0
        //  at [Source: UNKNOWN; line: 1, column: 5]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test0044,"public void test0044() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) (-52);
    byteArray0[1] = (byte) (-52);
    byteArray0[2] = (byte) (-52);
    byteArray0[3] = (byte) (-52);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) (-52), 0, false);
    uTF8StreamJsonParser0._loadToHaveAtLeast((byte) (-52));
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0.parseMediumName(0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 6
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",0,
project,0,test0055,"public void test0055() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 93, 93);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-13), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 0, false);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0.readValueAsTree();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // No ObjectCodec defined for parser, needed for deserialization
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test0066,"public void test0066() throws Throwable {
    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[2];
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (-522), false);
    uTF8StreamJsonParser0.setCodec((ObjectCodec) null);
    assertFalse(uTF8StreamJsonParser0.isClosed());
}",0,assertTrue(uTF8StreamJsonParser0.isClosed())
project,0,test0077,"public void test0077() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[5];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 3, 0, true);
    Object object0 = uTF8StreamJsonParser0.getInputSource();
    assertSame(byteArrayInputStream0, object0);
}",0,
project,0,test0088,"public void test0088() throws Throwable {
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, true);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 31, 4098, true);
    ByteArrayBuilder byteArrayBuilder0 = uTF8StreamJsonParser0._getByteArrayBuilder();
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",0,
project,0,test0099,"public void test0099() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    PipedInputStream pipedInputStream0 = new PipedInputStream();
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 63, pushbackInputStream0, objectCodec0, (ByteQuadsCanonicalizer) null, byteArray0, 2, 0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 683);
    int int0 = uTF8StreamJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test01010,"public void test01010() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""DOUBLE"", false);
    byte[] byteArray0 = new byte[3];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 786, 3);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 128, (byte) 1, false);
    uTF8StreamJsonParser0.nextIntValue(128);
    try {
        uTF8StreamJsonParser0._parseAposName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input: was expecting closing ''' for name
        //  at [Source: java.lang.String@0000000009; line: 1, column: 3]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test01111,"public void test01111() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    byte[] byteArray0 = new byte[0];
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1859, mockFileInputStream0, (ObjectCodec) null, (ByteQuadsCanonicalizer) null, byteArray0, 2, 2, false);
    JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber((-523));
    assertEquals(7, jsonToken0.id());
}",0,"assertEquals(0, jsonToken0.id())"
project,0,test01212,"public void test01212() throws Throwable {
    byte[] byteArray0 = new byte[1];
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 102, (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 0, true);
    boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast(3);
    assertFalse(boolean0);
}",1,
project,0,test01313,"public void test01313() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    byte[] byteArray0 = new byte[7];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    JsonEncoding jsonEncoding0 = JsonEncoding.UTF8;
    IOContext iOContext0 = new IOContext(bufferRecycler0, jsonEncoding0, false);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 238, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 127, 1395, true);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0._loadToHaveAtLeast(1723);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",1,
project,0,test01414,"public void test01414() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""DOUBLE"", false);
    byte[] byteArray0 = new byte[3];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1, false);
    try {
        uTF8StreamJsonParser0._loadToHaveAtLeast(42);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // InputStream.read() returned 0 characters when trying to read -1 bytes
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",0,
project,0,test01516,"public void test01516() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[1];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 3, 1, true);
    boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast(1363);
    assertFalse(boolean0);
}",0,
project,0,test01617,"public void test01617() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, 1, 0, true);
    uTF8StreamJsonParser0._releaseBuffers();
    assertFalse(uTF8StreamJsonParser0.hasCurrentToken());
}",0,assertTrue(uTF8StreamJsonParser0.hasCurrentToken())
project,0,test01718,"public void test01718() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[5];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-52), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 15, 0, true);
    String string0 = uTF8StreamJsonParser0.getText();
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test01819,"public void test01819() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 34;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 147, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 62, 3, true);
    try {
        uTF8StreamJsonParser0.nextTextValue();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Illegal unquoted character ((CTRL-CHAR, code 0)): has to be escaped using backslash to be included in string value
        //  at [Source: UNKNOWN; line: 1, column: -56]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test01920,"public void test01920() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 35, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 52, 0, false);
    String string0 = uTF8StreamJsonParser0.getValueAsString();
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test02021,"public void test02021() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 34, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 55, 3, true);
    String string0 = uTF8StreamJsonParser0.getValueAsString((String) null);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test02122,"public void test02122() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) (-52), (byte) (-52), true);
    int int0 = uTF8StreamJsonParser0.getValueAsInt();
    assertEquals(0, int0);
}",0,
project,0,test02223,"public void test02223() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1, false);
    int int0 = uTF8StreamJsonParser0.getValueAsInt(55);
    assertEquals(55, int0);
}",0,"assertEquals(1, int0)"
project,0,test02324,"public void test02324() throws Throwable {
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    byte[] byteArray0 = new byte[12];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    IOContext iOContext0 = new IOContext((BufferRecycler) null, mockFileInputStream0, true);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 43, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1784, (-1684), false);
    JsonToken jsonToken0 = JsonToken.FIELD_NAME;
    String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
    assertNull(string0);
}",0,
project,0,test02425,"public void test02425() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[5];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-52), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 15, 0, true);
    JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_FLOAT;
    String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
    assertEquals("""", string0);
}",0,
project,0,test02526,"public void test02526() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[5];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1245, false);
    JsonToken jsonToken0 = JsonToken.VALUE_STRING;
    String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
    assertEquals("""", string0);
}",0,
project,0,test02627,"public void test02627() throws Throwable {
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, false);
    byte[] byteArray0 = new byte[1];
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 118, pushbackInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 3, true);
    JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
    String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
    assertEquals("""", string0);
}",0,
project,0,test02728,"public void test02728() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[5];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, 2, false);
    JsonToken jsonToken0 = JsonToken.VALUE_NULL;
    String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
    assertEquals(""null"", string0);
}",0,
project,0,test02829,"public void test02829() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[1];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 319);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-5407), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 319, (-5407), true);
    char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
    assertNull(charArray0);
}",0,
project,0,test02930,"public void test02930() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[10];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 200, false);
    int int0 = uTF8StreamJsonParser0.getTextLength();
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test03031,"public void test03031() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1, true);
    int int0 = uTF8StreamJsonParser0.getTextOffset();
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test03132,"public void test03132() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 55;
    byteArray0[1] = (byte) 55;
    byteArray0[2] = (byte) 9;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 55, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 55, (byte) 0, true);
    uTF8StreamJsonParser0.nextValue();
    uTF8StreamJsonParser0.getTextOffset();
    assertEquals(7, uTF8StreamJsonParser0.getCurrentTokenId());
}",0,"assertEquals(0, uTF8StreamJsonParser0.getCurrentTokenId())"
project,0,test03233,"public void test03233() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) (-52), (byte) (-52), true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    try {
        uTF8StreamJsonParser0.readBinaryValue((Base64Variant) null, (OutputStream) byteArrayBuilder0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Current token (null) not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary
        //  at [Source: UNKNOWN; line: 1, column: 1]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test03334,"public void test03334() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[6];
    byteArray0[1] = (byte) (-93);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 192);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 200, 7, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2467);
    MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0._readBinary((Base64Variant) null, mockPrintStream0, byteArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",0,
project,0,test03435,"public void test03435() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) 93;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 13, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 117, (byte) 117, false);
    try {
        uTF8StreamJsonParser0.nextValue();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected close marker ']': expected '}' (for ROOT starting at [Source: com.fasterxml.jackson.core.util.BufferRecycler@0000000001; line: 1, column: 0])
        //  at [Source: com.fasterxml.jackson.core.util.BufferRecycler@0000000010; line: 1, column: 2]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test03536,"public void test03536() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    byteArray0[2] = (byte) 52;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 117, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 117, false);
    try {
        uTF8StreamJsonParser0.nextTextValue();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ((CTRL-CHAR, code 0)): Expected space separating root-level values
        //  at [Source: UNKNOWN; line: 1, column: 3]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test03637,"public void test03637() throws Throwable {
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 53;
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, objectCodec0, (ByteQuadsCanonicalizer) null, byteArray0, 0, (byte) 30, true);
    try {
        uTF8StreamJsonParser0.nextLongValue((byte) 0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ((CTRL-CHAR, code 0)): Expected space separating root-level values
        //  at [Source: java.io.BufferedInputStream@0000000011; line: 1, column: 3]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test03738,"public void test03738() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 56;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1877), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 4966, (-1877), true);
    try {
        uTF8StreamJsonParser0.nextIntValue(585);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ((CTRL-CHAR, code 0)): Expected space separating root-level values
        //  at [Source: UNKNOWN; line: 1, column: -6840]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test03839,"public void test03839() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) (-52);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2504, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) (-52), (byte) (-52), false);
    SerializedString serializedString0 = new SerializedString(""J9WEl"");
    try {
        uTF8StreamJsonParser0.nextFieldName((SerializableString) serializedString0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unrecognized token '\u00CC\u0000\u0000\u0000\u0000\u0000': was expecting ('true', 'false' or 'null')
        //  at [Source: UNKNOWN; line: 1, column: 13]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test03940,"public void test03940() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[5];
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 32, 1091);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-399), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 192, 110, true);
    SerializedString serializedString0 = new SerializedString(""&p2:RXo@j"");
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0.nextFieldName((SerializableString) serializedString0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.io.IOContext"", e);
    }
}",0,
project,0,test04041,"public void test04041() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""com.fasterxml.jackson.core.JsonParser$Feature"", false);
    byte[] byteArray0 = new byte[5];
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1, true);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0.nextFieldName();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.io.IOContext"", e);
    }
}",0,
project,0,test04142,"public void test04142() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) (-52);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2048, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 3, 2, false);
    try {
        uTF8StreamJsonParser0.nextFieldName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unrecognized token '\u00CC\u0000\u0000\u0000': was expecting ('true', 'false' or 'null')
        //  at [Source: UNKNOWN; line: 1, column: 8]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test04344,"public void test04344() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Exponent indicator not followed by a digit"", true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 55;
    byteArray0[1] = (byte) 9;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 11, (-32), true);
    int int0 = uTF8StreamJsonParser0.nextIntValue(1814);
    assertEquals(7, uTF8StreamJsonParser0.getCurrentTokenId());
}",0,"assertEquals(0, uTF8StreamJsonParser0.getCurrentTokenId())"
project,0,test04345,"public void test04345() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Exponent indicator not followed by a digit"", true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 55;
    byteArray0[1] = (byte) 9;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 11, (-32), true);
    int int0 = uTF8StreamJsonParser0.nextIntValue(1814);
    assertEquals(7, int0);
}",0,
project,0,test04447,"public void test04447() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[5];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-52), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 15, 0, true);
    uTF8StreamJsonParser0._skipCR();
    UTF8StreamJsonParser uTF8StreamJsonParser1 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1242, 15, false);
    long long0 = uTF8StreamJsonParser1.nextLongValue((-1L));
    assertEquals((-1L), long0);
}",0,
project,0,test04548,"public void test04548() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[8];
    byteArray0[0] = (byte) 9;
    byteArray0[1] = (byte) 9;
    byteArray0[2] = (byte) 9;
    byteArray0[3] = (byte) 55;
    byteArray0[4] = (byte) 9;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 9, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 9, (byte) 9, true);
    long long0 = uTF8StreamJsonParser0.nextLongValue((byte) 9);
    assertEquals(5, uTF8StreamJsonParser0.getTokenColumnNr());
}",0,"assertEquals(0, uTF8StreamJsonParser0.getTokenColumnNr())"
project,0,test04549,"public void test04549() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[8];
    byteArray0[0] = (byte) 9;
    byteArray0[1] = (byte) 9;
    byteArray0[2] = (byte) 9;
    byteArray0[3] = (byte) 55;
    byteArray0[4] = (byte) 9;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 9, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 9, (byte) 9, true);
    long long0 = uTF8StreamJsonParser0.nextLongValue((byte) 9);
    assertEquals(7L, long0);
}",0,
project,0,test04650,"public void test04650() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1, true);
    try {
        uTF8StreamJsonParser0.nextBooleanValue();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Illegal character ((CTRL-CHAR, code 0)): only regular white space (\\r, \\n, \\t) is allowed between tokens
        //  at [Source: UNKNOWN; line: 1, column: 2]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test04852,"public void test04852() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 10, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 3, 2, false);
    try {
        uTF8StreamJsonParser0._parsePosNumber(48);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ((CTRL-CHAR, code 0)): Expected space separating root-level values
        //  at [Source: UNKNOWN; line: 1, column: 1]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test04953,"public void test04953() throws Throwable {
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, true);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (-1009), 2, true);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0._parsePosNumber(3);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1009
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",0,
project,0,test05054,"public void test05054() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray1 = new byte[3];
    byteArray1[1] = (byte) 46;
    DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, dataInputStream0, true);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-355), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray1, 1, (byte) 31, false);
    try {
        uTF8StreamJsonParser0._parsePosNumber((-102));
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ((CTRL-CHAR, code 0)) in numeric value: Decimal point not followed by a digit
        //  at [Source: java.io.DataInputStream@0000000012; line: 1, column: 3]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test05155,"public void test05155() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[5];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 2, true);
    try {
        uTF8StreamJsonParser0._parseNegNumber();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ((CTRL-CHAR, code 0)) in numeric value: expected digit (0-9) to follow minus sign, for valid numeric value
        //  at [Source: com.fasterxml.jackson.core.util.BufferRecycler@0000000013; line: 1, column: 2]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test05256,"public void test05256() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-52), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 10, 2, false);
    try {
        uTF8StreamJsonParser0._parseNegNumber();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ((CTRL-CHAR, code 0)) in numeric value: expected digit (0-9) to follow minus sign, for valid numeric value
        //  at [Source: UNKNOWN; line: 1, column: -6]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test05357,"public void test05357() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) (-52);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-52), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 10, 2, false);
    try {
        uTF8StreamJsonParser0._parseNegNumber();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ('\u00CC' (code 204)) in numeric value: expected digit (0-9) to follow minus sign, for valid numeric value
        //  at [Source: UNKNOWN; line: 1, column: -6]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test05458,"public void test05458() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 55;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
    try {
        uTF8StreamJsonParser0._parseNegNumber();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ((CTRL-CHAR, code 0)): Expected space separating root-level values
        //  at [Source: UNKNOWN; line: 1, column: 3]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test05559,"public void test05559() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[21];
    byteArray0[0] = (byte) 55;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2316, 2316, false);
    try {
        uTF8StreamJsonParser0._parsePosNumber(0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ((CTRL-CHAR, code 0)): Expected space separating root-level values
        //  at [Source: UNKNOWN; line: 1, column: 4]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test05660,"public void test05660() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) (-18);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, (-1139), false);
    try {
        uTF8StreamJsonParser0._parsePosNumber(101);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ('\u00EE' (code 238)): Expected space separating root-level values
        //  at [Source: UNKNOWN; line: 1, column: -1138]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test05761,"public void test05761() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) (-52);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 10, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 3, 2, false);
    try {
        uTF8StreamJsonParser0._parsePosNumber(48);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ('\u00CC' (code 204)): Expected space separating root-level values
        //  at [Source: UNKNOWN; line: 1, column: 1]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test05862,"public void test05862() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[10];
    byteArray0[0] = (byte) 32;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, true);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 35, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 35, true);
    JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(35);
    assertEquals(JsonToken.VALUE_NUMBER_INT, jsonToken0);
}",0,
project,0,test05964,"public void test05964() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    byte[] byteArray0 = new byte[8];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 228, (byte) 55, false);
    try {
        uTF8StreamJsonParser0._parseName((byte) 34);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: UNKNOWN; line: 1, column: -156]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",1,
project,0,test06065,"public void test06065() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[0];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 121, 2, true);
    try {
        uTF8StreamJsonParser0._parseName(131);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 start byte 0x83
        //  at [Source: UNKNOWN; line: 1, column: 1]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",1,
project,0,test06166,"public void test06166() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    byte[] byteArray0 = new byte[8];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 55, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 110, true);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0._parseName((byte) 34);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 8
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",1,
project,0,test06267,"public void test06267() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    byte[] byteArray0 = new byte[8];
    byteArray0[1] = (byte) 55;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 55, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 110, true);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0._parseName((byte) 34);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 8
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",1,
project,0,test06368,"public void test06368() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    byte[] byteArray0 = new byte[8];
    byteArray0[1] = (byte) 55;
    byteArray0[2] = (byte) 55;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 55, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 110, true);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0._parseName((byte) 34);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 8
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",1,
project,0,test06469,"public void test06469() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    byte[] byteArray0 = new byte[8];
    byteArray0[1] = (byte) 55;
    byteArray0[2] = (byte) 55;
    byteArray0[3] = (byte) 55;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 55, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 110, true);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0._parseName((byte) 34);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 8
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",1,
project,0,test06570,"public void test06570() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    byte[] byteArray0 = new byte[8];
    byteArray0[1] = (byte) 55;
    byteArray0[2] = (byte) 55;
    byteArray0[3] = (byte) 55;
    byteArray0[4] = (byte) 55;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 55, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 110, true);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0._parseName((byte) 34);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 8
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",1,
project,0,test06671,"public void test06671() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    byte[] byteArray0 = new byte[8];
    byteArray0[1] = (byte) 55;
    byteArray0[2] = (byte) 55;
    byteArray0[3] = (byte) 55;
    byteArray0[4] = (byte) 55;
    byteArray0[5] = (byte) 34;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 55, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 110, true);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0._parseName((byte) 34);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer"", e);
    }
}",1,
project,0,test06772,"public void test06772() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    byteArray0[1] = (byte) 87;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1, false);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0.parseMediumName(2);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 4
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",0,
project,0,test06873,"public void test06873() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    byte[] byteArray0 = new byte[6];
    byteArray0[1] = (byte) 114;
    byteArray0[2] = (byte) 118;
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0.BYTE_READ_IO_BUFFER, false);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (-544), false);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0.parseMediumName(0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 6
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",0,
project,0,test06974,"public void test06974() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0.BYTE_READ_IO_BUFFER, true);
    byte[] byteArray0 = new byte[12];
    byteArray0[0] = (byte) (-42);
    byteArray0[1] = (byte) 47;
    byteArray0[2] = (byte) 47;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-42), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (-1385), 248, true);
    uTF8StreamJsonParser0._loadToHaveAtLeast((-1235));
    try {
        uTF8StreamJsonParser0.parseMediumName(51);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: java.lang.Integer@0000000014; line: 1, column: 1410]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test07075,"public void test07075() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) (-52);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) (-52), 0, false);
    uTF8StreamJsonParser0._loadToHaveAtLeast((byte) (-52));
    try {
        uTF8StreamJsonParser0.parseMediumName2((byte) (-52), 2);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: UNKNOWN; line: 1, column: 65]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test07176,"public void test07176() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[2];
    byteArray0[1] = (byte) 34;
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1771, (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, (-933), true);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0.parseMediumName2(54, 47);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer"", e);
    }
}",1,
project,0,test07277,"public void test07277() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) (-52);
    byteArray0[1] = (byte) (-52);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) (-52), 0, false);
    uTF8StreamJsonParser0._loadToHaveAtLeast((byte) (-52));
    try {
        uTF8StreamJsonParser0.parseMediumName2((byte) (-52), 2);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: UNKNOWN; line: 1, column: 65]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",1,
project,0,test07378,"public void test07378() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) (-52);
    byteArray0[1] = (byte) (-52);
    byteArray0[2] = (byte) (-52);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) (-52), 0, false);
    uTF8StreamJsonParser0._loadToHaveAtLeast((byte) (-52));
    try {
        uTF8StreamJsonParser0.parseMediumName2((byte) (-52), 2);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: UNKNOWN; line: 1, column: 65]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test07479,"public void test07479() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) (-52);
    byteArray0[1] = (byte) (-52);
    byteArray0[2] = (byte) (-52);
    byteArray0[3] = (byte) (-52);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) (-52), 0, false);
    uTF8StreamJsonParser0._loadToHaveAtLeast((byte) (-52));
    try {
        uTF8StreamJsonParser0.parseMediumName2((byte) (-52), 2);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: UNKNOWN; line: 1, column: 65]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test07580,"public void test07580() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 93, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 69, (byte) (-93), false);
    uTF8StreamJsonParser0._skipCR();
    try {
        uTF8StreamJsonParser0.parseLongName((byte) 31, (byte) (-93), 3);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: com.fasterxml.jackson.core.util.BufferRecycler@0000000015; line: 2, column: 13]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test07681,"public void test07681() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) (-93);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 93, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 69, (byte) (-93), false);
    uTF8StreamJsonParser0._skipCR();
    try {
        uTF8StreamJsonParser0.parseLongName((byte) 31, (byte) (-93), 3);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: com.fasterxml.jackson.core.util.BufferRecycler@0000000016; line: 2, column: 13]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test07782,"public void test07782() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) (-93);
    byteArray0[1] = (byte) (-93);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 93, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 69, (byte) (-93), false);
    uTF8StreamJsonParser0._skipCR();
    try {
        uTF8StreamJsonParser0.parseLongName((byte) 31, (byte) (-93), 3);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: com.fasterxml.jackson.core.util.BufferRecycler@0000000017; line: 2, column: 13]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test07883,"public void test07883() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) (-52);
    byteArray0[1] = (byte) (-52);
    byteArray0[2] = (byte) 43;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-49), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, (-1090), true);
    uTF8StreamJsonParser0._skipCR();
    try {
        uTF8StreamJsonParser0.parseLongName((-49), 1, 2244);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: UNKNOWN; line: 2, column: 9]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test07984,"public void test07984() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) (-52);
    byteArray0[1] = (byte) 78;
    byteArray0[2] = (byte) 43;
    byteArray0[3] = (byte) (-52);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-49), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, (-1090), true);
    uTF8StreamJsonParser0._skipCR();
    try {
        uTF8StreamJsonParser0.parseLongName((-49), 1, 2244);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: UNKNOWN; line: 2, column: 9]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test08085,"public void test08085() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[5];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-52), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 15, 0, true);
    uTF8StreamJsonParser0._skipCR();
    UTF8StreamJsonParser uTF8StreamJsonParser1 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1242, 15, false);
    try {
        uTF8StreamJsonParser1.slowParseName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input: was expecting closing '\""' for name
        //  at [Source: com.fasterxml.jackson.core.util.BufferRecycler@0000000018; line: 1, column: 16]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test08186,"public void test08186() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, true);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 35, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 122, 35, true);
    int[] intArray0 = new int[3];
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0.parseEscapedName(intArray0, (byte) 122, 32, 59, 116);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 122
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",0,
project,0,test08287,"public void test08287() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[3];
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1312, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 116, 2, false);
    try {
        uTF8StreamJsonParser0._handleOddName(39);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character (''' (code 39)): was expecting double-quote to start field name
        //  at [Source: UNKNOWN; line: 1, column: 1]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test08388,"public void test08388() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[5];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 56, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 365, 3, false);
    try {
        uTF8StreamJsonParser0._parseName(3);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ((CTRL-CHAR, code 3)): was expecting either valid name character (for unquoted name) or double-quote (for quoted) to start field name
        //  at [Source: com.fasterxml.jackson.core.util.BufferRecycler@0000000019; line: 1, column: 1]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",1,
project,0,test08489,"public void test08489() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) (-52);
    byteArray0[1] = (byte) (-52);
    byteArray0[2] = (byte) (-52);
    byteArray0[3] = (byte) (-52);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1065, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 12, (byte) (-52), false);
    try {
        uTF8StreamJsonParser0._parseName(35);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: UNKNOWN; line: 1, column: -55]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",1,
project,0,test08590,"public void test08590() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 26, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer1, byteArray0, 0, 2, false);
    try {
        uTF8StreamJsonParser0._parseName(131);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 start byte 0x83
        //  at [Source: UNKNOWN; line: 1, column: 1]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",1,
project,0,test08691,"public void test08691() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[12];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-128), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 1, false);
    try {
        uTF8StreamJsonParser0._parseAposName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: UNKNOWN; line: 1, column: 26]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test08792,"public void test08792() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[4];
    byteArray0[1] = (byte) 34;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1398, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 55, 3, true);
    try {
        uTF8StreamJsonParser0._parseAposName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: UNKNOWN; line: 1, column: -43]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test08893,"public void test08893() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[10];
    byteArray0[0] = (byte) 98;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 98, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 98, 2, true);
    try {
        uTF8StreamJsonParser0._parseAposName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: UNKNOWN; line: 1, column: -75]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test08994,"public void test08994() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[10];
    byteArray0[1] = (byte) 92;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 98, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 98, 2, true);
    try {
        uTF8StreamJsonParser0._parseAposName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: UNKNOWN; line: 1, column: -75]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test09095,"public void test09095() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[10];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    byte[] byteArray1 = new byte[9];
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 98, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray1, (byte) 98, 2, true);
    try {
        uTF8StreamJsonParser0._parseAposName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: UNKNOWN; line: 1, column: -84]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test09196,"public void test09196() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) 55;
    byteArray0[1] = (byte) 34;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((byte) 0);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 34, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer1, byteArray0, 0, 0, true);
    String string0 = uTF8StreamJsonParser0.parseMediumName2(7, 1065);
    assertEquals(""\u0000\u0000\u0000\u0000\u0000\u0000\u0004)\u00077"", string0);
}",0,
project,0,test09297,"public void test09297() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) (-32);
    byteArray0[1] = (byte) 34;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((-1216));
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 55, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer1, byteArray0, 3, (byte) (-32), false);
    try {
        uTF8StreamJsonParser0.parseLongName(121, (byte) 34, 3);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in field name
        //  at [Source: UNKNOWN; line: 1, column: -32]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test09398,"public void test09398() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) (-64);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((byte) 22);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-49), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer1, byteArray0, 2, (-1090), false);
    try {
        uTF8StreamJsonParser0._parseName(199);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 middle byte 0xffffc7c0
        //  at [Source: UNKNOWN; line: 1, column: -1090]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",1,
project,0,test09499,"public void test09499() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[8];
    byteArray0[1] = (byte) 91;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 660, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, 2, false);
    try {
        uTF8StreamJsonParser0._finishString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Illegal unquoted character ((CTRL-CHAR, code 0)): has to be escaped using backslash to be included in string value
        //  at [Source: UNKNOWN; line: 1, column: 3]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test095100,"public void test095100() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 34;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 730, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 730, (-1977), true);
    uTF8StreamJsonParser0._finishString();
    assertFalse(uTF8StreamJsonParser0.isExpectedStartObjectToken());
}",0,assertTrue(uTF8StreamJsonParser0.isExpectedStartObjectToken())
project,0,test096101,"public void test096101() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[1];
    byteArray0[0] = (byte) 122;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 128, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 185, 91, false);
    try {
        uTF8StreamJsonParser0._finishAndReturnString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in null
        //  at [Source: UNKNOWN; line: 1, column: -91]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test097102,"public void test097102() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[2];
    byteArray0[0] = (byte) 34;
    byteArray0[1] = (byte) 34;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 15, true);
    uTF8StreamJsonParser0.nextValue();
    uTF8StreamJsonParser0.getValueAsString();
    assertEquals(2, uTF8StreamJsonParser0.getTokenColumnNr());
}",0,"assertEquals(1, uTF8StreamJsonParser0.getTokenColumnNr())"
project,0,test098103,"public void test098103() throws Throwable {
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, false);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[7];
    byteArray0[4] = (byte) 55;
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 32, (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 32, true);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0._finishString();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 7
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",0,
project,0,test099104,"public void test099104() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 49;
    byteArray0[1] = (byte) (-11);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, (-1758), true);
    try {
        uTF8StreamJsonParser0._finishString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 middle byte 0x0
        //  at [Source: com.fasterxml.jackson.core.util.BufferRecycler@0000000020; line: 1, column: -1760]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test100105,"public void test100105() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) (-18);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-127), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 78, 35, true);
    try {
        uTF8StreamJsonParser0._finishAndReturnString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 middle byte 0x0
        //  at [Source: UNKNOWN; line: 1, column: -40]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test101106,"public void test101106() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[22];
    byteArray0[0] = (byte) (-110);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 49, true);
    try {
        uTF8StreamJsonParser0._finishString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 start byte 0x92
        //  at [Source: com.fasterxml.jackson.core.util.BufferRecycler@0000000021; line: 1, column: 2]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test102107,"public void test102107() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    byte[] byteArray1 = new byte[21];
    byteArray1[0] = (byte) 78;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 35, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 52, 0, false);
    try {
        uTF8StreamJsonParser0._skipString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in null
        //  at [Source: UNKNOWN; line: 1, column: -29]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test104109,"public void test104109() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) (-52);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1, false);
    try {
        uTF8StreamJsonParser0._skipString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 middle byte 0x0
        //  at [Source: UNKNOWN; line: 1, column: 3]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test105110,"public void test105110() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byteArray0[0] = (byte) (-18);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1020), false);
    try {
        uTF8StreamJsonParser0._skipString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in null
        //  at [Source: UNKNOWN; line: 1, column: -1140]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test106111,"public void test106111() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, (ByteQuadsCanonicalizer) null, byteArray0, 43, 0, true);
    try {
        uTF8StreamJsonParser0._handleUnexpectedValue(43);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ((CTRL-CHAR, code 0)) in numeric value: expected digit (0-9) to follow minus sign, for valid numeric value
        //  at [Source: UNKNOWN; line: 1, column: -41]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test107112,"public void test107112() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    PipedInputStream pipedInputStream0 = new PipedInputStream((byte) 55);
    byte[] byteArray0 = new byte[4];
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-124), pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 238, 117, true);
    try {
        uTF8StreamJsonParser0._handleUnexpectedValue(73);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Pipe not connected
        //
        verifyException(""java.io.PipedInputStream"", e);
    }
}",1,
project,0,test108113,"public void test108113() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[3];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 98, (byte) 98, true);
    try {
        uTF8StreamJsonParser0._handleUnexpectedValue(125);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ('}' (code 125)): expected a value
        //  at [Source: UNKNOWN; line: 1, column: 1]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",1,
project,0,test109114,"public void test109114() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1217, byteArrayInputStream0, (ObjectCodec) null, (ByteQuadsCanonicalizer) null, byteArray0, 0, 15, true);
    try {
        uTF8StreamJsonParser0._handleUnexpectedValue(43);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ((CTRL-CHAR, code 0)) in numeric value: expected digit (0-9) to follow minus sign, for valid numeric value
        //  at [Source: UNKNOWN; line: 1, column: 2]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test110115,"public void test110115() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[10];
    byteArray0[0] = (byte) 32;
    byteArray0[1] = (byte) 92;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, true);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 35, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 35, true);
    try {
        uTF8StreamJsonParser0.nextBooleanValue();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ('\\' (code 92)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')
        //  at [Source: java.io.ByteArrayInputStream@0000000022; line: 1, column: 3]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test111116,"public void test111116() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 55, 896, false);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0._handleApos();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 55
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",0,
project,0,test112117,"public void test112117() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[7];
    byteArray0[0] = (byte) 87;
    byteArray0[1] = (byte) 69;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray1 = new byte[2];
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-19), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray1, 3741, (byte) 87, false);
    try {
        uTF8StreamJsonParser0._handleApos();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Illegal character ((CTRL-CHAR, code 0)): only regular white space (\\r, \\n, \\t) is allowed between tokens
        //  at [Source: UNKNOWN; line: 1, column: -3650]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test113118,"public void test113118() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    byte[] byteArray1 = new byte[21];
    byteArray1[0] = (byte) 39;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 35, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 52, 0, false);
    JsonToken jsonToken0 = uTF8StreamJsonParser0._handleApos();
    assertEquals(6, jsonToken0.id());
}",0,"assertEquals(0, jsonToken0.id())"
project,0,test114119,"public void test114119() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[22];
    byteArray0[0] = (byte) (-52);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-52), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 1, false);
    try {
        uTF8StreamJsonParser0._handleApos();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 middle byte 0xcc
        //  at [Source: UNKNOWN; line: 1, column: 3]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test115120,"public void test115120() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[7];
    byteArray0[0] = (byte) 87;
    byteArray0[1] = (byte) 69;
    byteArray0[2] = (byte) (-19);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 55, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 240, 73, false);
    try {
        uTF8StreamJsonParser0._handleApos();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 middle byte 0x0
        //  at [Source: UNKNOWN; line: 1, column: -162]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test116121,"public void test116121() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byteArray0[0] = (byte) (-18);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, (-3630), true);
    try {
        uTF8StreamJsonParser0._handleApos();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in null
        //  at [Source: UNKNOWN; line: 1, column: -3629]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test117122,"public void test117122() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) (-93);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 192);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) (-93), (byte) (-93), true);
    try {
        uTF8StreamJsonParser0._handleApos();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 start byte 0xa3
        //  at [Source: com.fasterxml.jackson.core.util.BufferRecycler@0000000023; line: 1, column: 2]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test118123,"public void test118123() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[2];
    byteArray0[0] = (byte) 34;
    byteArray0[1] = (byte) 34;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 15, true);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0._handleApos();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 2
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",0,
project,0,test119124,"public void test119124() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    byteArray0[1] = (byte) 78;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1268, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 3803, false);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0.nextLongValue(199);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 4
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8StreamJsonParser"", e);
    }
}",0,
project,0,test120125,"public void test120125() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-49), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 0, false);
    uTF8StreamJsonParser0._skipCR();
    uTF8StreamJsonParser0._loadToHaveAtLeast((byte) (-52));
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0._matchToken(""8|=rS#3cnIsh"", (byte) (-52));
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",1,
project,0,test121126,"public void test121126() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[1];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 319);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-5407), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 319, (-5407), true);
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0._matchToken(""8|=rS#3cnIsh"", 1095);
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",1,
project,0,test122127,"public void test122127() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 55;
    byteArray0[1] = (byte) 55;
    byteArray0[2] = (byte) 9;
    byteArray0[3] = (byte) 9;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 55, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 55, (byte) 9, true);
    uTF8StreamJsonParser0.nextValue();
    // Undeclared exception!
    try {
        uTF8StreamJsonParser0.nextBooleanValue();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.io.IOContext"", e);
    }
}",0,
project,0,test123128,"public void test123128() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    byte[] byteArray1 = new byte[7];
    byteArray1[1] = (byte) 9;
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray1, 1, 49, true);
    try {
        uTF8StreamJsonParser0.nextValue();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Illegal character ((CTRL-CHAR, code 0)): only regular white space (\\r, \\n, \\t) is allowed between tokens
        //  at [Source: UNKNOWN; line: 1, column: 3]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test124129,"public void test124129() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    byte[] byteArray0 = new byte[0];
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1859, mockFileInputStream0, (ObjectCodec) null, (ByteQuadsCanonicalizer) null, byteArray0, 2, 2, false);
    try {
        uTF8StreamJsonParser0._decodeEscaped();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected end-of-input in character escape sequence
        //  at [Source: org.evosuite.runtime.mock.java.io.MockFileInputStream@0000000024; line: 1, column: 3]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test125130,"public void test125130() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 47;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-51), byteArrayInputStream0, (ObjectCodec) null, (ByteQuadsCanonicalizer) null, byteArray0, 1794, 91, true);
    char char0 = uTF8StreamJsonParser0._decodeEscaped();
    assertEquals('/', char0);
}",0,
project,0,test126131,"public void test126131() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[4];
    byteArray0[1] = (byte) 92;
    byteArray0[2] = (byte) 92;
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
    try {
        uTF8StreamJsonParser0._finishString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Illegal unquoted character ((CTRL-CHAR, code 0)): has to be escaped using backslash to be included in string value
        //  at [Source: java.io.BufferedInputStream@0000000025; line: 1, column: 4]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test127132,"public void test127132() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) 98;
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3396, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 2, false);
    char char0 = uTF8StreamJsonParser0._decodeEscaped();
    assertEquals('\b', char0);
}",0,
project,0,test128133,"public void test128133() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) 114;
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0.BYTE_WRITE_CONCAT_BUFFER, false);
    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (-544), false);
    char char0 = uTF8StreamJsonParser0._decodeEscaped();
    assertEquals('\r', char0);
}",0,
project,0,test129134,"public void test129134() throws Throwable {
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, false);
    byte[] byteArray0 = new byte[1];
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 93, false);
    try {
        uTF8StreamJsonParser0._parseName((-3864));
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 middle byte 0x0
        //  at [Source: java.io.BufferedInputStream@0000000026; line: 1, column: 2]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",1,
project,0,test130135,"public void test130135() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    byteArray0[1] = (byte) 92;
    byteArray0[2] = (byte) (-16);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 56, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 1051, false);
    try {
        uTF8StreamJsonParser0.slowParseName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 middle byte 0x0
        //  at [Source: com.fasterxml.jackson.core.util.BufferRecycler@0000000027; line: 1, column: 5]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test131136,"public void test131136() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-72);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-574), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) (-72), (byte) (-72), true);
    try {
        uTF8StreamJsonParser0._parseName((-574));
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected character ('\u00B8' (code 184)): was expecting double-quote to start field name
        //  at [Source: UNKNOWN; line: 1, column: 2]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",1,
project,0,test132137,"public void test132137() throws Throwable {
    byte[] byteArray0 = new byte[1];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    byte[] byteArray1 = new byte[6];
    byteArray1[2] = (byte) (-47);
    byteArray1[3] = (byte) (-82);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray1, 2, 101, false);
    try {
        uTF8StreamJsonParser0._finishString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Illegal unquoted character ((CTRL-CHAR, code 0)): has to be escaped using backslash to be included in string value
        //  at [Source: UNKNOWN; line: 1, column: 4]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test133138,"public void test133138() throws Throwable {
    byte[] byteArray0 = new byte[1];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    byte[] byteArray1 = new byte[6];
    byteArray1[2] = (byte) (-18);
    byteArray1[3] = (byte) (-82);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray1, 2, 101, false);
    try {
        uTF8StreamJsonParser0._finishString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 middle byte 0x0
        //  at [Source: UNKNOWN; line: 1, column: 4]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test134139,"public void test134139() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) (-52);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-52), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 1, false);
    try {
        uTF8StreamJsonParser0._skipString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 middle byte 0xcc
        //  at [Source: UNKNOWN; line: 1, column: 3]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test135140,"public void test135140() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    byteArray0[1] = (byte) (-18);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 35, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 52, 0, false);
    try {
        uTF8StreamJsonParser0._skipString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 middle byte 0x0
        //  at [Source: UNKNOWN; line: 1, column: -48]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test136141,"public void test136141() throws Throwable {
    byte[] byteArray0 = new byte[1];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    byte[] byteArray1 = new byte[6];
    byteArray1[2] = (byte) (-18);
    byteArray1[3] = (byte) (-82);
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray1, 2, 101, false);
    try {
        uTF8StreamJsonParser0._skipString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Invalid UTF-8 middle byte 0x0
        //  at [Source: UNKNOWN; line: 1, column: 4]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test138143,"public void test138143() throws Throwable {
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, dataInputStream0, true);
    byte[] byteArray0 = new byte[0];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 73, 0, false);
    uTF8StreamJsonParser0._skipCR();
    assertFalse(uTF8StreamJsonParser0.isExpectedStartArrayToken());
}",0,assertTrue(uTF8StreamJsonParser0.isExpectedStartArrayToken())
project,0,test139144,"public void test139144() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[4];
    byte[] byteArray1 = new byte[21];
    byteArray1[0] = (byte) 78;
    byteArray1[1] = (byte) 31;
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 35, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 52, 0, false);
    try {
        uTF8StreamJsonParser0.nextIntValue((-873));
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unrecognized token 'N': was expecting 'null', 'true', 'false' or NaN
        //  at [Source: UNKNOWN; line: 1, column: -49]
        //
        verifyException(""com.fasterxml.jackson.core.JsonParser"", e);
    }
}",0,
project,0,test141146,"public void test141146() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[5];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1245, false);
    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
    assertEquals((-1L), jsonLocation0.getCharOffset());
}",0,
project,0,test141147,"public void test141147() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[5];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1245, false);
    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
    assertEquals(0, jsonLocation0.getColumnNr());
}",0,"assertEquals(0, jsonLocation0.getColumnNr())"
project,0,test141148,"public void test141148() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[5];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1245, false);
    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
    assertEquals((-1L), jsonLocation0.getByteOffset());
}",0,
project,0,test141149,"public void test141149() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[5];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1245, false);
    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
    assertEquals(1, jsonLocation0.getLineNr());
}",0,"assertEquals(0, jsonLocation0.getLineNr())"
