project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", true);
    File file0 = MockFile.createTempFile(""RyxR&5%n*9%D1/z|"", ""4"", (File) null);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, mockFileOutputStream0);
    int int0 = uTF8JsonGenerator0.getOutputBuffered();
    assertEquals(0, int0);
}",0,
project,0,test0001,"public void test0001() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", true);
    File file0 = MockFile.createTempFile(""RyxR&5%n*9%D1/z|"", ""4"", (File) null);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, mockFileOutputStream0);
    int int0 = uTF8JsonGenerator0.getOutputBuffered();
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0024,"public void test0024() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayBuilder0);
    Object object0 = uTF8JsonGenerator0.getOutputTarget();
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0025,"public void test0025() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayBuilder0);
    Object object0 = uTF8JsonGenerator0.getOutputTarget();
    assertNotNull(object0);
}",0,assertNotNull(object0)
project,0,test0036,"public void test0036() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    JsonGenerator jsonGenerator0 = uTF8JsonGenerator0.useDefaultPrettyPrinter();
    int[] intArray0 = new int[5];
    // Undeclared exception!
    try {
        jsonGenerator0.writeArray(intArray0, 56319, 56320);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 56319
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",1,
project,0,test0047,"public void test0047() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeNullField("""");
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(7, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0058,"public void test0058() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""9&w"", false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-2610), (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeBooleanField(""9&w"", false);
    try {
        uTF8JsonGenerator0.writeFieldName(""?L.y+#mX<i~*"");
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Can not write a field name, expecting a value
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test0079,"public void test0079() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[2];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeBinaryField("".OopaW8G[R#4"", byteArray0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.io.ByteArrayOutputStream"", e);
    }
}",0,
project,0,test00810,"public void test00810() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""%"");
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName("""");
    assertArrayEquals(new byte[] { (byte) 34, (byte) 44, (byte) 34 }, byteArray0);
}",0,
project,0,test00811,"public void test00811() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""%"");
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName("""");
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, uTF8JsonGenerator0.getOutputBuffered())"
project,0,test01114,"public void test01114() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    PipedInputStream pipedInputStream0 = new PipedInputStream();
    PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, pipedOutputStream0);
    uTF8JsonGenerator0.writeNumber(1.0F);
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertEquals(5, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test01216,"public void test01216() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""%"");
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeStartObject();
    SerializedString serializedString0 = new SerializedString(""%"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertEquals(3, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test01622,"public void test01622() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArray((int[]) null, 1, 0);
    assertEquals(2, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test01723,"public void test01723() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, false);
    try {
        uTF8JsonGenerator0.writeEndArray();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Current context not an ARRAY but ROOT
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test01824,"public void test01824() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    JsonGenerator jsonGenerator0 = uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeStartObject();
    char[] charArray0 = iOContext0.allocTokenBuffer(981);
    SerializedString serializedString0 = new SerializedString(""expected a valid value (number, String, array, object, 'true', 'false' or 'null')"");
    jsonGenerator0.writeFieldName((SerializableString) serializedString0);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeString(charArray0, 931, 56320);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 4000
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test02027,"public void test02027() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    try {
        uTF8JsonGenerator0.writeEndObject();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Current context not an object but ROOT
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test02128,"public void test02128() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    try {
        uTF8JsonGenerator0._writePPFieldName(""pAc!_U]ga(C7v"");
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Can not write a field name, expecting a value
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test02229,"public void test02229() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 0);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0._writePPFieldName(""LDp?Z6>o?]`c$Ut?h"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test02430,"public void test02430() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    try {
        uTF8JsonGenerator0._writePPFieldName(serializedString0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Can not write a field name, expecting a value
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test02531,"public void test02531() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((double) 2);
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    // Undeclared exception!
    try {
        uTF8JsonGenerator0._writePPFieldName(serializedString0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test02734,"public void test02734() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""oFW-E/GNu3&kS#O"");
    DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeString(""oFW-E/GNu3&kS#O"");
    assertArrayEquals(new byte[] { (byte) 117, (byte) 51, (byte) 38, (byte) 107, (byte) 83, (byte) 35, (byte) 79, (byte) 34, (byte) 78 }, byteArray0);
}",1,
project,0,test02735,"public void test02735() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""oFW-E/GNu3&kS#O"");
    DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeString(""oFW-E/GNu3&kS#O"");
    assertEquals(8, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test02836,"public void test02836() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeString((String) null);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",1,
project,0,test02938,"public void test02938() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeString("""");
    assertArrayEquals(new byte[] { (byte) 34 }, byteArray0);
}",1,
project,0,test03039,"public void test03039() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    char[] charArray0 = iOContext0.allocTokenBuffer(981);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeString(charArray0, 931, 56320);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 4000
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",1,
project,0,test03158,"public void test03158() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test03159,"public void test03159() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,
project,0,test03160,"public void test03160() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    assertEquals(200, charArray0.length);
}",1,
project,0,test03161,"public void test03161() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    assertNotNull(charArray0);
}",1,
project,0,test03162,"public void test03162() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test03163,"public void test03163() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test03164,"public void test03164() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test03165,"public void test03165() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test03166,"public void test03166() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test03167,"public void test03167() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test03168,"public void test03168() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test03169,"public void test03169() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test03170,"public void test03170() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test03171,"public void test03171() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertFalse(iOContext0.isResourceManaged())
project,0,test03188,"public void test03188() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test03189,"public void test03189() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertFalse(iOContext0.isResourceManaged())
project,0,test03192,"public void test03192() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test03193,"public void test03193() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test03194,"public void test03194() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test03195,"public void test03195() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test03196,"public void test03196() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test03197,"public void test03197() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test03198,"public void test03198() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test03199,"public void test03199() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test031100,"public void test031100() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test031101,"public void test031101() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test031102,"public void test031102() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(200, charArray0.length);
}",1,
project,0,test031103,"public void test031103() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test031104,"public void test031104() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test031105,"public void test031105() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test031106,"public void test031106() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test031107,"public void test031107() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test031108,"public void test031108() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test031109,"public void test031109() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test031110,"public void test031110() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test031111,"public void test031111() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test031112,"public void test031112() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test031113,"public void test031113() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test031114,"public void test031114() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test031115,"public void test031115() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test031116,"public void test031116() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test031119,"public void test031119() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test031120,"public void test031120() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test031121,"public void test031121() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test031122,"public void test031122() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test031123,"public void test031123() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test031124,"public void test031124() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test031125,"public void test031125() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test031126,"public void test031126() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test031127,"public void test031127() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test031128,"public void test031128() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    assertEquals(20, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test032149,"public void test032149() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,
project,0,test032150,"public void test032150() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test032151,"public void test032151() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test032152,"public void test032152() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(3, byteArray0.length);
}",0,
project,0,test032153,"public void test032153() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertNotNull(uTF8JsonGenerator0);
}",0,
project,0,test032154,"public void test032154() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test032155,"public void test032155() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test032156,"public void test032156() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test032157,"public void test032157() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test032158,"public void test032158() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test032159,"public void test032159() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test032160,"public void test032160() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test032161,"public void test032161() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test032162,"public void test032162() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test032163,"public void test032163() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test032164,"public void test032164() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test032165,"public void test032165() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test032182,"public void test032182() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test032183,"public void test032183() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test032184,"public void test032184() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test032185,"public void test032185() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test032186,"public void test032186() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test032187,"public void test032187() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test032188,"public void test032188() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test032189,"public void test032189() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test032190,"public void test032190() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test032191,"public void test032191() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(333, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test032192,"public void test032192() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test032193,"public void test032193() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test032195,"public void test032195() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    SerializedString serializedString0 = new SerializedString(""#j+lVyQ79t"");
    assertEquals(10, serializedString0.charLength());
}",0,"assertEquals(0, serializedString0.charLength())"
project,0,test032196,"public void test032196() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    SerializedString serializedString0 = new SerializedString(""#j+lVyQ79t"");
    assertEquals(""#j+lVyQ79t"", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test032197,"public void test032197() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    SerializedString serializedString0 = new SerializedString(""#j+lVyQ79t"");
    assertEquals(""#j+lVyQ79t"", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test033217,"public void test033217() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test033218,"public void test033218() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test033223,"public void test033223() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    SerializedString serializedString0 = new SerializedString(""Qqj_MZWi|R<Ys"");
    assertEquals(""Qqj_MZWi|R<Ys"", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test033224,"public void test033224() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    SerializedString serializedString0 = new SerializedString(""Qqj_MZWi|R<Ys"");
    assertEquals(13, serializedString0.charLength());
}",0,"assertEquals(0, serializedString0.charLength())"
project,0,test033225,"public void test033225() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    SerializedString serializedString0 = new SerializedString(""Qqj_MZWi|R<Ys"");
    assertEquals(""Qqj_MZWi|R<Ys"", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test033241,"public void test033241() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    SerializedString serializedString0 = new SerializedString(""Qqj_MZWi|R<Ys"");
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test033242,"public void test033242() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    SerializedString serializedString0 = new SerializedString(""Qqj_MZWi|R<Ys"");
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test033245,"public void test033245() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    SerializedString serializedString0 = new SerializedString(""Qqj_MZWi|R<Ys"");
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test033246,"public void test033246() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    SerializedString serializedString0 = new SerializedString(""Qqj_MZWi|R<Ys"");
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    assertEquals(55296, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test033247,"public void test033247() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    SerializedString serializedString0 = new SerializedString(""Qqj_MZWi|R<Ys"");
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test033248,"public void test033248() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    SerializedString serializedString0 = new SerializedString(""Qqj_MZWi|R<Ys"");
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test033249,"public void test033249() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    SerializedString serializedString0 = new SerializedString(""Qqj_MZWi|R<Ys"");
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    assertEquals(55296, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test033250,"public void test033250() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    SerializedString serializedString0 = new SerializedString(""Qqj_MZWi|R<Ys"");
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test033251,"public void test033251() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    SerializedString serializedString0 = new SerializedString(""Qqj_MZWi|R<Ys"");
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test033252,"public void test033252() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    SerializedString serializedString0 = new SerializedString(""Qqj_MZWi|R<Ys"");
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test033253,"public void test033253() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    SerializedString serializedString0 = new SerializedString(""Qqj_MZWi|R<Ys"");
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test033254,"public void test033254() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    SerializedString serializedString0 = new SerializedString(""Qqj_MZWi|R<Ys"");
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test034274,"public void test034274() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test034275,"public void test034275() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test034294,"public void test034294() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test034295,"public void test034295() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test034298,"public void test034298() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test034299,"public void test034299() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(4, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test034300,"public void test034300() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test034301,"public void test034301() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test034302,"public void test034302() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test034303,"public void test034303() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test034304,"public void test034304() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test034305,"public void test034305() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test034306,"public void test034306() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test034307,"public void test034307() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(2, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test034311,"public void test034311() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    assertEquals("" "", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test034312,"public void test034312() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    assertEquals("" "", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test034313,"public void test034313() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    assertEquals(1, serializedString0.charLength());
}",0,"assertEquals(0, serializedString0.charLength())"
project,0,test034314,"public void test034314() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertArrayEquals(new byte[] { (byte) 115, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test034315,"public void test034315() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(3, byteArray0.length);
}",0,
project,0,test034316,"public void test034316() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test034317,"public void test034317() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test034318,"public void test034318() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test034319,"public void test034319() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test034320,"public void test034320() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test034321,"public void test034321() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test034322,"public void test034322() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test034323,"public void test034323() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test034324,"public void test034324() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test034325,"public void test034325() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test034326,"public void test034326() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test034327,"public void test034327() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test034328,"public void test034328() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test034329,"public void test034329() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test034332,"public void test034332() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test034333,"public void test034333() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(4, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test034334,"public void test034334() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test034335,"public void test034335() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test034336,"public void test034336() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test034337,"public void test034337() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test034338,"public void test034338() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test034339,"public void test034339() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test034340,"public void test034340() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test034341,"public void test034341() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test034356,"public void test034356() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test034357,"public void test034357() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test034360,"public void test034360() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test034361,"public void test034361() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals(4, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test034362,"public void test034362() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test034363,"public void test034363() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test034364,"public void test034364() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test034365,"public void test034365() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test034366,"public void test034366() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test034367,"public void test034367() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test034368,"public void test034368() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test034369,"public void test034369() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test034370,"public void test034370() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals("" "", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test034371,"public void test034371() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals("" "", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test034372,"public void test034372() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRaw(""s"");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals(1, serializedString0.charLength());
}",0,"assertEquals(0, serializedString0.charLength())"
project,0,test035391,"public void test035391() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test035392,"public void test035392() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test035409,"public void test035409() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test035410,"public void test035410() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test035413,"public void test035413() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test035414,"public void test035414() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test035415,"public void test035415() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test035416,"public void test035416() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test035417,"public void test035417() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test035418,"public void test035418() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test035419,"public void test035419() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test035420,"public void test035420() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test035421,"public void test035421() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test035422,"public void test035422() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test035424,"public void test035424() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    assertEquals(""lehtU'S("", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test035425,"public void test035425() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    assertEquals(8, serializedString0.charLength());
}",0,
project,0,test035426,"public void test035426() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    assertEquals(""lehtU'S("", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test035439,"public void test035439() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test035440,"public void test035440() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test035443,"public void test035443() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test035444,"public void test035444() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test035445,"public void test035445() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test035446,"public void test035446() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test035447,"public void test035447() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test035448,"public void test035448() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test035449,"public void test035449() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals(10, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test035450,"public void test035450() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test035451,"public void test035451() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test035452,"public void test035452() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test035453,"public void test035453() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals(""lehtU'S("", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test035454,"public void test035454() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals(8, serializedString0.charLength());
}",0,
project,0,test035455,"public void test035455() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""lehtU'S("");
    uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals(""lehtU'S("", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test036474,"public void test036474() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test036475,"public void test036475() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test036478,"public void test036478() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test036479,"public void test036479() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(4, byteArray0.length);
}",0,
project,0,test036480,"public void test036480() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertNotNull(uTF8JsonGenerator0);
}",0,
project,0,test036481,"public void test036481() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test036482,"public void test036482() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test036483,"public void test036483() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test036484,"public void test036484() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test036485,"public void test036485() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test036486,"public void test036486() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test036487,"public void test036487() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test036488,"public void test036488() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test036489,"public void test036489() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test036490,"public void test036490() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test036491,"public void test036491() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test036492,"public void test036492() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test036493,"public void test036493() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test036494,"public void test036494() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test036511,"public void test036511() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals((-797), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test036512,"public void test036512() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test036513,"public void test036513() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test036514,"public void test036514() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test036515,"public void test036515() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test036516,"public void test036516() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test036517,"public void test036517() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test036518,"public void test036518() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(3, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test036519,"public void test036519() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test036520,"public void test036520() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test036521,"public void test036521() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertArrayEquals(new byte[] { (byte) 34, (byte) 0, (byte) 0, (byte) 34 }, byteArray0);
}",0,
project,0,test036522,"public void test036522() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals(4, byteArray0.length);
}",0,
project,0,test036523,"public void test036523() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test036524,"public void test036524() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test036525,"public void test036525() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test036526,"public void test036526() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test036527,"public void test036527() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test036528,"public void test036528() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test036529,"public void test036529() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test036530,"public void test036530() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test036531,"public void test036531() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test036532,"public void test036532() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test036533,"public void test036533() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test036534,"public void test036534() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test036535,"public void test036535() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test036536,"public void test036536() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test036553,"public void test036553() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals((-797), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test036554,"public void test036554() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test036555,"public void test036555() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test036556,"public void test036556() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test036557,"public void test036557() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test036558,"public void test036558() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,
project,0,test036559,"public void test036559() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test036560,"public void test036560() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test036561,"public void test036561() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test036562,"public void test036562() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[4];
    MockFile mockFile0 = new MockFile(""~k>>S%\""5HLfkrblp"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test037581,"public void test037581() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test037582,"public void test037582() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test037585,"public void test037585() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertArrayEquals(new byte[] { (byte) 0 }, byteArray0);
}",0,
project,0,test037586,"public void test037586() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(1, byteArray0.length);
}",0,
project,0,test037587,"public void test037587() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertNotNull(uTF8JsonGenerator0);
}",0,
project,0,test037588,"public void test037588() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test037589,"public void test037589() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test037590,"public void test037590() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test037591,"public void test037591() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test037592,"public void test037592() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test037593,"public void test037593() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test037594,"public void test037594() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test037595,"public void test037595() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test037596,"public void test037596() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test037597,"public void test037597() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test037598,"public void test037598() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test037599,"public void test037599() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test037600,"public void test037600() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test037601,"public void test037601() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test037618,"public void test037618() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test037619,"public void test037619() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test037620,"public void test037620() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test037621,"public void test037621() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test037622,"public void test037622() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test037623,"public void test037623() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test037624,"public void test037624() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(3, uTF8JsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, uTF8JsonGenerator0.getOutputBuffered())"
project,0,test037625,"public void test037625() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test037626,"public void test037626() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test037627,"public void test037627() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test037628,"public void test037628() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertArrayEquals(new byte[] { (byte) 34 }, byteArray0);
}",0,
project,0,test037629,"public void test037629() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(1, byteArray0.length);
}",0,
project,0,test037630,"public void test037630() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test037631,"public void test037631() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test037632,"public void test037632() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test037633,"public void test037633() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test037634,"public void test037634() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test037635,"public void test037635() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test037636,"public void test037636() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test037637,"public void test037637() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test037638,"public void test037638() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test037639,"public void test037639() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test037640,"public void test037640() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test037641,"public void test037641() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test037642,"public void test037642() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test037643,"public void test037643() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertFalse(iOContext0.isResourceManaged())
project,0,test037660,"public void test037660() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test037661,"public void test037661() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test037662,"public void test037662() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test037663,"public void test037663() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test037664,"public void test037664() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test037665,"public void test037665() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test037666,"public void test037666() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test037667,"public void test037667() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test037668,"public void test037668() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test037669,"public void test037669() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test038689,"public void test038689() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test038690,"public void test038690() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test038691,"public void test038691() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test038692,"public void test038692() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(10, byteArray0.length);
}",0,
project,0,test038693,"public void test038693() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertNotNull(uTF8JsonGenerator0);
}",0,
project,0,test038694,"public void test038694() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test038695,"public void test038695() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test038696,"public void test038696() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test038697,"public void test038697() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test038698,"public void test038698() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test038699,"public void test038699() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test038700,"public void test038700() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test038701,"public void test038701() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test038702,"public void test038702() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test038703,"public void test038703() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test038704,"public void test038704() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test038705,"public void test038705() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test038706,"public void test038706() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test038707,"public void test038707() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test038708,"public void test038708() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test038709,"public void test038709() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test038710,"public void test038710() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(333, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test038711,"public void test038711() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test038712,"public void test038712() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test038713,"public void test038713() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test038714,"public void test038714() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test038715,"public void test038715() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test038716,"public void test038716() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test038717,"public void test038717() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test038718,"public void test038718() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertArrayEquals(new byte[] { (byte) 92, (byte) 34, (byte) 34, (byte) 117, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test038719,"public void test038719() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(10, byteArray0.length);
}",0,
project,0,test038720,"public void test038720() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test038721,"public void test038721() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test038722,"public void test038722() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test038723,"public void test038723() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test038724,"public void test038724() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test038725,"public void test038725() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test038726,"public void test038726() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test038727,"public void test038727() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test038728,"public void test038728() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test038729,"public void test038729() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test038730,"public void test038730() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test038731,"public void test038731() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test038732,"public void test038732() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test038733,"public void test038733() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test038734,"public void test038734() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test038735,"public void test038735() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test038736,"public void test038736() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(3, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test038737,"public void test038737() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(333, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test038738,"public void test038738() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test038739,"public void test038739() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test038740,"public void test038740() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test038741,"public void test038741() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test038742,"public void test038742() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test038743,"public void test038743() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test039762,"public void test039762() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test039763,"public void test039763() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertFalse(iOContext0.isResourceManaged())
project,0,test039782,"public void test039782() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test039783,"public void test039783() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test039786,"public void test039786() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test039787,"public void test039787() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertEquals(1222, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test039788,"public void test039788() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test039789,"public void test039789() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test039790,"public void test039790() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test039791,"public void test039791() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test039792,"public void test039792() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test039793,"public void test039793() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test039794,"public void test039794() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test039795,"public void test039795() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test039796,"public void test039796() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertArrayEquals(new byte[] { (byte) 34 }, byteArray0);
}",0,
project,0,test039797,"public void test039797() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(1, byteArray0.length);
}",0,
project,0,test039798,"public void test039798() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test039799,"public void test039799() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test039800,"public void test039800() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test039801,"public void test039801() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test039802,"public void test039802() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test039803,"public void test039803() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test039804,"public void test039804() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test039805,"public void test039805() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test039806,"public void test039806() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test039807,"public void test039807() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test039808,"public void test039808() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test039809,"public void test039809() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test039810,"public void test039810() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test039811,"public void test039811() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test039814,"public void test039814() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test039815,"public void test039815() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(1222, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test039816,"public void test039816() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test039817,"public void test039817() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test039818,"public void test039818() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test039819,"public void test039819() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test039820,"public void test039820() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test039821,"public void test039821() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test039822,"public void test039822() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test039823,"public void test039823() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test040842,"public void test040842() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test040843,"public void test040843() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test040860,"public void test040860() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test040861,"public void test040861() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test040864,"public void test040864() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test040865,"public void test040865() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test040866,"public void test040866() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test040867,"public void test040867() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test040868,"public void test040868() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test040869,"public void test040869() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test040870,"public void test040870() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test040871,"public void test040871() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test040872,"public void test040872() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test040873,"public void test040873() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test040874,"public void test040874() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeRaw(""Too few bytes available: missing "", 55296, 55296);
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test041893,"public void test041893() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test041894,"public void test041894() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test041913,"public void test041913() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test041914,"public void test041914() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test041917,"public void test041917() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test041918,"public void test041918() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test041919,"public void test041919() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test041920,"public void test041920() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test041921,"public void test041921() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test041922,"public void test041922() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test041923,"public void test041923() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test041924,"public void test041924() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test041925,"public void test041925() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test041926,"public void test041926() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test041927,"public void test041927() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertArrayEquals(new byte[] { (byte) 76 }, byteArray0);
}",0,
project,0,test041928,"public void test041928() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(1, byteArray0.length);
}",0,
project,0,test041929,"public void test041929() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test041930,"public void test041930() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test041931,"public void test041931() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test041932,"public void test041932() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test041933,"public void test041933() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test041934,"public void test041934() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test041935,"public void test041935() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test041936,"public void test041936() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test041937,"public void test041937() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test041938,"public void test041938() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test041939,"public void test041939() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test041940,"public void test041940() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test041941,"public void test041941() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test041942,"public void test041942() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertFalse(iOContext0.isResourceManaged())
project,0,test041945,"public void test041945() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test041946,"public void test041946() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test041947,"public void test041947() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test041948,"public void test041948() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test041949,"public void test041949() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test041950,"public void test041950() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test041951,"public void test041951() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test041952,"public void test041952() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test041953,"public void test041953() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test041954,"public void test041954() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeRaw(""LSczc;<-3rzo^z"", 0, 1);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test042973,"public void test042973() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test042974,"public void test042974() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test042978,"public void test042978() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    assertEquals(0, serializedString0.charLength());
}",0,"assertEquals(0, serializedString0.charLength())"
project,0,test042979,"public void test042979() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    assertEquals("""", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test042980,"public void test042980() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    assertEquals("""", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test0421011,"public void test0421011() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0421012,"public void test0421012() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0421029,"public void test0421029() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0421030,"public void test0421030() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0421031,"public void test0421031() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0421032,"public void test0421032() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0421033,"public void test0421033() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0421034,"public void test0421034() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0421035,"public void test0421035() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0421036,"public void test0421036() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0421037,"public void test0421037() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0421038,"public void test0421038() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0421051,"public void test0421051() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0421052,"public void test0421052() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0421069,"public void test0421069() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    assertEquals(0, serializedString0.charLength());
}",0,"assertEquals(0, serializedString0.charLength())"
project,0,test0421070,"public void test0421070() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    assertEquals("""", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test0421071,"public void test0421071() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    assertEquals("""", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test0421072,"public void test0421072() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0421073,"public void test0421073() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0421074,"public void test0421074() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0421075,"public void test0421075() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0421076,"public void test0421076() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0421077,"public void test0421077() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0421078,"public void test0421078() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0421079,"public void test0421079() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0421080,"public void test0421080() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0421081,"public void test0421081() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    MockFile mockFile0 = new MockFile("""", ""Split surrogate on writeRaw() input (last character): first character 0x%4x"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    SerializedString serializedString0 = new SerializedString("""");
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0431100,"public void test0431100() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0431101,"public void test0431101() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0431118,"public void test0431118() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0431119,"public void test0431119() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0431122,"public void test0431122() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0431123,"public void test0431123() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0431124,"public void test0431124() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0431125,"public void test0431125() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0431126,"public void test0431126() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0431127,"public void test0431127() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0431128,"public void test0431128() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0431129,"public void test0431129() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0431130,"public void test0431130() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0431131,"public void test0431131() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0431133,"public void test0431133() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    assertEquals(0, serializedString0.charLength());
}",0,"assertEquals(0, serializedString0.charLength())"
project,0,test0431134,"public void test0431134() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    assertEquals("""", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test0431135,"public void test0431135() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    assertEquals("""", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test0431136,"public void test0431136() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test0431137,"public void test0431137() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test0431138,"public void test0431138() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test0431139,"public void test0431139() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test0431140,"public void test0431140() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test0431141,"public void test0431141() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test0431142,"public void test0431142() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test0431143,"public void test0431143() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test0431144,"public void test0431144() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test0431145,"public void test0431145() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test0431146,"public void test0431146() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test0431147,"public void test0431147() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test0431148,"public void test0431148() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0431149,"public void test0431149() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0431152,"public void test0431152() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0431153,"public void test0431153() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0431154,"public void test0431154() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0431155,"public void test0431155() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0431156,"public void test0431156() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0431157,"public void test0431157() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0431158,"public void test0431158() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0431159,"public void test0431159() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0431160,"public void test0431160() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0431161,"public void test0431161() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0431162,"public void test0431162() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(0, serializedString0.charLength());
}",0,"assertEquals(0, serializedString0.charLength())"
project,0,test0431163,"public void test0431163() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals("""", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test0431164,"public void test0431164() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString("""");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals("""", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test0441183,"public void test0441183() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0441184,"public void test0441184() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0441201,"public void test0441201() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0441202,"public void test0441202() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0441205,"public void test0441205() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0441206,"public void test0441206() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0441207,"public void test0441207() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0441208,"public void test0441208() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0441209,"public void test0441209() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0441210,"public void test0441210() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(115, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0441211,"public void test0441211() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0441212,"public void test0441212() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0441213,"public void test0441213() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0441214,"public void test0441214() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0441216,"public void test0441216() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    assertEquals(1, serializedString0.charLength());
}",0,
project,0,test0441217,"public void test0441217() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    assertEquals(""8"", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test0441218,"public void test0441218() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    assertEquals(""8"", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test0441219,"public void test0441219() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test0441220,"public void test0441220() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test0441221,"public void test0441221() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test0441222,"public void test0441222() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test0441223,"public void test0441223() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test0441224,"public void test0441224() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test0441225,"public void test0441225() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test0441226,"public void test0441226() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test0441227,"public void test0441227() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test0441228,"public void test0441228() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test0441229,"public void test0441229() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test0441230,"public void test0441230() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test0441231,"public void test0441231() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0441232,"public void test0441232() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0441235,"public void test0441235() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0441236,"public void test0441236() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0441237,"public void test0441237() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0441238,"public void test0441238() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0441239,"public void test0441239() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0441240,"public void test0441240() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0441241,"public void test0441241() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(115, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0441242,"public void test0441242() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0441243,"public void test0441243() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0441244,"public void test0441244() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0441245,"public void test0441245() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(1, serializedString0.charLength());
}",0,
project,0,test0441246,"public void test0441246() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(""8"", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test0441247,"public void test0441247() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    SerializedString serializedString0 = new SerializedString(""8"");
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    assertEquals(""8"", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test0451266,"public void test0451266() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0451267,"public void test0451267() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0451284,"public void test0451284() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0451285,"public void test0451285() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0451288,"public void test0451288() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0451289,"public void test0451289() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0451290,"public void test0451290() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0451291,"public void test0451291() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0451292,"public void test0451292() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0451293,"public void test0451293() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0451294,"public void test0451294() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0451295,"public void test0451295() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0451296,"public void test0451296() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0451297,"public void test0451297() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0451298,"public void test0451298() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0451299,"public void test0451299() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0451300,"public void test0451300() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0451301,"public void test0451301() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0451302,"public void test0451302() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0451303,"public void test0451303() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0451304,"public void test0451304() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0451305,"public void test0451305() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0451306,"public void test0451306() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0451307,"public void test0451307() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0451308,"public void test0451308() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0451309,"public void test0451309() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0451310,"public void test0451310() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0451311,"public void test0451311() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0451314,"public void test0451314() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0451315,"public void test0451315() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0451316,"public void test0451316() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0451317,"public void test0451317() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0451318,"public void test0451318() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0451319,"public void test0451319() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0451320,"public void test0451320() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0451321,"public void test0451321() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0451322,"public void test0451322() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0451323,"public void test0451323() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0461342,"public void test0461342() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0461343,"public void test0461343() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0461360,"public void test0461360() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0461361,"public void test0461361() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0461364,"public void test0461364() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0461365,"public void test0461365() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0461366,"public void test0461366() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0461367,"public void test0461367() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0461368,"public void test0461368() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0461369,"public void test0461369() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0461370,"public void test0461370() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0461371,"public void test0461371() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0461372,"public void test0461372() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0461373,"public void test0461373() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0461374,"public void test0461374() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    char[] charArray0 = new char[5];
    charArray0[3] = '\u0097';
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeRaw(charArray0, 3, 235);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 5
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test0471393,"public void test0471393() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0471394,"public void test0471394() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0471411,"public void test0471411() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0471412,"public void test0471412() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0471415,"public void test0471415() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0471416,"public void test0471416() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0471417,"public void test0471417() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0471418,"public void test0471418() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0471419,"public void test0471419() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0471420,"public void test0471420() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0471421,"public void test0471421() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0471422,"public void test0471422() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0471423,"public void test0471423() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0471424,"public void test0471424() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0471425,"public void test0471425() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0471426,"public void test0471426() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0471427,"public void test0471427() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0471428,"public void test0471428() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0471429,"public void test0471429() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0471430,"public void test0471430() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0471431,"public void test0471431() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0471432,"public void test0471432() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0471433,"public void test0471433() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0471434,"public void test0471434() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0471435,"public void test0471435() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0471436,"public void test0471436() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0471437,"public void test0471437() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0471438,"public void test0471438() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0471441,"public void test0471441() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0471442,"public void test0471442() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertEquals(2, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0471443,"public void test0471443() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0471444,"public void test0471444() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0471445,"public void test0471445() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0471446,"public void test0471446() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0471447,"public void test0471447() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0471448,"public void test0471448() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0471449,"public void test0471449() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0471450,"public void test0471450() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeRaw('\u0097');
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0481469,"public void test0481469() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0481470,"public void test0481470() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0481472,"public void test0481472() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test0481473,"public void test0481473() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(5, byteArray0.length);
}",0,
project,0,test0481474,"public void test0481474() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertNotNull(uTF8JsonGenerator0);
}",0,
project,0,test0481475,"public void test0481475() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0481476,"public void test0481476() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0481477,"public void test0481477() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0481478,"public void test0481478() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0481479,"public void test0481479() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0481480,"public void test0481480() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0481481,"public void test0481481() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0481482,"public void test0481482() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0481483,"public void test0481483() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0481484,"public void test0481484() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0481485,"public void test0481485() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0481486,"public void test0481486() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0481487,"public void test0481487() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0481488,"public void test0481488() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0481489,"public void test0481489() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0481490,"public void test0481490() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0481491,"public void test0481491() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0481492,"public void test0481492() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0481493,"public void test0481493() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0481494,"public void test0481494() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0481495,"public void test0481495() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0481496,"public void test0481496() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0481497,"public void test0481497() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(3, uTF8JsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, uTF8JsonGenerator0.getOutputBuffered())"
project,0,test0481498,"public void test0481498() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0481499,"public void test0481499() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertArrayEquals(new byte[] { (byte) (-62), (byte) (-119), (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test0481500,"public void test0481500() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0089', '\u0000', '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test0481501,"public void test0481501() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(5, byteArray0.length);
}",0,
project,0,test0481502,"public void test0481502() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(7, charArray0.length);
}",0,
project,0,test0481503,"public void test0481503() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0481504,"public void test0481504() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0481505,"public void test0481505() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0481506,"public void test0481506() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0481507,"public void test0481507() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0481508,"public void test0481508() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0481509,"public void test0481509() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0481510,"public void test0481510() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0481511,"public void test0481511() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0481512,"public void test0481512() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0481513,"public void test0481513() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0481514,"public void test0481514() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0481515,"public void test0481515() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0481516,"public void test0481516() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0481517,"public void test0481517() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0481518,"public void test0481518() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0481519,"public void test0481519() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0481520,"public void test0481520() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0481521,"public void test0481521() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0481522,"public void test0481522() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0481523,"public void test0481523() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0481524,"public void test0481524() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0481525,"public void test0481525() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(2, uTF8JsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, uTF8JsonGenerator0.getOutputBuffered())"
project,0,test0481526,"public void test0481526() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""["", false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""["");
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    char[] charArray0 = new char[7];
    charArray0[2] = '\u0089';
    uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0491545,"public void test0491545() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0491546,"public void test0491546() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0491556,"public void test0491556() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test0491570,"public void test0491570() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0491571,"public void test0491571() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0491572,"public void test0491572() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test0491573,"public void test0491573() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0491574,"public void test0491574() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    assertEquals((-730), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0491575,"public void test0491575() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0491576,"public void test0491576() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0491577,"public void test0491577() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0491578,"public void test0491578() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0491579,"public void test0491579() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0491580,"public void test0491580() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0491581,"public void test0491581() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    assertEquals(229, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0491582,"public void test0491582() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0491583,"public void test0491583() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 0, 4);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",0,
project,0,test0501602,"public void test0501602() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0501603,"public void test0501603() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0501622,"public void test0501622() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0501623,"public void test0501623() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0501626,"public void test0501626() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0501627,"public void test0501627() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0501628,"public void test0501628() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0501629,"public void test0501629() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0501630,"public void test0501630() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0501631,"public void test0501631() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0501632,"public void test0501632() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertEquals(41, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0501633,"public void test0501633() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0501634,"public void test0501634() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertEquals(3, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0501635,"public void test0501635() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0501636,"public void test0501636() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertArrayEquals(new byte[] { (byte) 34, (byte) 65, (byte) 61, (byte) 61 }, byteArray0);
}",0,
project,0,test0501637,"public void test0501637() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(4, byteArray0.length);
}",0,
project,0,test0501638,"public void test0501638() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0501639,"public void test0501639() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0501640,"public void test0501640() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0501641,"public void test0501641() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0501642,"public void test0501642() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0501643,"public void test0501643() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0501644,"public void test0501644() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0501645,"public void test0501645() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0501646,"public void test0501646() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0501647,"public void test0501647() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0501648,"public void test0501648() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0501649,"public void test0501649() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0501650,"public void test0501650() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0501651,"public void test0501651() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0501654,"public void test0501654() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0501655,"public void test0501655() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0501656,"public void test0501656() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0501657,"public void test0501657() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0501658,"public void test0501658() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0501659,"public void test0501659() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0501660,"public void test0501660() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0501661,"public void test0501661() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(41, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0501662,"public void test0501662() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0501663,"public void test0501663() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0511682,"public void test0511682() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0511683,"public void test0511683() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0511706,"public void test0511706() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0511707,"public void test0511707() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0511710,"public void test0511710() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0511711,"public void test0511711() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0511712,"public void test0511712() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0511713,"public void test0511713() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0511714,"public void test0511714() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0511715,"public void test0511715() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0511716,"public void test0511716() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0511717,"public void test0511717() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    assertEquals(278, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0511718,"public void test0511718() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0511719,"public void test0511719() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0511720,"public void test0511720() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertArrayEquals(new byte[] { (byte) 34, (byte) 67, (byte) 73, (byte) 65 }, byteArray0);
}",0,
project,0,test0511721,"public void test0511721() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(4, byteArray0.length);
}",0,
project,0,test0511722,"public void test0511722() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0511723,"public void test0511723() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0511724,"public void test0511724() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0511725,"public void test0511725() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0511726,"public void test0511726() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0511727,"public void test0511727() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0511728,"public void test0511728() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0511729,"public void test0511729() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0511730,"public void test0511730() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0511731,"public void test0511731() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0511732,"public void test0511732() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0511733,"public void test0511733() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0511734,"public void test0511734() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(3, int0);
}",0,"assertEquals(0, int0)"
project,0,test0511735,"public void test0511735() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0511736,"public void test0511736() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0511740,"public void test0511740() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0511741,"public void test0511741() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0511742,"public void test0511742() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0511743,"public void test0511743() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0511744,"public void test0511744() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0511745,"public void test0511745() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0511746,"public void test0511746() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0511747,"public void test0511747() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(278, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0511748,"public void test0511748() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0511749,"public void test0511749() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0511750,"public void test0511750() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertArrayEquals(new byte[] { (byte) 62, (byte) 45, (byte) 51, (byte) 124 }, byteArray0);
}",0,
project,0,test0511751,"public void test0511751() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(4, byteArray0.length);
}",0,
project,0,test0511752,"public void test0511752() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0511753,"public void test0511753() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0511754,"public void test0511754() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0511755,"public void test0511755() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0511756,"public void test0511756() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0511757,"public void test0511757() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0511758,"public void test0511758() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0511759,"public void test0511759() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0511760,"public void test0511760() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0511761,"public void test0511761() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0511762,"public void test0511762() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0511763,"public void test0511763() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0511764,"public void test0511764() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0511765,"public void test0511765() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0511768,"public void test0511768() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0511769,"public void test0511769() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0511770,"public void test0511770() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0511771,"public void test0511771() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0511772,"public void test0511772() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0511773,"public void test0511773() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0511774,"public void test0511774() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(3, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0511775,"public void test0511775() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(278, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0511776,"public void test0511776() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0511777,"public void test0511777() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0511778,"public void test0511778() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertArrayEquals(new byte[] { (byte) 34, (byte) 65, (byte) 61, (byte) 61 }, byteArray0);
}",0,
project,0,test0511779,"public void test0511779() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(4, byteArray0.length);
}",0,
project,0,test0511780,"public void test0511780() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertFalse(int1 == int0);
}",0,
project,0,test0511781,"public void test0511781() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0511782,"public void test0511782() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0511783,"public void test0511783() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0511784,"public void test0511784() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0511785,"public void test0511785() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0511786,"public void test0511786() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0511787,"public void test0511787() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0511788,"public void test0511788() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0511789,"public void test0511789() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0511790,"public void test0511790() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0511791,"public void test0511791() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0511792,"public void test0511792() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0511793,"public void test0511793() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(1, int1);
}",0,"assertEquals(1, int1)"
project,0,test0511794,"public void test0511794() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0511795,"public void test0511795() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0511799,"public void test0511799() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0511800,"public void test0511800() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0511801,"public void test0511801() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0511802,"public void test0511802() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0511803,"public void test0511803() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0511804,"public void test0511804() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0511805,"public void test0511805() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0511806,"public void test0511806() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(278, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0511807,"public void test0511807() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0511808,"public void test0511808() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    uTF8JsonGenerator0.writeNumber(""`R;[jlIS3|>-3"");
    int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0521827,"public void test0521827() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0521828,"public void test0521828() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0521849,"public void test0521849() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[8];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0521850,"public void test0521850() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[8];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0521853,"public void test0521853() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[8];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0521854,"public void test0521854() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[8];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0521855,"public void test0521855() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[8];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0521856,"public void test0521856() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[8];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0521857,"public void test0521857() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[8];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0521858,"public void test0521858() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[8];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0521859,"public void test0521859() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[8];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0521860,"public void test0521860() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[8];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0521861,"public void test0521861() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[8];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0521862,"public void test0521862() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[8];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(16, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0521863,"public void test0521863() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[8];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    try {
        uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (int) (byte) 16);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Too few bytes available: missing 8 bytes (out of 16)
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test0531884,"public void test0531884() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0531885,"public void test0531885() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0531886,"public void test0531886() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test0531887,"public void test0531887() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(3, byteArray0.length);
}",0,
project,0,test0531888,"public void test0531888() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertNotNull(uTF8JsonGenerator0);
}",0,
project,0,test0531889,"public void test0531889() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0531890,"public void test0531890() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0531891,"public void test0531891() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0531892,"public void test0531892() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0531893,"public void test0531893() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0531894,"public void test0531894() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0531895,"public void test0531895() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0531896,"public void test0531896() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0531897,"public void test0531897() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0531898,"public void test0531898() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0531899,"public void test0531899() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0531900,"public void test0531900() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0531917,"public void test0531917() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0531918,"public void test0531918() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0531919,"public void test0531919() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,
project,0,test0531920,"public void test0531920() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0531921,"public void test0531921() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(333, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0531922,"public void test0531922() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0531923,"public void test0531923() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0531924,"public void test0531924() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0531925,"public void test0531925() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0531926,"public void test0531926() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0531927,"public void test0531927() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, uTF8JsonGenerator0.getOutputBuffered())"
project,0,test0531928,"public void test0531928() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0531929,"public void test0531929() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFile mockFile0 = new MockFile(""Z"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeNumber((short) 1065);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 3
        //
        verifyException(""com.fasterxml.jackson.core.io.NumberOutput"", e);
    }
}",0,
project,0,test0541948,"public void test0541948() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0541949,"public void test0541949() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0541968,"public void test0541968() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0541969,"public void test0541969() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0541972,"public void test0541972() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0541973,"public void test0541973() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0541974,"public void test0541974() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0541975,"public void test0541975() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0541976,"public void test0541976() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0541977,"public void test0541977() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    assertEquals((-1445), uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0541978,"public void test0541978() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0541979,"public void test0541979() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    assertEquals(1587, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0541980,"public void test0541980() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0541981,"public void test0541981() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0541982,"public void test0541982() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeNumber((short) 16);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1445
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test0552001,"public void test0552001() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0552002,"public void test0552002() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0552021,"public void test0552021() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0552022,"public void test0552022() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0552025,"public void test0552025() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(36, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0552026,"public void test0552026() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0552027,"public void test0552027() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0552028,"public void test0552028() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0552029,"public void test0552029() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0552030,"public void test0552030() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0552031,"public void test0552031() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0552032,"public void test0552032() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(2, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0552033,"public void test0552033() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0552034,"public void test0552034() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0552035,"public void test0552035() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertArrayEquals(new byte[] { (byte) 34, (byte) 49, (byte) 55, (byte) 34, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test0552036,"public void test0552036() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(7, byteArray0.length);
}",0,
project,0,test0552037,"public void test0552037() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0552038,"public void test0552038() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0552039,"public void test0552039() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0552040,"public void test0552040() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0552041,"public void test0552041() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0552042,"public void test0552042() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0552043,"public void test0552043() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0552044,"public void test0552044() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0552045,"public void test0552045() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0552046,"public void test0552046() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0552047,"public void test0552047() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0552048,"public void test0552048() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0552049,"public void test0552049() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0552050,"public void test0552050() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0552053,"public void test0552053() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(36, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0552054,"public void test0552054() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0552055,"public void test0552055() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0552056,"public void test0552056() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0552057,"public void test0552057() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0552058,"public void test0552058() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0552059,"public void test0552059() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0552060,"public void test0552060() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0552061,"public void test0552061() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0552062,"public void test0552062() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""RyxR&5%n*9%D1/z|"", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    assertEquals(4, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0562081,"public void test0562081() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0562082,"public void test0562082() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0562099,"public void test0562099() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0562100,"public void test0562100() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0562103,"public void test0562103() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0562104,"public void test0562104() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0562105,"public void test0562105() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0562106,"public void test0562106() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0562107,"public void test0562107() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0562108,"public void test0562108() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0562109,"public void test0562109() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0562110,"public void test0562110() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0562111,"public void test0562111() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0562112,"public void test0562112() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(255, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0562113,"public void test0562113() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test0562114,"public void test0562114() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test0562115,"public void test0562115() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test0562116,"public void test0562116() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test0562117,"public void test0562117() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test0562118,"public void test0562118() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test0562119,"public void test0562119() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test0562120,"public void test0562120() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test0562121,"public void test0562121() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test0562122,"public void test0562122() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test0562123,"public void test0562123() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test0562124,"public void test0562124() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test0562125,"public void test0562125() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0562126,"public void test0562126() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0562129,"public void test0562129() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertEquals(5, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0562130,"public void test0562130() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0562131,"public void test0562131() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0562132,"public void test0562132() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0562133,"public void test0562133() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0562134,"public void test0562134() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0562135,"public void test0562135() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0562136,"public void test0562136() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0562137,"public void test0562137() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0562138,"public void test0562138() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(255);
    assertEquals(255, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0572157,"public void test0572157() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0572158,"public void test0572158() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertFalse(iOContext0.isResourceManaged())
project,0,test0572161,"public void test0572161() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertArrayEquals(new byte[] { (byte) 0 }, byteArray0);
}",0,
project,0,test0572162,"public void test0572162() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(1, byteArray0.length);
}",0,
project,0,test0572163,"public void test0572163() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertNotNull(uTF8JsonGenerator0);
}",0,
project,0,test0572164,"public void test0572164() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0572165,"public void test0572165() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0572166,"public void test0572166() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0572167,"public void test0572167() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0572168,"public void test0572168() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0572169,"public void test0572169() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0572170,"public void test0572170() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0572171,"public void test0572171() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0572172,"public void test0572172() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0572173,"public void test0572173() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0572174,"public void test0572174() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0572175,"public void test0572175() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0572176,"public void test0572176() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0572177,"public void test0572177() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertFalse(iOContext0.isResourceManaged())
project,0,test0572194,"public void test0572194() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0572195,"public void test0572195() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0572196,"public void test0572196() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0572197,"public void test0572197() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0572198,"public void test0572198() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0572199,"public void test0572199() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0572200,"public void test0572200() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0572201,"public void test0572201() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0572202,"public void test0572202() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(3, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0572203,"public void test0572203() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0572204,"public void test0572204() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""C_n not currentlr override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""C_n not currentlr override name during filtering read"", ""C_n not currentlr override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    long[] longArray0 = new long[2];
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeArray(longArray0, 0, 339);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 2
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test0582223,"public void test0582223() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0582224,"public void test0582224() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0582243,"public void test0582243() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0582244,"public void test0582244() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0582247,"public void test0582247() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0582248,"public void test0582248() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(2, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0582249,"public void test0582249() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0582250,"public void test0582250() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0582251,"public void test0582251() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0582252,"public void test0582252() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0582253,"public void test0582253() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0582254,"public void test0582254() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0582255,"public void test0582255() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0582256,"public void test0582256() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(63, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0582257,"public void test0582257() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertArrayEquals(new byte[] { (byte) 34, (byte) 50, (byte) 34, (byte) 34 }, byteArray0);
}",0,
project,0,test0582258,"public void test0582258() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(4, byteArray0.length);
}",0,
project,0,test0582259,"public void test0582259() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0582260,"public void test0582260() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0582261,"public void test0582261() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0582262,"public void test0582262() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0582263,"public void test0582263() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0582264,"public void test0582264() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0582265,"public void test0582265() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0582266,"public void test0582266() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0582267,"public void test0582267() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0582268,"public void test0582268() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0582269,"public void test0582269() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0582270,"public void test0582270() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0582271,"public void test0582271() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0582272,"public void test0582272() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0582275,"public void test0582275() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0582276,"public void test0582276() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0582277,"public void test0582277() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(3, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0582278,"public void test0582278() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0582279,"public void test0582279() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0582280,"public void test0582280() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0582281,"public void test0582281() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0582282,"public void test0582282() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0582283,"public void test0582283() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0582284,"public void test0582284() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    uTF8JsonGenerator0.writeNumberField("""", (long) 2);
    assertEquals(63, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0592303,"public void test0592303() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0592304,"public void test0592304() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0592321,"public void test0592321() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0592322,"public void test0592322() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0592325,"public void test0592325() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0592326,"public void test0592326() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,
project,0,test0592327,"public void test0592327() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0592328,"public void test0592328() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0592329,"public void test0592329() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0592330,"public void test0592330() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0592331,"public void test0592331() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0592332,"public void test0592332() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0592333,"public void test0592333() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0592334,"public void test0592334() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0592335,"public void test0592335() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0592336,"public void test0592336() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0592337,"public void test0592337() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0592338,"public void test0592338() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0592339,"public void test0592339() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0592340,"public void test0592340() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0592341,"public void test0592341() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0592342,"public void test0592342() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0592343,"public void test0592343() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0592344,"public void test0592344() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0592345,"public void test0592345() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0592346,"public void test0592346() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0592347,"public void test0592347() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0592348,"public void test0592348() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0592351,"public void test0592351() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0592352,"public void test0592352() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0592353,"public void test0592353() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0592354,"public void test0592354() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0592355,"public void test0592355() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0592356,"public void test0592356() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0592357,"public void test0592357() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0592358,"public void test0592358() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0592359,"public void test0592359() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0592360,"public void test0592360() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 2);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0602379,"public void test0602379() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0602380,"public void test0602380() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0602390,"public void test0602390() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test0602404,"public void test0602404() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0602405,"public void test0602405() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0602406,"public void test0602406() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test0602407,"public void test0602407() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0602408,"public void test0602408() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0602409,"public void test0602409() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0602410,"public void test0602410() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0602411,"public void test0602411() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0602412,"public void test0602412() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0602413,"public void test0602413() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0602414,"public void test0602414() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0602415,"public void test0602415() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals((-15), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0602416,"public void test0602416() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0602417,"public void test0602417() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0602418,"public void test0602418() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0602419,"public void test0602419() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0602420,"public void test0602420() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0602421,"public void test0602421() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0602422,"public void test0602422() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0602423,"public void test0602423() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0602424,"public void test0602424() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0602425,"public void test0602425() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0602426,"public void test0602426() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0602427,"public void test0602427() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0602428,"public void test0602428() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0602429,"public void test0602429() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0602430,"public void test0602430() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0602431,"public void test0602431() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test0602432,"public void test0602432() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0602433,"public void test0602433() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0602434,"public void test0602434() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0602435,"public void test0602435() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0602436,"public void test0602436() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0602437,"public void test0602437() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals(6, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0602438,"public void test0602438() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0602439,"public void test0602439() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0602440,"public void test0602440() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals((-15), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0602441,"public void test0602441() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber((-745L));
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0612460,"public void test0612460() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0612461,"public void test0612461() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0612478,"public void test0612478() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0612479,"public void test0612479() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0612482,"public void test0612482() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0612483,"public void test0612483() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0612484,"public void test0612484() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0612485,"public void test0612485() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0612486,"public void test0612486() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0612487,"public void test0612487() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0612488,"public void test0612488() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0612489,"public void test0612489() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(255, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0612490,"public void test0612490() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0612491,"public void test0612491() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0612495,"public void test0612495() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0612496,"public void test0612496() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0612497,"public void test0612497() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0612498,"public void test0612498() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0612499,"public void test0612499() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0612500,"public void test0612500() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0612501,"public void test0612501() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0612502,"public void test0612502() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0612503,"public void test0612503() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0612504,"public void test0612504() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0612505,"public void test0612505() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0612506,"public void test0612506() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0612507,"public void test0612507() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0612508,"public void test0612508() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0612511,"public void test0612511() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0612512,"public void test0612512() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0612513,"public void test0612513() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0612514,"public void test0612514() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0612515,"public void test0612515() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(3, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0612516,"public void test0612516() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0612517,"public void test0612517() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0612518,"public void test0612518() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(255, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0612519,"public void test0612519() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0612520,"public void test0612520() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0622541,"public void test0622541() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0622542,"public void test0622542() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0622559,"public void test0622559() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0622560,"public void test0622560() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0622563,"public void test0622563() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0622564,"public void test0622564() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0622565,"public void test0622565() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0622566,"public void test0622566() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0622567,"public void test0622567() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0622568,"public void test0622568() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0622569,"public void test0622569() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0622570,"public void test0622570() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0622571,"public void test0622571() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0622572,"public void test0622572() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0622573,"public void test0622573() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0622574,"public void test0622574() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0622575,"public void test0622575() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0622576,"public void test0622576() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0622577,"public void test0622577() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0622578,"public void test0622578() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0622579,"public void test0622579() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0622580,"public void test0622580() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0622581,"public void test0622581() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0622582,"public void test0622582() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0622583,"public void test0622583() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0622584,"public void test0622584() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0622585,"public void test0622585() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0622586,"public void test0622586() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0622589,"public void test0622589() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0622590,"public void test0622590() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0622591,"public void test0622591() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0622592,"public void test0622592() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0622593,"public void test0622593() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0622594,"public void test0622594() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0622595,"public void test0622595() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0622596,"public void test0622596() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(4, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0622597,"public void test0622597() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0622598,"public void test0622598() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0632617,"public void test0632617() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0632618,"public void test0632618() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0632635,"public void test0632635() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0632636,"public void test0632636() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0632639,"public void test0632639() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0632640,"public void test0632640() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0632641,"public void test0632641() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0632642,"public void test0632642() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0632643,"public void test0632643() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0632644,"public void test0632644() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0632645,"public void test0632645() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0632646,"public void test0632646() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0632647,"public void test0632647() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0632648,"public void test0632648() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0632652,"public void test0632652() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0632653,"public void test0632653() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0632654,"public void test0632654() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0632655,"public void test0632655() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0632656,"public void test0632656() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0632657,"public void test0632657() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0632658,"public void test0632658() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0632659,"public void test0632659() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0632660,"public void test0632660() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0632661,"public void test0632661() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0632662,"public void test0632662() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0632663,"public void test0632663() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0632664,"public void test0632664() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0632665,"public void test0632665() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0632668,"public void test0632668() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0632669,"public void test0632669() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0632670,"public void test0632670() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0632671,"public void test0632671() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0632672,"public void test0632672() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0632673,"public void test0632673() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0632674,"public void test0632674() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0632675,"public void test0632675() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0632676,"public void test0632676() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0632677,"public void test0632677() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    BigInteger bigInteger0 = BigInteger.ZERO;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0642698,"public void test0642698() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0642699,"public void test0642699() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0642716,"public void test0642716() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0642717,"public void test0642717() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0642720,"public void test0642720() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0642721,"public void test0642721() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0642722,"public void test0642722() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0642723,"public void test0642723() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0642724,"public void test0642724() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0642725,"public void test0642725() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0642726,"public void test0642726() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0642727,"public void test0642727() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0642728,"public void test0642728() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0642729,"public void test0642729() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0642730,"public void test0642730() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0642731,"public void test0642731() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0642732,"public void test0642732() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0642733,"public void test0642733() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0642734,"public void test0642734() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0642735,"public void test0642735() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0642736,"public void test0642736() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0642737,"public void test0642737() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0642738,"public void test0642738() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0642739,"public void test0642739() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0642740,"public void test0642740() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0642741,"public void test0642741() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0642742,"public void test0642742() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0642743,"public void test0642743() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0642746,"public void test0642746() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0642747,"public void test0642747() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0642748,"public void test0642748() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0642749,"public void test0642749() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0642750,"public void test0642750() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0642751,"public void test0642751() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0642752,"public void test0642752() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0642753,"public void test0642753() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertEquals(3, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0642754,"public void test0642754() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0642755,"public void test0642755() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.NaN);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0652774,"public void test0652774() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0652775,"public void test0652775() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0652792,"public void test0652792() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0652793,"public void test0652793() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0652796,"public void test0652796() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0652797,"public void test0652797() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0652798,"public void test0652798() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, uTF8JsonGenerator0.getOutputBuffered())"
project,0,test0652799,"public void test0652799() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0652800,"public void test0652800() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0652801,"public void test0652801() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0652802,"public void test0652802() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0652803,"public void test0652803() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0652804,"public void test0652804() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0652805,"public void test0652805() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0652806,"public void test0652806() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0652807,"public void test0652807() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0652808,"public void test0652808() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0652809,"public void test0652809() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0652810,"public void test0652810() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0652811,"public void test0652811() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0652812,"public void test0652812() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0652813,"public void test0652813() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0652814,"public void test0652814() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0652815,"public void test0652815() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0652816,"public void test0652816() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0652817,"public void test0652817() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0652818,"public void test0652818() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0652819,"public void test0652819() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0652822,"public void test0652822() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0652823,"public void test0652823() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0652824,"public void test0652824() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0652825,"public void test0652825() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0652826,"public void test0652826() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0652827,"public void test0652827() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0652828,"public void test0652828() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(8, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0652829,"public void test0652829() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0652830,"public void test0652830() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0652831,"public void test0652831() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0662850,"public void test0662850() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0662851,"public void test0662851() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0662868,"public void test0662868() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0662869,"public void test0662869() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0662872,"public void test0662872() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0662873,"public void test0662873() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0662874,"public void test0662874() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, uTF8JsonGenerator0.getOutputBuffered())"
project,0,test0662875,"public void test0662875() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0662876,"public void test0662876() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0662877,"public void test0662877() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0662878,"public void test0662878() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0662879,"public void test0662879() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(21, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0662880,"public void test0662880() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0662881,"public void test0662881() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0662882,"public void test0662882() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0662883,"public void test0662883() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0662884,"public void test0662884() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0662885,"public void test0662885() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0662886,"public void test0662886() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0662887,"public void test0662887() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0662888,"public void test0662888() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0662889,"public void test0662889() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0662890,"public void test0662890() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0662891,"public void test0662891() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0662892,"public void test0662892() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0662893,"public void test0662893() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0662894,"public void test0662894() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0662895,"public void test0662895() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0662898,"public void test0662898() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0662899,"public void test0662899() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0662900,"public void test0662900() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0662901,"public void test0662901() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0662902,"public void test0662902() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0662903,"public void test0662903() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0662904,"public void test0662904() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(10, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0662905,"public void test0662905() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertEquals(21, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0662906,"public void test0662906() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0662907,"public void test0662907() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0672926,"public void test0672926() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0672927,"public void test0672927() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0672944,"public void test0672944() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0672945,"public void test0672945() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0672948,"public void test0672948() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0672949,"public void test0672949() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0672950,"public void test0672950() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0672951,"public void test0672951() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0672952,"public void test0672952() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0672953,"public void test0672953() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0672954,"public void test0672954() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(877, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0672955,"public void test0672955() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0672956,"public void test0672956() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0672957,"public void test0672957() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0672958,"public void test0672958() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0672959,"public void test0672959() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0672960,"public void test0672960() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0672961,"public void test0672961() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0672962,"public void test0672962() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0672963,"public void test0672963() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0672964,"public void test0672964() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0672965,"public void test0672965() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0672966,"public void test0672966() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0672967,"public void test0672967() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0672968,"public void test0672968() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0672969,"public void test0672969() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0672970,"public void test0672970() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0672971,"public void test0672971() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0672974,"public void test0672974() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0672975,"public void test0672975() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0672976,"public void test0672976() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0672977,"public void test0672977() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0672978,"public void test0672978() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0672979,"public void test0672979() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertEquals(5, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0672980,"public void test0672980() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertEquals(877, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0672981,"public void test0672981() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0672982,"public void test0672982() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0672983,"public void test0672983() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((float) 2);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0683002,"public void test0683002() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0683003,"public void test0683003() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0683005,"public void test0683005() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test0683019,"public void test0683019() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0683020,"public void test0683020() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0683021,"public void test0683021() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,
project,0,test0683022,"public void test0683022() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0683023,"public void test0683023() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0683024,"public void test0683024() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    assertEquals(1, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0683025,"public void test0683025() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0683026,"public void test0683026() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0683027,"public void test0683027() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0683028,"public void test0683028() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0683029,"public void test0683029() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0683030,"public void test0683030() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0683031,"public void test0683031() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0683035,"public void test0683035() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    BigDecimal bigDecimal0 = BigDecimal.ZERO;
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 0
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test0693054,"public void test0693054() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0693055,"public void test0693055() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0693057,"public void test0693057() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertArrayEquals(new byte[] { (byte) 0 }, byteArray0);
}",0,
project,0,test0693058,"public void test0693058() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(1, byteArray0.length);
}",0,
project,0,test0693059,"public void test0693059() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertNotNull(uTF8JsonGenerator0);
}",0,
project,0,test0693060,"public void test0693060() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0693061,"public void test0693061() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0693062,"public void test0693062() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0693063,"public void test0693063() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0693064,"public void test0693064() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0693065,"public void test0693065() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0693066,"public void test0693066() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0693067,"public void test0693067() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0693068,"public void test0693068() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0693069,"public void test0693069() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0693070,"public void test0693070() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0693071,"public void test0693071() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0693072,"public void test0693072() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0693073,"public void test0693073() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0693074,"public void test0693074() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0693075,"public void test0693075() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0693076,"public void test0693076() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0693077,"public void test0693077() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0693078,"public void test0693078() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0693079,"public void test0693079() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0693080,"public void test0693080() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0693081,"public void test0693081() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0693082,"public void test0693082() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0693083,"public void test0693083() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0693084,"public void test0693084() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""{^`>tHpj*ic"");
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeNumber((BigDecimal) null);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",0,
project,0,test0703103,"public void test0703103() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0703104,"public void test0703104() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0703106,"public void test0703106() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test0703120,"public void test0703120() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0703121,"public void test0703121() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0703122,"public void test0703122() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test0703123,"public void test0703123() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    assertEquals(43, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0703124,"public void test0703124() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0703125,"public void test0703125() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0703126,"public void test0703126() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    assertEquals(2, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0703127,"public void test0703127() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0703128,"public void test0703128() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0703129,"public void test0703129() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0703130,"public void test0703130() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0703131,"public void test0703131() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0703132,"public void test0703132() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0703136,"public void test0703136() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    BigDecimal bigDecimal0 = BigDecimal.ZERO;
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",0,
project,0,test0713155,"public void test0713155() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0713156,"public void test0713156() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0713166,"public void test0713166() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(1, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test0713180,"public void test0713180() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0713181,"public void test0713181() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0713182,"public void test0713182() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test0713183,"public void test0713183() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0713184,"public void test0713184() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0713185,"public void test0713185() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0713186,"public void test0713186() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0713187,"public void test0713187() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0713188,"public void test0713188() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals((-15), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0713189,"public void test0713189() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0713190,"public void test0713190() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0713191,"public void test0713191() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0713192,"public void test0713192() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0713196,"public void test0713196() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0713197,"public void test0713197() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0713198,"public void test0713198() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0713199,"public void test0713199() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0713200,"public void test0713200() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0713201,"public void test0713201() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0713202,"public void test0713202() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0713203,"public void test0713203() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0713204,"public void test0713204() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0713205,"public void test0713205() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0713206,"public void test0713206() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0713207,"public void test0713207() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0713208,"public void test0713208() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0713209,"public void test0713209() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0713210,"public void test0713210() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(1, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test0713211,"public void test0713211() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0713212,"public void test0713212() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0713213,"public void test0713213() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0713214,"public void test0713214() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0713215,"public void test0713215() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals((-15), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0713216,"public void test0713216() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0713217,"public void test0713217() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0713218,"public void test0713218() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(3, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0713219,"public void test0713219() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0713220,"public void test0713220() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    BigDecimal bigDecimal0 = new BigDecimal(3);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0723241,"public void test0723241() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test0723251,"public void test0723251() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0723252,"public void test0723252() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0723269,"public void test0723269() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test0723270,"public void test0723270() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0723271,"public void test0723271() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0723272,"public void test0723272() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0723273,"public void test0723273() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0723274,"public void test0723274() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0723275,"public void test0723275() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0723276,"public void test0723276() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0723277,"public void test0723277() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0723278,"public void test0723278() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0723279,"public void test0723279() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0723280,"public void test0723280() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0723281,"public void test0723281() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(78, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0723282,"public void test0723282() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0723283,"public void test0723283() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0723284,"public void test0723284() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0723285,"public void test0723285() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0723286,"public void test0723286() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0723287,"public void test0723287() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0723288,"public void test0723288() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0723289,"public void test0723289() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0723290,"public void test0723290() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0723291,"public void test0723291() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0723292,"public void test0723292() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0723293,"public void test0723293() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0723294,"public void test0723294() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test0723295,"public void test0723295() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0723296,"public void test0723296() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0723299,"public void test0723299() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0723300,"public void test0723300() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0723301,"public void test0723301() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0723302,"public void test0723302() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0723303,"public void test0723303() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0723304,"public void test0723304() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0723305,"public void test0723305() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0723306,"public void test0723306() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0723307,"public void test0723307() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0723308,"public void test0723308() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigDecimal bigDecimal0 = new BigDecimal(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(78, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0733327,"public void test0733327() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0733328,"public void test0733328() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0733347,"public void test0733347() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0733348,"public void test0733348() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0733351,"public void test0733351() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0733352,"public void test0733352() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0733353,"public void test0733353() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0733354,"public void test0733354() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0733355,"public void test0733355() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertEquals(3, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0733356,"public void test0733356() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0733357,"public void test0733357() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0733358,"public void test0733358() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertEquals(41, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0733359,"public void test0733359() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0733360,"public void test0733360() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0733361,"public void test0733361() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertArrayEquals(new byte[] { (byte) 124, (byte) 124, (byte) 86, (byte) 34 }, byteArray0);
}",0,
project,0,test0733362,"public void test0733362() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(4, byteArray0.length);
}",0,
project,0,test0733363,"public void test0733363() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0733364,"public void test0733364() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0733365,"public void test0733365() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0733366,"public void test0733366() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0733367,"public void test0733367() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0733368,"public void test0733368() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0733369,"public void test0733369() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0733370,"public void test0733370() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0733371,"public void test0733371() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0733372,"public void test0733372() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0733373,"public void test0733373() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0733374,"public void test0733374() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0733375,"public void test0733375() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0733376,"public void test0733376() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0733379,"public void test0733379() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0733380,"public void test0733380() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0733381,"public void test0733381() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0733382,"public void test0733382() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0733383,"public void test0733383() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(4, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0733384,"public void test0733384() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0733385,"public void test0733385() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0733386,"public void test0733386() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(41, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0733387,"public void test0733387() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0733388,"public void test0733388() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    uTF8JsonGenerator0.writeNumber(""DCZg4I}d-?+}||V"");
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0743407,"public void test0743407() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,
project,0,test0743408,"public void test0743408() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0743411,"public void test0743411() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test0743412,"public void test0743412() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(3, byteArray0.length);
}",0,
project,0,test0743413,"public void test0743413() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertNotNull(uTF8JsonGenerator0);
}",0,
project,0,test0743414,"public void test0743414() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0743415,"public void test0743415() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0743416,"public void test0743416() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0743417,"public void test0743417() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0743418,"public void test0743418() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0743419,"public void test0743419() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0743420,"public void test0743420() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0743421,"public void test0743421() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0743422,"public void test0743422() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0743423,"public void test0743423() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0743424,"public void test0743424() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0743425,"public void test0743425() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0743426,"public void test0743426() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0743427,"public void test0743427() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0743444,"public void test0743444() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0743445,"public void test0743445() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0743446,"public void test0743446() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0743447,"public void test0743447() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0743448,"public void test0743448() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0743449,"public void test0743449() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(3, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0743450,"public void test0743450() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0743451,"public void test0743451() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0743452,"public void test0743452() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0743453,"public void test0743453() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0743454,"public void test0743454() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile(""Can not currently override name during filtering read"", ""Can not currently override name during filtering read"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeBoolean(true);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",0,
project,0,test0753476,"public void test0753476() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0753477,"public void test0753477() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0753495,"public void test0753495() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0753496,"public void test0753496() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0753497,"public void test0753497() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0753498,"public void test0753498() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertEquals(5, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0753499,"public void test0753499() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0753500,"public void test0753500() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0753501,"public void test0753501() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0753502,"public void test0753502() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0753503,"public void test0753503() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0753504,"public void test0753504() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertEquals(1624, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0753505,"public void test0753505() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0753506,"public void test0753506() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0753507,"public void test0753507() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 123, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test0753508,"public void test0753508() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(8, byteArray0.length);
}",0,
project,0,test0753509,"public void test0753509() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0753510,"public void test0753510() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0753511,"public void test0753511() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0753512,"public void test0753512() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0753513,"public void test0753513() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0753514,"public void test0753514() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0753515,"public void test0753515() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0753516,"public void test0753516() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0753517,"public void test0753517() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0753518,"public void test0753518() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0753519,"public void test0753519() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0753520,"public void test0753520() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0753523,"public void test0753523() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0753524,"public void test0753524() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0753525,"public void test0753525() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(6, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0753526,"public void test0753526() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0753527,"public void test0753527() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0753528,"public void test0753528() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0753529,"public void test0753529() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0753530,"public void test0753530() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0753531,"public void test0753531() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0753532,"public void test0753532() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(1624, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0753533,"public void test0753533() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0753534,"public void test0753534() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0753535,"public void test0753535() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeStartObject();
    try {
        uTF8JsonGenerator0.writeStartObject();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Can not start an object, expecting field name
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test0763554,"public void test0763554() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0763555,"public void test0763555() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0763559,"public void test0763559() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    assertEquals(8000, byteArray0.length);
}",0,
project,0,test0763560,"public void test0763560() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    assertNotNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test0763561,"public void test0763561() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0763562,"public void test0763562() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0763563,"public void test0763563() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0763564,"public void test0763564() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0763565,"public void test0763565() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0763566,"public void test0763566() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0763567,"public void test0763567() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0763568,"public void test0763568() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0763569,"public void test0763569() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0763570,"public void test0763570() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0763584,"public void test0763584() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0763585,"public void test0763585() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0763588,"public void test0763588() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0763589,"public void test0763589() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0763590,"public void test0763590() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(1114111, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0763591,"public void test0763591() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0763592,"public void test0763592() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0763593,"public void test0763593() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0763594,"public void test0763594() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0763595,"public void test0763595() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0763596,"public void test0763596() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0763597,"public void test0763597() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0763598,"public void test0763598() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0763599,"public void test0763599() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0763600,"public void test0763600() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0763601,"public void test0763601() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0763602,"public void test0763602() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0763603,"public void test0763603() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0763604,"public void test0763604() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0763605,"public void test0763605() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0763606,"public void test0763606() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0763607,"public void test0763607() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0763608,"public void test0763608() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0763609,"public void test0763609() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0763610,"public void test0763610() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0763611,"public void test0763611() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0763614,"public void test0763614() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0763615,"public void test0763615() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertEquals(1114111, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0763616,"public void test0763616() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0763617,"public void test0763617() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0763618,"public void test0763618() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0763619,"public void test0763619() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0763620,"public void test0763620() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertEquals(8, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0763621,"public void test0763621() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0763622,"public void test0763622() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0763623,"public void test0763623() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0763624,"public void test0763624() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(8000, byteArray0.length);
}",0,
project,0,test0763625,"public void test0763625() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0763626,"public void test0763626() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0763627,"public void test0763627() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0763628,"public void test0763628() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0763629,"public void test0763629() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0763630,"public void test0763630() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0763631,"public void test0763631() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0763632,"public void test0763632() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0763633,"public void test0763633() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0763634,"public void test0763634() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0763635,"public void test0763635() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0763636,"public void test0763636() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0763637,"public void test0763637() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0763638,"public void test0763638() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0763640,"public void test0763640() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0763641,"public void test0763641() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(1114111, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0763642,"public void test0763642() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0763643,"public void test0763643() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0763644,"public void test0763644() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0763645,"public void test0763645() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0763646,"public void test0763646() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0763647,"public void test0763647() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0763648,"public void test0763648() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertEquals(2701, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0763649,"public void test0763649() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeObjectFieldStart(""TdV23"");
    uTF8JsonGenerator0.writeBinaryField(""\""@k9u4Dki2z.EZ3&"", byteArray0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0773668,"public void test0773668() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0773669,"public void test0773669() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0773686,"public void test0773686() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0773687,"public void test0773687() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0773690,"public void test0773690() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0773691,"public void test0773691() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0773692,"public void test0773692() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0773693,"public void test0773693() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0773694,"public void test0773694() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0773695,"public void test0773695() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0773696,"public void test0773696() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0773697,"public void test0773697() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0773698,"public void test0773698() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0773699,"public void test0773699() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""lehtU'S("", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0783719,"public void test0783719() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0783720,"public void test0783720() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0783739,"public void test0783739() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0783740,"public void test0783740() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0783743,"public void test0783743() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0783744,"public void test0783744() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0783745,"public void test0783745() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0783746,"public void test0783746() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0783747,"public void test0783747() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0783748,"public void test0783748() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0783749,"public void test0783749() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0783750,"public void test0783750() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0783751,"public void test0783751() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0783752,"public void test0783752() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0793772,"public void test0793772() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0793773,"public void test0793773() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0793790,"public void test0793790() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0793791,"public void test0793791() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0793794,"public void test0793794() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0793795,"public void test0793795() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0793796,"public void test0793796() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0793797,"public void test0793797() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0793798,"public void test0793798() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0793799,"public void test0793799() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0793800,"public void test0793800() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0793801,"public void test0793801() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0793802,"public void test0793802() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0793803,"public void test0793803() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0793804,"public void test0793804() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0793805,"public void test0793805() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0793806,"public void test0793806() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0793807,"public void test0793807() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0793808,"public void test0793808() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0793809,"public void test0793809() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0793810,"public void test0793810() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0793811,"public void test0793811() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0793812,"public void test0793812() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0793813,"public void test0793813() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0793814,"public void test0793814() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0793815,"public void test0793815() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0793816,"public void test0793816() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0793817,"public void test0793817() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0793820,"public void test0793820() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0793821,"public void test0793821() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0793822,"public void test0793822() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0793823,"public void test0793823() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0793824,"public void test0793824() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0793825,"public void test0793825() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0793826,"public void test0793826() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0793827,"public void test0793827() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0793828,"public void test0793828() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0793829,"public void test0793829() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeArrayFieldStart(""NZM`WCVO05cB}iX"");
    assertEquals(16, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0803849,"public void test0803849() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0803850,"public void test0803850() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0803869,"public void test0803869() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0803870,"public void test0803870() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0803873,"public void test0803873() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0803874,"public void test0803874() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0803875,"public void test0803875() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0803876,"public void test0803876() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0803877,"public void test0803877() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0803878,"public void test0803878() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0803879,"public void test0803879() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0803880,"public void test0803880() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    assertEquals(1, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0803881,"public void test0803881() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0803882,"public void test0803882() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0803883,"public void test0803883() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertArrayEquals(new byte[] { (byte) 123, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test0803884,"public void test0803884() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(4, byteArray0.length);
}",0,
project,0,test0803885,"public void test0803885() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0803886,"public void test0803886() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0803887,"public void test0803887() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0803888,"public void test0803888() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0803889,"public void test0803889() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0803890,"public void test0803890() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0803891,"public void test0803891() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0803892,"public void test0803892() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0803893,"public void test0803893() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0803894,"public void test0803894() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0803895,"public void test0803895() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0803896,"public void test0803896() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0803897,"public void test0803897() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0803898,"public void test0803898() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0803901,"public void test0803901() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0803902,"public void test0803902() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0803903,"public void test0803903() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0803904,"public void test0803904() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0803905,"public void test0803905() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0803906,"public void test0803906() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0803907,"public void test0803907() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0803908,"public void test0803908() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(1, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0803909,"public void test0803909() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0803910,"public void test0803910() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0813930,"public void test0813930() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0813931,"public void test0813931() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0813945,"public void test0813945() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0813946,"public void test0813946() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0813947,"public void test0813947() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0813948,"public void test0813948() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    assertEquals(4, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0813949,"public void test0813949() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0813950,"public void test0813950() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0813951,"public void test0813951() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0813952,"public void test0813952() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0813953,"public void test0813953() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0813954,"public void test0813954() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0813955,"public void test0813955() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0813956,"public void test0813956() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,
project,0,test0813957,"public void test0813957() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0813958,"public void test0813958() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0813959,"public void test0813959() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0813960,"public void test0813960() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0813961,"public void test0813961() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0813962,"public void test0813962() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0813963,"public void test0813963() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0813964,"public void test0813964() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0813965,"public void test0813965() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0813966,"public void test0813966() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0813967,"public void test0813967() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0813968,"public void test0813968() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0813969,"public void test0813969() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0813970,"public void test0813970() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0813971,"public void test0813971() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0813972,"public void test0813972() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertEquals(4, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0813973,"public void test0813973() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0813974,"public void test0813974() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0813975,"public void test0813975() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0813976,"public void test0813976() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0813977,"public void test0813977() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0813978,"public void test0813978() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0813979,"public void test0813979() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0813980,"public void test0813980() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.flush();
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0823999,"public void test0823999() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0824000,"public void test0824000() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0824017,"public void test0824017() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0824018,"public void test0824018() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0824021,"public void test0824021() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0824022,"public void test0824022() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0824023,"public void test0824023() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0824024,"public void test0824024() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(574, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0824025,"public void test0824025() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0824026,"public void test0824026() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0824027,"public void test0824027() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0824028,"public void test0824028() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0824029,"public void test0824029() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0824030,"public void test0824030() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0824031,"public void test0824031() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0824032,"public void test0824032() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0824033,"public void test0824033() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0824034,"public void test0824034() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0824035,"public void test0824035() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0824036,"public void test0824036() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0824037,"public void test0824037() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0824038,"public void test0824038() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0824039,"public void test0824039() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0824040,"public void test0824040() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0824041,"public void test0824041() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0824042,"public void test0824042() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0824043,"public void test0824043() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0824044,"public void test0824044() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0824047,"public void test0824047() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0824048,"public void test0824048() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0824049,"public void test0824049() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0824050,"public void test0824050() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(574, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0824051,"public void test0824051() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0824052,"public void test0824052() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0824053,"public void test0824053() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0824054,"public void test0824054() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0824055,"public void test0824055() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0824056,"public void test0824056() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0834075,"public void test0834075() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0834076,"public void test0834076() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0834093,"public void test0834093() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0834094,"public void test0834094() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0834097,"public void test0834097() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0834098,"public void test0834098() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0834099,"public void test0834099() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0834100,"public void test0834100() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0834101,"public void test0834101() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0834102,"public void test0834102() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0834103,"public void test0834103() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0834104,"public void test0834104() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(248, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0834105,"public void test0834105() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0834106,"public void test0834106() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0834107,"public void test0834107() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0834108,"public void test0834108() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0834109,"public void test0834109() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0834110,"public void test0834110() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0834111,"public void test0834111() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0834112,"public void test0834112() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0834113,"public void test0834113() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0834114,"public void test0834114() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0834115,"public void test0834115() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0834116,"public void test0834116() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0834117,"public void test0834117() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0834118,"public void test0834118() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0834119,"public void test0834119() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0834120,"public void test0834120() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0834123,"public void test0834123() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0834124,"public void test0834124() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0834125,"public void test0834125() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0834126,"public void test0834126() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0834127,"public void test0834127() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0834128,"public void test0834128() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0834129,"public void test0834129() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0834130,"public void test0834130() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(248, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0834131,"public void test0834131() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0834132,"public void test0834132() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.flush();
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0844151,"public void test0844151() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0844152,"public void test0844152() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0844169,"public void test0844169() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0844170,"public void test0844170() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0844173,"public void test0844173() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0844174,"public void test0844174() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0844175,"public void test0844175() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0844176,"public void test0844176() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0844177,"public void test0844177() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0844178,"public void test0844178() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0844179,"public void test0844179() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0844180,"public void test0844180() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(255, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0844181,"public void test0844181() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0844182,"public void test0844182() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0844183,"public void test0844183() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0844184,"public void test0844184() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0844185,"public void test0844185() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0844186,"public void test0844186() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0844187,"public void test0844187() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0844188,"public void test0844188() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0844189,"public void test0844189() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0844190,"public void test0844190() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0844191,"public void test0844191() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0844192,"public void test0844192() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0844193,"public void test0844193() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0844194,"public void test0844194() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0844195,"public void test0844195() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0844196,"public void test0844196() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0844199,"public void test0844199() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0844200,"public void test0844200() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0844201,"public void test0844201() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0844202,"public void test0844202() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0844203,"public void test0844203() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertTrue(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0844204,"public void test0844204() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0844205,"public void test0844205() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0844206,"public void test0844206() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(255, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0844207,"public void test0844207() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0844208,"public void test0844208() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0844209,"public void test0844209() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0844210,"public void test0844210() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0844211,"public void test0844211() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0844212,"public void test0844212() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0844213,"public void test0844213() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0844214,"public void test0844214() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0844215,"public void test0844215() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0844216,"public void test0844216() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0844217,"public void test0844217() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0844218,"public void test0844218() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0844219,"public void test0844219() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0844220,"public void test0844220() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0844221,"public void test0844221() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0844222,"public void test0844222() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0844225,"public void test0844225() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0844226,"public void test0844226() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0844227,"public void test0844227() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0844228,"public void test0844228() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0844229,"public void test0844229() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertTrue(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0844230,"public void test0844230() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0844231,"public void test0844231() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0844232,"public void test0844232() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertEquals(255, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0844233,"public void test0844233() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0844234,"public void test0844234() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""7.e`"", true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0854253,"public void test0854253() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0854254,"public void test0854254() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0854271,"public void test0854271() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0854272,"public void test0854272() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0854275,"public void test0854275() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0854276,"public void test0854276() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0854277,"public void test0854277() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0854278,"public void test0854278() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0854279,"public void test0854279() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0854280,"public void test0854280() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0854281,"public void test0854281() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0854282,"public void test0854282() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0854283,"public void test0854283() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(28, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0854284,"public void test0854284() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0854285,"public void test0854285() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0854286,"public void test0854286() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0854287,"public void test0854287() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0854288,"public void test0854288() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0854289,"public void test0854289() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0854290,"public void test0854290() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0854291,"public void test0854291() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0854292,"public void test0854292() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0854293,"public void test0854293() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0854294,"public void test0854294() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0854295,"public void test0854295() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0854296,"public void test0854296() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0854297,"public void test0854297() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0854298,"public void test0854298() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0854301,"public void test0854301() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0854302,"public void test0854302() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0854303,"public void test0854303() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0854304,"public void test0854304() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0854305,"public void test0854305() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertTrue(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0854306,"public void test0854306() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0854307,"public void test0854307() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0854308,"public void test0854308() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0854309,"public void test0854309() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(28, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0854310,"public void test0854310() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0864329,"public void test0864329() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0864330,"public void test0864330() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0864347,"public void test0864347() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0864348,"public void test0864348() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0864351,"public void test0864351() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0864352,"public void test0864352() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0864353,"public void test0864353() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0864354,"public void test0864354() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0864355,"public void test0864355() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0864356,"public void test0864356() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0864357,"public void test0864357() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0864358,"public void test0864358() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0864359,"public void test0864359() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0864360,"public void test0864360() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0864361,"public void test0864361() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test0864362,"public void test0864362() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test0864363,"public void test0864363() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test0864364,"public void test0864364() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test0864365,"public void test0864365() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test0864366,"public void test0864366() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test0864367,"public void test0864367() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test0864368,"public void test0864368() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test0864369,"public void test0864369() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test0864370,"public void test0864370() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test0864371,"public void test0864371() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test0864372,"public void test0864372() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test0864373,"public void test0864373() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0864374,"public void test0864374() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0864377,"public void test0864377() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0864378,"public void test0864378() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0864379,"public void test0864379() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0864380,"public void test0864380() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0864381,"public void test0864381() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0864382,"public void test0864382() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0864383,"public void test0864383() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0864384,"public void test0864384() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0864385,"public void test0864385() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0864386,"public void test0864386() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0864387,"public void test0864387() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0864388,"public void test0864388() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0864389,"public void test0864389() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0864390,"public void test0864390() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0864391,"public void test0864391() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0864392,"public void test0864392() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0864393,"public void test0864393() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0864394,"public void test0864394() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0864395,"public void test0864395() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0864396,"public void test0864396() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0864397,"public void test0864397() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0864398,"public void test0864398() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0864399,"public void test0864399() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0864400,"public void test0864400() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0864403,"public void test0864403() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertTrue(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0864404,"public void test0864404() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,
project,0,test0864405,"public void test0864405() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0864406,"public void test0864406() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0864407,"public void test0864407() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0864408,"public void test0864408() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0864409,"public void test0864409() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0864410,"public void test0864410() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0864411,"public void test0864411() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0864412,"public void test0864412() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0874431,"public void test0874431() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0874432,"public void test0874432() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0874446,"public void test0874446() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0874447,"public void test0874447() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0874448,"public void test0874448() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0874449,"public void test0874449() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0874450,"public void test0874450() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0874451,"public void test0874451() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0874452,"public void test0874452() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0874453,"public void test0874453() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0874454,"public void test0874454() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0874455,"public void test0874455() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    assertEquals((-4479), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0874456,"public void test0874456() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0874457,"public void test0874457() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0874458,"public void test0874458() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test0874459,"public void test0874459() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test0874460,"public void test0874460() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test0874461,"public void test0874461() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test0874462,"public void test0874462() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test0874463,"public void test0874463() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test0874464,"public void test0874464() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test0874465,"public void test0874465() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test0874466,"public void test0874466() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test0874467,"public void test0874467() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test0874468,"public void test0874468() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test0874469,"public void test0874469() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test0874470,"public void test0874470() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0874471,"public void test0874471() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0874472,"public void test0874472() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertTrue(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0874473,"public void test0874473() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0874474,"public void test0874474() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0874475,"public void test0874475() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0874476,"public void test0874476() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0874477,"public void test0874477() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0874478,"public void test0874478() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0874479,"public void test0874479() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0874480,"public void test0874480() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertEquals((-4479), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0874481,"public void test0874481() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0884500,"public void test0884500() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0884501,"public void test0884501() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0884518,"public void test0884518() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0884519,"public void test0884519() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0884522,"public void test0884522() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0884523,"public void test0884523() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0884524,"public void test0884524() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0884525,"public void test0884525() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0884526,"public void test0884526() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0884527,"public void test0884527() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(175, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0884528,"public void test0884528() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0884529,"public void test0884529() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0884530,"public void test0884530() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0884531,"public void test0884531() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0884532,"public void test0884532() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0884533,"public void test0884533() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0884534,"public void test0884534() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0884535,"public void test0884535() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0884536,"public void test0884536() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0884537,"public void test0884537() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0884538,"public void test0884538() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0884539,"public void test0884539() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0884540,"public void test0884540() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0884541,"public void test0884541() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0884542,"public void test0884542() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0884543,"public void test0884543() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0884544,"public void test0884544() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0884545,"public void test0884545() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0884548,"public void test0884548() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0884549,"public void test0884549() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0884550,"public void test0884550() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0884551,"public void test0884551() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0884552,"public void test0884552() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertTrue(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0884553,"public void test0884553() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(175, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0884554,"public void test0884554() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0884555,"public void test0884555() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0884556,"public void test0884556() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0884557,"public void test0884557() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.close();
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0894576,"public void test0894576() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0894577,"public void test0894577() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0894596,"public void test0894596() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0894597,"public void test0894597() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0894600,"public void test0894600() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0894601,"public void test0894601() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,
project,0,test0894602,"public void test0894602() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0894603,"public void test0894603() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0894604,"public void test0894604() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0894605,"public void test0894605() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0894606,"public void test0894606() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0894607,"public void test0894607() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0894608,"public void test0894608() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0894609,"public void test0894609() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0894610,"public void test0894610() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertArrayEquals(new byte[] { (byte) 0 }, byteArray0);
}",0,
project,0,test0894611,"public void test0894611() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(1, byteArray0.length);
}",0,
project,0,test0894612,"public void test0894612() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0894613,"public void test0894613() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0894614,"public void test0894614() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0894615,"public void test0894615() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0894616,"public void test0894616() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0894617,"public void test0894617() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0894618,"public void test0894618() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0894619,"public void test0894619() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0894620,"public void test0894620() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0894621,"public void test0894621() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0894622,"public void test0894622() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0894623,"public void test0894623() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0894624,"public void test0894624() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0894625,"public void test0894625() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0894628,"public void test0894628() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0894629,"public void test0894629() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,
project,0,test0894630,"public void test0894630() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0894631,"public void test0894631() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0894632,"public void test0894632() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertTrue(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0894633,"public void test0894633() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0894634,"public void test0894634() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0894635,"public void test0894635() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0894636,"public void test0894636() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0894637,"public void test0894637() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.close();
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0904656,"public void test0904656() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0904657,"public void test0904657() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0904660,"public void test0904660() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test0904661,"public void test0904661() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(3, byteArray0.length);
}",0,
project,0,test0904662,"public void test0904662() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertNotNull(uTF8JsonGenerator0);
}",0,
project,0,test0904663,"public void test0904663() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0904664,"public void test0904664() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0904665,"public void test0904665() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0904666,"public void test0904666() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0904667,"public void test0904667() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0904668,"public void test0904668() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0904669,"public void test0904669() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0904670,"public void test0904670() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0904671,"public void test0904671() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0904672,"public void test0904672() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0904673,"public void test0904673() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0904674,"public void test0904674() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0904675,"public void test0904675() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertFalse(iOContext0.isResourceManaged())
project,0,test0904676,"public void test0904676() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0904693,"public void test0904693() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0904694,"public void test0904694() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0904695,"public void test0904695() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0904696,"public void test0904696() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0904697,"public void test0904697() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0904698,"public void test0904698() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0904699,"public void test0904699() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(72, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0904700,"public void test0904700() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0904701,"public void test0904701() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0904702,"public void test0904702() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0904703,"public void test0904703() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""Can not currently override name during filtering read"", false);
    MockFile mockFile0 = new MockFile("" in character escape sequence"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 436, 436);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",0,
project,0,test0914722,"public void test0914722() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0914723,"public void test0914723() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0914733,"public void test0914733() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test0914747,"public void test0914747() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0914748,"public void test0914748() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0914749,"public void test0914749() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test0914750,"public void test0914750() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    assertEquals(3, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0914751,"public void test0914751() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0914752,"public void test0914752() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0914753,"public void test0914753() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0914754,"public void test0914754() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0914755,"public void test0914755() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0914756,"public void test0914756() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    assertEquals(155, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0914757,"public void test0914757() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0914758,"public void test0914758() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0914759,"public void test0914759() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0914760,"public void test0914760() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeString(""5C="");
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",1,
project,0,test0924780,"public void test0924780() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0924781,"public void test0924781() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0924782,"public void test0924782() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test0924783,"public void test0924783() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(10, byteArray0.length);
}",0,
project,0,test0924784,"public void test0924784() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertNotNull(uTF8JsonGenerator0);
}",0,
project,0,test0924785,"public void test0924785() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0924786,"public void test0924786() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0924787,"public void test0924787() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0924788,"public void test0924788() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0924789,"public void test0924789() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0924790,"public void test0924790() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0924791,"public void test0924791() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0924792,"public void test0924792() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0924793,"public void test0924793() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0924794,"public void test0924794() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0924795,"public void test0924795() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0924796,"public void test0924796() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0924797,"public void test0924797() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0924798,"public void test0924798() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0924799,"public void test0924799() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0924800,"public void test0924800() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0924801,"public void test0924801() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, uTF8JsonGenerator0.getOutputBuffered())"
project,0,test0924802,"public void test0924802() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals((-76), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0924803,"public void test0924803() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0924804,"public void test0924804() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0924805,"public void test0924805() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0924806,"public void test0924806() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0924807,"public void test0924807() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0924808,"public void test0924808() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0924809,"public void test0924809() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertArrayEquals(new byte[] { (byte) 34, (byte) 50, (byte) 34, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",1,
project,0,test0924810,"public void test0924810() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(10, byteArray0.length);
}",1,
project,0,test0924811,"public void test0924811() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test0924812,"public void test0924812() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test0924813,"public void test0924813() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test0924814,"public void test0924814() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test0924815,"public void test0924815() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test0924816,"public void test0924816() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test0924817,"public void test0924817() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test0924818,"public void test0924818() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test0924819,"public void test0924819() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test0924820,"public void test0924820() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test0924821,"public void test0924821() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test0924822,"public void test0924822() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test0924823,"public void test0924823() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0924824,"public void test0924824() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0924825,"public void test0924825() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0924826,"public void test0924826() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0924827,"public void test0924827() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(3, uTF8JsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, uTF8JsonGenerator0.getOutputBuffered())"
project,0,test0924828,"public void test0924828() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals((-76), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0924829,"public void test0924829() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0924830,"public void test0924830() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0924831,"public void test0924831() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0924832,"public void test0924832() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0924833,"public void test0924833() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0924834,"public void test0924834() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0924835,"public void test0924835() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertArrayEquals(new byte[] { (byte) 34, (byte) 50, (byte) 34, (byte) 44, (byte) 87, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test0924836,"public void test0924836() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals(10, byteArray0.length);
}",0,
project,0,test0924837,"public void test0924837() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0924838,"public void test0924838() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0924839,"public void test0924839() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0924840,"public void test0924840() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0924841,"public void test0924841() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0924842,"public void test0924842() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0924843,"public void test0924843() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0924844,"public void test0924844() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0924845,"public void test0924845() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0924846,"public void test0924846() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0924847,"public void test0924847() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0924848,"public void test0924848() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0924849,"public void test0924849() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0924850,"public void test0924850() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0924851,"public void test0924851() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0924852,"public void test0924852() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0924853,"public void test0924853() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals((-76), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0924854,"public void test0924854() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0924855,"public void test0924855() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0924856,"public void test0924856() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0924857,"public void test0924857() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0924858,"public void test0924858() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertEquals(5, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0924859,"public void test0924859() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0924860,"public void test0924860() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0924861,"public void test0924861() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertArrayEquals(new byte[] { (byte) 34, (byte) 50, (byte) 34, (byte) 44, (byte) 87, (byte) 32, (byte) 34, (byte) 48, (byte) 46, (byte) 48 }, byteArray0);
}",0,
project,0,test0924862,"public void test0924862() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals(10, byteArray0.length);
}",0,
project,0,test0924863,"public void test0924863() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0924864,"public void test0924864() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0924865,"public void test0924865() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0924866,"public void test0924866() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0924867,"public void test0924867() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0924868,"public void test0924868() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0924869,"public void test0924869() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0924870,"public void test0924870() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0924871,"public void test0924871() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0924872,"public void test0924872() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0924873,"public void test0924873() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0924874,"public void test0924874() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0924875,"public void test0924875() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0924876,"public void test0924876() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0924877,"public void test0924877() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0924878,"public void test0924878() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0924879,"public void test0924879() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, uTF8JsonGenerator0.getOutputBuffered())"
project,0,test0924880,"public void test0924880() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals((-76), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0924881,"public void test0924881() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0924882,"public void test0924882() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0924883,"public void test0924883() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0924884,"public void test0924884() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0924885,"public void test0924885() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0924886,"public void test0924886() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeFieldName(""W"");
    uTF8JsonGenerator0.writeNumber((double) 0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0934908,"public void test0934908() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0934909,"public void test0934909() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0934927,"public void test0934927() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0934928,"public void test0934928() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0934929,"public void test0934929() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertEquals(5, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0934930,"public void test0934930() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0934931,"public void test0934931() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0934932,"public void test0934932() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0934933,"public void test0934933() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0934934,"public void test0934934() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0934935,"public void test0934935() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0934936,"public void test0934936() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertEquals(1624, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0934937,"public void test0934937() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0934938,"public void test0934938() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0934939,"public void test0934939() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertArrayEquals(new byte[] { (byte) 99, (byte) 51, (byte) 81, (byte) 61, (byte) 34, (byte) 34, (byte) 115, (byte) 116 }, byteArray0);
}",0,
project,0,test0934940,"public void test0934940() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(8, byteArray0.length);
}",0,
project,0,test0934941,"public void test0934941() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0934942,"public void test0934942() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0934943,"public void test0934943() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0934944,"public void test0934944() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0934945,"public void test0934945() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0934946,"public void test0934946() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0934947,"public void test0934947() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0934948,"public void test0934948() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0934949,"public void test0934949() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0934950,"public void test0934950() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0934951,"public void test0934951() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0934952,"public void test0934952() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0934955,"public void test0934955() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0934956,"public void test0934956() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0934957,"public void test0934957() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(5, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0934958,"public void test0934958() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0934959,"public void test0934959() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0934960,"public void test0934960() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0934961,"public void test0934961() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0934962,"public void test0934962() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0934963,"public void test0934963() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0934964,"public void test0934964() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertEquals(1624, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0934965,"public void test0934965() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0934966,"public void test0934966() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""!V?3I76gB*]4a+"", false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    uTF8JsonGenerator0.writeBinaryField(""write a string"", byteArray0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0944985,"public void test0944985() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0944986,"public void test0944986() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0945003,"public void test0945003() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0945004,"public void test0945004() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0945007,"public void test0945007() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0945008,"public void test0945008() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0945009,"public void test0945009() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0945010,"public void test0945010() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0945011,"public void test0945011() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0945012,"public void test0945012() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0945013,"public void test0945013() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0945014,"public void test0945014() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0945015,"public void test0945015() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0945016,"public void test0945016() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0945017,"public void test0945017() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    char[] charArray0 = new char[5];
    charArray0[3] = '\u0097';
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeString(charArray0, 3, 4);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 5
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",1,
project,0,test0955036,"public void test0955036() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0955037,"public void test0955037() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0955054,"public void test0955054() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0955055,"public void test0955055() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0955058,"public void test0955058() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(248, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0955059,"public void test0955059() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0955060,"public void test0955060() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0955061,"public void test0955061() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0955062,"public void test0955062() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0955063,"public void test0955063() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0955064,"public void test0955064() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0955065,"public void test0955065() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0955066,"public void test0955066() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0955067,"public void test0955067() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0955068,"public void test0955068() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertNotNull(uTF8JsonGenerator1);
}",0,assertNotNull(uTF8JsonGenerator1)
project,0,test0955069,"public void test0955069() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertSame(uTF8JsonGenerator0, uTF8JsonGenerator1);
}",0,
project,0,test0955070,"public void test0955070() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertSame(uTF8JsonGenerator1, uTF8JsonGenerator0);
}",0,
project,0,test0955071,"public void test0955071() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0955072,"public void test0955072() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0955073,"public void test0955073() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0955074,"public void test0955074() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0955075,"public void test0955075() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0955076,"public void test0955076() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0955077,"public void test0955077() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0955078,"public void test0955078() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0955079,"public void test0955079() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0955080,"public void test0955080() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0955081,"public void test0955081() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0955082,"public void test0955082() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0955083,"public void test0955083() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0955084,"public void test0955084() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0955085,"public void test0955085() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0955086,"public void test0955086() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0955087,"public void test0955087() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0955088,"public void test0955088() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0955091,"public void test0955091() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(248, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0955092,"public void test0955092() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0955093,"public void test0955093() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0955094,"public void test0955094() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0955095,"public void test0955095() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0955096,"public void test0955096() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0955097,"public void test0955097() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0955098,"public void test0955098() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0955099,"public void test0955099() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0955100,"public void test0955100() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0955101,"public void test0955101() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertTrue(uTF8JsonGenerator1.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator1.canOmitFields())
project,0,test0955102,"public void test0955102() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertFalse(uTF8JsonGenerator1.canWriteBinaryNatively());
}",0,
project,0,test0955103,"public void test0955103() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(127, uTF8JsonGenerator1.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator1.getHighestEscapedChar())"
project,0,test0955104,"public void test0955104() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertFalse(uTF8JsonGenerator1.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator1.canWriteFormattedNumbers())
project,0,test0955105,"public void test0955105() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertFalse(uTF8JsonGenerator1.isClosed());
}",0,assertTrue(uTF8JsonGenerator1.isClosed())
project,0,test0955106,"public void test0955106() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(248, uTF8JsonGenerator1.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator1.getFeatureMask())"
project,0,test0955107,"public void test0955107() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertFalse(uTF8JsonGenerator1.canWriteTypeId());
}",0,
project,0,test0955108,"public void test0955108() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertFalse(uTF8JsonGenerator1.canWriteObjectId());
}",0,
project,0,test0955109,"public void test0955109() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(0, uTF8JsonGenerator1.getOutputBuffered());
}",0,
project,0,test0955110,"public void test0955110() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    assertEquals(0, uTF8JsonGenerator1.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator1.getFormatFeatures())"
project,0,test0955111,"public void test0955111() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertSame(uTF8JsonGenerator0, uTF8JsonGenerator1);
}",0,
project,0,test0955112,"public void test0955112() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0955113,"public void test0955113() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0955114,"public void test0955114() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0955115,"public void test0955115() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0955116,"public void test0955116() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0955117,"public void test0955117() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0955118,"public void test0955118() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0955119,"public void test0955119() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0955120,"public void test0955120() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0955121,"public void test0955121() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0955122,"public void test0955122() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0955123,"public void test0955123() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0955124,"public void test0955124() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0955125,"public void test0955125() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0955128,"public void test0955128() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertEquals(248, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0955129,"public void test0955129() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0955130,"public void test0955130() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0955131,"public void test0955131() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0955132,"public void test0955132() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0955133,"public void test0955133() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0955134,"public void test0955134() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0955135,"public void test0955135() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertEquals(17, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0955136,"public void test0955136() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0955137,"public void test0955137() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    uTF8JsonGenerator0.writeFieldName(""pAc!_U]ga(C7v"");
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0965158,"public void test0965158() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0965159,"public void test0965159() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0965176,"public void test0965176() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0965177,"public void test0965177() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0965180,"public void test0965180() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0965181,"public void test0965181() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0965182,"public void test0965182() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, uTF8JsonGenerator0.getOutputBuffered())"
project,0,test0965183,"public void test0965183() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0965184,"public void test0965184() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0965185,"public void test0965185() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0965186,"public void test0965186() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0965187,"public void test0965187() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0965188,"public void test0965188() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0965189,"public void test0965189() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(3478, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0965190,"public void test0965190() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    char[] charArray0 = new char[8];
    charArray0[5] = '\\';
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeString(charArray0, 1, 55296);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 8
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test0975209,"public void test0975209() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0975210,"public void test0975210() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0975227,"public void test0975227() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,
project,0,test0975228,"public void test0975228() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0975231,"public void test0975231() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0975232,"public void test0975232() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0975233,"public void test0975233() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0975234,"public void test0975234() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0975235,"public void test0975235() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(1, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0975236,"public void test0975236() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0975237,"public void test0975237() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0975238,"public void test0975238() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0975239,"public void test0975239() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0975240,"public void test0975240() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0975241,"public void test0975241() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertArrayEquals(new byte[] { (byte) (-4), (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test0975242,"public void test0975242() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(3, byteArray0.length);
}",0,
project,0,test0975243,"public void test0975243() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0975244,"public void test0975244() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0975245,"public void test0975245() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0975246,"public void test0975246() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0975247,"public void test0975247() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0975248,"public void test0975248() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0975249,"public void test0975249() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0975250,"public void test0975250() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0975251,"public void test0975251() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0975252,"public void test0975252() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0975253,"public void test0975253() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0975254,"public void test0975254() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0975255,"public void test0975255() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0975256,"public void test0975256() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0975259,"public void test0975259() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(15, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0975260,"public void test0975260() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0975261,"public void test0975261() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0975262,"public void test0975262() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0975263,"public void test0975263() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(1, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0975264,"public void test0975264() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0975265,"public void test0975265() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0975266,"public void test0975266() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0975267,"public void test0975267() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0975268,"public void test0975268() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-4);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0985288,"public void test0985288() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0985289,"public void test0985289() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0985290,"public void test0985290() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test0985291,"public void test0985291() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(10, byteArray0.length);
}",0,
project,0,test0985292,"public void test0985292() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertNotNull(uTF8JsonGenerator0);
}",0,
project,0,test0985293,"public void test0985293() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0985294,"public void test0985294() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0985295,"public void test0985295() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0985296,"public void test0985296() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0985297,"public void test0985297() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0985298,"public void test0985298() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0985299,"public void test0985299() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0985300,"public void test0985300() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0985301,"public void test0985301() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0985302,"public void test0985302() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0985303,"public void test0985303() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0985304,"public void test0985304() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0985305,"public void test0985305() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0985306,"public void test0985306() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0985307,"public void test0985307() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0985308,"public void test0985308() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0985309,"public void test0985309() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0985310,"public void test0985310() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0985311,"public void test0985311() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0985312,"public void test0985312() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(333, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0985313,"public void test0985313() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0985314,"public void test0985314() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0985315,"public void test0985315() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test0985316,"public void test0985316() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0985317,"public void test0985317() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertArrayEquals(new byte[] { (byte) 50, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",1,
project,0,test0985318,"public void test0985318() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(10, byteArray0.length);
}",1,
project,0,test0985319,"public void test0985319() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test0985320,"public void test0985320() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test0985321,"public void test0985321() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test0985322,"public void test0985322() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test0985323,"public void test0985323() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test0985324,"public void test0985324() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test0985325,"public void test0985325() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test0985326,"public void test0985326() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test0985327,"public void test0985327() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test0985328,"public void test0985328() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test0985329,"public void test0985329() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test0985330,"public void test0985330() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test0985331,"public void test0985331() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0985332,"public void test0985332() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0985333,"public void test0985333() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0985334,"public void test0985334() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0985335,"public void test0985335() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0985336,"public void test0985336() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0985337,"public void test0985337() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0985338,"public void test0985338() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(333, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0985339,"public void test0985339() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0985340,"public void test0985340() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0985341,"public void test0985341() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0985342,"public void test0985342() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0985343,"public void test0985343() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertArrayEquals(new byte[] { (byte) 50, (byte) 32, (byte) 34, (byte) 50, (byte) 32, (byte) 34, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test0985344,"public void test0985344() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(10, byteArray0.length);
}",0,
project,0,test0985345,"public void test0985345() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test0985346,"public void test0985346() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test0985347,"public void test0985347() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test0985348,"public void test0985348() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test0985349,"public void test0985349() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test0985350,"public void test0985350() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test0985351,"public void test0985351() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test0985352,"public void test0985352() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test0985353,"public void test0985353() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test0985354,"public void test0985354() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test0985355,"public void test0985355() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test0985356,"public void test0985356() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test0985357,"public void test0985357() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0985358,"public void test0985358() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0985359,"public void test0985359() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test0985360,"public void test0985360() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0985361,"public void test0985361() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0985362,"public void test0985362() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0985363,"public void test0985363() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test0985364,"public void test0985364() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(333, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0985365,"public void test0985365() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0985366,"public void test0985366() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(6, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0985367,"public void test0985367() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0985368,"public void test0985368() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Z"");
    byte[] byteArray0 = new byte[10];
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    uTF8JsonGenerator0.writeNumber(2);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0995387,"public void test0995387() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0995388,"public void test0995388() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0995406,"public void test0995406() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""oFW-E/GNu3&kS#O"");
    DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test0995407,"public void test0995407() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""oFW-E/GNu3&kS#O"");
    DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test0995408,"public void test0995408() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""oFW-E/GNu3&kS#O"");
    DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test0995409,"public void test0995409() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""oFW-E/GNu3&kS#O"");
    DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test0995410,"public void test0995410() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""oFW-E/GNu3&kS#O"");
    DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test0995411,"public void test0995411() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""oFW-E/GNu3&kS#O"");
    DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test0995412,"public void test0995412() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""oFW-E/GNu3&kS#O"");
    DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test0995413,"public void test0995413() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""oFW-E/GNu3&kS#O"");
    DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test0995414,"public void test0995414() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""oFW-E/GNu3&kS#O"");
    DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test0995415,"public void test0995415() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""oFW-E/GNu3&kS#O"");
    DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test0995416,"public void test0995416() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""oFW-E/GNu3&kS#O"");
    DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test0995417,"public void test0995417() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""oFW-E/GNu3&kS#O"");
    DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test0995418,"public void test0995418() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFW-E/GNu3&kS#O"", true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""oFW-E/GNu3&kS#O"");
    DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 3, (byte) 48);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 9
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test1005437,"public void test1005437() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1005438,"public void test1005438() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1005455,"public void test1005455() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1005456,"public void test1005456() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1005459,"public void test1005459() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test1005460,"public void test1005460() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(2819, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1005461,"public void test1005461() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1005462,"public void test1005462() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test1005463,"public void test1005463() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test1005464,"public void test1005464() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1005465,"public void test1005465() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1005466,"public void test1005466() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1005467,"public void test1005467() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1005468,"public void test1005468() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1005469,"public void test1005469() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertArrayEquals(new byte[] { (byte) 67, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test1005470,"public void test1005470() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(4, byteArray0.length);
}",0,
project,0,test1005471,"public void test1005471() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test1005472,"public void test1005472() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test1005473,"public void test1005473() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test1005474,"public void test1005474() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test1005475,"public void test1005475() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test1005476,"public void test1005476() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test1005477,"public void test1005477() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test1005478,"public void test1005478() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test1005479,"public void test1005479() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test1005480,"public void test1005480() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test1005481,"public void test1005481() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test1005482,"public void test1005482() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test1005483,"public void test1005483() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1005484,"public void test1005484() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1005487,"public void test1005487() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test1005488,"public void test1005488() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(2819, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1005489,"public void test1005489() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test1005490,"public void test1005490() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(15, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1005491,"public void test1005491() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test1005492,"public void test1005492() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1005493,"public void test1005493() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1005494,"public void test1005494() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1005495,"public void test1005495() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1005496,"public void test1005496() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 67;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1015515,"public void test1015515() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1015516,"public void test1015516() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1015518,"public void test1015518() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(1, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test1015532,"public void test1015532() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1015533,"public void test1015533() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1015534,"public void test1015534() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(1, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test1015535,"public void test1015535() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test1015536,"public void test1015536() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1015537,"public void test1015537() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1015538,"public void test1015538() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1015539,"public void test1015539() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test1015540,"public void test1015540() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1015541,"public void test1015541() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1015542,"public void test1015542() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test1015543,"public void test1015543() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals((-814), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1015544,"public void test1015544() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1015545,"public void test1015545() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test1015546,"public void test1015546() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test1015547,"public void test1015547() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test1015548,"public void test1015548() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test1015549,"public void test1015549() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test1015550,"public void test1015550() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test1015551,"public void test1015551() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test1015552,"public void test1015552() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test1015553,"public void test1015553() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test1015554,"public void test1015554() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test1015555,"public void test1015555() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test1015556,"public void test1015556() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test1015557,"public void test1015557() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1015558,"public void test1015558() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1015559,"public void test1015559() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(1, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test1015560,"public void test1015560() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test1015561,"public void test1015561() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1015562,"public void test1015562() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1015563,"public void test1015563() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1015564,"public void test1015564() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test1015565,"public void test1015565() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1015566,"public void test1015566() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test1015567,"public void test1015567() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals(2, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1015568,"public void test1015568() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals((-814), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1015569,"public void test1015569() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1025588,"public void test1025588() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,
project,0,test1025589,"public void test1025589() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1025608,"public void test1025608() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1025609,"public void test1025609() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1025612,"public void test1025612() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1025613,"public void test1025613() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test1025614,"public void test1025614() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test1025615,"public void test1025615() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1025616,"public void test1025616() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1025617,"public void test1025617() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test1025618,"public void test1025618() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1025619,"public void test1025619() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(2, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1025620,"public void test1025620() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1025621,"public void test1025621() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1025630,"public void test1025630() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    long long0 = byteArrayInputStream0.skip(724L);
    try {
        uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 56319);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Too few bytes available: missing 56319 bytes (out of 56319)
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test1035649,"public void test1035649() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1035650,"public void test1035650() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1035669,"public void test1035669() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1035670,"public void test1035670() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1035673,"public void test1035673() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1035674,"public void test1035674() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test1035675,"public void test1035675() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1035676,"public void test1035676() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1035677,"public void test1035677() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1035678,"public void test1035678() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test1035679,"public void test1035679() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test1035680,"public void test1035680() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(2, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1035681,"public void test1035681() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1035682,"public void test1035682() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1035687,"public void test1035687() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertArrayEquals(new byte[] { (byte) 34, (byte) 65, (byte) 61, (byte) 61 }, byteArray0);
}",0,
project,0,test1035688,"public void test1035688() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(4, byteArray0.length);
}",0,
project,0,test1035689,"public void test1035689() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test1035690,"public void test1035690() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test1035691,"public void test1035691() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test1035692,"public void test1035692() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test1035693,"public void test1035693() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test1035694,"public void test1035694() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test1035695,"public void test1035695() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test1035696,"public void test1035696() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test1035697,"public void test1035697() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test1035698,"public void test1035698() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test1035699,"public void test1035699() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test1035700,"public void test1035700() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test1035701,"public void test1035701() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test1035702,"public void test1035702() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1035703,"public void test1035703() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertTrue(iOContext0.isResourceManaged());
}",0,
project,0,test1035706,"public void test1035706() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1035707,"public void test1035707() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test1035708,"public void test1035708() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1035709,"public void test1035709() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1035710,"public void test1035710() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1035711,"public void test1035711() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test1035712,"public void test1035712() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1035713,"public void test1035713() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test1035714,"public void test1035714() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(2, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1035715,"public void test1035715() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[4];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1045735,"public void test1045735() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1045736,"public void test1045736() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1045756,"public void test1045756() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1045757,"public void test1045757() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1045760,"public void test1045760() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1045761,"public void test1045761() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1045762,"public void test1045762() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1045763,"public void test1045763() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1045764,"public void test1045764() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test1045765,"public void test1045765() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1045766,"public void test1045766() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test1045767,"public void test1045767() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1045768,"public void test1045768() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertEquals(16, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1045769,"public void test1045769() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test1045770,"public void test1045770() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(11, byteArray0.length);
}",0,
project,0,test1045771,"public void test1045771() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test1045772,"public void test1045772() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test1045773,"public void test1045773() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test1045774,"public void test1045774() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test1045775,"public void test1045775() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test1045776,"public void test1045776() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test1045777,"public void test1045777() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test1045778,"public void test1045778() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test1045779,"public void test1045779() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test1045780,"public void test1045780() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test1045781,"public void test1045781() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test1045782,"public void test1045782() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test1045783,"public void test1045783() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(11, int0);
}",0,"assertEquals(0, int0)"
project,0,test1045784,"public void test1045784() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1045785,"public void test1045785() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1045789,"public void test1045789() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1045790,"public void test1045790() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1045791,"public void test1045791() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1045792,"public void test1045792() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test1045793,"public void test1045793() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1045794,"public void test1045794() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test1045795,"public void test1045795() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1045796,"public void test1045796() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(16, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1045797,"public void test1045797() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test1045798,"public void test1045798() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    byte[] byteArray0 = new byte[11];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    assertEquals(18, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1055827,"public void test1055827() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1055828,"public void test1055828() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1055847,"public void test1055847() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1055848,"public void test1055848() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1055849,"public void test1055849() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1055850,"public void test1055850() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test1055851,"public void test1055851() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1055852,"public void test1055852() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test1055853,"public void test1055853() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertEquals((-128), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1055854,"public void test1055854() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1055855,"public void test1055855() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertEquals(3, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1055856,"public void test1055856() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1055857,"public void test1055857() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1055858,"public void test1055858() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test1055859,"public void test1055859() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertArrayEquals(new byte[] { (byte) 34, (byte) 103, (byte) 61, (byte) 61 }, byteArray0);
}",0,
project,0,test1055860,"public void test1055860() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(4, byteArray0.length);
}",0,
project,0,test1055861,"public void test1055861() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test1055862,"public void test1055862() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test1055863,"public void test1055863() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test1055864,"public void test1055864() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test1055865,"public void test1055865() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test1055866,"public void test1055866() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test1055867,"public void test1055867() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test1055868,"public void test1055868() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test1055869,"public void test1055869() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test1055870,"public void test1055870() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test1055871,"public void test1055871() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test1055872,"public void test1055872() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test1055873,"public void test1055873() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(4, int0);
}",0,
project,0,test1055877,"public void test1055877() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1055878,"public void test1055878() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1055879,"public void test1055879() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1055880,"public void test1055880() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test1055881,"public void test1055881() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(1, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1055882,"public void test1055882() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test1055883,"public void test1055883() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(1, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1055884,"public void test1055884() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals((-128), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1055885,"public void test1055885() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1055886,"public void test1055886() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1055887,"public void test1055887() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1055888,"public void test1055888() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    byte[] byteArray0 = new byte[4];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteTypeId())
project,0,test1065907,"public void test1065907() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1065908,"public void test1065908() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1065910,"public void test1065910() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test1065912,"public void test1065912() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(1, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test1065927,"public void test1065927() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1065928,"public void test1065928() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1065929,"public void test1065929() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(1, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test1065930,"public void test1065930() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1065931,"public void test1065931() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1065932,"public void test1065932() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1065933,"public void test1065933() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals((-814), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1065934,"public void test1065934() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test1065935,"public void test1065935() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteObjectId())
project,0,test1065936,"public void test1065936() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1065937,"public void test1065937() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1065938,"public void test1065938() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1065939,"public void test1065939() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test1065940,"public void test1065940() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test1065941,"public void test1065941() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test1065942,"public void test1065942() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test1065943,"public void test1065943() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test1065944,"public void test1065944() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test1065945,"public void test1065945() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test1065946,"public void test1065946() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test1065947,"public void test1065947() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test1065948,"public void test1065948() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test1065949,"public void test1065949() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test1065950,"public void test1065950() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test1065951,"public void test1065951() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test1065952,"public void test1065952() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test1065953,"public void test1065953() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1065954,"public void test1065954() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1065955,"public void test1065955() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
}",0,"assertEquals(1, byteArrayBuilder0.getCurrentSegmentLength())"
project,0,test1065957,"public void test1065957() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(127, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1065958,"public void test1065958() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1065959,"public void test1065959() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1065960,"public void test1065960() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals((-814), uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1065961,"public void test1065961() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test1065962,"public void test1065962() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(2, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1065963,"public void test1065963() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test1065964,"public void test1065964() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1065965,"public void test1065965() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1065966,"public void test1065966() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""oFWE/GNu3&kS#O"", false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test1075985,"public void test1075985() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1075986,"public void test1075986() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1075988,"public void test1075988() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test1075989,"public void test1075989() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(6, byteArray0.length);
}",0,
project,0,test1075990,"public void test1075990() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertNotNull(uTF8JsonGenerator0);
}",0,
project,0,test1075991,"public void test1075991() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test1075992,"public void test1075992() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test1075993,"public void test1075993() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test1075994,"public void test1075994() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test1075995,"public void test1075995() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test1075996,"public void test1075996() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test1075997,"public void test1075997() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test1075998,"public void test1075998() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test1075999,"public void test1075999() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test1076000,"public void test1076000() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test1076001,"public void test1076001() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test1076002,"public void test1076002() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test1076003,"public void test1076003() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1076004,"public void test1076004() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1076005,"public void test1076005() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test1076006,"public void test1076006() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1076007,"public void test1076007() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test1076008,"public void test1076008() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test1076009,"public void test1076009() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(3, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1076010,"public void test1076010() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1076011,"public void test1076011() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1076012,"public void test1076012() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(102, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1076013,"public void test1076013() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1076014,"public void test1076014() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1076016,"public void test1076016() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    assertEquals(""RS"", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test1076017,"public void test1076017() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    assertEquals(""RS"", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test1076018,"public void test1076018() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    assertEquals(2, serializedString0.charLength());
}",0,"assertEquals(0, serializedString0.charLength())"
project,0,test1076033,"public void test1076033() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1076034,"public void test1076034() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1076035,"public void test1076035() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test1076036,"public void test1076036() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertEquals(2, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1076037,"public void test1076037() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1076038,"public void test1076038() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test1076039,"public void test1076039() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,assertTrue(uTF8JsonGenerator0.canWriteTypeId())
project,0,test1076040,"public void test1076040() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertEquals(3, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1076041,"public void test1076041() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1076042,"public void test1076042() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1076043,"public void test1076043() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1076044,"public void test1076044() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1076045,"public void test1076045() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertEquals(""RS"", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test1076046,"public void test1076046() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertEquals(""RS"", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test1076047,"public void test1076047() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertEquals(2, serializedString0.charLength());
}",0,"assertEquals(0, serializedString0.charLength())"
project,0,test1076048,"public void test1076048() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertArrayEquals(new byte[] { (byte) 82, (byte) 83, (byte) (-8), (byte) (-112), (byte) (-97), (byte) (-65) }, byteArray0);
}",0,
project,0,test1076049,"public void test1076049() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(6, byteArray0.length);
}",0,
project,0,test1076050,"public void test1076050() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test1076051,"public void test1076051() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test1076052,"public void test1076052() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test1076053,"public void test1076053() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test1076054,"public void test1076054() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test1076055,"public void test1076055() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test1076056,"public void test1076056() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test1076057,"public void test1076057() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test1076058,"public void test1076058() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test1076059,"public void test1076059() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test1076060,"public void test1076060() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test1076061,"public void test1076061() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test1076062,"public void test1076062() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1076063,"public void test1076063() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1076064,"public void test1076064() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test1076065,"public void test1076065() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1076066,"public void test1076066() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,
project,0,test1076067,"public void test1076067() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test1076068,"public void test1076068() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(3, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1076069,"public void test1076069() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1076070,"public void test1076070() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1076071,"public void test1076071() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(6, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1076072,"public void test1076072() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1076073,"public void test1076073() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    SerializedString serializedString0 = new SerializedString(""RS"");
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1086092,"public void test1086092() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1086093,"public void test1086093() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1086095,"public void test1086095() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test1086096,"public void test1086096() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(6, byteArray0.length);
}",0,
project,0,test1086097,"public void test1086097() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertNotNull(uTF8JsonGenerator0);
}",0,
project,0,test1086098,"public void test1086098() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test1086099,"public void test1086099() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test1086100,"public void test1086100() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test1086101,"public void test1086101() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test1086102,"public void test1086102() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test1086103,"public void test1086103() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test1086104,"public void test1086104() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test1086105,"public void test1086105() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test1086106,"public void test1086106() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test1086107,"public void test1086107() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test1086108,"public void test1086108() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test1086109,"public void test1086109() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test1086110,"public void test1086110() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1086111,"public void test1086111() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1086112,"public void test1086112() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test1086113,"public void test1086113() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1086114,"public void test1086114() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1086115,"public void test1086115() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(3, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1086116,"public void test1086116() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test1086117,"public void test1086117() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test1086118,"public void test1086118() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1086119,"public void test1086119() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1086120,"public void test1086120() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(102, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1086121,"public void test1086121() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test1086122,"public void test1086122() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertArrayEquals(new byte[] { (byte) (-8), (byte) (-112), (byte) (-97), (byte) (-65), (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test1086123,"public void test1086123() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(6, byteArray0.length);
}",0,
project,0,test1086124,"public void test1086124() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test1086125,"public void test1086125() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test1086126,"public void test1086126() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test1086127,"public void test1086127() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test1086128,"public void test1086128() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test1086129,"public void test1086129() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test1086130,"public void test1086130() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test1086131,"public void test1086131() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test1086132,"public void test1086132() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test1086133,"public void test1086133() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test1086134,"public void test1086134() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test1086135,"public void test1086135() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test1086136,"public void test1086136() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test1086137,"public void test1086137() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test1086138,"public void test1086138() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively())
project,0,test1086139,"public void test1086139() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers())
project,0,test1086140,"public void test1086140() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFormatFeatures())"
project,0,test1086141,"public void test1086141() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(3, uTF8JsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, uTF8JsonGenerator0.getFeatureMask())"
project,0,test1086142,"public void test1086142() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertFalse(uTF8JsonGenerator0.canWriteObjectId());
}",0,assertFalse(uTF8JsonGenerator0.canWriteObjectId())
project,0,test1086143,"public void test1086143() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertFalse(uTF8JsonGenerator0.canWriteTypeId());
}",0,
project,0,test1086144,"public void test1086144() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertFalse(uTF8JsonGenerator0.isClosed());
}",0,assertTrue(uTF8JsonGenerator0.isClosed())
project,0,test1086145,"public void test1086145() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertTrue(uTF8JsonGenerator0.canOmitFields());
}",0,assertTrue(uTF8JsonGenerator0.canOmitFields())
project,0,test1086146,"public void test1086146() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(4, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test1086147,"public void test1086147() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""RS"");
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    uTF8JsonGenerator0._outputSurrogates(1, 57343);
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
